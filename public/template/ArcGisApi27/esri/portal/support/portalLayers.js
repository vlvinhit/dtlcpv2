// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../core/Error ../../layers/support/layerUtils ../../layers/support/lazyLayerLoader ../PortalItem ./layersLoader ./portalItemUtils ../../support/requestPresets".split(" "),function(g,r,h,t,m,d,f,e){async function u(a){await a.load();a=await n(a);return v(a)}async function n(a){switch(a.type){case "Map Service":return w(a);case "Feature Service":return x(a);case "Feature Collection":return y(a);case "Scene Service":return z(a);case "Image Service":return A(a);case "Stream Service":return{className:"StreamLayer"};
case "Vector Tile Service":return{className:"VectorTileLayer"};case "GeoJson":return{className:"GeoJSONLayer"};case "CSV":return{className:"CSVLayer"};case "KML":return{className:"KMLLayer"};case "WFS":return{className:"WFSLayer"};case "WMTS":return{className:"WMTSLayer"};case "WMS":return{className:"WMSLayer"};case "Feed":return{className:"StreamLayer"};default:throw new r("portal:unknown-item-type","Unknown item type '${type}'",{type:a.type});}}async function v(a){return{constructor:await (0,t.layerLookupMap[a.className])(),
properties:a.properties}}async function w(a){return await B(a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function x(a){if(f.hasTypeKeyword(a,"Oriented Imagery Layer"))return C(a);a=await p(a);if("object"===typeof a){const b={};null!=a.id&&(b.layerId=a.id);return{className:a.className||"FeatureLayer",properties:b}}return{className:"GroupLayer"}}async function z(a){const b=await p(a);if("object"===typeof b){const c={};let k=void 0;null!=b.id?(c.layerId=b.id,k=`${a.url}/layers/${b.id}`):
k=a.url;if(a.typeKeywords?.length)for(const q of Object.keys(h.sceneServiceLayerTypeToClassName))if(a.typeKeywords.includes(q))return{className:h.sceneServiceLayerTypeToClassName[q]};a=await e.fetchArcGISServiceJSON(k);return{className:h.sceneServiceLayerTypeToClassName[a?.layerType]||"SceneLayer",properties:c}}return!1===b&&"Voxel"===(await e.fetchArcGISServiceJSON(a.url))?.layerType?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function y(a){await a.load();const b=f.hasTypeKeyword(a,"Map Notes"),
c=f.hasTypeKeyword(a,"Markup");if(b||c)return{className:"MapNotesLayer"};if(f.hasTypeKeyword(a,"Route Layer"))return{className:"RouteLayer"};a=await a.fetchData();return 1===d.getNumLayersAndTables(a)?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function A(a){await a.load();var b=a.typeKeywords?.map(c=>c.toLowerCase())??[];if(b.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(b.includes("tiled imagery"))return{className:"ImageryTileLayer"};b=(await a.fetchData())?.layerType;
if("ArcGISTiledImageServiceLayer"===b)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===b)return{className:"ImageryLayer"};b=await e.fetchArcGISServiceJSON(a.url);a=b.cacheType?.toLowerCase();b=b.capabilities?.toLowerCase().includes("tilesonly");return"map"===a||b?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}async function C(a){await a.load();return{className:"OrientedImageryLayer",properties:await a.fetchData()}}async function B(a){return(await e.fetchArcGISServiceJSON(a.url)).tileInfo}
async function p(a){const b=a.url;if(!b||/\/\d+$/.test(b))return{};await a.load();var c=await a.fetchData();if("Feature Service"===a.type)return a=await d.preprocessFSItemData(c,b),a=l(a),"object"===typeof a&&(c=d.getSubtypeGroupLayerIds(c),a.className=null!=a.id&&c.includes(a.id)?"SubtypeGroupLayer":"FeatureLayer"),a;if(0<d.getNumLayersAndTables(c))return l(c);c=await e.fetchArcGISServiceJSON(b);return l(c)}function l(a){return 1===d.getNumLayersAndTables(a)?{id:d.getFirstLayerOrTableId(a)}:!1}g.fromItem=
async function(a){!a.portalItem||a.portalItem instanceof m||(a={...a,portalItem:new m(a.portalItem)});const b=await u(a.portalItem);return new b.constructor({portalItem:a.portalItem,...b.properties})};g.selectLayerClassPath=n;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});