// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../core/Error ../../layers/Layer ../../layers/support/arcgisLayerUrl ../../layers/support/fetchService ../Portal ../PortalItem ./jsonContext ./portalItemUtils ../../renderers/support/styleUtils ../../support/requestPresets".split(" "),function(k,m,q,y,z,A,B,C,D,E,r){async function F(a,c){const b=a.instance,d=b.portalItem;if(d){var {url:f,title:g}=d,e=C.createForItemRead(d);if("group"===b.type)return b.read({title:g},e),G(b,a);f&&b.read({url:f},e);(a=await t(a,c))&&b.read(a,e);b.resourceReferences=
{portalItem:d,paths:e.readResourcePaths??[]};"subtype-group"!==b.type&&b.read({title:g},e);return E.loadStyleRenderer(b,e)}}async function G(a,c){var {portalItem:b}=a;if(b){var d=b.type,f=c.layerModuleTypeMap;var g=D.hasTypeKeyword(b,"Oriented Imagery Layer")??!1;switch(d){case "Feature Service":g=g?f.OrientedImageryLayer:f.FeatureLayer;break;case "Stream Service":g=f.StreamLayer;break;case "Scene Service":g=f.SceneLayer;break;case "Feature Collection":g=f.FeatureLayer;break;default:throw new m("portal:unsupported-item-type-as-group",
`The item type '${d}' is not supported as a 'IGroupLayer'`);}var [e,h]=await Promise.all([g(),t(c)]);c=()=>e;if("Feature Service"===d){h=b.url?await u(h,b.url):{};if(n(h).length){const H=await (0,f.SubtypeGroupLayer)();c=I=>"SubtypeGroupLayer"===I.layerType?H:e}b=await J(b.url);return p(a,c,h,b)}return 0<l(h)?p(a,c,h):K(a,c)}}async function K(a,c){var {portalItem:b}=a;b?.url&&(b=await r.fetchArcGISServiceJSON(b.url))&&p(a,c,{layers:b.layers?.map(v),tables:b.tables?.map(v)})}function v(a){return{id:a.id,
name:a.name}}function p(a,c,b,d){let f=b.layers||[];const g=b.tables||[];"Feature Collection"===a.portalItem?.type&&(f.forEach(e=>{"Table"===e?.layerDefinition?.type&&g.push(e)}),f=f.filter(e=>"Table"!==e?.layerDefinition?.type));if("coverage"in b){const e=L(b);e&&a.add(e)}f.reverse().forEach(e=>{const h=d?.(e);if(h||!d)e=w(a,c(e),b,e,h),a.add(e)});g.reverse().forEach(e=>{const h=d?.(e);if(h||!d)e=w(a,c(e),b,e,h),a.tables.add(e)})}function w(a,c,b,d,f){a=a.portalItem;c=new c({portalItem:a.clone(),
layerId:d.id});"sourceJSON"in c&&(c.sourceJSON=f);"subtype-group"!==c.type&&(c.sublayerTitleMode="service-name");"Feature Collection"===a.type&&(f={origin:"portal-item",portal:a.portal||A.getDefault()},c.read(d,f),b=b.showLegend,null!=b&&c.read({showLegend:b},f));return c}async function t(a,c){if(!1!==a.supportsData){a=a.instance;var b=a.portalItem;if(b){var d=null;try{d=await b.fetchData("json",c)}catch(f){}c="stream"===a.type||"oriented-imagery"===a.type?!1:"layerId"in a;return c?(b=null,c=!0,d&&
0<l(d)&&(null==a.layerId&&(b=n(d),a.layerId="subtype-group"===a.type?b?.[0]:x(d)),b=M(d,a))&&(1===l(d)&&(c=!1),null!=d.showLegend&&(b.showLegend=d.showLegend)),c&&"sublayerTitleMode"in a&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),b):d}}}async function u(a,c){if(null==a?.layers||null==a?.tables)c=await r.fetchArcGISServiceJSON(c),a=a||{},a.layers=a.layers||c?.layers,a.tables=a.tables||c?.tables;return a}function x(a){const c=a.layers;return c&&c.length?
c[0].id:(a=a.tables)&&a.length?a[0].id:null}function M(a,c){const {layerId:b}=c;a=a.layers?.find(f=>f.id===b)||a.tables?.find(f=>f.id===b);var d;if(d=a)d="feature"===c.type&&"layerType"in a&&"SubtypeGroupLayer"===a.layerType||"subtype-group"===c.type&&!("layerType"in a)?!1:!0;return d?a:null}function l(a){return(a?.layers?.length??0)+(a?.tables?.length??0)}function L(a){var {coverage:c}=a;if(!c)return null;a=new URL(c);if(c.toLowerCase().includes("item.html"))return c=a.searchParams.get("id"),q.fromPortalItem({portalItem:new B({id:c,
url:a.origin})});if(y.isArcGISUrl(c))return q.fromArcGISServerUrl({url:c});throw new m("portal:oriented-imagery-layer-coverage","the provided coverage url couldn't be loaded as a layer");}function n(a){const c=[];a?.layers?.forEach(b=>{"SubtypeGroupLayer"===b.layerType&&c.push(b.id)});return c}async function J(a){({layersJSON:a}=await z.fetchFeatureService(a));if(!a)return null;const c=[...a.layers,...a.tables];return b=>c.find(d=>d.id===b.id)}k.getFirstLayerOrTableId=x;k.getNumLayersAndTables=l;
k.getSubtypeGroupLayerIds=n;k.load=async function(a,c){var b=a.instance.portalItem;if(b&&b.id){await b.load(c);b=a.instance.portalItem;if(!b?.type||!a.supportedTypes.includes(b.type))throw new m("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:b?.type,expectedType:a.supportedTypes.join(", ")});return F(a,c)}};k.preprocessFSItemData=u;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});