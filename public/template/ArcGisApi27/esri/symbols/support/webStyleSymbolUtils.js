// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../symbols ../../core/devEnvironmentUtils ../../core/Error ../../core/maybe ../../core/urlUtils ../../portal/Portal ../../chunks/persistableUrlUtils ./jsonUtils ./StyleOrigin ./styleUtils ./Thumbnail".split(" "),function(m,C,p,q,D,k,r,t,u,v,g,w){function x(a,b){return b.items.find(d=>d.name===a)}function y(a,b,d,f,c,h){const z=d&&null!=d.portal?d.portal:r.getDefault(),A={portal:z,url:k.urlToObject(a.baseUrl),origin:"portal-item"},l=x(b,a.data);if(!l)return Promise.reject(new q("symbolstyleutils:symbol-name-not-found",
`The symbol name '${b}' could not be found`,{symbolName:b}));c=t.fromJSON(c(l,f),A);let n=l.thumbnail?.href??null;const B=l.thumbnail&&l.thumbnail.imageData;p.isDevEnvironment()&&(c=p.adjustStaticAGOUrl(c)??"",n=p.adjustStaticAGOUrl(n));const E={portal:z,url:k.urlToObject(k.removeFile(c)),origin:"portal-item"};return g.requestJSON(c,h).then(e=>{e="cimRef"===f?g.makeCIMSymbolRef(e.data):e.data;if((e=u.fromJSON(e,E))&&C.isSymbol3D(e)){if(n){const F=t.fromJSON(n,A);e.thumbnail=new w.Thumbnail({url:F})}else B&&
(e.thumbnail=new w.Thumbnail({url:`data:image/png;base64,${B}`}));a.styleUrl?e.styleOrigin=new v({portal:d.portal,styleUrl:a.styleUrl,name:b}):a.styleName&&(e.styleOrigin=new v({portal:d.portal,styleName:a.styleName,name:b}))}return e})}function G(a,b,d){const f=g.Style2DUrlTemplate.replaceAll(/\{SymbolName\}/gi,a),c=null!=b.portal?b.portal:r.getDefault();return g.requestJSON(f,d).then(h=>{h=g.makeCIMSymbolRef(h.data);return u.fromJSON(h,{portal:c,url:k.urlToObject(k.removeFile(f)),origin:"portal-item"})})}
m.fetchSymbolFromStyle=y;m.getStyleItemFromStyle=x;m.resolveWebStyleSymbol=function(a,b,d,f){const c=a.name;return null==c?Promise.reject(new q("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):a.styleName&&"Esri2DPointSymbolsStyle"===a.styleName?G(c,b,f):g.fetchStyle(a,b,f).then(h=>y(D.unwrapOrThrow(h),c,b,d,g.symbolUrlFromStyleItem,f))};Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});