// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../Color ../../symbols ../../core/BidiText ../../core/lang ../../core/Logger ../../core/RandomLCG ../../core/screenUtils ../../geometry/support/aaBoundingRect ../../geometry/support/boundsUtils ../../support/arcadeOnDemand ./CIMPlacements ./CIMSymbolDrawHelper ./enums ./utils ../../views/2d/arcade/callExpressionWithFeature ../../views/2d/engine/vectorTiles/GeometryUtils ../../views/2d/engine/webgl/definitions ../../views/2d/engine/webgl/mesh/templates/shapingUtils ../Font".split(" "),
function(z,K,ba,R,S,G,L,ca,C,D,da,ea,T,x,q,p,fa,H,M,ha,ia){function I(d,a,c){switch(a.type){case "CIMSymbolReference":return I(d,a.symbol,c);case "CIMPointSymbol":null==c&&(c={x:0,y:0});d.drawSymbol(a,c);break;case "CIMLineSymbol":null==c&&(c={paths:[[[0,0],[10,0]]]});d.drawSymbol(a,c);break;case "CIMPolygonSymbol":null==c&&(c={rings:[[[0,0],[0,10],[10,10],[10,0],[0,0]]]});d.drawSymbol(a,c);break;case "CIMTextSymbol":d.drawSymbol(a,{x:0,y:0});break;case "CIMVectorMarker":c=new T.Placement,d.drawMarker(a,
c)}return d.envelope()}function ja(d){if(!d)return 0;switch(d.type){case "CIMMarkerPlacementAlongLineSameSize":return Math.abs(d.offset);case "CIMMarkerPlacementAlongLineRandomSize":return Math.abs(d.offset);case "CIMMarkerPlacementAtExtremities":return Math.abs(d.offset);case "CIMMarkerPlacementAtMeasuredUnits":return Math.abs(d.offset);case "CIMMarkerPlacementAtRatioPositions":return Math.abs(d.offset);case "CIMMarkerPlacementInsidePolygon":return 0;case "CIMMarkerPlacementOnLine":return Math.abs(d.offset);
case "CIMMarkerPlacementOnVertices":return Math.abs(d.offset);case "CIMMarkerPlacementPolygonCenter":return 0;default:return 0}}function ka(d){if(!d)return 0;switch(d.type){case "CIMGeometricEffectArrow":return Math.abs(.5*d.width);case "CIMGeometricEffectBuffer":return Math.abs(d.size);case "CIMGeometricEffectExtension":return Math.abs(d.length);case "CIMGeometricEffectJog":return Math.abs(.5*d.length);case "CIMGeometricEffectMove":return Math.max(Math.abs(p.getValue(d.offsetX)),Math.abs(p.getValue(d.offsetY)));
case "CIMGeometricEffectOffset":return Math.abs(d.offset);case "CIMGeometricEffectOffsetTangent":return Math.abs(d.offset);case "CIMGeometricEffectRadial":return Math.abs(d.length);case "CIMGeometricEffectRegularPolygon":return Math.abs(d.radius);case "CIMGeometricEffectRotate":return 0;case "CIMGeometricEffectScale":return 0;case "CIMGeometricEffectTaperedPolygon":return.5*Math.max(Math.abs(d.fromWidth),Math.abs(d.toWidth));case "CIMGeometricEffectWave":return Math.abs(d.amplitude);case "CIMGeometricEffectDonut":return Math.abs(d.width);
default:return 0}}function N(d){if(!d)return 0;let a=0;for(const c of d)a+=ka(c);return a}function la(d,a,c){d.effects&&null==a.geometryEngine&&(a.geometryEnginePromise?c.push(a.geometryEnginePromise):p.isGeometryEngineRequired(d.effects)&&(a.geometryEnginePromise=p.importGeometryEngine(),c.push(a.geometryEnginePromise),a.geometryEnginePromise.then(b=>a.geometryEngine=b)))}function U(d){if(!d)return null;let a=null;const {cap:c,color:b,join:e,miterLimit:g,style:f,width:h}=d;"solid"!==f&&"none"!==
f&&"esriSLSSolid"!==f&&"esriSLSNull"!==f&&(a=[{type:"CIMGeometricEffectDashes",dashTemplate:O(f,c),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]);return{type:"CIMSolidStroke",color:"esriSLSNull"!==f&&"none"!==f?t(b):[0,0,0,0],capStyle:V(c),joinStyle:W(e),miterLimit:g,width:h,effects:a}}const X=Math.PI,ma=X/2,Y=Math.PI/180,u=96/72,J=L.getLogger("esri.symbols.cim.CIMSymbolHelper");R=function(){function d(){}var a=d.prototype;a.getSymbolInflateSize=function(c,b,e,g,f){c||(c=[0,0,
0,0]);return b?this._getInflateSize(c,b,e,g,f):c};d.safeSize=function(c){const b=Math.max(Math.abs(c[0]),Math.abs(c[2]));c=Math.max(Math.abs(c[1]),Math.abs(c[3]));return Math.sqrt(b*b+c*c)};a._vectorMarkerBounds=function(c,b,e,g){let f=!0;const h=D.create();if(b&&b.markerGraphics)for(const k of b.markerGraphics)b=[0,0,0,0],k.geometry&&(da.getBoundsXY(h,k.geometry),b[0]=0,b[1]=0,b[2]=0,b[3]=0,this.getSymbolInflateSize(b,k.symbol,e,0,g),h[0]+=b[0],h[1]+=b[1],h[2]+=b[2],h[3]+=b[3],f?(c[0]=h[0],c[1]=
h[1],c[2]=h[2],c[3]=h[3],f=!1):(c[0]=Math.min(c[0],h[0]),c[1]=Math.min(c[1],h[1]),c[2]=Math.max(c[2],h[2]),c[3]=Math.max(c[3],h[3])));return c};a._getInflateSize=function(c,b,e,g,f){return void 0!==b.symbolLayers?(c=this._getLayersInflateSize(c,b.symbolLayers,e,g,f),b=N(b.effects),0<b&&(c[0]-=b,c[1]-=b,c[2]+=b,c[3]+=b),c):this._getTextInflatedSize(c,b,f)};a._getLayersInflateSize=function(c,b,e,g,f){let h=!0;if(!b)return c;for(const r of b)if(r){b=[0,0,0,0];switch(r.type){case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":var k=
r,l=k.width;null!=l&&(l=k.capStyle===q.LineCapStyle.Square||k.joinStyle===q.LineJoinStyle.Miter?l/1.4142135623730951:l/2,b[0]=-l,b[1]=-l,b[2]=l,b[3]=l);break;case "CIMCharacterMarker":case "CIMVectorMarker":case "CIMPictureMarker":k=r;if("CIMVectorMarker"===r.type){if(l=r,b=this._vectorMarkerBounds(b,l,e,f),l.frame){var m=(l.frame.xmin+l.frame.xmax)/2,n=(l.frame.ymin+l.frame.ymax)/2;b[0]-=m;b[1]-=n;b[2]-=m;b[3]-=n;null!=l.size&&(l=l.size/(l.frame.ymax-l.frame.ymin),b[0]*=l,b[1]*=l,b[2]*=l,b[3]*=l)}}else"CIMPictureMarker"===
r.type?(l=r,n=e.getResource(l.url),m=1,null!=n&&n.height&&(m=n.width/n.height),null!=k.size&&(b=k.size/2,l=k.size*m*l.scaleX/2,b=[-l,-b,l,b])):null!=k.size&&(b=k.size/2,b=[-b,-b,b,b]);k.anchorPoint&&("Absolute"===k.anchorPointUnits?(l=k.anchorPoint.x,m=k.anchorPoint.y):(l=k.anchorPoint.x*(b[2]-b[0]),m=k.anchorPoint.y*(b[3]-b[1])),b[0]-=l,b[1]-=m,b[2]-=l,b[3]-=m);l=p.getValue(k.rotation);k.rotateClockwise&&(l=-l);g&&(l-=g);l&&(m=Y*l,l=Math.cos(m),m=Math.sin(m),n=D.create([H.C_INFINITY,H.C_INFINITY,
-H.C_INFINITY,-H.C_INFINITY]),D.expandPointInPlace(n,[b[0]*l-b[1]*m,b[0]*m+b[1]*l]),D.expandPointInPlace(n,[b[0]*l-b[3]*m,b[0]*m+b[3]*l]),D.expandPointInPlace(n,[b[2]*l-b[1]*m,b[2]*m+b[1]*l]),D.expandPointInPlace(n,[b[2]*l-b[3]*m,b[2]*m+b[3]*l]),b=n);l=p.getValue(k.offsetX);m=p.getValue(k.offsetY);if(g){var v=Y*g;n=Math.cos(v);v=Math.sin(v);const y=l*v+m*n;l=l*n-m*v;m=y}b[0]+=l;b[1]+=m;b[2]+=l;b[3]+=m;k=ja(k.markerPlacement);0<k&&(b[0]-=k,b[1]-=k,b[2]+=k,b[3]+=k)}k=N(r.effects);0<k&&(b[0]-=k,b[1]-=
k,b[2]+=k,b[3]+=k);h?(c[0]=b[0],c[1]=b[1],c[2]=b[2],c[3]=b[3],h=!1):(c[0]=Math.min(c[0],b[0]),c[1]=Math.min(c[1],b[1]),c[2]=Math.max(c[2],b[2]),c[3]=Math.max(c[3],b[3]))}return c};a._getTextInflatedSize=function(c,b,e){const g=b.height??x.DEFAULT_TEXT_HEIGHT;c[0]=-g/2;c[1]=-g/2;c[2]=g/2;c[3]=g/2;if(!e)return c;e=e.get(b);if(!e)return c;const {text:f,mosaicItem:h}=e;if(!h?.glyphMosaicItems?.length)return c;const {lineGapType:k,lineGap:l}=b;e=k?x.lineGapType2LineHeight(k,l??0,g):0;const m=S.bidiText(f)[1],
n="CIMBackgroundCallout"===b.callout?.type;b=ha.shapeGlyphs(h.glyphMosaicItems,m,{scale:g/M.GLYPH_SIZE,angle:p.getValue(b.angle),xOffset:p.getValue(b.offsetX),yOffset:p.getValue(b.offsetY),hAlign:x.horizontalAlignment2HAlign(b.horizontalAlignment),vAlign:x.verticalAlignment2VAlign(b.verticalAlignment),maxLineWidth:512,lineHeight:M.MAGIC_LABEL_LINE_HEIGHT*Math.max(.25,Math.min(e||1,4)),decoration:b.font.decoration||"none",isCIM:!0,hasBackground:n}).boundsT;c[0]=b.x-b.halfWidth;c[1]=-b.y-b.halfHeight;
c[2]=b.x+b.halfWidth;c[3]=-b.y+b.halfHeight;return c};return K._createClass(d)}();let B=function(){function d(){}d.getEnvelope=function(a,c,b){if(!a)return null;b=new x.EnvDrawHelper(b);if(Array.isArray(a)){let e;for(const g of a)e?e.union(I(b,g,c)):e=I(b,g,c);return e}return I(b,a,c)};d.getTextureAnchor=function(a,c){a=this.getEnvelope(a,null,c);if(!a)return[0,0,0];c=a.height*u+2;return[-((a.x+.5*a.width)*u)/(a.width*u+2),-((a.y+.5*a.height)*u)/c,c]};d.rasterize=function(a,c,b,e,g=!0){var f=b||this.getEnvelope(c,
null,e);if(!f)return[null,0,0,0,0];const h=(f.x+.5*f.width)*u,k=(f.y+.5*f.height)*u;a.width=f.width*u;a.height=f.height*u;b||(a.width+=2,a.height+=2);b=a.getContext("2d");f=x.Transformation.createScale(u,-u);f.translate(.5*a.width-h,.5*a.height+k);e=new x.CanvasDrawHelper(b,e,f);switch(c.type){case "CIMPointSymbol":e.drawSymbol(c,{type:"point",x:0,y:0});break;case "CIMVectorMarker":f=new T.Placement,e.drawMarker(c,f)}c=b.getImageData(0,0,a.width,a.height);c=new Uint8Array(c.data);if(g)for(e=0;e<c.length;e+=
4)g=c[e+3]/255,c[e]*=g,c[e+1]*=g,c[e+2]*=g;return[c,a.width,a.height,-h/a.width,-k/a.height]};d.fromTextSymbol=function(a){const {angle:c,color:b,font:e,haloColor:g,haloSize:f,horizontalAlignment:h,kerning:k,text:l,verticalAlignment:m,xoffset:n,yoffset:v,backgroundColor:r,borderLineColor:y,borderLineSize:E}=a;let F,P,Z;if(e){var Q=e.family;var A=e.style;var w=e.weight;F=e.size;P=e.decoration}a=!1;l&&(a=S.bidiText(l)[1]);if(r||E)Z={type:"CIMBackgroundCallout",margin:null,backgroundSymbol:{type:"CIMPolygonSymbol",
symbolLayers:[{type:"CIMSolidFill",color:t(r)},{type:"CIMSolidStroke",color:t(y),width:E}]},accentBarSymbol:null,gap:null,leaderLineSymbol:null,lineStyle:null};var na=q.BlockProgression.BTT,oa=q.FontEffects.Normal,pa=q.FontEncoding.Unicode;Q=Q||"Arial";b:{if(w)switch(w.toLowerCase()){case "bold":case "bolder":w="bold";break b}w=""}b:{if(A)switch(A.toLowerCase()){case "italic":case "oblique":A="italic";break b}A=""}w=w&&A?`${w}-${A}`:`${w}${A}`;return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",
enable:!0,anchorPointUnits:"Relative",dominantSizeAxis3D:"Y",size:10,billboardMode3D:"FaceNearPlane",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:{type:"CIMTextSymbol",angle:c,blockProgression:na,depth3D:1,extrapolateBaselines:!0,fontEffects:oa,fontEncoding:pa,fontFamilyName:Q,fontStyleName:w,fontType:q.FontType.Unspecified,haloSize:f,height:F,hinting:q.GlyphHinting.Default,horizontalAlignment:qa(h??"center"),kerning:k,letterWidth:100,ligatures:!0,
lineGapType:"Multiple",offsetX:p.getValue(n),offsetY:p.getValue(v),strikethrough:"line-through"===P,underline:"underline"===P,symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:t(b)}]},haloSymbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:t(g)}]},shadowColor:[0,0,0,255],shadowOffsetX:1,shadowOffsetY:1,textCase:"Normal",textDirection:a?q.TextReadingDirection.RTL:q.TextReadingDirection.LTR,verticalAlignment:ra(m??"baseline"),verticalGlyphOrientation:q.VerticalGlyphOrientation.Right,
wordSpacing:100,billboardMode3D:q.BillBoardMode.FaceNearPlane,callout:Z},textString:l}],scaleSymbolsProportionally:!0,respectFrame:!0}],scaleX:1,angleAlignment:"Display"}};d.fromPictureFillSymbol=function(a){const {height:c,outline:b,width:e,xoffset:g,xscale:f,yoffset:h,yscale:k}=a,l=[],m={type:"CIMPolygonSymbol",symbolLayers:l};if(b){var n=U(b);n&&l.push(n)}n=a.url;"esriPFS"===a.type&&a.imageData&&(n=a.imageData);a="angle"in a?a.angle??0:0;l.push({type:"CIMPictureFill",invertBackfaceTexture:!1,scaleX:1,
textureFilter:q.TextureFilter.Picture,tintColor:null,url:n,height:(c??0)*(k||1),width:(e??0)*(f||1),offsetX:p.getValue(g),offsetY:p.getValue(h),rotation:p.getValue(-a),colorSubstitutions:null});return m};d.fromSimpleFillSymbol=function(a){const {color:c,style:b,outline:e}=a;a=[];const g={type:"CIMPolygonSymbol",symbolLayers:a};if(e){var f=U(e);f&&a.push(f)}if(b&&"solid"!==b&&"none"!==b&&"esriSFSSolid"!==b&&"esriSFSNull"!==b){f={type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",color:t(c),
capStyle:q.LineCapStyle.Butt,joinStyle:q.LineJoinStyle.Miter,width:.75}]};let h=0;const k=C.px2pt("vertical"===b||"horizontal"===b||"cross"===b||"esriSFSCross"===b||"esriSFSVertical"===b||"esriSFSHorizontal"===b?8:10);switch(b){case "vertical":case "esriSFSVertical":h=90;break;case "forward-diagonal":case "esriSFSForwardDiagonal":h=-45;break;case "backward-diagonal":case "esriSFSBackwardDiagonal":h=45;break;case "cross":case "esriSFSCross":h=0;break;case "diagonal-cross":case "esriSFSDiagonalCross":h=
-45}a.push({type:"CIMHatchFill",lineSymbol:f,offsetX:0,offsetY:0,rotation:h,separation:k});"cross"===b||"esriSFSCross"===b?a.push({type:"CIMHatchFill",lineSymbol:G.clone(f),offsetX:0,offsetY:0,rotation:90,separation:k}):("diagonal-cross"===b||"esriSFSDiagonalCross"===b)&&a.push({type:"CIMHatchFill",lineSymbol:G.clone(f),offsetX:0,offsetY:0,rotation:45,separation:k})}else!b||"solid"!==b&&"esriSFSSolid"!==b||a.push({type:"CIMSolidFill",enable:!0,color:t(c)});return g};d.fromSimpleLineSymbol=function(a){const {cap:c,
color:b,join:e,marker:g,miterLimit:f,style:h,width:k}=a;a=null;"solid"!==h&&"none"!==h&&"esriSLSSolid"!==h&&"esriSLSNull"!==h&&(a=[{type:"CIMGeometricEffectDashes",dashTemplate:O(h,c),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]);const l=[];if(g){let m;switch(g.placement){case "begin-end":m=q.ExtremityPlacement.Both;break;case "begin":m=q.ExtremityPlacement.JustBegin;break;case "end":m=q.ExtremityPlacement.JustEnd;break;default:m=q.ExtremityPlacement.None}const n=d.fromSimpleMarker(g,
k,b).symbolLayers[0];n.markerPlacement={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:m,offsetAlongLine:0};l.push(n)}l.push({type:"CIMSolidStroke",color:"none"!==h&&"esriSLSNull"!==h?t(b):[0,0,0,0],capStyle:V(c),joinStyle:W(e),miterLimit:f,width:k,effects:a});return{type:"CIMLineSymbol",symbolLayers:l}};d.fromPictureMarker=function(a){const {angle:c,height:b,width:e,xoffset:g,yoffset:f}=a;let h=a.url;"esriPMS"===a.type&&a.imageData&&(h=a.imageData);return{type:"CIMPointSymbol",
symbolLayers:[{type:"CIMPictureMarker",invertBackfaceTexture:!1,scaleX:1,textureFilter:q.TextureFilter.Picture,tintColor:null,url:h,size:b,width:e,offsetX:p.getValue(g),offsetY:p.getValue(f),rotation:p.getValue(-c)}]}};d.fromSimpleMarker=function(a,c,b){var {style:e}=a;b=a.color??b;if("path"===e){c=[];"outline"in a&&a.outline&&(e=a.outline,c.push({type:"CIMSolidStroke",enable:!0,width:C.pt2px(Math.round(C.px2pt(e.width))),color:t(e.color)}));c.push({type:"CIMSolidFill",enable:!0,color:t(b),path:a.path});
const [k,l]=aa("square");return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:p.getValue(-a.angle),size:p.getValue(a.size||6),offsetX:p.getValue(a.xoffset),offsetY:p.getValue(a.yoffset),frame:k,markerGraphics:[{type:"CIMMarkerGraphic",geometry:l,symbol:{type:"CIMPolygonSymbol",symbolLayers:c}}]}]}}const [g,f]=aa(e);if(f&&g){e=[];if("outline"in a&&a.outline){var h=a.outline;e.push({type:"CIMSolidStroke",enable:!0,width:null!=h.width&&.667<h.width?C.pt2px(Math.round(C.px2pt(h.width))):
h.width,color:t(h.color)})}else!c||"line-marker"!==a.type||"cross"!==a.style&&"x"!==a.style||e.push({type:"CIMSolidStroke",enable:!0,width:c,color:t(b)});e.push({type:"CIMSolidFill",enable:!0,color:t(b)});b={type:"CIMPolygonSymbol",symbolLayers:e};h={type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:p.getValue(-a.angle),size:p.getValue(a.size||6*c),offsetX:p.getValue(a.xoffset),offsetY:p.getValue(a.yoffset),frame:g,markerGraphics:[{type:"CIMMarkerGraphic",geometry:f,symbol:b}]}]}}return h};
d.fromCIMHatchFill=function(a,c){const b=c*(a.separation??x.DEFAULT_HATCH_FILL_SEPARATION),e=b/2;a=G.clone(a.lineSymbol);a.symbolLayers?.forEach(f=>{switch(f.type){case "CIMSolidStroke":null!=f.width&&(f.width*=c);f.effects?.forEach(h=>{"CIMGeometricEffectDashes"===h.type&&(h.dashTemplate=h.dashTemplate.map(k=>k*c))});break;case "CIMVectorMarker":null!=f.size&&(f.size*=c),f=f.markerPlacement,null!=f&&"placementTemplate"in f&&(f.placementTemplate=f.placementTemplate.map(h=>h*c))}});for(var g=this._getLineSymbolPeriod(a)||
4;4>g;)g*=2;g/=2;return{type:"CIMVectorMarker",frame:{xmin:-g,xmax:g,ymin:-e,ymax:e},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{paths:[[[-g,0],[g,0]]]},symbol:a}],size:b}};d.fetchResources=function(a,c,b){if(a&&c)switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a=a.symbolLayers)for(const e of a)switch(la(e,c,b),e.type){case "CIMPictureFill":case "CIMHatchFill":case "CIMGradientFill":case "CIMPictureStroke":case "CIMGradientStroke":case "CIMCharacterMarker":case "CIMPictureMarker":"url"in
e&&e.url&&b.push(c.fetchResource(e.url,null));break;case "CIMVectorMarker":if(a=e.markerGraphics)for(const g of a)g&&(a=g.symbol)&&d.fetchResources(a,c,b)}}};d.fetchFonts=function(a,c,b){if(a&&c)if("symbolLayers"in a&&a.symbolLayers)for(const f of a.symbolLayers){if("CIMVectorMarker"===f.type&&f.markerGraphics)for(const h of f.markerGraphics)h?.symbol&&d.fetchFonts(h.symbol,c,b)}else if("CIMTextSymbol"===a.type){const {fontFamilyName:f,fontStyleName:h}=a;if(f&&"calcitewebcoreicons"!==f.toLowerCase()){var {style:e,
weight:g}=p.fromCIMFontStyle(h);a=p.fromCIMFontDecoration(a);a=new ia({family:f,style:e,weight:g,decoration:a});b.push(c.loadFont(a).catch(()=>{J.error(`Unsupported font ${f} in CIM symbol`)}))}}};d._getLineSymbolPeriod=function(a){if(a){const c=this._getEffectsRepeat(a.effects);if(c)return c;if(a.symbolLayers)for(const b of a.symbolLayers)if(b){if(a=this._getEffectsRepeat(b.effects))return a;switch(b.type){case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":if(a=
this._getPlacementRepeat(b.markerPlacement))return a}}}return 0};d._getEffectsRepeat=function(a){if(a)for(var c of a)if(c)switch(c.type){case "CIMGeometricEffectDashes":if((a=c.dashTemplate)&&a.length){c=0;for(const b of a)c+=b;a.length&1&&(c*=2);return c}break;case "CIMGeometricEffectWave":return c.period;default:J.error(`unsupported geometric effect type ${c.type}`)}return 0};d._getPlacementRepeat=function(a){if(a)switch(a.type){case "CIMMarkerPlacementAlongLineSameSize":case "CIMMarkerPlacementAlongLineRandomSize":case "CIMMarkerPlacementAlongLineVariableSize":if((a=
a.placementTemplate)&&a.length){let c=0;for(const b of a)c+=+b;a.length&1&&(c*=2);return c}}return 0};d.fromCIMInsidePolygon=function(a){var c=a.markerPlacement;const b={...a,markerPlacement:null,anchorPoint:null};a=Math.abs(c.stepX);const e=Math.abs(c.stepY);var g=(c.randomness??100)/100;let f,h;if("Random"===c.gridType){var k=C.px2pt(M.RANDOM_INSIDE_POLYGON_TEXTURE_SIZE);const l=Math.max(Math.floor(k/a),1),m=Math.max(Math.floor(k/e),1);k=l*a/2;f=m*e/2;h=2*f;c=new ca(c.seed);const n=g*a/1.5,v=g*
e/1.5;g=[];for(let r=0;r<l;r++)for(let y=0;y<m;y++){const E=r*a-k+n*(.5-c.getFloat()),F=y*e-f+v*(.5-c.getFloat());g.push({x:E,y:F});0===r&&g.push({x:E+2*k,y:F});0===y&&g.push({x:E,y:F+2*f})}}else!0===c.shiftOddRows?(k=a/2,f=e,h=2*e,g=[{x:-k,y:0},{x:k,y:0},{x:0,y:f},{x:0,y:-f}]):(k=a/2,f=e/2,h=e,g=[{x:-a,y:0},{x:0,y:-e},{x:-a,y:-e},{x:0,y:0},{x:a,y:0},{x:0,y:e},{x:a,y:e},{x:-a,y:e},{x:a,y:-e}]);a=g.map(l=>({type:"CIMMarkerGraphic",geometry:l,symbol:{type:"CIMPointSymbol",symbolLayers:[b]}}));return{type:"CIMVectorMarker",
frame:{xmin:-k,xmax:k,ymin:-f,ymax:f},markerGraphics:a,size:h}};d.getSize=function(a){if(a)switch(a.type){case "CIMTextSymbol":return a.height;case "CIMPointSymbol":var c=0;if(a.symbolLayers)for(var b of a.symbolLayers)if(b)switch(b.type){case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":a=b.size,null!=a&&a>c&&(c=a)}return c;case "CIMLineSymbol":case "CIMPolygonSymbol":b=0;if(a.symbolLayers)for(c of a.symbolLayers)if(c)switch(c.type){case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":a=
c.width;null!=a&&a>b&&(b=a);break;case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":c.markerPlacement&&p.isCIMMarkerStrokePlacement(c.markerPlacement)&&(a=c.size,null!=a&&a>b&&(b=a))}return b}};d.getMarkerScaleRatio=function(a){if(a)switch(a.type){case "CIMVectorMarker":if(!1!==a.scaleSymbolsProportionally&&a.frame&&null!=a.size)return a.size/(a.frame.ymax-a.frame.ymin)}return 1};return K._createClass(d)}();L=function(){function d(){}
d.findApplicableOverrides=function(a,c,b){if(a&&c){if(a.primitiveName){let e=!1;for(const g of b)if(g.primitiveName===a.primitiveName){e=!0;break}if(!e)for(const g of c)g.primitiveName===a.primitiveName&&b.push(g)}switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a.effects)for(const e of a.effects)d.findApplicableOverrides(e,c,b);if(a.symbolLayers)for(const e of a.symbolLayers)d.findApplicableOverrides(e,c,b);break;case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":case "CIMSolidFill":case "CIMPictureFill":case "CIMHatchFill":case "CIMGradientFill":case "CIMVectorMarker":case "CIMCharacterMarker":case "CIMPictureMarker":if(a.effects)for(const e of a.effects)d.findApplicableOverrides(e,
c,b);a.markerPlacement&&d.findApplicableOverrides(a.markerPlacement,c,b);if("CIMVectorMarker"===a.type){if(a.markerGraphics)for(const e of a.markerGraphics)d.findApplicableOverrides(e,c,b),d.findApplicableOverrides(e.symbol,c,b)}else"CIMCharacterMarker"===a.type?d.findApplicableOverrides(a.symbol,c,b):"CIMHatchFill"===a.type?d.findApplicableOverrides(a.lineSymbol,c,b):"CIMPictureMarker"===a.type&&d.findApplicableOverrides(a.animatedSymbolProperties,c,b)}}};d.findEffectOverrides=function(a,c,b){if(c&&
a){var e=a.length;for(let g=0;g<e;g++){const f=a[g]?.primitiveName;if(f){let h=!1;for(const k of b)if(k.primitiveName===f){h=!0;break}if(!h)for(const k of c)k.primitiveName===f&&b.push(k)}}}};d.resolveSymbolOverrides=async function(a,c,b,e,g,f,h){if(!a||!a.symbol)return null;let {symbol:k,primitiveOverrides:l}=a;a=!!l;if(!a&&!e)return k;k=G.clone(k);let m=!0;c||(c={attributes:{}},m=!1);a&&(m||(l=l.filter(n=>!n.valueExpressionInfo?.expression.includes("$feature"))),h||(l=l.filter(n=>!n.valueExpressionInfo?.expression.includes("$view"))),
0<l.length&&(a=p.attributesToFields(c.attributes),await d.evaluateOverrides(l,c,{spatialReference:b,fields:a,geometryType:g},f,h)),d.applyOverrides(k,l));e&&d.applyDictionaryTextOverrides(k,c,e);return k};d.evaluateOverrides=async function(a,c,b,e,g){if(c){var f;for(const h of a)(a=h.valueExpressionInfo)&&b&&b.geometryType&&(f||(f=[]),h.value=void 0,a=ea.createRendererExpression(a.expression,b.spatialReference,b.fields).then(k=>{h.value=fa(k,c,{$view:g},b.geometryType,e)}),f.push(a));void 0!==f&&
0<f.length&&await Promise.all(f)}};d.applyDictionaryTextOverrides=function(a,c,b,e="Normal"){if(a&&a.type)switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":case "CIMTextSymbol":var g=a.symbolLayers;if(!g)break;for(var f of g)f&&"CIMVectorMarker"===f.type&&d.applyDictionaryTextOverrides(f,c,b,"CIMTextSymbol"===a.type?a.textCase:e);break;case "CIMVectorMarker":a=a.markerGraphics;if(!a)break;for(g of a)g&&d.applyDictionaryTextOverrides(g,c,b);break;case "CIMMarkerGraphic":(f=
a.textString)&&f.includes("[")&&(b=p.analyzeTextParts(f,b),a.textString=p.assignTextValuesFromFeature(c,b,e))}};d.applyOverrides=function(a,c,b,e){if(a.primitiveName)for(const f of c)if(f.primitiveName===a.primitiveName){var g=(g=f.propertyName)?g.charAt(0).toLowerCase()+g.substr(1):g;e&&e.push({cim:a,nocapPropertyName:g,value:a[g]});f.expression&&(f.value=d.toValue(f.propertyName,f.expression));if(b){let h=!1;for(const k of b)k.primitiveName===a.primitiveName&&(h=!0);h||b.push(f)}null!=f.value&&
(a[g]=f.value)}switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a.effects)for(const f of a.effects)d.applyOverrides(f,c,b,e);if(a.symbolLayers)for(const f of a.symbolLayers)d.applyOverrides(f,c,b,e);break;case "CIMSolidStroke":case "CIMSolidFill":case "CIMVectorMarker":if(a.effects)for(const f of a.effects)d.applyOverrides(f,c,b,e);if("CIMVectorMarker"===a.type&&a.markerGraphics)for(const f of a.markerGraphics)d.applyOverrides(f,c,b,e),d.applyOverrides(f.symbol,
c,b,e)}};d.restoreOverrides=function(a){for(const c of a)c.cim[c.nocapPropertyName]=c.value};d.buildOverrideKey=function(a){let c="";for(const b of a)void 0!==b.value&&(c+=`${b.primitiveName}${b.propertyName}${JSON.stringify(b.value)}`);return c};d.toValue=function(a,c){return"DashTemplate"===a?c.split(" ").map(b=>Number(b)):"Color"===a?(a=(new ba(c)).toRgba(),a[3]*=255,a):c};return K._createClass(d)}();const V=d=>{if(!d)return q.LineCapStyle.Butt;switch(d){case "butt":return q.LineCapStyle.Butt;
case "square":return q.LineCapStyle.Square;case "round":return q.LineCapStyle.Round}},W=d=>{if(!d)return q.LineJoinStyle.Miter;switch(d){case "miter":return q.LineJoinStyle.Miter;case "round":return q.LineJoinStyle.Round;case "bevel":return q.LineJoinStyle.Bevel}},qa=d=>{if(null==d)return"Center";switch(d){case "left":return"Left";case "right":return"Right";case "center":return"Center"}},ra=d=>{if(null==d)return"Center";switch(d){case "baseline":return"Baseline";case "top":return"Top";case "middle":return"Center";
case "bottom":return"Bottom"}},t=d=>{if(!d)return[0,0,0,0];const {r:a,g:c,b,a:e}=d;return[a,c,b,255*e]},O=(d,a)=>{a="butt"===a;switch(d){case "dash":case "esriSLSDash":return a?[4,3]:[3,4];case "dash-dot":case "esriSLSDashDot":return a?[4,3,1,3]:[3,4,0,4];case "dot":case "esriSLSDot":return a?[1,3]:[0,4];case "long-dash":case "esriSLSLongDash":return a?[8,3]:[7,4];case "long-dash-dot":case "esriSLSLongDashDot":return a?[8,3,1,3]:[7,4,0,4];case "long-dash-dot-dot":case "esriSLSDashDotDot":return a?
[8,3,1,3,1,3]:[7,4,0,4,0,4];case "short-dash":case "esriSLSShortDash":return a?[4,1]:[3,2];case "short-dash-dot":case "esriSLSShortDashDot":return a?[4,1,1,1]:[3,2,0,2];case "short-dash-dot-dot":case "esriSLSShortDashDotDot":return a?[4,1,1,1,1,1]:[3,2,0,2,0,2];case "short-dot":case "esriSLSShortDot":return a?[1,1]:[0,2];case "solid":case "esriSLSSolid":case "none":return J.error("Unexpected: style does not require rasterization"),[0,0];default:return J.error(`Tried to rasterize SLS, but found an unexpected style: ${d}!`),
[0,0]}},aa=d=>{if("circle"===d||"esriSMSCircle"===d){var a=Math.acos(.995);d=Math.ceil(X/a/4);0===d&&(d=1);a=ma/d;d*=4;var c=[];c.push([50,0]);for(let b=1;b<d;b++)c.push([50*Math.cos(b*a),-50*Math.sin(b*a)]);c.push([50,0]);a={rings:[c]};c={xmin:-50,ymin:-50,xmax:50,ymax:50}}else"cross"===d||"esriSMSCross"===d?(a={rings:[[[0,50],[0,0],[50,0],[50,-0],[0,-0],[0,-50],[-0,-50],[-0,-0],[-50,-0],[-50,0],[-0,0],[-0,50],[0,50]]]},c={xmin:-50,ymin:-50,xmax:50,ymax:50}):"diamond"===d||"esriSMSDiamond"===d?(a=
{rings:[[[-50,0],[0,50],[50,0],[0,-50],[-50,0]]]},c={xmin:-50,ymin:-50,xmax:50,ymax:50}):"square"===d||"esriSMSSquare"===d?(a={rings:[[[-50,-50],[-50,50],[50,50],[50,-50],[-50,-50]]]},c={xmin:-50,ymin:-50,xmax:50,ymax:50}):"x"===d||"esriSMSX"===d?(a={rings:[[[0,0],[50,50],[50,50],[0,0],[50,-50],[50,-50],[0,-0],[-50,-50],[-50,-50],[-0,0],[-50,50],[-50,50],[0,0]]]},c={xmin:-50,ymin:-50,xmax:50,ymax:50}):"triangle"===d||"esriSMSTriangle"===d?(d=2/3*100,c=d-100,a={rings:[[[-57.735026918962575,c],[0,d],
[57.735026918962575,c],[-57.735026918962575,c]]]},c={xmin:-57.735026918962575,ymin:c,xmax:57.735026918962575,ymax:d}):"arrow"===d&&(a={rings:[[[-50,50],[50,0],[-50,-50],[-33,-20],[-33,20],[-50,50]]]},c={xmin:-50,ymin:-50,xmax:50,ymax:50});return[c,a]};z.CIMSymbolHelper=B;z.CIMSymbolInflatedSizeHelper=R;z.OverrideHelper=L;z.getEffectsInflateSize=N;z.slsDashToTemplateArray=O;z.symbolToCIM=function(d){if(!d||!d.type)return null;let a;switch(d.type){case "cim":return d.data;case "web-style":return d;
case "simple-marker":d=B.fromSimpleMarker(d);if(!d)return null;a=d;break;case "picture-marker":a=B.fromPictureMarker(d);break;case "simple-line":a=B.fromSimpleLineSymbol(d);break;case "simple-fill":a=B.fromSimpleFillSymbol(d);break;case "picture-fill":a=B.fromPictureFillSymbol(d);break;case "text":a=B.fromTextSymbol(d)}return{type:"CIMSymbolReference",symbol:a}};Object.defineProperty(z,Symbol.toStringTag,{value:"Module"})});