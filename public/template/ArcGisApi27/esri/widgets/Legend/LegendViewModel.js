// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../intl ../../core/Accessor ../../core/Collection ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ./support/ActiveLayerInfo ../../intl/locale".split(" "),function(r,l,k,x,t,h,m,E,F,G,y,u,z){const v=t.ofType(u),A="esri.layers.BuildingSceneLayer esri.layers.CSVLayer esri.layers.FeatureLayer esri.layers.GeoJSONLayer esri.layers.GeoRSSLayer esri.layers.GroupLayer esri.layers.HeatmapLayer esri.layers.ImageryLayer esri.layers.ImageryTileLayer esri.layers.MapImageLayer esri.layers.OGCFeatureLayer esri.layers.PointCloudLayer esri.layers.StreamLayer esri.layers.SceneLayer esri.layers.SubtypeGroupLayer esri.layers.TileLayer esri.layers.VoxelLayer esri.layers.WFSLayer esri.layers.WMSLayer esri.layers.WMTSLayer esri.layers.WCSLayer esri.layers.LinkChartLayer esri.layers.knowledgeGraph.KnowledgeGraphSublayer".split(" "),
B=["view.basemapView.baseLayerViews","view.groundView.layerViews","view.layerViews","view.basemapView.referenceLayerViews"];k=function(w){function q(a){a=w.call(this,a)||this;a._layerViewByLayerId={};a._layerInfosByLayerViewId={};a._activeLayerInfosByLayerViewId={};a._activeLayerInfosWithNoParent=new t;a.activeLayerInfos=new v;a.basemapLegendVisible=!1;a.groundLegendVisible=!1;a.hideLayersNotInCurrentView=!1;a.keepCacheOnDestroy=!1;a.respectLayerVisibility=!0;a.layerInfos=[];a.view=null;return a}
r._inherits(q,w);var d=q.prototype;d.initialize=function(){this.addHandles(h.watch(()=>this.view,()=>this._viewHandles(),h.initial),"view");this.addHandles(z.onLocaleChange(()=>this._refresh()))};d.destroy=function(){this._destroyViewActiveLayerInfos();this.view=null};d._viewHandles=function(){this.removeHandles("state");this.view&&this.addHandles(h.watch(()=>this.state,()=>this._stateHandles(),h.initial),"state")};d._stateHandles=function(){this._resetAll();"ready"===this.state&&this._watchPropertiesAndAllLayerViews()};
d._resetAll=function(){this.removeHandles(["all-layer-views","legend-properties"]);this._destroyViewActiveLayerInfos();this.activeLayerInfos.removeAll()};d._destroyViewActiveLayerInfos=function(){Object.keys(this._activeLayerInfosByLayerViewId).forEach(this._destroyViewActiveLayerInfo,this)};d._destroyViewActiveLayerInfo=function(a){this.removeHandles(a);const b=this._activeLayerInfosByLayerViewId[a];delete this._activeLayerInfosByLayerViewId[a];b&&b.parent&&b.parent.children.remove(b)};d._watchPropertiesAndAllLayerViews=
function(){var {view:a}=this;a&&({allLayerViews:a}=a,a.length&&this._refresh(),this.addHandles(a.on("change",b=>this._allLayerViewsChangeHandle(b)),"all-layer-views"),this.addHandles(h.watch(()=>[this.layerInfos,this.basemapLegendVisible,this.groundLegendVisible],()=>this._propertiesChangeHandle()),"legend-properties"))};d._allLayerViewsChangeHandle=function(a){a.removed.forEach(b=>this._destroyViewActiveLayerInfo(b.uid));this._refresh()};d._propertiesChangeHandle=function(){this._destroyViewActiveLayerInfos();
this._refresh()};d._refresh=function(){this._layerInfosByLayerViewId={};this.activeLayerInfos.removeAll();this._generateLayerViews().filter(this._filterLayerViewsByLayerInfos,this).filter(this._isLayerViewSupported,this).forEach(this._generateActiveLayerInfo,this);this._sortActiveLayerInfos(this.activeLayerInfos)};d._sortActiveLayerInfos=function(a){const b=this.view;if(!(2>a.length)&&b){var f=[];a.forEach(c=>{if(!c.parent){var g=c.layer.parent;(g=(g=g&&"uid"in g&&this._layerViewByLayerId[g.uid])&&
this._activeLayerInfosByLayerViewId[g.uid])&&a.includes(g)&&(f.push(c),c.parent=g,g.children.add(c),this._sortActiveLayerInfos(g.children))}});a.removeMany(f);var e={};b.allLayerViews.forEach((c,g)=>e[c.layer.uid]=g);a.sort((c,g)=>(e[g.layer.uid]||0)-(e[c.layer.uid]||0))}};d._generateLayerViews=function(){const a=[];B.filter(this._filterLayerViews,this).map(this.get,this).filter(b=>null!=b).forEach(this._collectLayerViews("layerViews",a));return a};d._filterLayerViews=function(a){const b=!this.groundLegendVisible&&
"view.groundView.layerViews"===a;return!(!this.basemapLegendVisible&&("view.basemapView.baseLayerViews"===a||"view.basemapView.referenceLayerViews"===a))&&!b};d._collectLayerViews=function(a,b){const f=e=>{e&&e.forEach(c=>{b.push(c);f(c[a])});return b};return f};d._filterLayerViewsByLayerInfos=function(a){const b=this.layerInfos;return b&&b.length?b.some(f=>this._hasLayerInfo(f,a)):!0};d._hasLayerInfo=function(a,b){const f=this._isLayerUIDMatching(a.layer,b.layer.uid);f&&(this._layerInfosByLayerViewId[b.uid]=
a);return f};d._isLayerUIDMatching=function(a,b){return a&&(a.uid===b||this._hasLayerUID(a.layers,b))};d._hasLayerUID=function(a,b){return a&&a.some(f=>this._isLayerUIDMatching(f,b))};d._isLayerViewSupported=function(a){return A.includes(a.layer.declaredClass)?(this._layerViewByLayerId[a.layer.uid]=a,!0):!1};d._generateActiveLayerInfo=function(a){this._isLayerActive(a)?this._buildActiveLayerInfo(a):(this.removeHandles(a.uid),this.addHandles(h.watch(()=>[a.legendEnabled,a.layer?.legendEnabled],()=>
this._layerActiveHandle(a)),a.uid))};d._layerActiveHandle=function(a){this._isLayerActive(a)&&(this.removeHandles(a.uid),this._buildActiveLayerInfo(a))};d._isLayerActive=function(a){return this.respectLayerVisibility?a.legendEnabled&&a.get("layer.legendEnabled"):!0};d._buildActiveLayerInfo=function(a){const b=a.layer,f=a.uid;var e=this._layerInfosByLayerViewId[f];let c=this._activeLayerInfosByLayerViewId[f];c||(c=new u({layer:b,layerView:a,title:e&&void 0!==e.title&&e.layer.uid===b.uid?e.title:b.title,
view:this.view,respectLayerVisibility:this.respectLayerVisibility,hideLayersNotInCurrentView:this.hideLayersNotInCurrentView,keepCacheOnDestroy:this.keepCacheOnDestroy,sublayerIds:e&&e.sublayerIds||[]}),this._activeLayerInfosByLayerViewId[f]=c);c.parent=this._activeLayerInfosByLayerViewId[(b.parent&&"uid"in b.parent?this._layerViewByLayerId[b.parent?.uid]:null)?.uid];if(!this.hasHandles(f)){e=h.watch(()=>b.title,p=>this._titleHandle(p,c));var g=h.watch(()=>[b.opacity,"renderer"in b&&b.renderer,"pointSymbol"in
b&&b.pointSymbol,"lineSymbol"in b&&b.lineSymbol,"polygonSymbol"in b&&b.polygonSymbol],()=>this._constructLegendElements(c)),n=h.when(()=>!0===this.view?.stationary,()=>this._scaleHandle(c),h.initial);const C=h.watch(()=>a._effectiveRenderer,()=>this._constructLegendElements(c)),D=h.watch(()=>"effect"in b&&b.effect,()=>this._constructLegendElements(c));e=[e,g,n,C,D];this.respectLayerVisibility&&(g=h.watch(()=>a.legendEnabled,p=>this._legendEnabledHandle(p,c)),n=h.watch(()=>b.legendEnabled,p=>this._legendEnabledHandle(p,
c)),e.push(g,n));this.addHandles(e,f)}c.isScaleDriven||this._constructLegendElements(c);this._addActiveLayerInfo(c)};d._titleHandle=function(a,b){b.title=a;this._constructLegendElements(b)};d._legendEnabledHandle=function(a,b){a?this._addActiveLayerInfo(b):this._removeActiveLayerInfo(b)};d._scaleHandle=function(a){(a.isScaleDriven||a.hideLayersNotInCurrentView)&&this._constructLegendElements(a)};d._addActiveLayerInfo=function(a){const {layerView:b,layer:f}=a;if(this._isLayerActive(b)&&!this.activeLayerInfos.includes(a)){var e=
a.parent;e?(e.children.includes(a)||e.children.push(a),this._sortActiveLayerInfos(e.children)):(e=this.layerInfos?.some(c=>c.layer.uid===f.uid),f.parent&&"uid"in f.parent&&!e?this._activeLayerInfosWithNoParent.add(a):(this.activeLayerInfos.add(a),this._sortActiveLayerInfos(this.activeLayerInfos)));if(this._activeLayerInfosWithNoParent.length){const c=[];this._activeLayerInfosWithNoParent.forEach(g=>{var n=g.layer.parent;if(n=this._activeLayerInfosByLayerViewId[(n&&"uid"in n?this._layerViewByLayerId[n?.uid]:
null)?.uid])c.push(g),g.parent=n});c.length&&(this._activeLayerInfosWithNoParent.removeMany(c),c.forEach(g=>this._addActiveLayerInfo(g)))}}};d._removeActiveLayerInfo=function(a){const b=a.parent;b?b.children.remove(a):this.activeLayerInfos.remove(a)};d._constructLegendElements=function(a){const b=a.layer;"featureCollections"in b&&b.featureCollections?a.buildLegendElementsForFeatureCollections(b.featureCollections):"featureReduction"in b&&b.featureReduction&&"renderer"in b.featureReduction&&("binning"===
b.featureReduction.type||"cluster"===b.featureReduction.type)?a.buildLegendElementsForFeatureReduction(b.featureReduction):"renderer"in b&&b.renderer&&!("sublayers"in b)?a.buildLegendElementsForRenderer(b.renderer):"url"in b&&b.url?a.buildLegendElementsForTools():a.children.forEach(f=>this._constructLegendElements(f))};r._createClass(q,[{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]);return q}(x);l.__decorate([m.property({type:v})],k.prototype,"activeLayerInfos",void 0);
l.__decorate([m.property()],k.prototype,"basemapLegendVisible",void 0);l.__decorate([m.property()],k.prototype,"groundLegendVisible",void 0);l.__decorate([m.property()],k.prototype,"hideLayersNotInCurrentView",void 0);l.__decorate([m.property()],k.prototype,"keepCacheOnDestroy",void 0);l.__decorate([m.property()],k.prototype,"respectLayerVisibility",void 0);l.__decorate([m.property()],k.prototype,"layerInfos",void 0);l.__decorate([m.property({readOnly:!0})],k.prototype,"state",null);l.__decorate([m.property()],
k.prototype,"view",void 0);return k=l.__decorate([y.subclass("esri.widgets.Legend.LegendViewModel")],k)});