// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../core/Collection ../../core/Evented ../../core/Logger ../../core/maybe ../../core/reactiveUtils ../../core/screenUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/Extent ../../layers/GraphicsLayer ../../layers/ImageryTileLayer ../../layers/orientedImagery/queries ../../layers/orientedImagery/core/bestImageUtils ../../layers/orientedImagery/core/coverageUtils ../../layers/orientedImagery/transformations/groundToImageUtils ../../layers/orientedImagery/transformations/imageToGroundUtils ../../views/MapView ../../views/2d/viewpointUtils ../../views/support/projectionUtils ./symbols ../../geometry/Polygon ../../geometry/SpatialReference ../../geometry/Point".split(" "),
function(A,f,e,t,x,N,G,u,w,O,g,I,Z,aa,P,Q,R,S,T,U,B,H,J,V,W,K,v,L,X,M){function Y(C){return"esri.Graphic"===C?.declaredClass}e=function(C){function D(a){a=C.call(this,a)||this;a.activeLayer=null;a.shouldShowSelectedImage=!1;a.coverageFrustums=null;a.coveragePolygons=null;a.displayMessage=null;a.pointSources=null;a.selectedFeature=null;a.selectedPoint=null;a.features=null;a._additionalCoveragePolygons=null;a._additionalFeatureGraphics=null;a._currentCoveragePolygon=null;a._currentImage=null;a._fetchFeaturesController=
null;a._imageViewer=null;a._initialCurrentCoveragePolygon=null;a._initialCurrentCoverageUpdate=!0;a._overlays=null;a._referencePointOnGround=null;a._referencePointOnImage=null;a._crossSymbol=null;a._panConstraint=null;a._scaleConstraint=null;a._transformController=new AbortController;a._updateCoverageController=null;a.loadViewer=a.loadViewer.bind(A._assertThisInitialized(a));a.searchBestImage=a.searchBestImage.bind(A._assertThisInitialized(a));return a}A._inherits(D,C);var m=D.prototype;m.initialize=
function(){w.once(()=>this.view?.ready).then(()=>{this._overlays=new R({listMode:"hide"});this.view.map.layers.add(this._overlays)});this.addHandles(w.on(()=>this.view,"click",a=>{this.view.ready&&this.active&&(a.stopPropagation(),a.preventDefault(),"mouse"!==a.pointerType||0===a.button)&&(a.native.altKey?(this.plotReferencePoint(a),this.plotImagePointOnGround({feature:this.selectedFeature,selectedLocation:a.mapPoint,options:{signal:this._transformController?.signal}})):(this.displayMessage=null,
this.selectedPoint=a.mapPoint,this.selectedFeature=this.features=null,this._overlays?.removeAll(),this._overlays?.add(new t({geometry:a.mapPoint.clone(),symbol:v.crossSymbol})),this._fetchFeaturesWithController(a)))}),"view")};m.destroy=function(){this._cancelCurrentCoverageUpdate();this._cancelFetchingFeatures();this._additionalFeatureGraphics=this._additionalCoveragePolygons=this.pointSources=this.coveragePolygons=this.coverageFrustums=null;this._currentImage=u.destroyMaybe(this._currentImage);
this._imageViewer=u.destroyMaybe(this._imageViewer);this._initialCurrentCoveragePolygon=u.destroyMaybe(this._initialCurrentCoveragePolygon);this._currentCoveragePolygon=u.destroyMaybe(this._currentCoveragePolygon);this._crossSymbol=u.destroyMaybe(this._crossSymbol);this._referencePointOnGround=u.destroyMaybe(this._referencePointOnGround);this._referencePointOnImage=u.destroyMaybe(this._referencePointOnImage);this._overlays=u.destroyMaybe(this._overlays)};m.getCurrentCoveragePolygon=function(){return this._currentCoveragePolygon};
m.getSelectedFeature=function(){return this.selectedFeature};m.getSelectedFeaturePolygon=function(){return this._initialCurrentCoveragePolygon};m.loadViewer=function(a){const b=new Map;this._imageViewer=new V({container:a,map:b,spatialReferance:{wkid:0},constraints:{snapToZoom:!1,rotationEnabled:!1},ui:{components:["zoom"]}});w.once(()=>this._imageViewer?.stationary).then(()=>{this.setMessage("onLoadMessage","info")});this._imageViewer.addHandles([this._imageViewer.on("click",async d=>{if(0===d.button&&
this._currentImage&&this._currentImage&&this._currentImage.fullExtent){const {xmin:c,xmax:h,ymin:q,ymax:n}=this._currentImage.fullExtent,{x:p,y:l}=d.mapPoint;if(!(c>p||h<p||n<l||q>l)){this.plotReferencePointOnImage(d.mapPoint);var k=this.getSelectedFeature();k&&(d=(await J.transformPoints([d.mapPoint.toJSON()],{feature:k,currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,options:{signal:this._transformController?.signal}}))[0])&&this.plotReferencePointOnGround(d)}}}),
w.watch(()=>[this._imageViewer?.viewpoint,this._initialCurrentCoveragePolygon],()=>{this._imageViewer?.viewpoint&&this._initialCurrentCoveragePolygon&&(this._cancelCurrentCoverageUpdate(),this.updateCoverage())}),w.watch(()=>this.selectedFeature,async()=>{const {_fetchFeaturesController:d,selectedFeature:k,selectedPoint:c}=this;!k&&this._currentImage&&(this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage=u.destroyMaybe(this._currentImage));k&&c&&(await this.loadImage(k,{signal:d?.signal}),
this.transformAndPlotSelectedLocation({signal:this._fetchFeaturesController?.signal}))})])};m.searchBestImage=async function(a,b){try{const d=await T.searchImages(a,b);d&&await this._processFeatureResponse(d,{signal:b?.signal})}catch(d){a=G.getLogger(this),this.setMessage("imageLoadError","error"),a.error("error occured while finding best image",d)}};m.toggleAdditionalCameraLocations=function(){this._additionalFeatureGraphics?.forEach(a=>{a.visible=!a.visible})};m.toggleAdditionalCoverage=function(){this._additionalCoveragePolygons?.forEach(a=>
{a.visible=!a.visible})};m.toggleCurrentCoverage=function(){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=!this._currentCoveragePolygon.visible,this._selectedFeatureGraphic.visible=!this._selectedFeatureGraphic)};m._cancelFetchingFeatures=function(){const a=this._fetchFeaturesController;a&&a.abort();this._fetchFeaturesController=null};m._cancelCurrentCoverageUpdate=function(){const a=this._updateCoverageController;a&&a.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage");
this._updateCoverageController=null};m._fetchFeatures=async function(a,b){var {screenPoint:d}=a;if(a=this.activeLayer)d=await this.view.hitTest(d,{include:a}),this._processHitTestResults(a,d,b)};m._fetchFeaturesWithController=async function(a){this._cancelFetchingFeatures();const b=new AbortController,{signal:d}=b;this._fetchFeaturesController=b;try{this._fetchFeatures(a,{signal:d})}catch(k){a=G.getLogger(this),this.setMessage("imageLoadError","error"),a.error("error occured while fetching features",
k)}this._fetchFeaturesController=null};m._processFeatureResponse=async function(a,b){const {selectedPoint:d}=this;if(d&&a&&(a=await a,this._fetchFeaturesController=null,a))if({features:a}=a,a.length){var k=[];this.coveragePolygons=new x;this.coverageFrustums=new x;this.pointSources=new x;a.forEach(c=>{const {polygon:h,frustum:q}=B.createCoveragePolygon(c);var n=h;c.attributes.isInspection&&(n=B.computePolygonForInspection(c.attributes));c.layer.coveragePercent&&(n=B.resizePolygon(n,c.layer.coveragePercent));
if(B.checkIfPolygonContainsSelectedPoint(n,d)){k.push(c);n=n.toJSON();const p=q?.toJSON();({attributes:c}=c);const {cameraHeight:l,cameraHeading:z,location:y,objectId:r}=c;c="toJSON"in y?y.toJSON():y;n.imageID=c.imageID=r;p&&(p.imageID=r);c.z=l;this.pointSources?.push(c);this.coveragePolygons?.push(0<z?n:void 0);this.coverageFrustums?.push(0<z?p:void 0)}});a=this.coveragePolygons?.getItemAt(0);if(k.length){k[0].attributes.elevationSource&&!d.z&&a&&(b=await H.updateElevation([d],{feature:k[0],currentCoveragePolygon:new L(a),
options:b}),b[0]&&(d.elevation=b[0].z));b=U.calculateSuitabilities({features:k,selectedPoint:d,camera:"3d"===this.view?.type?this.view.camera:null,currentImage:this.selectedFeature});b?.sort((c,h)=>c.suitability-h.suitability);b=b?.map(c=>c.feature);a=b[0];this._updateFeatures(b);this._additionalCoveragePolygons=new x;this._additionalFeatureGraphics=new x;this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._initialCurrentCoveragePolygon=this._currentCoveragePolygon=null);for(const c of this.coveragePolygons)c?.imageID===
a?.attributes.objectId?this._initialCurrentCoveragePolygon=new t({attributes:{imageID:c?.imageID},geometry:{type:"polygon",...c},symbol:v.activePolygonSymbol,visible:!1}):this._additionalCoveragePolygons.push(new t({attributes:{imageID:c?.imageID},geometry:{type:"polygon",...c},symbol:v.polygonSymbol,visible:!1}));for(const c of this.pointSources)c.imageID===a?.attributes.objectId?this._selectedFeatureGraphic=new t({attributes:{imageID:c.imageID},geometry:{type:"point",...c},symbol:v.activeSourcePointSymbol,
visible:!1}):this._additionalFeatureGraphics?.push(new t({attributes:{imageID:c.imageID},geometry:{type:"point",...c},symbol:v.sourcePointSymbol,visible:!1}));this.selectedFeature=a;this._initialCurrentCoverageUpdate=!0}else this.setMessage("noImageError","error")}else this.setMessage("noImageError","error"),this.selectedFeature=null};m._processHitTestResults=async function(a,b,d){const {screenPoint:k,results:c}=b;b=this.view.toMap(k);const h=c[0];await this.searchBestImage({layerInstanceOrURL:a,
point:b,queryParams:{maximumDistance:a.maximumDistance,objectIds:this.shouldShowSelectedImage?[h.graphic.attributes.id]:void 0,outSpatialReference:b.spatialReference},queryFeatures:null},d)};m._updateFeatures=async function(a){a.length&&(this.features=new x(a),this.notifyChange("features"))};m.plotReferencePoint=function(a){"mapPoint"in a?this.plotReferencePointOnGround(a.mapPoint):this.plotReferencePointOnGround(a)};m.updateCurrentCoveragePolygon=function(a){if(this._initialCurrentCoverageUpdate)this._initialCurrentCoverageUpdate=
!1,a&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),a.visible=this.isCurrentCoverageVisible,this._currentCoveragePolygon=a),this.view?this._overlays?.graphics.addMany([...(this._additionalCoveragePolygons??[]),...(this._additionalFeatureGraphics??[]),this._currentCoveragePolygon,this._selectedFeatureGraphic].filter(Y)):(a={points:this.pointSources?.filter(b=>b?.imageID!==this.selectedFeature?.attributes.objectId),frustums:this.coverageFrustums?.filter(b=>
b?.imageID!==this.selectedFeature?.attributes.objectId),polygons:this._additionalCoveragePolygons?.map(b=>b.geometry?.toJSON()),currentPoint:this.selectedFeature?.geometry,currentPolygon:this._currentCoveragePolygon,currentFrustum:this.coverageFrustums?.find(b=>b?.imageID===this.selectedFeature?.attributes.objectId)},this.emit("plot-polygons",{data:a}));else if(this.view){const b=this._currentCoveragePolygon&&this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;a&&(this._currentCoveragePolygon&&
(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),a.visible=this.isCurrentCoverageVisible,this._currentCoveragePolygon=a,this._overlays?.graphics.add(this._currentCoveragePolygon,0<=b?b:void 0))}else a&&this.emit("update-current-coverage",{graphic:a.toJSON()})};m.loadImage=async function(a,b){if(this._imageViewer)if(this._imageViewer.graphics.removeAll(),this._currentImage&&this._imageViewer?.map.layers.includes(this._currentImage)&&(this._currentImage?.removeHandles("image-handles"),
this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage?.destroy(),this._currentImage=null),a){var d=a.attributes.image;this._referencePointOnGround&&(this._imageViewer?.graphics.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());this._currentImage=new S({ioConfig:{skipExtensions:["aux.xml","jgw"]},url:d,options:b});this._imageViewer.map.layers.add(this._currentImage);try{const k=await this._currentImage.when();this._imageViewer.extent=k.fullExtent;k.raster.rasterInfo.isPseudoSpatialReference&&
(this._imageViewer.constraints.rotationEnabled=!0,this._imageViewer.rotation=(a.attributes.cameraRoll??0)+(a.attributes.imageRotation??0),this._imageViewer.constraints.rotationEnabled=!1);this._panConstraint&&this._imageViewer?.constraints.customConstraints.remove(this._panConstraint);this._panConstraint={constrain:(c,h)=>{if(!this._currentImage||!this._imageViewer||!c.targetGeometry)return c;const {xmin:q,xmax:n,ymin:p,ymax:l}=this._currentImage.fullExtent,{width:z,height:y}=this._imageViewer.extent;
var r=this._imageViewer?.rotation*Math.PI/180;h=Math.abs(Math.cos(r)*z+Math.sin(r)*y);r=Math.abs(Math.cos(r)*y+Math.sin(r)*z);const {width:E,height:F}=this._currentImage.rasterInfo;c.targetGeometry.x=Math.min(Math.max(q+(E>h?h:E)/2,c.targetGeometry.x),n-(E>h?h:E)/2);c.targetGeometry.y=Math.min(Math.max(p+(F>r?r:F)/2,c.targetGeometry.y),l-(F>r?r:F)/2);return c}};this._scaleConstraint&&this._imageViewer?.constraints.customConstraints.remove(this._scaleConstraint);this._scaleConstraint={constrain:(c,
h)=>{if(this._imageViewer&&this._currentImage){const {width:q,height:n}=this._currentImage.rasterInfo,{width:p,height:l}=this._imageViewer;c.scale=Math.min(c.scale,W.getResolutionToScaleFactor(this._imageViewer.spatialReference)*Math.max(q/p,n/l))}return c}};this._imageViewer?.constraints.customConstraints.add(this._panConstraint);this._imageViewer?.constraints.customConstraints.add(this._scaleConstraint);k.addHandles([w.when(()=>this._imageViewer?.stationary,c=>{c&&this._imageViewer?.viewpoint&&
this._panConstraint?.constrain(this._imageViewer?.viewpoint)},w.syncAndInitial)])}catch(k){G.getLogger(this.declaredClass).error("oriented-imagery-viewer:load-image",k)}}else this.setMessage("noImageError","error")};m.transformAndPlotSelectedLocation=async function(a){const {_currentImage:b,selectedFeature:d,selectedPoint:k}=this;if(k&&d&&b){var {pixelSize:c}=b.rasterInfo,h=await H.transformPoints([k],{feature:d,imageProperties:b.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),
options:a});h.length&&(h=h[0])&&(a=I.ensureType(Q,await K.projectWithEngineOrService(b.fullExtent,I.ensureType(X,this._imageViewer?.spatialReference),null,a?.signal)),h.x=h.x*c.x+a.xmin,h.y=a.ymax-h.y*c.y,h.spatialReference=a.spatialReference,this._crossSymbol&&(this._imageViewer?.graphics.remove(this._crossSymbol),this._crossSymbol.destroy()),this._crossSymbol=new t({geometry:M.fromJSON(h),symbol:v.crossSymbol}),this._imageViewer?.graphics.add(this._crossSymbol))}};m.plotImagePointOnGround=async function(a){if(this._imageViewer){var b=
this._currentImage;if(b){var {feature:d,selectedLocation:k,options:c}=a,{pixelSize:h,isPseudoSpatialReference:q,transform:n}=b.rasterInfo;a=await H.transformPoints([k],{feature:d,imageProperties:b.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),options:c});a.length&&(a=a[0],b=await K.projectWithEngineOrService(b.fullExtent,this._imageViewer.spatialReference,null,c?.signal),q?(a.x=a.x*h.x+b.xmin,a.y=b.ymax-a.y*h.y,a.spatialReference=b.spatialReference):a=n.forwardTransform(new M(a)),
this.plotReferencePointOnImage(a))}}};m.plotReferencePointOnGround=function(a){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());this._referencePointOnGround=new t({geometry:{type:"point",...a.toJSON()},symbol:v.diamondSymbol});this._overlays?.add(this._referencePointOnGround)};m.plotReferencePointOnImage=function(a){this._imageViewer&&(this._referencePointOnImage&&(this._imageViewer.graphics.remove(this._referencePointOnImage),
this._referencePointOnImage.destroy()),this._referencePointOnImage=new t({geometry:{type:"point",...("toJSON"in a?a.toJSON():a)},symbol:v.diamondSymbol}),this._imageViewer.graphics.add(this._referencePointOnImage))};m.setMessage=function(a,b,d){this.displayMessage={key:a,type:b,data:d}};m.updateCoverage=async function(){var a=new AbortController,{signal:b}=a;this._updateCoverageController=a;const {_imageViewer:d}=this;if(this._currentImage?.loaded&&d){const {width:k,height:c}=this._currentImage.rasterInfo,
{xmin:h,xmax:q,ymin:n,ymax:p}=this._currentImage.fullExtent;a=[[0,0],[Math.min(d.width,k),0],[Math.min(d.width,k),Math.min(d.height,c)],[0,Math.min(d.height,c)]].map(l=>d.toMap(O.createScreenPoint(l[0],l[1])));a.forEach(l=>{l.x=h<=l.x&&l.x<=q?l.x:Math.abs(h-l.x)>Math.abs(q-l.x)?q:h;l.y=n<=l.y&&l.y<=p?l.y:Math.abs(n-l.y)>Math.abs(p-l.y)?p:n});(a=await J.transformPoints(a,{feature:this.getSelectedFeature(),currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,
options:{signal:b}}))&&!b.aborted&&(b=[a.map(l=>[l.x,l.y,1])],b[0].push(b[0][0]),b=new L({hasZ:!0,rings:b,spatialReference:a[0].spatialReference}),this.updateCurrentCoveragePolygon(new t({geometry:b,symbol:v.activePolygonSymbol,visible:this.isCurrentCoverageVisible})))}};A._createClass(D,[{key:"active",get:function(){return!0===this.view?.map?.allLayers.some(a=>"oriented-imagery"===a.type&&a.loaded)}},{key:"currentImageView",get:function(){return this._imageViewer?.allLayerViews.find(a=>a.layer===
this._currentImage)}},{key:"featureCount",get:function(){return this.features?.length??0}},{key:"hasImageLoaded",get:function(){return!!this._currentImage}},{key:"isAdditionalCoverageDisabled",get:function(){return!this._additionalCoveragePolygons?.length}},{key:"isAdditionalCoverageVisible",get:function(){return this._additionalCoveragePolygons?.getItemAt(0)?.visible??!1}},{key:"isAdditionalPointSourcesDisabled",get:function(){return!this._additionalFeatureGraphics?.length}},{key:"isAdditionalPointSourcesVisible",
get:function(){return this._additionalFeatureGraphics?.getItemAt(0)?.visible??!1}},{key:"isCurrentCoverageDisabled",get:function(){return!this._currentCoveragePolygon}},{key:"isCurrentCoverageVisible",get:function(){return!!this._currentCoveragePolygon?.visible}},{key:"updating",get:function(){return!(this._imageViewer?.stationary??!0)||(this.currentImageView?.updating??!1)||"loading"===this._currentImage?.loadStatus||!!this._fetchFeaturesController}},{key:"state",get:function(){const {active:a,hasImageLoaded:b,
updating:d}=this;return d?"loading":b?"image-loaded":a?"ready":"disabled"}},{key:"view",set:function(a){this._set("view",a)}}]);return D}(N.EventedAccessor);f.__decorate([g.property()],e.prototype,"active",null);f.__decorate([g.property()],e.prototype,"activeLayer",void 0);f.__decorate([g.property()],e.prototype,"shouldShowSelectedImage",void 0);f.__decorate([g.property()],e.prototype,"coverageFrustums",void 0);f.__decorate([g.property()],e.prototype,"coveragePolygons",void 0);f.__decorate([g.property()],
e.prototype,"currentImageView",null);f.__decorate([g.property()],e.prototype,"displayMessage",void 0);f.__decorate([g.property()],e.prototype,"pointSources",void 0);f.__decorate([g.property()],e.prototype,"selectedFeature",void 0);f.__decorate([g.property()],e.prototype,"selectedPoint",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,"featureCount",null);f.__decorate([g.property()],e.prototype,"features",void 0);f.__decorate([g.property()],e.prototype,"hasImageLoaded",null);f.__decorate([g.property()],
e.prototype,"isAdditionalCoverageDisabled",null);f.__decorate([g.property()],e.prototype,"isAdditionalCoverageVisible",null);f.__decorate([g.property()],e.prototype,"isAdditionalPointSourcesDisabled",null);f.__decorate([g.property()],e.prototype,"isAdditionalPointSourcesVisible",null);f.__decorate([g.property()],e.prototype,"isCurrentCoverageDisabled",null);f.__decorate([g.property()],e.prototype,"isCurrentCoverageVisible",null);f.__decorate([g.property()],e.prototype,"updating",null);f.__decorate([g.property()],
e.prototype,"state",null);f.__decorate([g.property()],e.prototype,"view",null);f.__decorate([g.property()],e.prototype,"_additionalCoveragePolygons",void 0);f.__decorate([g.property()],e.prototype,"_additionalFeatureGraphics",void 0);f.__decorate([g.property()],e.prototype,"_currentCoveragePolygon",void 0);f.__decorate([g.property()],e.prototype,"_currentImage",void 0);f.__decorate([g.property()],e.prototype,"_fetchFeaturesController",void 0);f.__decorate([g.property()],e.prototype,"_imageViewer",
void 0);f.__decorate([g.property()],e.prototype,"_initialCurrentCoveragePolygon",void 0);f.__decorate([g.property()],e.prototype,"_initialCurrentCoverageUpdate",void 0);f.__decorate([g.property()],e.prototype,"_overlays",void 0);f.__decorate([g.property()],e.prototype,"_referencePointOnGround",void 0);f.__decorate([g.property()],e.prototype,"_referencePointOnImage",void 0);f.__decorate([g.property()],e.prototype,"_selectedFeatureGraphic",void 0);return e=f.__decorate([P.subclass("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],
e)});