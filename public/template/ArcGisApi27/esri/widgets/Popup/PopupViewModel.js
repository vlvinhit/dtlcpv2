// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../symbols ../../core/Collection ../../core/Error ../../core/Handles ../../core/Logger ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/support/webMercatorUtils ../../layers/Layer ../../layers/LayerConstants ../../support/actions/ActionBase ../../support/actions/ActionButton ../../support/actions/ActionToggle ../../symbols/support/symbolUtils ../../views/support/layerViewUtils ../Feature/FeatureViewModel ./actions ./actionUtils ../support/AnchorElementViewModel ../support/GoTo ../../symbols/SimpleFillSymbol ../../geometry/Point".split(" "),
function(x,e,d,D,S,E,y,F,z,n,f,T,U,V,G,H,A,I,J,K,L,M,B,N,v,q,O,P,Q,R){const t=E.ofType({key:"type",defaultKeyValue:"button",base:J,typeMap:{button:K,toggle:L}});d=function(C){function w(a){a=C.call(this,a)||this;a._handles=new F;a._pendingPromises=new Set;a._fetchFeaturesController=null;a._highlightSelectedFeaturePromise=null;a._highlightActiveFeaturePromise=null;a._selectedClusterFeature=null;a.featurePage=null;a.actions=new t;a.activeFeature=null;a.defaultPopupTemplateEnabled=!1;a.autoCloseEnabled=
!1;a.autoOpenEnabled=!0;a.browseClusterEnabled=!1;a.content=null;a.featuresPerPage=20;a.featureMenuOpen=!1;a.featureViewModelAbilities=null;a.featureViewModels=[];a.highlightEnabled=!0;a.includeDefaultActions=!0;a.selectedClusterBoundaryFeature=new D({symbol:new Q({outline:{width:1.5,color:"cyan"},style:"none"})});a.title=null;a.updateLocationEnabled=!1;a.view=null;a.visible=!1;a.zoomFactor=4;a.zoomToLocation=null;return a}x._inherits(w,C);var g=w.prototype;g.initialize=function(){this._handles.add([this.on("view-change",
()=>this._autoClose()),n.watch(()=>[this.highlightEnabled,this.selectedFeature,this.visible,this.view],()=>this._highlightSelectedFeature()),n.watch(()=>[this.highlightEnabled,this.activeFeature,this.visible,this.view],()=>this._highlightActiveFeature()),n.watch(()=>this.view?.animation?.state,a=>this._animationStateChange(a)),n.watch(()=>this.location,a=>this._locationChange(a)),n.watch(()=>this.selectedFeature,a=>this._selectedFeatureChange(a)),n.watch(()=>[this.selectedFeatureIndex,this.featureCount,
this.featuresPerPage],()=>this._selectedFeatureIndexChange()),n.watch(()=>[this.featurePage,this.selectedFeatureIndex,this.featureCount,this.featuresPerPage,this.featureViewModels],()=>this._setGraphicOnFeatureViewModels()),n.watch(()=>this.featureViewModels,()=>this._featureViewModelsChange()),this.on("trigger-action",a=>q.triggerAction({event:a,viewModel:this,view:this.view})),n.when(()=>!this.waitingForResult,()=>this._waitingForResultChange(),n.sync),n.watch(()=>[this.features,this.view?.map,
this.view?.spatialReference],()=>this._updateFeatureVMs()),n.watch(()=>this.view?.scale,()=>this._viewScaleChange()),n.when(()=>!this.visible,()=>this.browseClusterEnabled=!1),n.watch(()=>this.browseClusterEnabled,a=>a?this.enableClusterBrowsing():this.disableClusterBrowsing())])};g.destroy=function(){this._cancelFetchingFeatures();this._handles.destroy();this._pendingPromises.clear();this.browseClusterEnabled=!1;this.view=null};g.centerAtLocation=function(){const {view:a}=this,b=q.getSelectedTarget(this);
return b&&a?this.callGoTo({target:{target:b,scale:a.scale}}):Promise.reject(new y("center-at-location:invalid-target-or-view","Cannot center at a location without a target and view.",{target:b,view:a}))};g.zoomTo=function(a){return this.callGoTo(a)};g.clear=function(){this.set({promises:[],features:[],content:null,title:null,location:null,activeFeature:null})};g.fetchFeatures=function(a,b){const {view:c}=this;if(!c||!a)throw new y("fetch-features:invalid-screenpoint-or-view","Cannot fetch features without a screenPoint and view.",
{screenPoint:a,view:c});return c.fetchPopupFeatures(a,{event:b&&b.event,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,signal:b&&b.signal})};g.open=function(a){a={updateLocationEnabled:!1,promises:[],fetchFeatures:!1,...a,visible:!0};var {fetchFeatures:b}=a;delete a.fetchFeatures;b&&this._setFetchFeaturesPromises(a.location);b=["actionsMenuOpen","collapsed"];for(const c of b)delete a[c];this.set(a)};g.triggerAction=function(a){(a=this.allActions.at(a))&&!a.disabled&&this.emit("trigger-action",
{action:a})};g.next=function(){this.selectedFeatureIndex+=1;return this};g.previous=function(){--this.selectedFeatureIndex;return this};g.disableClusterBrowsing=function(){q.removeClusteredFeaturesForBrowsing(this);this._clearBrowsedClusterGraphics()};g.enableClusterBrowsing=async function(){const {view:a,selectedFeature:b}=this;"2d"!==a?.type?z.getLogger(this).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.",b):q.isClusterFeature(b)?(await q.displayClusterExtent(this),await q.browseAggregateFeatures(this)):
z.getLogger(this).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.",b)};g.handleViewClick=function(a){this.autoOpenEnabled&&this._fetchFeaturesAndOpen(a)};g._animationStateChange=function(a){this.zoomToLocation||(v.zoomToFeature.disabled="waiting-for-target"===a)};g._clearBrowsedClusterGraphics=function(){const a=this.view?.graphics;a&&(a.remove(this.selectedClusterBoundaryFeature),this._selectedClusterFeature&&a.remove(this._selectedClusterFeature));
this._selectedClusterFeature=null;this.selectedClusterBoundaryFeature.geometry=null};g._viewScaleChange=function(){q.isClusterFeature(this.selectedFeature)?(this.visible=this.browseClusterEnabled=!1,this.clear()):this.browseClusterEnabled&&(this.features=this.selectedFeature?[this.selectedFeature]:[])};g._locationChange=function(a){const {selectedFeature:b,updateLocationEnabled:c}=this;c&&a&&(!b||b.geometry)&&this.centerAtLocation()};g._selectedFeatureIndexChange=function(){this.featurePage=1<this.featureCount?
Math.floor(this.selectedFeatureIndex/this.featuresPerPage)+1:null};g._featureViewModelsChange=function(){this.featurePage=1<this.featureCount?1:null};g._setGraphicOnFeatureViewModels=function(){const {features:a,featureCount:b,featurePage:c,featuresPerPage:l,featureViewModels:h}=this;if(null!==c){var k=((c-1)*l+b)%b;h.slice(k,k+l).forEach((m,p)=>{m&&!m.graphic&&(m.graphic=a[k+p])})}};g._selectedFeatureChange=async function(a){const {location:b,updateLocationEnabled:c,view:l}=this;a&&l&&(this.browseClusterEnabled?
(this._selectedClusterFeature&&(l.graphics.remove(this._selectedClusterFeature),this._selectedClusterFeature=null),q.isClusterFeature(a)||(a.symbol=await M.getDisplayedSymbol(a),this._selectedClusterFeature=a,l.graphics.add(this._selectedClusterFeature))):!c&&b||!a.geometry?c&&!a.geometry&&this.centerAtLocation().then(()=>{const h=l.center?.clone();h&&(this.location=h)}):this.location=q.getPointFromGeometry(a.geometry))};g._waitingForResultChange=function(){!this.featureCount&&this.promises&&(this.visible=
!1)};g._setFetchFeaturesPromises=function(a){return this._fetchFeaturesWithController(this._getScreenPoint(a||this.location)).then(b=>{const {clientOnlyGraphics:c,promisesPerLayerView:l}=b;b=Promise.resolve(c);const h=l.map(k=>k.promise);this.promises=[b,...h]})};g._destroyFeatureVMs=function(){this.featureViewModels.forEach(a=>a&&!a.destroyed&&a.destroy());this._set("featureViewModels",[])};g._updateFeatureVMs=function(){const {selectedFeature:a,features:b,featureViewModels:c}=this;q.isClusterFeature(a)||
(this.browseClusterEnabled=!1);this._destroyFeatureVMs();if(b&&b.length){var l=c.slice(0),h=[];b.forEach((k,m)=>{if(k){var p=null;l.some((r,u)=>{r&&r.graphic===k&&(p=r,l.splice(u,1));return!!p});if(p)h[m]=p;else{const r=new N({abilities:this.featureViewModelAbilities,defaultPopupTemplateEnabled:this.defaultPopupTemplateEnabled,spatialReference:this.view?.spatialReference,graphic:k===a?k:null,map:this.view?.map,view:this.view});h[m]=r}}});l.forEach(k=>k&&!k.destroyed&&k.destroy());this._set("featureViewModels",
h)}};g._getScreenPoint=function(a){const {view:b}=this;return b&&a&&"function"===typeof b.toScreen?b.toScreen(a):null};g._cancelFetchingFeatures=function(){const a=this._fetchFeaturesController;a&&a.abort();this._fetchFeaturesController=null;this.notifyChange("waitingForResult")};g._fetchFeaturesWithController=function(a,b){this._cancelFetchingFeatures();const c=new AbortController,{signal:l}=c;this._fetchFeaturesController=c;this.notifyChange("waitingForResult");a=this.fetchFeatures(a,{signal:l,
event:b});a.catch(()=>{}).then(()=>{this._fetchFeaturesController=null;this.notifyChange("waitingForResult")});return a};g._fetchFeaturesAndOpen=function(a){const {screenPoint:b,mapPoint:c}=a,{view:l}=this;this._fetchFeaturesWithController(b,a).then(h=>{const {clientOnlyGraphics:k,promisesPerLayerView:m,location:p}=h,r=[Promise.resolve(k),...m.map(u=>u.promise)];l?.popup&&"open"in l.popup&&l.popup.open({location:p||c,promises:r});return h})};g._updatePendingPromises=function(a){a&&this._pendingPromises.has(a)&&
(this._pendingPromises.delete(a),this.notifyChange("pendingPromisesCount"))};g._autoClose=function(){this.autoCloseEnabled&&(this.visible=!1)};g._getLayerView=async function(a,b){await a.when();return a.whenLayerView(b)};g._getHighlightLayer=function(a){const {layer:b,sourceLayer:c}=a;return c&&"layer"in c&&c.layer?c.layer:"map-notes"===c?.type||"subtype-group"===c?.type?c:b};g._getHighlightTarget=function(a,b){b="imagery"===b.type?void 0:"objectIdField"in b?b.objectIdField||I.fallbackObjectIDAttribute:
null;const c=a.attributes;return c&&b&&c[b]||a};g._highlightActiveFeature=async function(){this._handles.remove("highlight-active-feature");const {highlightEnabled:a,view:b,activeFeature:c,visible:l}=this;if(c&&b&&a&&l){var h=this._getHighlightLayer(c);if(h&&h instanceof A){var k=this._getLayerView(b,h);this._highlightActiveFeaturePromise=k;var m=await k;m&&B.highlightsSupported(m)&&this._highlightActiveFeaturePromise===k&&this.activeFeature&&this.highlightEnabled&&(h=m.highlight(this._getHighlightTarget(c,
h)),this._handles.add(h,"highlight-active-feature"))}}};g._highlightSelectedFeature=async function(){this._handles.remove("highlight-selected-feature");const {selectedFeature:a,highlightEnabled:b,view:c,visible:l}=this;if(a&&c&&b&&l){var h=this._getHighlightLayer(a);if(h&&h instanceof A){var k=this._getLayerView(c,h);this._highlightSelectedFeaturePromise=k;var m=await k;m&&B.highlightsSupported(m)&&this._highlightSelectedFeaturePromise===k&&this.selectedFeature&&this.highlightEnabled&&this.visible&&
(h=m.highlight(this._getHighlightTarget(a,h)),this._handles.add(h,"highlight-selected-feature"))}}};g._updateFeatures=function(a){const {features:b}=this;a&&a.length&&(b.length?(a=a.filter(c=>!b.includes(c)),this.features=b.concat(a)):this.features=a)};x._createClass(w,[{key:"isLoadingFeature",get:function(){return this.featureViewModels.some(a=>a.waitingForContent)}},{key:"active",get:function(){return!(!this.visible||this.waitingForResult)}},{key:"allActions",get:function(){const a=this._get("allActions")||
new t;a.removeAll();const {actions:b,defaultActions:c,defaultPopupTemplateEnabled:l,includeDefaultActions:h,selectedFeature:k}=this;var m=h?c.concat(b):b;const p=k&&("function"===typeof k.getEffectivePopupTemplate&&k.getEffectivePopupTemplate(l)||k.popupTemplate),r=p&&p.actions;(m=p&&p.overwriteActions?r:r?r.concat(m):m)&&m.filter(Boolean).forEach(u=>a.add(u));return a}},{key:"defaultActions",get:function(){const a=this._get("defaultActions")||new t;a.removeAll();a.addMany(q.isClusterFeature(this.selectedFeature)?
[v.zoomToClusteredFeatures.clone(),v.browseClusteredFeatures.clone()]:[v.zoomToFeature.clone()]);return a}},{key:"featureCount",get:function(){return this.features.length}},{key:"features",get:function(){return this._get("features")||[]},set:function(a){a=a||[];this._set("features",a);const {pendingPromisesCount:b,promiseCount:c,selectedFeatureIndex:l}=this,h=c&&a.length;h&&b&&-1===l?this.selectedFeatureIndex=0:h&&-1!==l||(this.selectedFeatureIndex=a.length?0:-1)}},{key:"location",get:function(){return this._get("location")||
null},set:function(a){let b=a;const c=this.view?.spatialReference?.isWebMercator;a&&a?.spatialReference?.isWGS84&&c&&(b=H.geographicToWebMercator(a));this._set("location",b)}},{key:"pendingPromisesCount",get:function(){return this._pendingPromises.size}},{key:"waitingForResult",get:function(){return!(!(this._fetchFeaturesController||0<this.pendingPromisesCount)||0!==this.featureCount)}},{key:"promiseCount",get:function(){return this.promises.length}},{key:"promises",get:function(){return this._get("promises")||
[]},set:function(a){this._pendingPromises.clear();this.features=[];Array.isArray(a)&&a.length?(this._set("promises",a),a=a.slice(0),a.forEach(b=>{this._pendingPromises.add(b);b.then(c=>{this._pendingPromises.has(b)&&this._updateFeatures(c);this._updatePendingPromises(b)},()=>this._updatePendingPromises(b))})):this._set("promises",[]);this.notifyChange("pendingPromisesCount")}},{key:"selectedFeature",get:function(){const {features:a,selectedFeatureIndex:b}=this;return-1===b?null:a[b]||null}},{key:"selectedFeatureIndex",
get:function(){const a=this._get("selectedFeatureIndex");return"number"===typeof a?a:-1},set:function(a){const {featureCount:b}=this;a=isNaN(a)||-1>a||!b?-1:(a+b)%b;this.activeFeature=null;this._set("selectedFeatureIndex",a)}},{key:"selectedFeatureViewModel",get:function(){return this.featureViewModels[this.selectedFeatureIndex]||null}},{key:"state",get:function(){return this.get("view.ready")?"ready":"disabled"}}]);return w}(P.GoToMixin(O));e.__decorate([f.property()],d.prototype,"featurePage",void 0);
e.__decorate([f.property()],d.prototype,"isLoadingFeature",null);e.__decorate([f.property({type:t})],d.prototype,"actions",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"active",null);e.__decorate([f.property()],d.prototype,"activeFeature",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"allActions",null);e.__decorate([f.property({type:Boolean})],d.prototype,"defaultPopupTemplateEnabled",void 0);e.__decorate([f.property()],d.prototype,"autoCloseEnabled",void 0);e.__decorate([f.property()],
d.prototype,"autoOpenEnabled",void 0);e.__decorate([f.property()],d.prototype,"browseClusterEnabled",void 0);e.__decorate([f.property()],d.prototype,"content",void 0);e.__decorate([f.property({type:t,readOnly:!0})],d.prototype,"defaultActions",null);e.__decorate([f.property({readOnly:!0})],d.prototype,"featureCount",null);e.__decorate([f.property()],d.prototype,"features",null);e.__decorate([f.property()],d.prototype,"featuresPerPage",void 0);e.__decorate([f.property()],d.prototype,"featureMenuOpen",
void 0);e.__decorate([f.property()],d.prototype,"featureViewModelAbilities",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"featureViewModels",void 0);e.__decorate([f.property()],d.prototype,"highlightEnabled",void 0);e.__decorate([f.property()],d.prototype,"includeDefaultActions",void 0);e.__decorate([f.property({type:R})],d.prototype,"location",null);e.__decorate([f.property({readOnly:!0})],d.prototype,"pendingPromisesCount",null);e.__decorate([f.property({readOnly:!0})],d.prototype,
"selectedClusterBoundaryFeature",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"waitingForResult",null);e.__decorate([f.property({readOnly:!0})],d.prototype,"promiseCount",null);e.__decorate([f.property()],d.prototype,"promises",null);e.__decorate([f.property({value:null,readOnly:!0})],d.prototype,"selectedFeature",null);e.__decorate([f.property({value:-1})],d.prototype,"selectedFeatureIndex",null);e.__decorate([f.property({readOnly:!0})],d.prototype,"selectedFeatureViewModel",null);
e.__decorate([f.property({readOnly:!0})],d.prototype,"state",null);e.__decorate([f.property()],d.prototype,"title",void 0);e.__decorate([f.property()],d.prototype,"updateLocationEnabled",void 0);e.__decorate([f.property()],d.prototype,"view",void 0);e.__decorate([f.property()],d.prototype,"visible",void 0);e.__decorate([f.property()],d.prototype,"zoomFactor",void 0);e.__decorate([f.property()],d.prototype,"zoomToLocation",void 0);e.__decorate([f.property()],d.prototype,"centerAtLocation",null);return d=
e.__decorate([G.subclass("esri.widgets.Popup.PopupViewModel")],d)});