// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ./Widget ./support/componentsUtils ./support/widgetUtils ./support/decorators/messageBundle ./support/jsxFactory ./UtilityNetworkValidateTopology/UtilityNetworkValidateTopologyViewModel".split(" "),function(f,m,g,h,e,z,A,t,u,v,B,w,b,n){e=function(p){function l(a,c){a=p.call(this,
a,c)||this;a.messages=null;a.viewModel=new n;return a}m._inherits(l,p);var d=l.prototype;d.loadDependencies=function(){return v.loadCalciteComponents({action:()=>new Promise((a,c)=>f(["../chunks/calcite-action"],a,c)),block:()=>new Promise((a,c)=>f(["../chunks/calcite-block"],a,c)),icon:()=>new Promise((a,c)=>f(["../chunks/calcite-icon"],a,c)),notice:()=>new Promise((a,c)=>f(["../chunks/calcite-notice"],a,c)),option:()=>new Promise((a,c)=>f(["../chunks/calcite-option"],a,c)),select:()=>new Promise((a,
c)=>f(["../chunks/calcite-select"],a,c)),tooltip:()=>new Promise((a,c)=>f(["../chunks/calcite-tooltip"],a,c))})};d.render=function(){const {viewModel:a}=this;return"disabled"===a.state?b.tsx("div",{class:"esri-un-validate-topology__container"},b.tsx("calcite-block",{heading:this.label,class:"esri-un-validate-topology__content",collapsible:!1,open:!0},this._renderLoadErrorStatusIcon(),this._renderLoadErrorsNotices())):b.tsx("div",{class:"esri-un-validate-topology__container"},b.tsx("calcite-block",
{heading:this.label,class:"esri-un-validate-topology__content",collapsible:!0,open:!1},this._renderStatusIcon(),this._renderValidateTopologyAction(),this._renderControls()))};d._extentOptionSelectChange=function(a){this.extentToValidate=a.target.value};d._getLoadErrorMessagesAsNotices=function(a,c){return b.tsx("calcite-notice",{key:"error-notice-"+c,open:!0,closable:!1,kind:"warning",scale:"s"},b.tsx("div",{slot:"message"},a))};d._handleValidateTopologyAction=function(){this.viewModel.validateTopology().catch(()=>
{})};d._renderControls=function(){const {viewModel:a}=this;return"failed"===a.state?b.tsx("div",{class:"esri-un-validate-topology__controls-container"},this._renderExtentOptionSelect(),this._renderStatusNotice()):this._renderExtentOptionSelect()};d._renderExtentOptionSelect=function(){const {messages:a,viewModel:c}=this;return b.tsx("div",{key:"selectExtentDiv"},b.tsx("calcite-select",{bind:this,label:a.input.extentToValidate,disabled:"loading"===c.state||"executing"===c.state,onCalciteSelectChange:this._extentOptionSelectChange},
b.tsx("calcite-option",{value:"current"},a.input.currentExtent),b.tsx("calcite-option",{value:"entire"},a.input.entireExtent)))};d._renderLoadErrorsNotices=function(){const {viewModel:a}=this;return b.tsx("div",{key:"loadErrorsDiv",class:"esri-un-validate-topology__controls-container"},a.loadErrors.items.map(this._getLoadErrorMessagesAsNotices))};d._renderLoadErrorStatusIcon=function(){return b.tsx("div",{key:"statusDiv",slot:"control",class:"esri-un-validate-topology__status-icon-container"},b.tsx("calcite-icon",
{icon:"exclamation-mark-triangle",scale:"s",class:"esri-un-validate-topology__status-icon-error"}))};d._renderStatusIcon=function(){const {messages:a,viewModel:c}=this,k=`${this.id}-validation-status-action`,q=`${this.id}-error-status-icon`,r=`${this.id}-success-status-icon`,y=x=>{setTimeout(()=>{x.innerHTML=""},3500)};return"executing"===c.state?b.tsx("div",{key:"statusDivExecuting",slot:"control"},b.tsx("calcite-action",{id:k,text:a.status.executing,textEnabled:!1,loading:!0}),b.tsx("calcite-tooltip",
{referenceElement:k,label:a.status.executing},b.tsx("span",null,a.status.executing))):"success"===c.state?b.tsx("div",{key:"statusDivSuccess",slot:"control",class:"esri-un-validate-topology__status-icon-container",afterCreate:y},b.tsx("calcite-icon",{id:r,icon:"check-circle",scale:"s",class:"esri-un-validate-topology__status-icon-success"}),b.tsx("calcite-tooltip",{referenceElement:r,label:a.status.success},b.tsx("span",null,a.status.success))):"failed"===c.state?b.tsx("div",{key:"statusDivFailed",
slot:"control",class:"esri-un-validate-topology__status-icon-container"},b.tsx("calcite-icon",{id:q,icon:"exclamation-mark-triangle",scale:"s",class:"esri-un-validate-topology__status-icon-error"}),b.tsx("calcite-tooltip",{referenceElement:q,label:c.executionError},b.tsx("span",null,c.executionError))):b.tsx("div",{key:"statusDiv",slot:"control",class:"esri-un-validate-topology__status-icon-container"})};d._renderStatusNotice=function(){const {viewModel:a}=this;return b.tsx("div",{key:"executionErrorDiv"},
b.tsx("calcite-notice",{open:!0,closable:!0,kind:"warning",scale:"s"},b.tsx("div",{slot:"message"},a.executionError)))};d._renderValidateTopologyAction=function(){const {messages:a,viewModel:c}=this,k=`${this.id}-validation-action`;return b.tsx("div",{key:"actionDiv",slot:"control"},b.tsx("calcite-action",{id:k,bind:this,icon:"play-f",disabled:"executing"===c.state,text:a.input.validateTopology,textEnabled:!1,loading:"loading"===c.state,onclick:this._handleValidateTopologyAction}),b.tsx("calcite-tooltip",
{referenceElement:k,label:a.input.validateTopology},b.tsx("span",null,"loading"===c.state?a.status.loading:a.input.validateTopology)))};m._createClass(l,[{key:"extentToValidate",get:function(){return this.viewModel.extentToValidate},set:function(a){this.viewModel.extentToValidate=a}},{key:"label",get:function(){return this.messages?.label??""},set:function(a){this._overrideIfSome("label",a)}},{key:"utilityNetwork",get:function(){return this.viewModel.utilityNetwork},set:function(a){this.viewModel.utilityNetwork=
a}},{key:"view",get:function(){return this.viewModel.view},set:function(a){this.viewModel.view=a}}]);return l}(u);g.__decorate([h.property()],e.prototype,"extentToValidate",null);g.__decorate([h.property()],e.prototype,"label",null);g.__decorate([h.property(),w.messageBundle("esri/widgets/UtilityNetworkValidateTopology/t9n/UtilityNetworkValidateTopology")],e.prototype,"messages",void 0);g.__decorate([h.property()],e.prototype,"utilityNetwork",null);g.__decorate([h.property()],e.prototype,"view",null);
g.__decorate([h.property({type:n})],e.prototype,"viewModel",void 0);return e=g.__decorate([t.subclass("esri.widgets.UtilityNetworkValidateTopology")],e)});