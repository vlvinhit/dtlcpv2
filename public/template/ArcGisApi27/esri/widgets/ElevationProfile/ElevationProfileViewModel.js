// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Graphic ../../core/Accessor ../../core/arrayUtils ../../core/ByteSizeUnit ../../core/Collection ../../core/collectionUtils ../../core/Logger ../../core/LRUCache ../../core/maybe ../../core/memoize ../../core/reactiveUtils ../../core/unitUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/has ../../core/accessorSupport/decorators/subclass ../../layers/support/ElevationQueryTileCache ../../properties/defaultUnit ./ElevationProfileController ./ElevationProfileLineGround ./elevationProfileLineTypes ./ElevationProfileTool ./support/constants ./support/geometryUtils ./support/ProfileGenerationError ./support/profileUtils ./support/statisticsUtils".split(" "),
function(r,d,B,c,t,C,u,D,E,F,k,G,v,n,e,Q,R,H,I,J,K,L,M,N,h,w,m,O,x){c=function(y){function p(a){var b=y.call(this,a)||this;b.view=null;b.input=null;b._getEffectiveUnitsMemoized=G.memoize((g,q)=>({distance:g,elevation:q}));b.geodesicDistanceThreshold=1E5;b.hoveredChartPosition=null;b.uniformChartScaling=!1;b.defaultUnit=null;b.queue=null;b._currentTileCache=null;b.error=null;b._defaultProfileLineGround=new L;b._userUnitOptions=null;b._userUnit=null;a?.profiles||(b.profiles=new u([b._defaultProfileLineGround]));
return b}r._inherits(p,y);var l=p.prototype;l.initialize=function(){this.addHandles(v.watch(()=>this.view,a=>{null==a?E.getLogger(this).warnOnce("no view. Widget will be disabled until a view is provided."):(this.removeHandles(z),a="3d"===a.type?a.resourceController:void 0,this.queue?.destroy(),this.queue=O.createProfileQueue(a?.scheduler),(a=a?.addUpdatingObject(this))&&this.addHandles(a,z))},v.syncAndInitial));this.tool=new N.ElevationProfileTool({viewModel:this});this._controller=new K.ElevationProfileController({viewModel:this})};
l.destroy=function(){this._defaultProfileLineGround=k.destroyMaybe(this._defaultProfileLineGround);this._controller=k.destroyMaybe(this._controller);this._currentTileCache=k.destroyMaybe(this._currentTileCache);this.tool=k.destroyMaybe(this.tool);this.queue=k.destroyMaybe(this.queue)};l.start=function(a){this.tool.interaction.start(a)};l.stop=function(){this.tool.interaction.stop()};l.cancel=function(){this.tool.interaction.cancel()};l.clear=function(){this.tool.interaction.clear()};l._findSelectableUnit=
function(a,b){const g=this.unitOptions;return null!=a&&g.includes(a)?a:b?this._findSelectableUnit(b):g[0]};l._filteredOrAllUnits=function(a){a=(null!=a?a:[]).filter(b=>n.measurementLengthUnits.includes(b));return 0===a.length?n.measurementLengthUnits.slice():a};r._createClass(p,[{key:"profiles",get:function(){return this._get("profiles")},set:function(a){const b=this._get("profiles");a=a??new u;this._set("profiles",D.referenceSetter(a,b))}},{key:"state",get:function(){const a=this.view;return null!=
a&&a.ready?this.tool.state:h.ElevationProfileState.Disabled}},{key:"progress",get:function(){let a=0,b=0;for(const g of this.visibleProfiles)a++,b+=g.progress;return 0<a?b/a:0}},{key:"unitOptions",get:function(){return this._filteredOrAllUnits(this._userUnitOptions)},set:function(a){this._userUnitOptions=a;this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}},{key:"unit",get:function(){return this._userUnit?this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit):
this._findSelectableUnit(this.defaultUnit)},set:function(a){this._userUnit=a?this._findSelectableUnit(a,this._userUnit):null;this.notifyChange("unit")}},{key:"effectiveUnits",get:function(){var a=x.getBoundsInMeters(this.visibleProfiles.map(g=>g.result));const b=n.preferredLengthUnit(a.maxDistance,"meters",this.unit);a=n.preferredVerticalLengthUnit(a.maxElevation,"meters",this.unit);return this._getEffectiveUnitsMemoized(b,a)}},{key:"highlightEnabled",get:function(){return this.tool.highlightEnabled},
set:function(a){this.tool.highlightEnabled=a}},{key:"hasVertices",get:function(){const a=k.applySome(this.input,b=>b.geometry);return w.isPolyline(a)&&0<a.paths.reduce((b,g)=>b+g.length,0)}},{key:"hoveredPoints",get:function(){return null!=this.input&&this.visible&&this.tool.editable?this.visibleProfiles.map(a=>{const b=a.hoveredPoint;return null!=b?{hoveredPoint:b,color:a.color}:null}).filter(t.isSome):[]}},{key:"statistics",get:function(){return x.mergeStatistics(this.visibleProfiles.map(a=>a.statistics))}},
{key:"chartData",get:function(){if(null==this.input)return null;const {effectiveUnits:a,progress:b,statistics:g,visibleProfiles:q,uniformChartScaling:P}=this,A=q.filter(f=>f.hasZ).map(f=>({id:f.id,type:f.type,title:f.title,color:f.color,samples:f.samples,progress:f.progress,chartFillEnabled:f.chartFillEnabled,chartStrokeWidth:f.chartStrokeWidth,chartStrokeOffsetY:f.chartStrokeOffsetY,viewVisualizationEnabled:f.viewVisualizationEnabled}));return 0===A.length?null:{lines:A,effectiveUnits:a,statistics:g,
refined:1===b,dynamicElevationRange:q.some(f=>"view"===f.type),uniformScaling:P}}},{key:"visibleProfiles",get:function(){return this.profiles.toArray().filter(a=>a.available&&a.visible)}},{key:"minDemResolutions",get:function(){const a=[];for(const {minDemResolution:b}of this.visibleProfiles)null!=b&&a.push(b);return a}},{key:"minDemResolution",get:function(){return t.min(this.minDemResolutions)}},{key:"errorState",get:function(){const a=k.applySome(this.input,b=>b.geometry);if(!w.isValidInputPath(a))return h.ElevationProfileErrorState.NoValidInput;
if(null!=this.error){if(m.isProfileGenerationError(this.error))switch(this.error.cause){case m.ProfileGenerationErrorCause.TooComplex:return h.ElevationProfileErrorState.TooComplex;case m.ProfileGenerationErrorCause.InvalidGeometry:return h.ElevationProfileErrorState.InvalidGeometry;case m.ProfileGenerationErrorCause.InvalidElevationInfo:return h.ElevationProfileErrorState.InvalidElevationInfo;case m.ProfileGenerationErrorCause.ElevationQueryError:return h.ElevationProfileErrorState.NoValidInput}return h.ElevationProfileErrorState.UnknownError}return 0===
this.visibleProfiles.length?h.ElevationProfileErrorState.NoVisibleProfiles:null==this.chartData&&1===this.progress?h.ElevationProfileErrorState.RefinedButNoChartData:h.ElevationProfileErrorState.None}},{key:"tileCache",get:function(){this._currentTileCache=k.destroyMaybe(this._currentTileCache);var a=this.view;if(null!=a&&"3d"===a?.type&&(a=a.basemapTerrain?.elevationQueryCache,null!=a))return a;null==this._currentTileCache&&(this._currentTileCache=new I.ElevationQueryTileCache(new F.LRUCache(20*
C.ByteSizeUnit.MEGABYTES)));return this._currentTileCache}},{key:"visible",get:function(){return this.tool.visible},set:function(a){this.tool.visible=a}},{key:"inputIsSketched",get:function(){return this.tool.interaction.isSketchedGraphic(this.input)}},{key:"elevationProvider",get:function(){const a=this.view;return null!=a&&"3d"===a.type?a.elevationProvider:null}},{key:"updating",get:function(){const {progress:a}=this;return 0<a&&1>a}}]);return p}(c);d.__decorate([e.property()],c.prototype,"view",
void 0);d.__decorate([e.property({type:B})],c.prototype,"input",void 0);d.__decorate([e.property({type:M.ElevationProfileLineCollection,nonNullable:!0})],c.prototype,"profiles",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"state",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"progress",null);d.__decorate([e.property()],c.prototype,"unitOptions",null);d.__decorate([e.property()],c.prototype,"unit",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"effectiveUnits",
null);d.__decorate([e.property({type:Number})],c.prototype,"geodesicDistanceThreshold",void 0);d.__decorate([e.property()],c.prototype,"hoveredChartPosition",void 0);d.__decorate([e.property()],c.prototype,"uniformChartScaling",void 0);d.__decorate([e.property()],c.prototype,"highlightEnabled",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"hoveredPoints",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"statistics",null);d.__decorate([e.property()],c.prototype,"chartData",null);
d.__decorate([e.property()],c.prototype,"visibleProfiles",null);d.__decorate([e.property()],c.prototype,"minDemResolutions",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"minDemResolution",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"errorState",null);d.__decorate([e.property(J.defaultUnitPropertyMetadata)],c.prototype,"defaultUnit",void 0);d.__decorate([e.property()],c.prototype,"queue",void 0);d.__decorate([e.property()],c.prototype,"tileCache",null);d.__decorate([e.property()],
c.prototype,"tool",void 0);d.__decorate([e.property()],c.prototype,"visible",null);d.__decorate([e.property()],c.prototype,"error",void 0);d.__decorate([e.property()],c.prototype,"inputIsSketched",null);d.__decorate([e.property()],c.prototype,"elevationProvider",null);d.__decorate([e.property()],c.prototype,"updating",null);d.__decorate([e.property()],c.prototype,"_defaultProfileLineGround",void 0);d.__decorate([e.property()],c.prototype,"_userUnitOptions",void 0);d.__decorate([e.property()],c.prototype,
"_controller",void 0);d.__decorate([e.property()],c.prototype,"_userUnit",void 0);c=d.__decorate([H.subclass("esri.widgets.ElevationProfile.ElevationProfileViewModel")],c);const z=Symbol("updating-object");return c});