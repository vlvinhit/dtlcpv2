// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Error ../../../core/handleUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../rest/support/FeatureSet ./FeatureLayerView2D ./support/util ../../layers/StreamLayerView".split(" "),function(e,l,r,u,p,n,g,B,C,v,w,x,y,z){function t(h,c){if(null==
h&&null==c)return null;const b={};null!=c&&(b.geometry=c.toJSON());null!=h&&(b.where=h);return b}g=function(h){function c(){var a=h.apply(this,arguments)||this;a.pipelineConnectionStatus="disconnected";a.pipelineErrorString=null;a._enabledEventTypes=new Set;return a}e._inherits(c,h);var b=c.prototype;b.initialize=function(){this.addHandles([p.watch(()=>this.layer.customParameters,a=>this._proxy.updateCustomParameters(a)),this.layer.on("send-message-to-socket",a=>this._proxy.sendMessageToSocket(a)),
this.layer.on("send-message-to-client",a=>this._proxy.sendMessageToClient(a)),p.watch(()=>this.layer.purgeOptions,()=>this._update()),p.watch(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")};b.on=function(a,f){if(Array.isArray(a))return u.handlesGroup(a.map(q=>this.on(q,f)));const d=["data-received","message-received"].includes(a);d&&(this._enabledEventTypes.add(a),this._proxy.enableEvent(a,!0));const k=e._get(e._getPrototypeOf(c.prototype),"on",this).call(this,a,f),m=this;
return{remove(){k.remove();d&&(m._proxy.closed||m.hasEventListener(a)||m._proxy.enableEvent(a,!1))}}};b.queryLatestObservations=function(a,f){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new r("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(a),f).then(d=>{d=w.fromJSON(d);d.features.forEach(k=>{k.layer=this.layer;
k.sourceLayer=this.layer});return d})};b.detach=function(){e._get(e._getPrototypeOf(c.prototype),"detach",this).call(this);this.pipelineConnectionStatus="disconnected"};b._doPause=function(){this._proxy?.pauseStream()};b._doResume=function(){this._proxy?.resumeStream()};b._createClientOptions=function(){return{...e._get(e._getPrototypeOf(c.prototype),"_createClientOptions",this).call(this),setProperty:a=>{this.set(a.propertyName,a.value)}}};b._createTileRendererHash=function(a){var f=JSON.stringify(this.layer.purgeOptions);
const d=JSON.stringify(t(this.layer.definitionExpression,this.layer.geometryDefinition));f=`${f}.${d})`;return e._get(e._getPrototypeOf(c.prototype),"_createTileRendererHash",this).call(this,a)+f};b._createServiceOptions=async function(){const a=this.layer,{objectIdField:f}=a,d=a.fields.map(A=>A.toJSON()),k=y.toJSONGeometryType(a.geometryType),m=a.timeInfo&&a.timeInfo.toJSON()||null,q=a.spatialReference?a.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:d,geometryType:k,
objectIdField:f,timeInfo:m,source:this.layer.parsedUrl,serviceFilter:t(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:q,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:a.customParameters}};e._createClass(c,[{key:"connectionError",get:function(){return this.pipelineErrorString?
new r("stream-controller",this.pipelineErrorString):null}},{key:"_streamConnectionStatus",get:function(){return this.pipelineConnectionStatus}}]);return c}(z(x));l.__decorate([n.property()],g.prototype,"pipelineConnectionStatus",void 0);l.__decorate([n.property()],g.prototype,"pipelineErrorString",void 0);l.__decorate([n.property({readOnly:!0})],g.prototype,"connectionError",null);l.__decorate([n.property({readOnly:!0})],g.prototype,"_streamConnectionStatus",null);return g=l.__decorate([v.subclass("esri.views.2d.layers.StreamLayerView2D")],
g)});