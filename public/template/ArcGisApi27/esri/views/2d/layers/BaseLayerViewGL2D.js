// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/earcut ../../../geometry/support/aaBoundingRect ../../../geometry/support/coordsUtils ../../../geometry/support/normalizeUtilsSync ../../../geometry/support/spatialReferenceUtils ../../../layers/graphics/data/projectionSupport ../tiling/PagedTileQueue ../tiling/TileInfoView ../tiling/TileKey ../tiling/TileQueue ../tiling/TileStrategy ../engine/webgl/definitions ../engine/webgl/TurboLine ./LayerView2D ./support/DisplayGL ./support/util ../../layers/LayerView ../../layers/RefreshableLayerView".split(" "),
function(q,r,w,n,U,V,C,D,E,F,G,H,y,W,I,X,Y,Z,J,K,L,M,z,N,O){const x=new Set,t=[],u=[];let P=q._createClass(function(v,p,g,a,b,d,c,f=[0,0],e=E.create()){this.id=v;this.level=p;this.row=g;this.col=a;this.world=b;this.resolution=d;this.scale=c;this.coords=f;this.bounds=e});n=function(v){function p(a){a=v.call(this,a)||this;a._tileMap=new Map;a.container=new M(q._assertThisInitialized(a));a.layer=null;a.tiles=[];a._renderTarget={framebuffer:null,viewport:[0,0,0,0]};return a}q._inherits(p,v);var g=p.prototype;
g.attach=function(){};g.detach=function(){};g.requestRender=function(){this.container.requestRender()};g.tilesChanged=function(a,b){};g.supportsSpatialReference=function(a){const b=this.layer?.tileInfo;return b?H.equals(b.spatialReference,a):!0};g.doRefresh=async function(){};g.isUpdating=function(){return!1};g.update=function(a){var b=this._tileInfoView;const d=this.tiles;if(b){a=b.getTileCoverage(a.state,0);var c=a?.spans;a=a?.lodInfo;if(c?.length&&a){b=a.level;for(const {row:e,colFrom:k,colTo:h}of c)for(c=
k;c<=h;c++){var f=a.normalizeCol(c);const m=a.getWorldForColumn(c),l=`${b}/${e}/${f}/${m}`;this._tileMap.has(l)||(f=new P(l,b,e,f,m,a.resolution,a.scale),a.getTileCoords(f.coords,f,!1),a.getTileBounds(f.bounds,f,!0),this._tileMap.set(l,f),d.push(f),t.push(f));x.add(l)}}}for(a=d.length-1;0<=a;a--)b=d[a],x.has(b.id)||(d.splice(a,1),u.push(b),this._tileMap.delete(b.id));if(t.length||u.length)this.tilesChanged(t,u),t.length=u.length=0;x.clear();this.requestRender()};g.moveStart=function(){};g.viewChange=
function(){this.requestUpdate()};g.moveEnd=function(){};g.bindRenderTarget=function(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,this._renderTarget.framebuffer);this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])};g.getRenderTarget=function(){return this._renderTarget};g.tessellateExtent=async function(a){const b={vertices:[],indices:[]};a=await this._projectAndNormalizeGeometry(a);const d=b.vertices.length;
b.vertices.push({x:a.xmin,y:a.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0});b.vertices.push({x:a.xmax,y:a.ymin,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0});b.vertices.push({x:a.xmin,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0});b.vertices.push({x:a.xmax,y:a.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0});b.indices.push(d,d+1,d+2,d+1,d+3,d+2);return b};g.tessellatePoint=async function(a,b){a=await this._projectAndNormalizeGeometry(a);return this._tessellatePoints([a],
b)};g.tessellateMultipoint=async function(a,b){const d=await this._projectAndNormalizeGeometry(a);a=d.points.map(c=>({x:c[0],y:c[1],spatialReference:d.spatialReference}));return this._tessellatePoints(a,b)};g._tessellatePoints=async function(a,b){const d={vertices:[],indices:[]};for(const c of a)a=d.vertices.length,d.vertices.push({x:c.x,y:c.y,xOffset:b.x,yOffset:b.y+b.height,uTexcoord:0,vTexcoord:0,distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x+b.width,yOffset:b.y+b.height,uTexcoord:1,vTexcoord:0,
distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x,yOffset:b.y,uTexcoord:0,vTexcoord:1,distance:0}),d.vertices.push({x:c.x,y:c.y,xOffset:b.x+b.width,yOffset:b.y,uTexcoord:1,vTexcoord:1,distance:0}),d.indices.push(a,a+1,a+2,a+1,a+3,a+2);return d};g.tessellatePolyline=async function(a,b){const d={vertices:[],indices:[]};var c=(await this._projectAndNormalizeGeometry(a)).paths;if(!c||!c.length)return d;let f;a=new K.LineTessellation((e,k,h,m,l,A,Q,R,aa,S,B)=>{h=d.vertices.length;d.vertices.push({x:e,
y:-k,xOffset:Q*b/2,yOffset:R*b/2,uTexcoord:B/f,vTexcoord:(S+1)/2,distance:B});return h},(e,k,h)=>{d.indices.push(e,k,h)},!0);for(const e of c){f=0;for(c=1;c<e.length;++c){const k=e[c][0]-e[c-1][0],h=e[c][1]-e[c-1][1];f+=Math.sqrt(k*k+h*h)}c=e.map(k=>({x:k[0],y:-k[1]}));a.tessellate(c,T)}return d};g.tessellatePolygon=async function(a){const b={vertices:[],indices:[]};a=await this._projectAndNormalizeGeometry(a);const d=a.rings;if(!d||!d.length)return b;F.closeRings(a);for(const h of a.rings)for(const m of h)m[1]=
-m[1];let c=Infinity,f=Infinity,e=-Infinity,k=-Infinity;z.analyzeRings(a.rings,()=>{},(h,m,l)=>{for(;h<m;h+=2)c=Math.min(c,l[h]),f=Math.min(f,l[h+1]),e=Math.max(e,l[h]),k=Math.max(k,l[h+1])});z.analyzeRings(a.rings,()=>{},(h,m,l,A)=>{this._invokeEarcut(b,h,m,l,A,[c,f,e,k])});return b};g._invokeEarcut=function(a,b,d,c,f,e){b=c.slice(b,d);f=D.earcut(b,f,2);d=a.vertices.length;for(c=0;c<b.length;c+=2){const k=b[c],h=b[c+1];a.vertices.push({x:k,y:-h,xOffset:0,yOffset:0,uTexcoord:(k-e[0])/(e[2]-e[0]),
vTexcoord:1-(h-e[1])/(e[3]-e[1]),distance:0})}for(e=0;e<f.length;++e)a.indices.push(d+f[e])};g._projectAndNormalizeGeometry=async function(a){await y.checkProjectionSupport(a.spatialReference,this.view.spatialReference);const b=G.normalizeCentralMeridianForDisplay(a);return y.project(b,a.spatialReference,this.view.spatialReference)};q._createClass(p,[{key:"_tileInfoView",get:function(){const a=this.layer&&this.layer.tileInfo;return a?new I(a):null}},{key:"context",get:function(){return this.view._stage.context.gl}}]);
return p}(O(L.LayerView2DMixin(N)));r.__decorate([w.property()],n.prototype,"_tileInfoView",null);r.__decorate([w.property()],n.prototype,"layer",void 0);r.__decorate([w.property()],n.prototype,"context",null);n=r.__decorate([C.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],n);const T={pixelCoordRatio:1,wrapDistance:1E11,halfWidth:J.THIN_LINE_HALF_WIDTH_THRESHOLD+1,initialDistance:0,textured:!0,offset:0};return n});