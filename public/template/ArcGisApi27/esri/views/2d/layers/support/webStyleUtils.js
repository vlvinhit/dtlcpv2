// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/devEnvironmentUtils ../../../../core/Error ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../portal/Portal ../../../../chunks/persistableUrlUtils ../../../../symbols/support/styleUtils ../../../../symbols/support/webStyleSymbolUtils".split(" "),function(h,k,l,f,m,n,p,d,q){async function r(a,c){a=d.Style2DUrlTemplate.replaceAll(/\{SymbolName\}/gi,a.name);try{const b=await d.requestJSON(a,c);return d.makeCIMSymbolRef(b.data)}catch(b){return f.throwIfAbortError(b),
null}}async function t(a,c,b,e){b={portal:b&&null!=b.portal?b.portal:n.getDefault(),url:m.urlToObject(a.baseUrl),origin:"portal-item"};a=q.getStyleItemFromStyle(c,a.data);if(!a)throw new l("symbolstyleutils:symbol-name-not-found",`The symbol name '${c}' could not be found`,{symbolName:c});c=p.fromJSON(d.symbolUrlFromStyleItem(a,"cimRef"),b);k.isDevEnvironment()&&(c=k.adjustStaticAGOUrl(c));try{const g=await d.requestJSON(c,e);return d.makeCIMSymbolRef(g.data)}catch(g){return f.throwIfAbortError(g),
null}}h.fetchCIMSymbolReference=async function(a,c,b){if(!a.name)throw new l("style-symbol-reference-name-missing","Missing name in style symbol reference");if(a.styleName&&"Esri2DPointSymbolsStyle"===a.styleName)return r(a,b);try{const e=await d.fetchStyle(a,c,b);return t(e,a.name,c,b)}catch(e){return f.throwIfAbortError(e),null}};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});