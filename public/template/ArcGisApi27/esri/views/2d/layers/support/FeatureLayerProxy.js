// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Promise ../../../../core/promiseUtils ../../../../core/workers/workers ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass".split(" "),function(m,g,f,e,p,k,t,u,v,q){f=function(n){function h(a){a=n.call(this,a)||this;a._startupResolver=e.createResolver();a.isReady=
!1;return a}m._inherits(h,n);var b=h.prototype;b.initialize=function(){this._controller=new AbortController;this.addResolvingPromise(this._startWorker(this._controller.signal))};b.destroy=function(){this._controller.abort();this._connection&&this._connection.close()};b.startup=async function(a,c,d,r){await this.when();var l=this._controller.signal;l=Array.isArray(d.source)?{transferList:d.source,signal:l}:void 0;a=a.tileInfo.toJSON();await this._connection.invoke("startup",{service:d,config:c,tileInfo:a,
tiles:r},l);this._startupResolver.resolve();this._set("isReady",!0)};b.updateTiles=async function(a){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("updateTiles",a))};b.update=async function(a){a={config:a};await this._startupResolver.promise;return this._connection.invoke("update",a)};b.applyUpdate=async function(a){await this._startupResolver.promise;return this._connection.invoke("applyUpdate",a)};b.setHighlight=async function(a){await this._startupResolver.promise;
return e.ignoreAbortErrors(this._connection.invoke("controller.setHighlight",a))};b.stop=async function(){await this._startupResolver.promise;if(!this.closed)return e.ignoreAbortErrors(this._connection.invoke("stop"))};b.refresh=async function(a){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.refresh",a))};b.querySummaryStatistics=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.querySummaryStatistics",
{query:a.toJSON(),params:c},d)};b.queryAggregateSummaryStatistics=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateSummaryStatistics",{query:a.toJSON(),params:c},d)};b.queryUniqueValues=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryUniqueValues",{query:a.toJSON(),params:c},d)};b.queryAggregateUniqueValues=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateUniqueValues",
{query:a.toJSON(),params:c},d)};b.queryClassBreaks=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryClassBreaks",{query:a.toJSON(),params:c},d)};b.queryAggregateClassBreaks=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateClassBreaks",{query:a.toJSON(),params:c},d)};b.queryHistogram=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryHistogram",
{query:a.toJSON(),params:c},d)};b.queryAggregateHistogram=async function(a,c,d){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateHistogram",{query:a.toJSON(),params:c},d)};b.queryFeatures=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryFeatures",a?.toJSON(),c)};b.queryVisibleFeatures=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryVisibleFeatures",
a?.toJSON(),c)};b.queryObjectIds=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryObjectIds",a?.toJSON(),c)};b.queryFeatureCount=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryFeatureCount",a?.toJSON(),c)};b.queryExtent=async function(a,c){return this._connection.invoke("controller.queryExtent",a.toJSON(),c)};b.queryLatestObservations=async function(a,c){await this._startupResolver.promise;
return this._connection.invoke("controller.queryLatestObservations",a.toJSON(),c)};b.queryStatistics=async function(a){await this._startupResolver.promise;return this._connection.invoke("controller.queryStatistics",a)};b.queryAggregates=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregates",a?.toJSON(),c)};b.queryAggregateCount=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateCount",
a?.toJSON(),c)};b.queryAggregateIds=async function(a,c){await this._startupResolver.promise;return this._connection.invoke("controller.queryAggregateIds",a?.toJSON(),c)};b.getObjectId=async function(a){await this._startupResolver.promise;return this._connection.invoke("controller.getObjectId",a)};b.getDisplayId=async function(a){await this._startupResolver.promise;return this._connection.invoke("controller.getDisplayId",a)};b.getFeatures=async function(a){await this._startupResolver.promise;return this._connection.invoke("controller.getFeatures",
a)};b.getAggregates=async function(){await this._startupResolver.promise;return this._connection.invoke("controller.getAggregates")};b.getAggregateValueRanges=async function(){await this._startupResolver.promise;return this._connection.invoke("controller.getAggregateValueRanges")};b.mapValidDisplayIds=async function(a){await this._startupResolver.promise;return this._connection.invoke("controller.mapValidDisplayIds",a)};b.onEdits=async function(a){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.onEdits",
a))};b.enableEvent=async function(a,c){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.enableEvent",{name:a,value:c}))};b.pauseStream=async function(){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.pauseStream"))};b.resumeStream=async function(){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.resumeStream"))};b.sendMessageToSocket=async function(a){await this._startupResolver.promise;
return e.ignoreAbortErrors(this._connection.invoke("controller.sendMessageToSocket",a))};b.sendMessageToClient=async function(a){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.sendMessageToClient",a))};b.updateCustomParameters=async function(a){await this._startupResolver.promise;return e.ignoreAbortErrors(this._connection.invoke("controller.updateCustomParameters",a))};b._startWorker=async function(a){try{this._connection=await p.open("Pipeline",
{client:this.client,strategy:"dedicated",signal:a})}catch(c){e.throwIfNotAbortError(c)}};m._createClass(h,[{key:"tileRenderer",set:function(a){this.client.tileRenderer=a}},{key:"closed",get:function(){return this._connection.closed}}]);return h}(f.EsriPromise);g.__decorate([k.property()],f.prototype,"isReady",void 0);g.__decorate([k.property({constructOnly:!0})],f.prototype,"client",void 0);g.__decorate([k.property()],f.prototype,"tileRenderer",null);return f=g.__decorate([q.subclass("esri.views.2d.layers.support.FeatureLayerProxy")],
f)});