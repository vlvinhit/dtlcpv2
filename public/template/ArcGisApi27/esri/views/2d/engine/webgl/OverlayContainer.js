// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/screenUtils ../../../../chunks/mat3 ../../../../chunks/mat3f32 ../../../../chunks/vec2f32 ../../../../chunks/vec3f32 ../../../../geometry/support/normalizeUtils ../../../../geometry/support/spatialReferenceUtils ../../viewpointUtils ../brushes ./enums ./WGLContainer".split(" "),function(r,E,m,F,G,H,I,J,K,L,M,N){return function(A){function n(){var a=A.apply(this,arguments)||this;a._localOrigin=E.createScreenPoint(0,0);a._viewStateId=
-1;a._dvsMat3=F.create();a.requiresDedicatedFBO=!1;return a}r._inherits(n,A);var t=n.prototype;t.beforeRender=function(a){this._updateMatrices(a);this._updateOverlays(a,this.children);for(const b of this.children)b.beforeRender(a)};t.prepareRenderPasses=function(a){const b=a.registerRenderPass({name:"overlay",brushes:[L.brushes.overlay],target:()=>this.children,drawPhase:M.WGLDrawPhase.MAP});return[...r._get(r._getPrototypeOf(n.prototype),"prepareRenderPasses",this).call(this,a),b]};t._updateMatrices=
function(a){var {state:b}=a;const {id:f,size:u,pixelRatio:h,resolution:p,rotation:v,viewpoint:y,displayMat3:k}=b;if(this._viewStateId!==f){a=Math.PI/180*v;var c=h*u[0],d=h*u[1],{x:g,y:l}=y.targetGeometry;b=I.normalizeMapX(g,b.spatialReference);this._localOrigin.x=b;this._localOrigin.y=l;b=p*c;var q=p*d,e=m.identity(this._dvsMat3);m.multiply(e,e,k);m.translate(e,e,G.fromValues(c/2,d/2));m.scale(e,e,H.fromValues(c/b,-d/q,1));m.rotate(e,e,-a);this._viewStateId=f}};t._updateOverlays=function(a,b){const {state:f}=
a,{rotation:u,spatialReference:h,worldScreenWidth:p,size:v,viewpoint:y}=f;a=this._localOrigin;let k=0;var c=J.getInfo(h);if(c&&h.isWrappable){var d=180/Math.PI*u,g=Math.round(v[0]*Math.abs(Math.cos(d))+v[1]*Math.abs(Math.sin(d)));const [q,e]=c.valid;c=K.getWorldWidth(h);const {x:B,y:O}=y.targetGeometry;d=[0,0];f.toScreen(d,[B,O]);const w=[0,0];g=g>p?.5*p:.5*g;var l=Math.floor((B+.5*c)/c);const P=q+l*c;l=e+l*c;const z=[d[0]+g,0];f.toMap(w,z);w[0]>l&&(k=c);z[0]=d[0]-g;f.toMap(w,z);w[0]<P&&(k=-c);for(const x of b){b=
x.elementView.bounds;if(null==b)continue;const [C,,D]=b;C<q&&D>q?x.updateDrawCoords(a,c):D>e&&C<e?x.updateDrawCoords(a,-c):x.updateDrawCoords(a,k)}}else for(d of b)d.updateDrawCoords(a,k)};r._createClass(n,[{key:"dvsMat3",get:function(){return this._dvsMat3}}]);return n}(N)});