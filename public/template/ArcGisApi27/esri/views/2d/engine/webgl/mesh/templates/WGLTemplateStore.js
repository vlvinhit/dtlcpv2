// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../../core/Error ../../../../../../core/Logger ../../../../../../core/promiseUtils ../../../../../../symbols/support/defaultsJSON ../../enums ../../materialKey/MaterialKey ./WGLDynamicFillTemplate ./WGLDynamicLineTemplate ./WGLDynamicMarkerTemplate ./WGLDynamicTextTemplate ./WGLFillTemplate ./WGLLineTemplate ./WGLMarkerTemplate ./WGLTextTemplate ../../util/Lock ../../util/Result ../../../../layers/features/textUtils ../../../../layers/support/cimSymbolUtils".split(" "),
function(n,F,G,p,H,m,q,u,I,J,K,L,v,x,r,y,z,k,M,t){function l(h,d){const a=h.length;h.push(null);d.then(b=>h[a]=b);return h}function A(h){return null!=h&&!!(h&1)}const g=p.getLogger("esri.views.2d.engine.webgl.mesh.templates.WGLTemplateStore"),B={sortKey:null,templates:[]};p={isOutline:!1,placement:null,symbologyType:q.WGLSymbologyType.DEFAULT,vvFlags:0};const C={...m.errorPointSymbolJSON,hash:JSON.stringify(m.errorPointSymbolJSON),materialKey:u.createMaterialKey(q.WGLGeometryType.MARKER,p)},D={...m.errorPolylineSymbolJSON,
hash:JSON.stringify(m.errorPolylineSymbolJSON),materialKey:u.createMaterialKey(q.WGLGeometryType.LINE,p)},E={...m.errorPolygonSymbolJSON,hash:JSON.stringify(m.errorPolygonSymbolJSON),materialKey:u.createMaterialKey(q.WGLGeometryType.FILL,p)};m=function(){function h(a,b){this._templateIdCounter=this._idCounter=1;this._idToTemplateGroup=new Map;this._symbolToTemplate=new Map;this._fetchQueue=[];this._idToResolver=new Map;this._cimTemplateCache=new Map;this._cimAnalyses=[];this._lock=new z.Lock;this._fetchResource=
a;this._tileInfo=b}var d=h.prototype;d.createTemplateGroup=function(a,b,c=null){this._initErrorTemplates();const e=a.hash;var f=this._symbolToTemplate.get(e);if(null!=f)return f;f=[];c={sortKey:c,templates:f};b&&this._createMeshTemplates(f,b,!0);this._createMeshTemplates(f,a,!1);b=this._createGroupId;if(f="expanded-cim"===a.type)a:{if(a.layers)for(const w of a.layers)if("function"===typeof w.materialHash){f=!0;break a}f=!1}a=b.call(this,f);this._idToTemplateGroup.set(a,c);this._symbolToTemplate.set(e,
a);return a};d.getTemplateGroup=function(a){return this._idToTemplateGroup.get(a)??B};d.getDynamicTemplateGroup=function(a){if(!this._idToTemplateGroup.has(a))return B;A(a)||g.error("mapview-template-store",`Id ${a} does not refer to a dynamic template`);return this._idToTemplateGroup.get(a)};d.getMosaicItem=function(a,b){const c=this._createTemplateId(),e=new Promise(f=>this._idToResolver.set(c,f));this._fetchQueue.push({symbol:a,id:c,glyphIds:b});return e};d.finalize=function(a){return this._fetchQueue.length||
this._lock.isHeld()?z.withLock(this._lock,this._fetchAllQueuedResources.bind(this),a):Promise.resolve()};d._initErrorTemplates=function(){this._errorTemplates||(this._errorTemplates={fill:this._createMeshTemplates([],E,!1),marker:this._createMeshTemplates([],C,!1),line:this._createMeshTemplates([],D,!1)})};d._fetchAllQueuedResources=function(a){if(!this._fetchQueue.length)return Promise.resolve();const b=this._fetchQueue,c=this._cimAnalyses;this._fetchQueue=[];this._cimAnalyses=[];return Promise.all(c).then(()=>
this._fetchResource(b,a).then(e=>{for(const {id:f,mosaicItem:w}of e)this._idToResolver.get(f)(w),this._idToResolver.delete(f)})).catch(e=>{H.isAbortError(e)?this._fetchQueue=this._fetchQueue.concat(b):"worker:port-closed"!==e.name&&g.error(new G("mapview-template-store","Unable to fetch requested texture resources",e))})};d._createGroupId=function(a){return this._idCounter++<<1|(a?1:0)};d._createTemplateId=function(){return this._templateIdCounter++};d._createSMS=async function(a){const {spriteMosaicItem:b}=
await this.getMosaicItem(a);return k.ok(b,g)?r.fromSimpleMarker(a,b):this._markerError};d._createPMS=async function(a){const {spriteMosaicItem:b}=await this.getMosaicItem(a);return k.ok(b,g)?r.fromPictureMarker(a,b):this._markerError};d._createSFS=async function(a,b){const {spriteMosaicItem:c}=await this.getMosaicItem(a);return k.ok(c,g)?v.fromSimpleFill(a,c,b):this._fillError};d._createPFS=async function(a,b){const {spriteMosaicItem:c}=await this.getMosaicItem(a);return k.ok(c,g)?v.fromPictureFill(a,
c,b):this._fillError};d._createSLS=async function(a,b){({spriteMosaicItem:b}=await this.getMosaicItem(a));return k.ok(b,g)?x.fromSimpleLine(a,b):this._lineError};d._createLMS=async function(a){const {spriteMosaicItem:b}=await this.getMosaicItem(a);return k.ok(b,g)?r.fromLineSymbolMarker(a,b):this._markerError};d._createTS=async function(a){const {glyphMosaicItems:b}=await this.getMosaicItem(a);return y.fromText(a,b??[])};d._createCIMText=async function(a){const {glyphMosaicItems:b}=await this.getMosaicItem(t.cimLayerToRasterizationInfo(a),
M.codepoints(a.text));return k.ok(b,g)?y.fromCIMText(a,b,this._tileInfo):this._textError};d._createCIMFill=async function(a){const {spriteMosaicItem:b}=await this.getMosaicItem(t.cimLayerToRasterizationInfo(a));return k.ok(b,g)?v.fromCIMFill(a,b,this._tileInfo):this._fillError};d._createCIMLine=async function(a){const {spriteMosaicItem:b}=await this.getMosaicItem(t.cimLayerToRasterizationInfo(a));return k.ok(b,g)?x.fromCIMLine(a,b,this._tileInfo):this._lineError};d._createCIMMarker=async function(a){const {spriteMosaicItem:b}=
await this.getMosaicItem(t.cimLayerToRasterizationInfo(a));return k.ok(b,g)?r.fromCIMMarker(a,b,this._tileInfo):this._markerError};d._createCIM=async function(a){const b=a.templateHash;let c=this._cimTemplateCache.get(b);if(null!=c)return c;switch(a.type){case "marker":c=await this._createCIMMarker(a);break;case "line":c=await this._createCIMLine(a);break;case "fill":c=await this._createCIMFill(a);break;case "text":c=await this._createCIMText(a)}this._cimTemplateCache.set(b,c);return c};d._createDynamicCIM=
async function(a){const b=a.templateHash;let c=this._cimTemplateCache.get(b);if(null!=c)return c;switch(a.type){case "marker":c=K.fromCIMMarker(a,this._tileInfo);break;case "line":c=J.fromCIMLine(a,this._tileInfo);break;case "fill":c=I.fromCIMFill(a,this._tileInfo);break;case "text":c=L.fromCIMText(a,this._tileInfo)}this._cimTemplateCache.set(b,c);return c};d._createPrimitiveMeshTemplates=function(a,b,c){switch(b.type){case "esriSMS":return l(a,this._createSMS(b));case "esriPMS":return l(a,this._createPMS(b));
case "esriSFS":return l(a,this._createSFS(b,c));case "line-marker":return l(a,this._createLMS(b));case "esriPFS":return l(a,this._createPFS(b,c));case "esriSLS":return l(a,this._createSLS(b,!1));case "esriTS":return l(a,this._createTS(b));default:return g.error("Unable to create mesh template for unknown symbol type {: $ }{symbol.type}"),a}};d._createMeshTemplates=function(a,b,c){if(b.type.includes("3d"))return g.error("3D symbols are not supported with MapView"),a;if("expanded-cim"===b.type){for(const e of b.layers)"function"===
typeof e.materialHash?l(a,this._createDynamicCIM(e)):l(a,this._createCIM(e));return a}if("composite-symbol"===b.type){for(const e of b.layers)this._createPrimitiveMeshTemplates(a,e,c);return a}return"cim"===b.type||"label"===b.type||"web-style"===b.type?a:this._createPrimitiveMeshTemplates(a,b,c)};F._createClass(h,[{key:"_markerError",get:function(){return this._errorTemplates.marker[0]}},{key:"_fillError",get:function(){return this._errorTemplates.fill[0]}},{key:"_lineError",get:function(){return this._errorTemplates.line[0]}},
{key:"_textError",get:function(){return this._errorTemplates.line[0]}}]);return h}();n.WGLTemplateStore=m;n.errorPointSchema2D=C;n.errorPolygonSchema2D=E;n.errorPolylineSchema2D=D;n.isDynamicId=A;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});