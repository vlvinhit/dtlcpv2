// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/Error ../../../../core/Logger ../../../../core/reactiveUtils ../../../../chunks/mat3f32 ../DisplayObject ./Mesh2D ../../../webgl/VertexArrayObject".split(" "),function(l,n,p,q,r,t,h,u){return function(m){function e(b,a){var c=m.call(this)||this;c._clip=a;c._cache={};c.stage=b;c._handle=q.watch(()=>a.version,()=>c._invalidate());c.ready();return c}l._inherits(e,m);e.fromClipArea=function(b,a){return new e(b,a)};var d=e.prototype;
d._destroyGL=function(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null);null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)};d.destroy=function(){this._destroyGL();this._handle.remove()};d.getVAO=function(b,a,c,f){const [k,g]=a.size;if("geometry"===this._clip.type||this._lastWidth!==k||this._lastHeight!==g)this._lastWidth=k,this._lastHeight=g,this._destroyGL();if(null==this._cache.vao){a=this._createMesh(a,this._clip);const v=a.getIndexBuffer(b),w=a.getVertexBuffers(b);
this._cache.mesh=a;this._cache.vao=new u.VertexArrayObject(b,c,f,w,v)}return this._cache.vao};d._createTransforms=function(){return{dvs:r.create()}};d._invalidate=function(){this._destroyGL();this.requestRender()};d._createScreenRect=function(b,a){const [c,f]=b.size;b="string"===typeof a.left?parseFloat(a.left)/100*c:a.left;const k="string"===typeof a.right?parseFloat(a.right)/100*c:a.right,g="string"===typeof a.top?parseFloat(a.top)/100*f:a.top;a="string"===typeof a.bottom?parseFloat(a.bottom)/100*
f:a.bottom;return{x:b,y:g,width:Math.max(c-k-b,0),height:Math.max(f-a-g,0)}};d._createMesh=function(b,a){switch(a.type){case "rect":return h.fromRect(this._createScreenRect(b,a));case "path":return h.fromPath(a);case "geometry":return h.fromGeometry(b,a);default:return p.getLogger("esri.views.2d.engine.webgl.ClippingInfo").error(new n("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),h.fromRect({x:0,y:0,width:1,height:1})}};return l._createClass(e)}(t.DisplayObject)});