// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/lang ../../../../../core/urlUtils ../../../../../geometry/Extent ../../../../../layers/support/TileInfo ../../../../../layers/support/TilemapCache ../TilemapIndex ../TilemapRequest ./VectorTilesRequestManager".split(" "),function(l,m,g,n,p,q,r,t,u){return function(){function k(a,b,d){this.fullExtent=this.capabilities=this.tileInfo=this.tilemap=null;this.name=a;this.sourceUrl=b;a=g.urlToObject(this.sourceUrl);b=m.clone(d);
var c=b.tiles;if(a)for(var e=0;e<c.length;e++){var f=g.urlToObject(c[e]);f&&(g.isAbsolute(f.path)||(f.path=g.join(a.path,f.path)),c[e]=g.addQueryParameters(f.path,{...a.query,...f.query}))}this.tileServers=c;e=d.capabilities&&d.capabilities.split(",").map(v=>v.toLowerCase().trim());c=!0===d?.exportTilesAllowed;e=!0===e?.includes("tilemap");f=c&&d.hasOwnProperty("maxExportTilesCount")?d.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:c,supportsTileMap:e},exportTiles:c?{maxExportTilesCount:+f}:
null};this.tileInfo=p.fromJSON(b.tileInfo);c=d.tileMap?g.addQueryParameters(g.join(a.path,d.tileMap),a.query??{}):null;e?(this.type="vector-tile",this.tilemap=new t(new q.TilemapCache({layer:{parsedUrl:a,tileInfo:this.tileInfo},minLOD:b.minLOD??this.tileInfo.lods[0].level,maxLOD:b.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}),c)):c&&(this.tilemap=new r(c));this.fullExtent=n.fromJSON(d.fullExtent)}var h=k.prototype;h.destroy=function(){this.tilemap?.destroy()};h.getRefKey=async function(a,
b){return await this.tilemap?.dataKey(a,b)??a};h.requestTile=function(a,b,d,c){return u.request(this.tileServers[b%this.tileServers.length],a,b,d,c)};h.isCompatibleWith=function(a){var b=this.tileInfo;a=a.tileInfo;if(!b.spatialReference.equals(a.spatialReference)||!b.origin.equals(a.origin)||Math.round(b.dpi)!==Math.round(a.dpi))return!1;b=b.lods;a=a.lods;const d=Math.min(b.length,a.length);for(let c=0;c<d;c++){const e=b[c],f=a[c];if(e.level!==f.level||Math.round(e.scale)!==Math.round(f.scale))return!1}return!0};
return l._createClass(k)}()});