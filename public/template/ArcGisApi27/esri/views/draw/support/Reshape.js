// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../Graphic ../../../core/asyncUtils ../../../core/Collection ../../../core/Error ../../../core/Evented ../../../core/Handles ../../../core/Logger ../../../core/maybe ../../../core/quantityUtils ../../../core/reactiveUtils ../../../core/screenUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/coordsUtils ../../../layers/GraphicsLayer ../../../symbols/SimpleMarkerSymbol ../../ViewingMode ../../2d/interactive/SnappingVisualizer2D ./drawUtils ./GraphicMover ./HighlightHelper ./layerUtils ./settings ../../input/InputManager ../../interactive/keybindings ../../interactive/editGeometry/EditGeometryOperations ../../interactive/sketch/SketchTooltipOptions ../../interactive/snapping/SnappingContext ../../interactive/tooltip/Tooltip ../../interactive/tooltip/TranslateTooltipInfos ../../support/automaticAreaMeasurementUtils ../../support/automaticLengthMeasurementUtils ../../../geometry/Polyline ../../../geometry/Point".split(" "),
function(w,t,v,B,O,I,P,p,J,Q,y,K,C,L,u,ta,ua,va,R,z,S,D,T,U,V,W,X,Y,Z,aa,ba,ca,M,da,ea,N,fa,F,ha,A){let ia=w._createClass(function(q,r,d){this.graphic=q;this.mover=r;this.selected=d;this.type="reshape-start"}),ja=w._createClass(function(q,r,d){this.graphic=q;this.mover=r;this.selected=d;this.type="reshape"}),ka=w._createClass(function(q,r,d){this.graphic=q;this.mover=r;this.selected=d;this.type="reshape-stop"}),la=w._createClass(function(q,r,d){this.mover=q;this.dx=r;this.dy=d;this.type="move-start"}),
ma=w._createClass(function(q,r,d){this.mover=q;this.dx=r;this.dy=d;this.type="move"}),na=w._createClass(function(q,r,d){this.mover=q;this.dx=r;this.dy=d;this.type="move-stop"}),oa=w._createClass(function(q){this.added=q;this.type="vertex-select"}),pa=w._createClass(function(q){this.removed=q;this.type="vertex-deselect"}),qa=w._createClass(function(q,r,d,a){this.added=q;this.graphic=r;this.oldGraphic=d;this.vertices=a;this.type="vertex-add"}),ra=w._createClass(function(q,r,d,a){this.removed=q;this.graphic=
r;this.oldGraphic=d;this.vertices=a;this.type="vertex-remove"});v=Z.settings.reshapeGraphics;const G={vertices:{default:new D({style:"circle",size:v.vertex.size,color:v.vertex.color,outline:{color:v.vertex.outlineColor,width:1}}),hover:new D({style:"circle",size:v.vertex.hoverSize,color:v.vertex.hoverColor,outline:{color:v.vertex.hoverOutlineColor,width:1}}),selected:new D({style:"circle",size:v.selected.size,color:v.selected.color,outline:{color:v.selected.outlineColor,width:1}})},midpoints:{default:new D({style:"circle",
size:v.midpoint.size,color:v.midpoint.color,outline:{color:v.midpoint.outlineColor,width:1}}),hover:new D({style:"circle",size:v.midpoint.size,color:v.midpoint.color,outline:{color:v.midpoint.outlineColor,width:1}})}};p=function(q){function r(a){a=q.call(this,a)||this;a._activeOperationInfo=null;a._editGeometryOperations=null;a._handles=new J;a._graphicAttributes={esriSketchTool:"box"};a._mover=null;a._snappingContext=null;a._snappingTask=null;a._stagedVertex=null;a._tooltip=null;a._viewHandles=new J;
a.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}};a.enableMidpoints=!0;a.enableMovement=!0;a.enableVertices=!0;a.graphic=null;a.layer=null;a.midpointGraphics=new I;a.midpointSymbol=new D({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}});a.selectedVertices=[];a.snappingManager=null;a.tooltipOptions=new M;a.type="reshape";a.vertexGraphics=new I;a.view=null;return a}w._inherits(r,q);var d=r.prototype;
d.initialize=function(){const a=this.view;this._highlightHelper=new X({view:a});this._setup();this._handles.add([C.when(()=>a?.ready,()=>{const {layer:b,view:c}=this;Y.addUniqueLayer(c,b);this._viewHandles.add(c.on("key-down",e=>this._keyDownHandler(e),aa.ViewEventPriorities.TOOL))},{once:!0,initial:!0}),C.pausable(()=>this.graphic,()=>this.refresh()),C.pausable(()=>this.layer,(b,c)=>{c&&(this._clearSelection(),this._resetGraphics(c));this.refresh()}),C.pausable(()=>this.enableMidpoints,()=>this.refresh()),
C.watch(()=>this.tooltipOptions.enabled,b=>{this._tooltip=b?new ea.Tooltip({view:this.view}):y.destroyMaybe(this._tooltip)},C.syncAndInitial)])};d.destroy=function(){this._reset();this._mover?.destroy();this._mover=null;this._tooltip=y.destroyMaybe(this._tooltip);this._handles=y.destroyMaybe(this._handles);this._viewHandles=y.destroyMaybe(this._viewHandles)};d.isUIGraphic=function(a){const b=[];this.graphic&&b.push(this.graphic);b.concat(this.vertexGraphics.items,this.midpointGraphics.items);return 0<
b.length&&b.includes(a)};d.refresh=function(){this._reset();this._setup()};d.reset=function(){this.graphic=null};d.clearSelection=function(){this._clearSelection()};d.removeSelectedVertices=function(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)};d._setup=function(){const {graphic:a,layer:b}=this;if(b&&a&&null!=a.geometry){var c=a.geometry;"mesh"===c.type||"extent"===c.type?this._logGeometryTypeError():("polygon"===c.type&&z.closeRingsAndFixWinding(c),this._setUpHighlights(),
this._setupGraphics(),this._setupMover())}};d._setUpHighlights=function(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)};d._setUpGeometryHelper=function(){var a=this.graphic.geometry;null==a||"mesh"===a.type||"extent"===a.type?this._logGeometryTypeError():(a="multipoint"===a.type?new ha({paths:a.points,spatialReference:a.spatialReference}):a,this._editGeometryOperations=ca.EditGeometryOperations.fromGeometry(a,T.ViewingMode.Local))};d._saveSnappingContextForHandle=
function(a,b){this._snappingGraphicsLayer=new S({listMode:"hide",internal:!0,title:"Reshape snapping layer"});this.view.map.layers.add(this._snappingGraphicsLayer);this._snappingContext=new da.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:b.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,visualizer:new U.SnappingVisualizer2D(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(a)})};d._reset=
function(){this._clearSelection();this._highlightHelper?.removeAll();this._updateTooltip();this._resetGraphics();this._resetSnappingStateVars();this._activeOperationInfo=null;this._mover&&this._mover.destroy();this._mover=null;this.view.cursor="default"};d._resetSnappingStateVars=function(){null!=this.snappingManager&&this.snappingManager.doneSnapping();null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy());
this._editGeometryOperations=y.destroyMaybe(this._editGeometryOperations);this._snappingTask=y.abortMaybe(this._snappingTask);this._stagedVertex=this._snappingContext=this._snappingTask=null};d._resetGraphics=function(a){this._removeMidpointGraphics(a);this._removeVertexGraphics(a);this._set("selectedVertices",[])};d._removeMidpointGraphics=function(a){(a=a||this.layer)&&a.removeMany(this.midpointGraphics.items);this.midpointGraphics.items.forEach(b=>b.destroy());this.midpointGraphics.removeAll()};
d._removeVertexGraphics=function(a){(a=a||this.layer)&&a.removeMany(this.vertexGraphics.items);this.vertexGraphics.items.forEach(b=>b.destroy());this.vertexGraphics.removeAll()};d._getCoordinatesForUI=function(a){const b=z.geometryToCoordinates(a.clone());if("polygon"===a.type)for(const c of b)a=c[c.length-1],c[0][0]===a[0]&&c[0][1]===a[1]&&2<c.length&&c.pop();return b};d._setupGraphics=function(){var a=this.graphic.geometry;null==a||"polyline"!==a.type&&"polygon"!==a.type||(a=this._getCoordinatesForUI(a),
this.enableMidpoints&&this._setUpMidpointGraphics(a),this.enableVertices&&this._setUpVertexGraphics(a))};d._setUpMidpointGraphics=function(a){this._removeMidpointGraphics();a=this._createMidpointGraphics(a);this.midpointGraphics.addMany(a);this.layer.addMany(a)};d._setUpVertexGraphics=function(a){this._removeVertexGraphics();a=this._createVertexGraphics(a);this.vertexGraphics.addMany(a);this._storeRelatedVertexIndices();this.layer.addMany(a)};d._createVertexGraphics=function(a){const {_graphicAttributes:b,
symbols:c,view:{spatialReference:e}}=this,g=[];a?.forEach((f,h)=>{f.forEach((k,m)=>{const [n,l]=k;g.push(new B({geometry:new A({x:n,y:l,spatialReference:e}),symbol:c?.vertices?.default,attributes:{...b,pathIndex:h,pointIndex:m}}))})});return g};d._createMidpointGraphics=function(a){const {_graphicAttributes:b,symbols:c,view:{spatialReference:e}}=this,g=[];a?.forEach((f,h)=>{f.forEach((k,m)=>{const [n,l]=k;k=f[m+1]?m+1:0;if("polygon"===this.graphic.geometry?.type||0!==k){const [x,E]=f[k],[H,sa]=z.getMidpoint([n,
l],[x,E]);g.push(new B({geometry:new A({x:H,y:sa,spatialReference:e}),symbol:c.midpoints.default,attributes:{...b,pathIndex:h,pointIndexStart:m,pointIndexEnd:k}}))}})});return g};d._storeRelatedVertexIndices=function(){const a=this.vertexGraphics.items;if(a){var b=a.map(({geometry:c})=>({x:c.x,y:c.y}));for(let c=0;c<b.length;c++){const e=[];for(let g=0;g<b.length;g++){if(c===g)continue;const f=b[c],h=b[g];f.x===h.x&&f.y===h.y&&e.push(g)}a[c].attributes.relatedGraphicIndices=e}}};d._setupMover=function(){const {enableMovement:a,
graphic:b,midpointGraphics:c,vertexGraphics:e,view:g}=this,f=e.concat(c).items;a&&f.push(b);this._mover=new W({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:f,view:g,callbacks:{onGraphicClick:h=>this._onGraphicClickCallback(h),onGraphicMoveStart:h=>this._onGraphicMoveStartCallback(h),onGraphicMove:h=>this._onGraphicMoveCallback(h),onGraphicMoveStop:h=>this._onGraphicMoveStopCallback(h),onGraphicPointerOver:h=>this._onGraphicPointerOverCallback(h),onGraphicPointerOut:h=>
this._onGraphicPointerOutCallback(h)}})};d._onGraphicClickCallback=function(a){a.viewEvent.stopPropagation();const b=a.graphic;if(b===this.graphic){if(this.clearSelection(),this.emit("graphic-click",a),this.callbacks.onGraphicClick)this.callbacks.onGraphicClick(a)}else if(this._isMidpoint(b)){if(2!==a.viewEvent.button){a=this.graphic.clone();var c=this._createVertexFromMidpoint(b);this.refresh();this._emitVertexAddEvent([b],a,c)}}else this._isVertex(b)&&(a.viewEvent.stopPropagation(),2===a.viewEvent.button?
this._removeVertices(b):(a.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(b)?this._removeFromSelection(b,!0):this._addToSelection(b)))};d._setUpOperation=function(a){const {graphic:b,dx:c,dy:e}=a,g=b===this.graphic;this._resetSnappingStateVars();this._setUpGeometryHelper();this._saveSnappingContextForHandle(b,a);this._activeOperationInfo={target:this.graphic,mover:b,operationType:g?"move":"reshape",totalDx:c,totalDy:e}};d._onGraphicMoveStartCallback=function(a){const {dx:b,
dy:c,graphic:e}=a;if(e===this.graphic){var {geometry:g}=e;this._setUpOperation(a);this._emitMoveStartEvent(b,c);null!=g&&"point"===g.type&&this._onHandleMove(e,b,c,a,()=>{this._updateTooltip(this.graphic,a.viewEvent);this._emitMoveEvent(b,c)})}else{if(!this.selectedVertices.includes(e)){this._clearSelection();if(this._isMidpoint(e)){g=this.graphic.clone();const f=this._createVertexFromMidpoint(e);this._emitVertexAddEvent([e],g,f)}this._addToSelection(e)}this._setUpOperation(a);this._emitReshapeStartEvent(e);
this._onHandleMove(e,b,c,a,()=>{this._updateTooltip(e,a.viewEvent);this._emitReshapeEvent(e)})}};d._onGraphicMoveCallback=function(a){var b=this._activeOperationInfo;if(b){var {dx:c,dy:e,graphic:g}=a;b.totalDx+=c;b.totalDy+=e;({operationType:b}=b);var {geometry:f}=g;if(null!=f)if("move"===b)if("point"===f.type)this._onHandleMove(g,c,e,a,()=>{this._updateTooltip(this.graphic,a.viewEvent);this._emitMoveEvent(c,e)});else{if("polyline"===f.type||"polygon"===f.type)b=this._getCoordinatesForUI(f),this._updateVertexGraphicLocations(b),
this._updateTooltip(this.graphic,a.viewEvent),this._emitMoveEvent(c,e)}else this._onHandleMove(g,c,e,a,()=>{this._updateTooltip(g,a.viewEvent);this._emitReshapeEvent(g)})}};d._onGraphicMoveStopCallback=function(a){const b=this._activeOperationInfo;if(b){var {dx:c,dy:e,graphic:g}=a,{operationType:f}=b;b.totalDx+=c;b.totalDy+=e;this._onHandleMove(g,c,e,a,()=>"move"===f?this._emitMoveStopEvent():this._emitReshapeStopEvent(g));this._isMidpoint(g)?this.refresh():(this._updateTooltip(this._isVertex(g)?
g:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}};d._updateVertexGraphicLocations=function(a){const b=this.view.spatialReference;for(const c of this.vertexGraphics){const {pathIndex:e,pointIndex:g}=c.attributes,[f,h]=a[e][g];c.geometry=new A({x:f,y:h,spatialReference:b})}this._updateMidpointGraphicLocations(a)};d._updateMidpointGraphicLocations=function(a){for(const b of this.midpointGraphics){const {pathIndex:c,pointIndexStart:e,pointIndexEnd:g}=b.attributes,[f,h]=a[c][e],
[k,m]=a[c][g],[n,l]=z.getMidpoint([f,h],[k,m]);b.geometry=new A({x:n,y:l,spatialReference:this.view.spatialReference})}};d._getIndicesForVertexGraphic=function({attributes:a}){return[a?.pathIndex||0,a?.pointIndex||0]};d._getVertexFromEditGeometry=function(a){const [b,c]=this._getIndicesForVertexGraphic(a);return this._editGeometryOperations.data.components[b].vertices[c]};d._onHandleMove=function(a,b,c,e,g){y.abortMaybe(this._snappingTask);const f=this._snappingContext;if(f){var h=a.geometry,k="graphic-move-stop"===
e.type;if(null!=this.snappingManager&&2>this.selectedVertices.length&&!k){const m=this.snappingManager;this._stagedVertex=m.update({point:h,context:f});this._syncGeometryAfterVertexMove(a,new A(this._stagedVertex),b,c,k);g();this._snappingTask=O.createTask(async n=>{n=await m.snap({point:h,context:f,signal:n});n.valid&&(this._stagedVertex=n.apply(),this._syncGeometryAfterVertexMove(a,new A(this._stagedVertex),b,c,k),g())})}else e=null!=this._stagedVertex?new A(this._stagedVertex):h,this._syncGeometryAfterVertexMove(a,
e,b,c,k),g()}};d._syncGeometryAfterVertexMove=async function(a,b,c,e,g=!1){const f=this._editGeometryOperations.data.geometry;if("point"===f.type)a.geometry=b;else if("mesh"===f.type)a.geometry=f.centerAt(b),a.notifyGeometryChanged();else{const {x:h,y:k}=b,[m,n]=this._getIndicesForVertexGraphic(a);let l=z.geometryToCoordinates(f);const x=l[m].length-1;l[m][n]=[h,k];"polygon"===f.type&&(0===n?l[m][x]=[h,k]:n===x&&(l[m][0]=[h,k]));this._isVertex(a)&&(l=this._moveRelatedCoordinates(l,a,h,k),l=this._moveSelectedHandleCoordinates(l,
a,c,e,"polygon"===f.type),this._updateMidpointGraphicLocations(l));this.graphic.geometry=f.clone();c=this._getVertexFromEditGeometry(a);this._editGeometryOperations.moveVertices([c],h-c.pos[0],k-c.pos[1],0);g&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(a),b):a.geometry=b)}};d._moveRelatedCoordinates=function(a,b,c,e){var {relatedGraphicIndices:g}=b.attributes;for(const f of g){g=this.vertexGraphics.at(f);const {pathIndex:h,pointIndex:k}=g.attributes;a[h][k]=[c,e];g.geometry=
b.geometry}return a};d._moveSelectedHandleCoordinates=function(a,b,c,e,g){for(const h of this.selectedVertices)if(h!==b){const {pathIndex:k,pointIndex:m,relatedGraphicIndices:n}=h.attributes,l=V.cloneMove(h.geometry,c,e,this.view);var f=a[k].length-1;a[k][m]=[l.x,l.y];h.geometry=l;g&&(0===m?a[k][f]=[l.x,l.y]:m===f&&(a[k][0]=[l.x,l.y]));for(const x of n){f=this.vertexGraphics.at(x);const {pathIndex:E,pointIndex:H}=f.attributes;a[E][H]=[l.x,l.y];f.geometry=l}}return a};d._onGraphicPointerOverCallback=
function(a){a=a.graphic;const b=this._isVertex(a);b&&!this._isSelected(a)&&(a.symbol=this.symbols.vertices.hover);this._updateTooltip(b?a:null);this._updateHoverCursor(a)};d._onGraphicPointerOutCallback=function(a){a=a.graphic;this._isVertex(a)&&!this._isSelected(a)&&(a.symbol=this.symbols.vertices.default);this.view.cursor="default";this._updateTooltip()};d._createVertexFromMidpoint=function(a){const {_graphicAttributes:b,graphic:c}=this;var e=c.geometry;if(null==e||"polygon"!==e.type&&"polyline"!==
e.type)return[];e=e.clone();const g=[],{pathIndex:f,pointIndexStart:h,pointIndexEnd:k}=a.attributes,{x:m,y:n}=a.geometry,l=0===k?h+1:k,x=z.geometryToCoordinates(e);x[f].splice(l,0,[m,n]);a.attributes={...b,pathIndex:f,pointIndex:l,relatedGraphicIndices:[]};g.push({coordinates:x[f][l],componentIndex:f,vertexIndex:l});this.graphic.geometry=e;return g};d._addToSelection=function(a){a instanceof B&&(a=[a]);for(const b of a)b.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(a));
this._emitSelectEvent(a)};d._removeFromSelection=function(a,b){const {vertices:c}=this.symbols;b=b?c.hover:c.default;a instanceof B&&(a=[a]);for(const e of a)this.selectedVertices.splice(this.selectedVertices.indexOf(e),1),this._set("selectedVertices",this.selectedVertices),e.set("symbol",b);this._emitDeselectEvent(a)};d._clearSelection=function(){if(this.selectedVertices.length){const a=this.selectedVertices;for(const b of this.selectedVertices)b.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",
[]);this._emitDeselectEvent(a)}};d._keyDownHandler=function(a){ba.SKETCH_KEYS.delete.includes(a.key)&&!a.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)};d._removeVertices=function(a){var b=this.graphic.geometry;if(!(null==b||"polygon"!==b.type&&"polyline"!==b.type||"polygon"===b.type&&4>this.vertexGraphics.length||3>this.vertexGraphics.length)){a instanceof B&&(a=[a]);var c=this.graphic.clone();b=b.clone();var e=z.geometryToCoordinates(b),g=[];a instanceof B&&(a=
[a]);for(const f of a){const {x:h,y:k}=f.geometry;for(let m=0;m<e.length;m++){const n=e[m];for(let l=0;l<n.length;l++){const [x,E]=n[l];h===x&&k===E&&(g.push({coordinates:e[m][l],componentIndex:m,vertexIndex:l}),e[m].splice(Number(l),1))}}}if("polygon"===b.type)e=e.filter(f=>{if(2>f.length)return!1;const [h,k]=f[0],[m,n]=f[f.length-1];if(2===f.length&&h===m&&k===n)return!1;h===m&&k===n||f.push(f[0]);return!0}),b.rings=e;else{for(const f of e)1===f.length&&e.splice(e.indexOf(f),1);b.paths=e}this.graphic.geometry=
b;this.refresh();this._emitVertexRemoveEvent(a,c,g)}};d._isVertex=function(a){return this.vertexGraphics.includes(a)};d._isSelected=function(a){return this._isVertex(a)&&this.selectedVertices.includes(a)};d._isMidpoint=function(a){return this.midpointGraphics.includes(a)};d._updateHoverCursor=function(a){this.view.cursor=this._isMidpoint(a)?"copy":"move"};d._updateTooltip=function(a,b){null!=this._tooltip&&(a?a===this.graphic?this._updateMoveGraphicTooltip(b):this._updateMoveVertexTooltip(b):this._tooltip.clear())};
d._updateMoveGraphicTooltip=function(a){const {_tooltip:b,tooltipOptions:c,view:e}=this;if(null!=b){var g=new N.TranslateGraphicTooltipInfo({tooltipOptions:c});if(a){const {x:f,y:h}=a.origin;a=e.toMap(a);const k=e.toMap(L.createScreenPoint(f,h));a=F.autoDistanceBetweenPoints2D(k,a);g.distance=null!=a?a:K.zeroMeters}b.info=g}};d._updateMoveVertexTooltip=function(a){const {_tooltip:b,graphic:{geometry:c},tooltipOptions:e,view:g}=this;if(null!=b){var f=new N.TranslateVertexTooltipInfo({tooltipOptions:e});
null!=c&&("polygon"===c.type?f.area=fa.autoArea2D(c):"polyline"===c.type&&(f.totalLength=F.autoLength2D(c)));if(a){const {x:h,y:k}=a.origin;a=g.toMap(a);const m=g.toMap(L.createScreenPoint(h,k));a=F.autoDistanceBetweenPoints2D(m,a);f.distance=null!=a?a:K.zeroMeters}b.info=f}};d._emitMoveStartEvent=function(a,b){a=new la(this.graphic,a,b);this.emit("move-start",a);if(this.callbacks.onMoveStart)this.callbacks.onMoveStart(a)};d._emitMoveEvent=function(a,b){a=new ma(this.graphic,a,b);this.emit("move",
a);if(this.callbacks.onMove)this.callbacks.onMove(a)};d._emitMoveStopEvent=function(){var a=this._activeOperationInfo;if(a){var {totalDx:b,totalDy:c}=a;a=new na(this.graphic,b,c);this.emit("move-stop",a);if(this.callbacks.onMoveStop)this.callbacks.onMoveStop(a)}};d._emitReshapeStartEvent=function(a){a=new ia(this.graphic,a,this.selectedVertices);this.emit("reshape-start",a);if(this.callbacks.onReshapeStart)this.callbacks.onReshapeStart(a)};d._emitReshapeEvent=function(a){a=new ja(this.graphic,a,this.selectedVertices);
this.emit("reshape",a);if(this.callbacks.onReshape)this.callbacks.onReshape(a)};d._emitReshapeStopEvent=function(a){a=new ka(this.graphic,a,this.selectedVertices);this.emit("reshape-stop",a);if(this.callbacks.onReshapeStop)this.callbacks.onReshapeStop(a)};d._emitSelectEvent=function(a){a=new oa(a);this.emit("select",a);if(this.callbacks.onVertexSelect)this.callbacks.onVertexSelect(a)};d._emitDeselectEvent=function(a){a=new pa(a);this.emit("deselect",a);if(this.callbacks.onVertexDeselect)this.callbacks.onVertexDeselect(a)};
d._emitVertexAddEvent=function(a,b,c){a=new qa(a,this.graphic,b,c);this.emit("vertex-add",a);if(this.callbacks.onVertexAdd)this.callbacks.onVertexAdd(a)};d._emitVertexRemoveEvent=function(a,b,c){a=new ra(a,this.graphic,b,c);this.emit("vertex-remove",a);if(this.callbacks.onVertexRemove)this.callbacks.onVertexRemove(a)};d._logGeometryTypeError=function(){Q.getLogger(this).error(new P("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))};
w._createClass(r,[{key:"highlightsEnabled",set:function(a){this._highlightHelper?.removeAll();this._set("highlightsEnabled",a);this._setUpHighlights()}},{key:"state",get:function(){const a=!!this.get("view.ready"),b=!(!this.get("graphic")||!this.get("layer"));return a&&b?"active":a?"ready":"disabled"}},{key:"symbols",set:function(a){const {midpoints:b=G.midpoints,vertices:c=G.vertices}=a||{};this._set("symbols",{midpoints:b,vertices:c})}}]);return r}(p.EventedAccessor);t.__decorate([u.property()],
p.prototype,"_tooltip",void 0);t.__decorate([u.property()],p.prototype,"callbacks",void 0);t.__decorate([u.property()],p.prototype,"enableMidpoints",void 0);t.__decorate([u.property()],p.prototype,"enableMovement",void 0);t.__decorate([u.property()],p.prototype,"enableVertices",void 0);t.__decorate([u.property()],p.prototype,"graphic",void 0);t.__decorate([u.property({value:!0})],p.prototype,"highlightsEnabled",null);t.__decorate([u.property()],p.prototype,"layer",void 0);t.__decorate([u.property({readOnly:!0})],
p.prototype,"midpointGraphics",void 0);t.__decorate([u.property()],p.prototype,"midpointSymbol",void 0);t.__decorate([u.property({readOnly:!0})],p.prototype,"selectedVertices",void 0);t.__decorate([u.property()],p.prototype,"snappingManager",void 0);t.__decorate([u.property({readOnly:!0})],p.prototype,"state",null);t.__decorate([u.property({value:G})],p.prototype,"symbols",null);t.__decorate([u.property({type:M})],p.prototype,"tooltipOptions",void 0);t.__decorate([u.property({readOnly:!0})],p.prototype,
"type",void 0);t.__decorate([u.property({readOnly:!0})],p.prototype,"vertexGraphics",void 0);t.__decorate([u.property()],p.prototype,"view",void 0);return p=t.__decorate([R.subclass("esri.views.draw.support.Reshape")],p)});