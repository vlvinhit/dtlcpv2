// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/DefaultVertexAttributeLocations ../lib/Program ../../../../chunks/OITCompositing.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(k,f,g,l,b,m,n,p,c,e){b=function(d){function a(){return d.apply(this,arguments)||this}g._inherits(a,d);var h=a.prototype;h.initializeProgram=function(q){return new n.Program(q.rctx,a.shader.get().build(),
m.Default3D)};h.initializePipeline=function(){return e.makePipelineState({blending:e.separateBlendingParams(c.BlendFactor.SRC_ALPHA,c.BlendFactor.ONE,c.BlendFactor.ONE_MINUS_SRC_ALPHA,c.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:e.defaultColorWriteParams})};return g._createClass(a)}(b.ShaderTechnique);b.shader=new l.ReloadableShaderModule(p.OITCompositing,()=>new Promise((d,a)=>k(["./OITCompositing.glsl"],d,a)));f.OITCompositingTechnique=b;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});