// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/DefaultVertexAttributeLocations ../lib/Program ../../../../chunks/AtmosphereCompositing.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(k,f,g,l,d,m,n,p,a,b){d=function(e){function c(){return e.apply(this,arguments)||this}g._inherits(c,e);var h=c.prototype;h.initializeProgram=function(q){return new n.Program(q.rctx,
c.shader.get().build(this.configuration),m.Default3D)};h.initializePipeline=function(){return this.configuration.haze?b.makePipelineState({blending:b.separateBlendingParams(a.BlendFactor.ONE,a.BlendFactor.ZERO,a.BlendFactor.ONE_MINUS_SRC_COLOR,a.BlendFactor.ONE),depthTest:{func:a.CompareFunction.ALWAYS},colorWrite:b.defaultColorWriteParams}):b.makePipelineState({blending:b.simpleBlendingParams(a.BlendFactor.SRC_ALPHA,a.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:{func:a.CompareFunction.ALWAYS},colorWrite:b.defaultColorWriteParams})};
return g._createClass(c)}(d.ShaderTechnique);d.shader=new l.ReloadableShaderModule(p.AtmosphereCompositing,()=>new Promise((e,c)=>k(["./AtmosphereCompositing.glsl"],e,c)));f.AtmosphereCompositingTechnique=d;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});