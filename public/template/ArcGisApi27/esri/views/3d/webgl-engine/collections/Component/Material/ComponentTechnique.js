// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../ViewingMode ./ComponentTechniqueConfiguration ../../../../../../chunks/ComponentShader.glsl ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderTechnique/ReloadableShaderModule ../../../core/shaderTechnique/ShaderTechnique ../../../lib/basicInterfaces ../../../lib/OrderIndependentTransparency ../../../lib/Program ../../../lib/StencilUtils ../../../lib/TransparencyPassType ../../../lib/VertexAttribute ../../../../../webgl/renderState".split(" "),
function(w,l,p,x,y,z,q,A,e,B,f,C,m,r,c,g){e=function(h){function d(){return h.apply(this,arguments)||this}p._inherits(d,h);var k=d.prototype;k.initializeConfiguration=function(b,a){a.spherical=b.viewingMode===x.ViewingMode.Global;a.doublePrecisionRequiresObfuscation=b.rctx.driverTest.doublePrecisionRequiresObfuscation.result};k.initializeProgram=function(b){return new C.Program(b.rctx,d.shader.get().build(this.configuration),t)};k._setPipelineState=function(b){const a=this.configuration,u=a.integratedMeshMode!==
y.IntegratedMeshMode.None,n=b===r.TransparencyPassType.NONE,v=b===r.TransparencyPassType.FrontFace;return g.makePipelineState({blending:a.output!==q.ShaderOutput.Color&&a.output!==q.ShaderOutput.Alpha||!a.blendingEnabled?null:n?f.blendingDefault:f.oitBlending(b),culling:g.cullingParams(a.cullFace),depthTest:{func:f.oitDepthTest(b)},depthWrite:n||v?g.defaultDepthWriteParams:null,colorWrite:g.defaultColorWriteParams,stencilWrite:u||a.hasOccludees?m.stencilWriteMaskOn:null,stencilTest:u?m.replaceBitWhenDepthTestPasses(B.StencilBits.IntegratedMeshMaskExcluded):
a.hasOccludees?m.stencilBaseAllZerosParams:null,polygonOffset:n||v?a.hasPolygonOffset?{factor:2,units:2}:null:f.OITPolygonOffset})};k.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};return p._createClass(d)}(e.ShaderTechnique);e.shader=new A.ReloadableShaderModule(z.ComponentShader,()=>new Promise((h,d)=>w(["./shader/ComponentShader.glsl"],h,d)));const t=new Map([[c.VertexAttribute.POSITION,0],[c.VertexAttribute.NORMAL,1],[c.VertexAttribute.NORMALCOMPRESSED,
1],[c.VertexAttribute.COLOR,2],[c.VertexAttribute.UV0,3],[c.VertexAttribute.UVREGION,4],[c.VertexAttribute.COMPONENTINDEX,5]]);l.ComponentTechnique=e;l.attributeLocations=t;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});