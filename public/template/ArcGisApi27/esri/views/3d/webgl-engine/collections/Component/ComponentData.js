// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["../../../../../chunks/_rollupPluginBabelHelpers","./IndexRange/ComponentRangeRunLengthEncoded"],function(k,l){function m(f,e,a){const b=[],c=[];let g=a.length,h=a.length;e.forEachComponent(d=>{0<f[d]?(g!==d-1&&(b.length&&b.push(a[g+1]-b[b.length-1]),b.push(a[d])),g=d):(h!==d-1&&(c.length&&c.push(a[h+1]-c[c.length-1]),c.push(a[d])),h=d);return!0});b.length&&b.push(a[g+1]-b[b.length-1]);c.length&&c.push(a[h+1]-c[c.length-1]);return{highlightRanges:b,defaultRanges:c}}return function(){function f(a,
b){this.offsets=b;this.cachedDefaultRanges=this.cachedHighlightRanges=this.cachedGeometryRanges=this.verticalOffsets=this.highlightCounts=this.pickability=null;b=this.count;this.visibility=new l.ComponentRangeRunLengthEncoded(b);this.materialDataBuffer=a.getBuffer(b);this.materialDataIndices=new Uint16Array(b);for(a=0;a<b;a++)this.materialDataIndices[a]=this.materialDataBuffer.acquireIndex()}var e=f.prototype;e.destroy=function(){for(let a=0;a<this.count;a++)this.materialDataBuffer.releaseIndex(this.materialDataIndices[a])};
e.highlightsDirty=function(){this.cachedDefaultRanges=this.cachedHighlightRanges=null};e.visibilityDirty=function(){this.cachedGeometryRanges=null;this.highlightsDirty()};e._updateCachedHighlightRanges=function(){if((null==this.cachedHighlightRanges||null==this.cachedDefaultRanges)&&null!=this.highlightCounts){const {highlightRanges:a,defaultRanges:b}=m(this.highlightCounts,this.visibility,this.offsets);this.cachedHighlightRanges=a;this.cachedDefaultRanges=b}};k._createClass(f,[{key:"count",get:function(){return this.offsets.length-
1}},{key:"geometryRanges",get:function(){null==this.cachedGeometryRanges&&(this.cachedGeometryRanges=this.visibility.computeOffsetRanges(this.offsets));return this.cachedGeometryRanges}},{key:"highlightRanges",get:function(){if(null==this.highlightCounts)return null;this._updateCachedHighlightRanges();return this.cachedHighlightRanges}},{key:"defaultShadowMapRanges",get:function(){if(null==this.highlightCounts)return this.geometryRanges;this._updateCachedHighlightRanges();return this.cachedDefaultRanges}}]);
return f}()});