// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../../chunks/tslib.es6 ../../../../../../core/maybe ../../../../../../chunks/mat3 ../../../../../../chunks/mat3f32 ../../../../../../chunks/mat3f64 ../../../../../../chunks/vec3 ../../../../../../chunks/vec3f64 ../../../../../../chunks/vec4 ../../../../../../chunks/vec4f64 ../../../../layers/support/symbolColorUtils ../../../../terrain/interfaces ./ComponentTechnique ./ComponentTechniqueConfiguration ./shader/ComponentData.glsl ../../../../../../chunks/ComponentShader.glsl ./shader/VertexDiscardByOpacity.glsl ../../../core/material/MaterialBase ../../../core/renderPasses/AllRenderPasses ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderLibrary/attributes/NormalAttribute.glsl ../../../core/shaderLibrary/shading/Normals.glsl ../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../../../core/shaderLibrary/util/AlphaCutoff ../../../core/shaderLibrary/util/EllipsoidMode ../../../core/util/TwoVectorPosition ../../../lib/basicInterfaces ../../../lib/TransparencyPassType ../../../materials/pbrUtils".split(" "),
function(g,q,d,M,F,N,O,r,G,H,I,J,C,P,t,K,Q,v,c,w,x,D,L,A,R,S,T,B,U,V){let l=function(e){function p(h,m){var a=e.call(this)||this;a.toMapSpace=m;a.baseColor=I.fromValues(1,1,1,1);a.usePBR=!1;a.hasParametersFromSource=!1;a.mrrFactors=G.fromArray(V.defaultAdvancedMRRFactors);a.emissiveFactor=G.fromValues(0,0,0);a.baseColorTexture=null;a.metallicRoughnessTexture=null;a.emissionTexture=null;a.occlusionTexture=null;a.normalTexture=null;a.objectOpacity=1;a.commonMaterialParameters=new y;a.componentParameters=
new z;a.textureAlphaCutoff=R.defaultMaskAlphaCutoff;a.alphaDiscardMode=B.AlphaDiscardMode.Opaque;a.isIntegratedMesh=!1;a.polygonOffsetEnabled=!1;a.ellipsoidMode=S.EllipsoidMode.Earth;a.hasOccludees=!1;a._techniqueConfiguration=new t.ComponentTechniqueConfiguration;m=new T.TwoVectorPosition(h.position);const f=N.clone(h.rotationScale);F.invert(f,f);a.transformNormalGlobalFromModel=O.clone(F.transpose(f,f));a.transformWorldFromModelTL=m.low;a.transformWorldFromModelTH=m.high;a.transformWorldFromModelRS=
h.rotationScale;return a}q._inherits(p,e);var k=p.prototype;k.dispose=function(){this._technique=M.releaseMaybe(this._technique);this.normalTexture=this.occlusionTexture=this.emissionTexture=this.metallicRoughnessTexture=this.baseColorTexture=null};k.prepareTechnique=function(h,m,a,f){const b=this._techniqueConfiguration;b.hasVertexColors=f.colors;b.hasNormals=f.normals;b.textureCoordinateType=f.textureCoordinates;b.hasMetallicRoughnessTexture=null!=this.metallicRoughnessTexture;b.hasEmissionTexture=
null!=this.emissionTexture;b.hasOcclusionTexture=null!=this.occlusionTexture;b.hasNormalTexture=null!=this.normalTexture;b.transparencyPassType=m.identifier===w.RenderPassIdentifier.Material&&null!=a.transparencyPassType?a.transparencyPassType:U.TransparencyPassType.NONE;b.hasMultipassTerrain=m.identifier===w.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.enabled:!1;b.cullAboveGround=m.identifier===w.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.cullAboveGround:
!1;b.ellipsoidMode=this.ellipsoidMode;b.componentData=this.componentParameters.type;b.cullFace=this.commonMaterialParameters.cullFace;b.doubleSidedMode=this.commonMaterialParameters.doubleSided?L.NormalsDoubleSidedMode.View:L.NormalsDoubleSidedMode.None;b.hasBaseColorTexture=null!=this.baseColorTexture;f=this._computeWhichMaterialPass();b.blendingEnabled=f===n.Transparent||f===n.OpaqueAndTransparent;b.alphaDiscardMode=this.alphaDiscardMode;b.integratedMeshMode=this.isIntegratedMesh?(0===a.overlays.length?
0:null!=a.overlays[C.OverlayIndex.INNER].getColorTextureNoRasterImage())?Q.getOverlayNormalTexture(a)?t.IntegratedMeshMode.ColorOverlayWithWater:t.IntegratedMeshMode.ColorOverlay:t.IntegratedMeshMode.NoOverlay:t.IntegratedMeshMode.None;b.hasPolygonOffset=this.polygonOffsetEnabled;f=this.hasParametersFromSource&&null==this.baseColorTexture;b.pbrMode=b.integratedMeshMode===t.IntegratedMeshMode.ColorOverlayWithWater?A.PBRMode.WaterOnIntegratedMesh:this.usePBR?f?A.PBRMode.Schematic:A.PBRMode.Normal:A.PBRMode.Disabled;
b.normalType=b.integratedMeshMode===t.IntegratedMeshMode.None?b.hasNormals?D.NormalType.Compressed:D.NormalType.ScreenDerivative:D.NormalType.Ground;b.hasSlicePlane=null!=a.slicePlane&&this.commonMaterialParameters.hasSlicePlane;if(m.identifier===w.RenderPassIdentifier.ShadowMap)b.output=x.ShaderOutput.Shadow,b.vertexDiscardMode=v.VertexDiscardMode.None;else if(m.identifier===w.RenderPassIdentifier.Highlight)b.output=x.ShaderOutput.Highlight,b.vertexDiscardMode=v.VertexDiscardMode.None;else{this._computeWhichMaterialPass()===
n.OpaqueAndTransparent?b.vertexDiscardMode=m.transparent?v.VertexDiscardMode.Opaque:v.VertexDiscardMode.Transparent:b.vertexDiscardMode=v.VertexDiscardMode.None;b.output=m.output;b.receiveAmbientOcclusion=!1;b.receiveShadows=!1;switch(m.output){case x.ShaderOutput.Color:b.receiveAmbientOcclusion=a.ssaoHelper.active;b.hasOccludees=a.hasOccludees;b.receiveShadows=a.shadowMap.ready;b.hasScreenSpaceReflections=a.ssr.enabled;b.hasCloudsReflections=null!=a.cloudsFade.data;break;case x.ShaderOutput.Alpha:b.hasOccludees=
a.hasOccludees;break;case x.ShaderOutput.ObjectAndLayerIdColor:b.objectAndLayerIdColor=!0}b.snowCover=this.hasSnowCover(a)}this._technique=h.releaseAndAcquire(P.ComponentTechnique,b,this._technique);this._setClean();return this._technique};k.hasSnowCover=function(h){return null!=h.weather&&h.weatherVisible&&"snowy"===h.weather.type&&"enabled"===h.weather.snowCover};k.submit=function(h,m,a){if(0!==this.objectOpacity){var f=a.renderable.geometry,b=a.components;a=a.renderable.meta.cameraDepthSquared;
var u=b.geometryRanges,E=b.highlightRanges;b=b.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case n.Opaque:h.materialOpaque.submitDraw(this,f,u,a);break;case n.Transparent:h.materialTransparent.submitDraw(this,f,u,a);break;case n.OpaqueAndTransparent:h.materialOpaque.submitDraw(this,f,u,a);h.materialTransparent.submitDraw(this,f,u,a);break;case n.IntegratedMesh:h.materialIntegratedMesh.submitDraw(this,f,u,a),(0===m.overlays.length?0:null!=m.overlays[C.OverlayIndex.INNER].getValidTexture(C.RenderTargetType.Highlight))&&
h.highlightIntegratedMesh.submitDraw(this,f,u,a)}(m=this.componentParameters.castShadows!==g.ComponentParameterSummary.None)&&h.shadowMap.submitDraw(this,f,u,a);null!=E&&(h.highlight.submitDraw(this,f,E,a),m&&h.highlightShadowMap.submitDraw(this,f,E,a));m&&null!=b&&h.defaultShadowMap.submitDraw(this,f,b,a)}};k._computeWhichMaterialPass=function(){return this.isIntegratedMesh?n.IntegratedMesh:1>this.objectOpacity?n.Transparent:this.componentParameters.opaqueOverride===g.ComponentParameterSummary.All?
n.Opaque:1>this.baseColor[3]||this.alphaDiscardMode===B.AlphaDiscardMode.Blend||this.alphaDiscardMode===B.AlphaDiscardMode.MaskBlend?n.Transparent:this.componentParameters.transparent===g.ComponentParameterSummary.None?n.Opaque:this.componentParameters.transparent===g.ComponentParameterSummary.All?n.Transparent:n.OpaqueAndTransparent};q._createClass(p,[{key:"texture",get:function(){return null!=this.baseColorTexture?this.baseColorTexture.glTexture:null}},{key:"textureMetallicRoughness",get:function(){return null!=
this.metallicRoughnessTexture?this.metallicRoughnessTexture.glTexture:null}},{key:"textureEmissive",get:function(){return null!=this.emissionTexture?this.emissionTexture.glTexture:null}},{key:"textureOcclusion",get:function(){return null!=this.occlusionTexture?this.occlusionTexture.glTexture:null}},{key:"textureNormal",get:function(){return null!=this.normalTexture?this.normalTexture.glTexture:null}}]);return p}(c.MaterialBase);d.__decorate([c.parameter({vectorOps:H.vec4})],l.prototype,"baseColor",
void 0);d.__decorate([c.parameter()],l.prototype,"usePBR",void 0);d.__decorate([c.parameter()],l.prototype,"hasParametersFromSource",void 0);d.__decorate([c.parameter({vectorOps:r.vec3})],l.prototype,"mrrFactors",void 0);d.__decorate([c.parameter({vectorOps:r.vec3})],l.prototype,"emissiveFactor",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"baseColorTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"metallicRoughnessTexture",void 0);d.__decorate([c.parameter({dispose:!0})],
l.prototype,"emissionTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"occlusionTexture",void 0);d.__decorate([c.parameter({dispose:!0})],l.prototype,"normalTexture",void 0);d.__decorate([c.parameter()],l.prototype,"objectOpacity",void 0);d.__decorate([c.parameterBlock()],l.prototype,"commonMaterialParameters",void 0);d.__decorate([c.parameterBlock()],l.prototype,"componentParameters",void 0);d.__decorate([c.parameter()],l.prototype,"textureAlphaCutoff",void 0);d.__decorate([c.parameter()],
l.prototype,"alphaDiscardMode",void 0);d.__decorate([c.parameter()],l.prototype,"isIntegratedMesh",void 0);d.__decorate([c.parameter()],l.prototype,"polygonOffsetEnabled",void 0);d.__decorate([c.parameter()],l.prototype,"ellipsoidMode",void 0);d.__decorate([c.parameter()],l.prototype,"hasOccludees",void 0);var n;(function(e){e[e.Opaque=0]="Opaque";e[e.Transparent=1]="Transparent";e[e.OpaqueAndTransparent=2]="OpaqueAndTransparent";e[e.IntegratedMesh=3]="IntegratedMesh"})(n||(n={}));let y=function(e){function p(){var k=
e.apply(this,arguments)||this;k.doubleSided=!1;k.cullFace=B.CullFaceOptions.Back;k.hasSlicePlane=!0;return k}q._inherits(p,e);return q._createClass(p)}(c.MaterialParameterBlock);d.__decorate([c.parameter()],y.prototype,"doubleSided",void 0);d.__decorate([c.parameter()],y.prototype,"cullFace",void 0);d.__decorate([c.parameter()],y.prototype,"hasSlicePlane",void 0);let z=function(e){function p(){var k=e.apply(this,arguments)||this;k.externalColor=I.fromValues(1,1,1,1);k.externalColorMixMode=J.ColorMixModeEnum.Multiply;
k.castShadows=g.ComponentParameterSummary.All;return k}q._inherits(p,e);q._createClass(p,[{key:"transparent",get:function(){return 1>this.externalColor[3]?g.ComponentParameterSummary.All:g.ComponentParameterSummary.None}},{key:"opaqueOverride",get:function(){return this.externalColorMixMode===J.ColorMixModeEnum.Replace&&1===this.externalColor[3]?g.ComponentParameterSummary.All:g.ComponentParameterSummary.None}},{key:"visible",get:function(){return 0<this.externalColor[3]?g.ComponentParameterSummary.All:
g.ComponentParameterSummary.None}},{key:"type",get:function(){return K.ComponentDataType.Uniform}}]);return p}(c.MaterialParameterBlock);d.__decorate([c.parameter({vectorOps:H.vec4})],z.prototype,"externalColor",void 0);d.__decorate([c.parameter()],z.prototype,"externalColorMixMode",void 0);d.__decorate([c.parameter()],z.prototype,"castShadows",void 0);g.ComponentParameterSummary=void 0;(function(e){e[e.All=0]="All";e[e.Some=1]="Some";e[e.None=2]="None"})(g.ComponentParameterSummary||(g.ComponentParameterSummary=
{}));r=function(e){function p(){var k=e.apply(this,arguments)||this;k.texture=null;k.transparent=g.ComponentParameterSummary.None;k.opaqueOverride=g.ComponentParameterSummary.None;k.castShadows=g.ComponentParameterSummary.None;return k}q._inherits(p,e);q._createClass(p,[{key:"type",get:function(){return K.ComponentDataType.Varying}}]);return p}(c.MaterialParameterBlock);d.__decorate([c.parameter()],r.prototype,"texture",void 0);d.__decorate([c.parameter()],r.prototype,"transparent",void 0);d.__decorate([c.parameter()],
r.prototype,"opaqueOverride",void 0);d.__decorate([c.parameter()],r.prototype,"castShadows",void 0);g.CommonMaterialParameters=y;g.ComponentMaterial=l;g.ComponentParametersUniform=z;g.ComponentParametersVarying=r;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});