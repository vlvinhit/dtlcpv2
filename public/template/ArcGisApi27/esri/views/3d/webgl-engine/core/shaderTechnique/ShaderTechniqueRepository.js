// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/NestedMap","./ShaderTechniqueConfiguration"],function(h,k,l,m){let r=function(){function g(a){this._context=a;this._perConstructorInstances=new l.NestedMap;this._frameCounter=0;this._keepAliveFrameCount=-1}var e=g.prototype;e.destroy=function(){this._perConstructorInstances.forEach(a=>a.forEach(c=>c.technique.destroy()));this._perConstructorInstances.clear()};e.acquire=function(a,c=n){const b=c.key;let d=this._perConstructorInstances.get(a,
b);if(null==d){const f=new a(this._context,c,()=>this.release(f));d=new p(f);this._perConstructorInstances.set(a,b,d)}++d.refCount;return d.technique};e.releaseAndAcquire=function(a,c,b){if(null!=b){if(c.key===b.key)return b;this.release(b)}return this.acquire(a,c)};e.release=function(a){null==a||this._perConstructorInstances.empty||(a=this._perConstructorInstances.get(a.constructor,a.key),null!=a&&(--a.refCount,0===a.refCount&&(a.refZeroFrame=this._frameCounter)))};e.frameUpdate=function(){this._frameCounter++;
-1!==this._keepAliveFrameCount&&this._perConstructorInstances.forEach((a,c)=>{a.forEach((b,d)=>{0===b.refCount&&b.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(b.technique.destroy(),this._perConstructorInstances.delete(c,d))})})};e.reloadAll=async function(){const a=[];this._perConstructorInstances.forEach((c,b)=>{a.push((async(d,f)=>{if(f=f.shader)await f.reload(),d.forEach(q=>q.technique.reload(this._context))})(c,b))});await Promise.all(a)};k._createClass(g,[{key:"viewingMode",get:function(){return this._context.viewingMode}},
{key:"constructionContext",get:function(){return this._context}}]);return g}(),p=k._createClass(function(g){this.technique=g;this.refZeroFrame=this.refCount=0});const n=new m.ShaderTechniqueConfiguration;h.ShaderTechniqueRepository=r;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});