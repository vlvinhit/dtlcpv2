// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/PooledArray ../../../../core/screenUtils ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../ViewingMode ../../support/geometryUtils/ray ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtils".split(" "),function(C,D,K,y,z,L,v,M,u,
N,F,x,q,E){function G(m){A&&A.viewingMode===m||(A=x.newIntersector(m));return A}let Q=function(){function m(a,b,c){this.viewingMode=a;this._forEachLayer=b;this._view=c;this._externalIntersectionHandlers=new K;this._tolerance=x.DEFAULT_TOLERANCE;this._tmpRay=M.create();this._tmpRegion=v.create();this._validateHUDIntersector=x.newIntersector(this.viewingMode);this._validateHUDIntersector.options.hud=!1}var g=m.prototype;g.intersectScreen=function(a,b,c){return this.intersectRay(this._getPickRay(a,this._tmpRay),
G(this.viewingMode),b,c)};g.intersectScreenFreePointFallback=function(a,b,c){return this.intersectRayFreePointFallback(this._getPickRay(a,this._tmpRay),b,c)};g.intersectRayFreePointFallback=function(a,b,c){return this.intersectRay(a,G(this.viewingMode),b,c)||this._intersectRayFreePointLocal(a,b)};g.intersectRay=function(a,b,c,f){b.options.selectionMode=!1;b.options.store=q.StoreResults.MIN;this.computeIntersection(a,b,f);return b.results.min?b.results.min.getIntersectionPoint(c):!1};g.getCenterRayWithSubpixelOffset=
function(a,b,c=.5,f=.5){a.getRenderCenter(w,c,f);w[0]+=.0466;w[1]-=.0123;return F.fromRenderAtEye(a,w,b)};g.intersectIntersectorScreen=function(a,b,c){this.computeIntersection(this._getPickRay(a,this._tmpRay),b,c)};g.intersectToolIntersectorScreen=function(a,b,c){a=this._getPickRay(a,this._tmpRay);this.intersectToolIntersectorRay(a,b,c)};g.intersectToolIntersectorRay=function(a,b,c){b.options.selectionMode=!0;this.computeIntersection(a,b,c);const f=b.results.min;this._view.basemapTerrain&&this._view.basemapTerrain.opaque||
E.isValidIntersectorResult(f)&&f.intersector!==q.IntersectorType.TERRAIN||(b.options.selectionMode=!1,this.computeIntersection(a,b,c))};g.setTolerance=function(a=x.DEFAULT_TOLERANCE){this._tolerance=a};g.addIntersectionHandler=function(a){this._externalIntersectionHandlers.push(a);this._externalIntersectionHandlers.sort((b,c)=>b.type===q.IntersectorType.TERRAIN?1:c.type===q.IntersectorType.TERRAIN?-1:0)};g.removeIntersectionHandler=function(a){null!=this._externalIntersectionHandlers.removeUnordered(a)&&
this._externalIntersectionHandlers.sort((b,c)=>b.type===q.IntersectorType.TERRAIN?1:c.type===q.IntersectorType.TERRAIN?-1:0)};g._getPickRay=function(a,b){return F.fromScreen(this._view.state.camera,a,b)};g._intersectRayFreePointLocal=function(a,b){if(this.viewingMode!==N.ViewingMode.Local||null==a)return!1;z.add(b,a.origin,z.normalize(u.sv3d.get(),a.direction));return!1};g.intersectElevationFromScreen=function(a,b,c=0,f=null){return this._intersectElevation(this._getPickRay(a,this._tmpRay),b,c,f)};
g._intersectElevation=function(a,b,c=0,f=null){if(null==a)return null;var e=null!=b?b.mode:"absolute-height",l=b?.offset??0,n="on-the-ground"!==e?l+c:0;b=n/this._view.renderCoordsHelper.unitInMeters;if("absolute-height"===e)return this._view.renderCoordsHelper.intersectInfiniteManifold(a,n,B)?(c=this._view.computeMapPointFromVec3d(B),c.z??(c.z=0),c.z-=l,c):null;l=this._view.state.camera;const p=y.castRenderScreenPointArray3(u.sv3d.get());l.projectToRenderScreen(a.origin,p);n=new H(null,this._forEachLayer);
const r=this._view.slicePlane,t=null!=r?E.sliceFilterPredicate(r):null,h=x.newIntersector(this.viewingMode);h.options.store=q.StoreResults.MIN;h.options.verticalOffset=b;b=a.origin;a=z.add(u.sv3d.get(),b,a.direction);h.reset(b,a,l);h.point=p;const k=f?"type"in f&&"graphics"===f.type?d=>d.layerUid!==f.uid:d=>d.graphicUid!==f.uid:null;switch(e){case "relative-to-scene":h.intersect(n.layers,p,this._tolerance,null,d=>(!k||k(d))&&!!d.lastValidElevationBB);this._externalIntersectionHandlers.forAll(d=>{d.type!==
q.IntersectorType.I3S&&d.type!==q.IntersectorType.TERRAIN||d.intersect(h,d.slicePlaneEnabled?t:null,h.rayBegin,h.rayEnd,p)});break;case "on-the-ground":case "relative-to-ground":this._externalIntersectionHandlers.forAll(d=>{d.isGround&&d.intersect(h,d.slicePlaneEnabled?t:null,h.rayBegin,h.rayEnd,p)})}return h.results.min.getIntersectionPoint(B)?(e=this._view.computeMapPointFromVec3d(B),e.z=c,e):null};g.computeIntersection=function(a,b,c){if(null!=a){var f=this._view.state.camera,e=y.castRenderScreenPointArray3(u.sv3d.get());
f.projectToRenderScreen(a.origin,e);var l=new H(c,this._forEachLayer);b.options.selectOpaqueTerrainOnly=!c||!("include"in c||"exclude"in c);var n=a.origin,p=z.add(u.sv3d.get(),a.origin,a.direction);b.reset(n,p,f);b.intersect(l.layers,e,this._tolerance);a=this._view.slicePlane;var r=null!=a?E.sliceFilterPredicate(a):null;b.intersect(l.sliceableLayers,e,this._tolerance,r);var t=c&&(c.requiresGroundFeedback||c.enableDraped);this._externalIntersectionHandlers.forAll(h=>{var k=h.layerUid;const d=Array.isArray(k);
k=d?k:[k];d&&(b.options.filteredLayerUids=[]);let I=!1;for(const J of k)l.filterLayerUid(J)?I=!0:d&&b.options.filteredLayerUids.push(J);b.options.isFiltered=!I;(h.isGround&&t||!b.options.isFiltered)&&h.intersect(b,h.slicePlaneEnabled?r:null,n,p,e)});a=u.sv3d.get();f=this._view.basemapTerrain;if(c&&c.enableDraped&&null!=f.spatialReference&&b.results.ground.getIntersectionPoint(a)){c=f.overlayManager.renderer;const h=this._view.renderCoordsHelper.spatialReference,k=u.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(a,
k,f.spatialReference);k[2]=this._view.elevationProvider?.getElevation(a[0],a[1],a[2],h,"ground")??0;c.intersect(b,k,b.results.ground,d=>l.filterRenderGeometry(d))}b.sortResults();this._processHUDResults(b)}};g._processHUDResults=function(a){var b=a.results.hud;v.copy(this._tmpRegion,v.NEGATIVE_INFINITY);const c=this._view.state.camera,f=[],e=this._tmpRegion;var l=k=>{const d=new O(k);c.projectToRenderScreen(k.target.center,d.screenPoint);d.screenPoint[0]=Math.floor(d.screenPoint[0]);d.screenPoint[1]=
Math.floor(d.screenPoint[1]);f.push(d);v.expandPointInPlace(e,d.screenPoint)};a.sortResults(b.all);null!=b.min.dist&&l(b.min);for(var n of b.all)b.min.target.object!==n.target.object&&b.max.target.object!==n.target.object&&l(n);null!=b.max.dist&&b.max.target.object!==b.min.target.object&&l(b.max);if(f.length){e[0]===e[2]&&(e[2]+=1);e[1]===e[3]&&(e[3]+=1);b=c.fullWidth;l=c.fullHeight;var p=Math.max(0,e[0]-1),r=Math.max(0,e[1]-1);n=Math.min(v.width(e)+2,b-p);var t=Math.min(v.height(e)+2,l-r),h=new Uint8Array(n*
t*4);this._view._stage.renderer.readHUDVisibility(p,r,n,t,h);p=!0;r=null==a.results.max.dist;t=0;for(const k of f)for(const d of P)if(h[4*(Math.min(k.screenPoint[0]+d[0],b)-e[0]+(Math.min(k.screenPoint[1]+d[1],l)-e[1])*n)]){p&&(a.results.min.copy(k.result),p=!1);r&&a.results.max.copy(k.result);a.options.store===q.StoreResults.ALL&&a.results.all.splice(t++,0,k.result);break}}};return D._createClass(m)}();const P=(()=>{const m=[];for(let g=-1;1>=g;g++)for(let a=-1;1>=a;a++)m.push([a+1,g+1]);return m})();
let O=D._createClass(function(m){this.result=m;this.screenPoint=y.createRenderScreenPointArray3()}),A,H=function(){function m(a,b){this.layers=[];this.sliceableLayers=[];this.include=a?.include;this.exclude=a?.exclude;b(c=>{c.pickable&&this.filterLayerUid(c.apiLayerUid)&&(c.sliceable?this.sliceableLayers:this.layers).push(c)})}var g=m.prototype;g.filterLayerUid=function(a){const {include:b,exclude:c}=this;return null==a?null==b&&null==c:(null==b||b.has(a))&&(null==c||!c.has(a))};g.filterRenderGeometry=
function(a){return this.filterLayerUid(a.layerUid)};return D._createClass(m)}();const B=L.create(),w=y.createRenderScreenPointArray3();C.SceneIntersectionHelper=Q;C.isIntersectionHandler=function(m){return"object"===typeof m&&"intersect"in m};Object.defineProperty(C,Symbol.toStringTag,{value:"Module"})});