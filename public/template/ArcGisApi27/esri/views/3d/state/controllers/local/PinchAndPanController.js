// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/mathUtils ../../../../../core/screenUtils ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/Error ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec2 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/axisAngle ../../../../../geometry/support/plane ../../../camera/constraintUtils ../../../camera/constraintUtils/ConstraintTypes ../../../camera/constraintUtils/InteractionType ../../../camera/constraintUtils/TiltMode ../../../input/util ../InteractiveController ../momentum/PanPlanarMomentumController ../momentum/RotationMomentumController ../momentum/ZoomPlanarMomentumController ../../utils/navigationUtils ../../../webgl-engine/lib/Camera ../../../../navigation/PanPlanarMomentumEstimator ../../../../navigation/RotationMomentumEstimator ../../../../navigation/ZoomMomentumEstimator".split(" "),
function(r,y,D,E,q,T,U,V,W,X,F,G,b,h,H,m,n,I,t,J,z,K,L,M,N,d,O,P,Q,R){const A=h.fromValues(0,0,1);var S=16/180*Math.PI;r.PinchAndPanController=function(B){function u(){var a=B.apply(this,arguments)||this;a._rotationValueSmooth=new z.ExponentialFalloff(.05);a._scalingValueSmooth=new z.ExponentialFalloff(.05);a._planeHorizontal=m.create();a._planeVertical=m.create();a._rotationMomentumEstimator=new Q.RotationMomentumEstimator;a._panMomentumEstimator=new P.PanPlanarMomentumEstimator(300,12,.9);a._zoomMomentumEstimator=
new R.ZoomMomentumEstimator;a._beginRadius=0;a._beginCenter=h.create();a._beginAngle=0;a._tmpPoints=[];a._panMode=d.NavigationMode.Horizontal;a._beginCenterScreen=q.createScreenPointArray();a._tmpCentroid3d=h.create();a._tmpCentroid2d=q.createScreenPointArray();a._tmp2d=q.createScreenPointArray();a._pointerCount=0;a._constraintOptions={selection:I.ConstraintTypes.ALL,interactionType:t.InteractionType.NONE,interactionFactor:0,interactionStartCamera:new O.Camera,interactionDirection:null,tiltMode:J.TiltMode.TUMBLE};
return a}y._inherits(u,B);var v=u.prototype;v.begin=function(a){if(this.active){var f=this.view.navigation.momentumEnabled;this._zoomMomentumEstimator.enabled=f;this._rotationMomentumEstimator.enabled=f;this._panMomentumEstimator.enabled=f;this._beginRadius=a.radius;this._pointerCount=a.pointers.size;this._beginAngle=a.angle;this._rotationValueSmooth.reset();this._scalingValueSmooth.reset();q.screenPointObjectToArray(a.center,this._beginCenterScreen);m.fromNormalAndOffset(A,0,this._planeHorizontal);
var c=h.create();f=this._intersectionHelper.intersectScreenFreePointFallback(this._beginCenterScreen,c,0===this.view.map.ground.opacity?d.contentIntersectorOptions:{});var g=h.create();b.negate(g,this.startCamera.viewForward);var e=h.create();b.copy(e,A);var l=b.dot(g,e);this._panMode=E.asinClamped(0>l?-l:l)>=S?d.NavigationMode.Horizontal:d.NavigationMode.Vertical;var k=Math.min(d.PAN_DISTANCE_MODIFIER,1/Math.abs(b.dot(e,this.startCamera.viewForward)))*Math.max(Math.abs(this.view.camera.position.z),
d.MIN_HEIGHT_LIMIT);m.setOffsetFromPoint(this._planeHorizontal,this._planeHorizontal,c);this.startCamera.aboveGround||m.negate(this._planeHorizontal,this._planeHorizontal);var p=h.create(),w=h.create(),x=h.create();b.subtract(p,c,this.currentCamera.eye);var C=b.length(p);b.normalize(p,p);this._panMode===d.NavigationMode.Vertical?(b.scale(e,e,l),b.subtract(this._planeVertical,g,e),b.normalize(this._planeVertical,this._planeVertical),m.setOffsetFromPoint(this._planeVertical,this._planeVertical,c),c=
this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm,this._beginCenterScreen[0],this._beginCenterScreen[1],this.view.state.camera,d.SCREEN_PIXEL_AREA),k=null!=c?c:k,k=f?Math.min(k,C):k,b.copy(x,b.add(w,this.currentCamera.eye,b.scale(w,p,k))),this._planeVertical[3]=-b.dot(this._planeVertical,x),this._computePlanePoints(a.pointers,this._planeVertical,this.startCamera,this._tmpPoints)):(b.copy(x,b.add(w,this.currentCamera.eye,b.scale(w,p,f?C:k))),this._planeHorizontal[3]=-b.dot(m.normal(this._planeHorizontal),
x),this._computePlanePoints(a.pointers,this._planeHorizontal,this.startCamera,this._tmpPoints));d.centroid(this._tmpPoints,this._beginCenter);this._constraintOptions.interactionStartCamera?.copyFrom(this.startCamera)}};v.update=function(a){if(this.active){this.currentCamera.copyFrom(this.startCamera);var f=1<a.pointers.size,c=this._panMode===d.NavigationMode.Horizontal?this._planeHorizontal:this._planeVertical,g=this._beginCenter;if(f){var e=this._beginRadius/a.radius;this._scalingValueSmooth.gain=
.001875*Math.min(Math.max(a.radius,40),120);this._scalingValueSmooth.update(e);d.applyZoomToPoint(this.currentCamera,g,this._scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance);this._zoomMomentumEstimator.add(this._scalingValueSmooth.value,.001*a.timestamp);this._constraintOptions.interactionType=t.InteractionType.ZOOM;this._constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(a.radius-this._beginRadius));n.applyAll(this.view,this.currentCamera,this._constraintOptions)}this._computePlanePoints(a.pointers,
c,this.currentCamera,this._tmpPoints);d.centroid(this._tmpPoints,this._tmpCentroid3d);q.screenPointObjectToArray(a.center,this._tmpCentroid2d);d.applyPanPlanar(this.currentCamera,g,this._tmpCentroid3d);this._panMomentumEstimator.add(this._tmpCentroid2d,this._tmpCentroid3d,.001*a.timestamp);this._constraintOptions.interactionType=t.InteractionType.PAN;this._constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(G.distance(this._beginCenterScreen,this._tmpCentroid2d));n.applyAll(this.view,
this.currentCamera,this._constraintOptions);f&&(f=this._planeHorizontal,c=this._rotationValueSmooth.value,e=d.normalizeRotationDelta(a.angle-c),this._rotationValueSmooth.gain=.00125*Math.min(Math.max(a.radius,40),120),this._rotationValueSmooth.update(c+e),c=this._rotationValueSmooth.value-this._beginAngle,this._rotationMomentumEstimator.add(c,.001*a.timestamp),d.applyRotation(this.currentCamera,g,H.wrapAxisAngle(f,c)),this._constraintOptions.interactionType=t.InteractionType.TUMBLE,this._constraintOptions.interactionFactor=
n.pixelDistanceToInteractionFactor(Math.abs(a.radius*c)),n.applyAll(this.view,this.currentCamera,this._constraintOptions));this.commitCamera()}};v.end=function(a){a.pointers.size===this._pointerCount&&this.update(a);this.finishController();return(a=this._zoomMomentumEstimator.evaluateMomentum())?new N.ZoomPlanarMomentumController({view:this.view,momentum:a,zoomCenter:this._beginCenter}):(a=this._rotationMomentumEstimator.evaluateMomentum())?new M.RotationMomentumController({view:this.view,momentum:a,
center:this._beginCenter,axis:m.normal(this._planeHorizontal)}):(a=this._panMomentumEstimator.evaluateMomentum())?new L.PanPlanarMomentumController({view:this.view,momentum:a}):null};v._computePlanePoints=function(a,f,c,g){g.length=a.size;const e=this._tmp2d;let l=0;a.forEach(k=>{e[0]=k.x;e[1]=k.y;void 0===g[l]&&(g[l]=h.create());d.intersectPlaneFromScreenPointAtEye(f,c,e,g[l]);l+=1});return g};y._createClass(u,[{key:"_intersectionHelper",get:function(){return this.view.sceneIntersectionHelper}}]);
return u}(K.InteractiveController);r.PinchAndPanController=D.__decorate([F.subclass("esri.views.3d.state.controllers.local.PinchAndPanController")],r.PinchAndPanController);Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});