// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/ellipsoidUtils ./atmosphereUtils ../../../chunks/Fog.glsl ./FogTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(c,m,e,u,v,k,F,G,H,w,f,n,x,y,z,A,p,B,C,D){c.Fog=function(q){function g(a){var b=q.call(this,a)||this;b._passParameters=new z.FogPassParameters;b._vao=C.createQuadVAO(a.context.renderContext.rctx,B.Pos2Tex);b._technique=new A.FogTechnique(a);a=x.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=a.radius;b._atmosphereRadius=a.radius+y.atmosphereHeight;return b}m._inherits(g,q);var l=g.prototype;l.destroy=function(){this._technique.release();this._vao.dispose()};l.render=function(a,
b){this._update(a,b);if(!(0>=this._passParameters.fogAmount)){var d=this._technique;if(d.compiled){var h=a.offscreenRenderingHelper;h.renderDepthDetached(()=>{this._passParameters.depthTexture=h.depthTexture;const E=a.rctx.bindTechnique(d,this._passParameters,a.bindParameters);this._renderFog(E,a)})}else this.context.requestRender()}};l._renderFog=function(a,b){b=b.rctx;b.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);b.drawArrays(D.PrimitiveType.TRIANGLE_STRIP,0,4)};l._update=
function(a,b){var d=a.bindParameters.camera;f.normalize(r,d.eye);a=Math.max(0,f.dot(r,a.bindParameters.lighting.mainLight.direction));const h=b.color;f.scale(t,h,.1);f.lerp(this._passParameters.fogColor,t,h,a);d=f.length(d.eye);this._passParameters.atmosphereC=d*d-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.fogAmount=(1-v.smoothstep(.95*p.weatherHeightLimit,1*p.weatherHeightLimit,Math.abs(d-this._planetRadius)))*b.amount;this._passParameters.fogStrength=b.strength};g.isSupported=
function(a){return a.capabilities.depthTexture};m._createClass(g,[{key:"strength",get:function(){return this._passParameters.fogStrength},set:function(a){this._passParameters.fogStrength=a}}]);return g}(u);e.__decorate([k.property({constructOnly:!0})],c.Fog.prototype,"context",void 0);e.__decorate([k.property({constructOnly:!0})],c.Fog.prototype,"view",void 0);e.__decorate([k.property({constructOnly:!0})],c.Fog.prototype,"rctx",void 0);e.__decorate([k.property({constructOnly:!0})],c.Fog.prototype,
"viewingMode",void 0);c.Fog=e.__decorate([w.subclass("esri.views.3d.environment.Fog")],c.Fog);e=m._createClass(function(){this.color=n.create();this.amount=this.strength=0});const r=n.create(),t=n.create();c.FogParameters=e;Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});