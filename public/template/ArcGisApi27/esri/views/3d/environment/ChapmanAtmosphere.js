// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/Handles ../../../core/mathUtils ../../../core/reactiveUtils ../../../chunks/vec2 ../../../chunks/vec2f64 ../../../chunks/vec3 ../../../chunks/vec4 ../../../geometry/support/Ellipsoid ./AtmosphereType ./atmosphereUtils ./ChapmanAtmosphereTechnique ./ChapmanAtmosphereTechniqueConfiguration ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),function(r,w,x,h,t,u,y,n,z,k,A,g,m,
B,C,D,E){let F=function(){function p(a,b){this._view=a;this.type=A.AtmosphereType.Realistic;this._handles=new x;this._passParameters=new m.ChapmanAtmospherePassParameters;this._rootTileElevationMin=NaN;this._lowerBoundEarthRadius=k.earth.radius;this._fadeHaze=0;this._tmpScale=y.create();this._updateRadius(k.earth.radius);a=b.renderContext.rctx;this._updateRootTileElevationBounds();this._handles.add([t.watch(()=>this._view?.basemapTerrain?.rootTileElevationBounds,()=>this._view?.basemapTerrain?this._updateRootTileElevationBounds():
null),t.watch(()=>this._view?.basemapTerrain?.visibleElevationBounds,()=>this._view?.basemapTerrain?this._updateVisibleElevationBounds():null)]);const c=new B.ChapmanAtmosphereTechniqueConfiguration;c.haze=!1;this._atmosphereTechnique=b.techniqueRepository.acquire(m.ChapmanAtmosphereTechnique,c);c.haze=!0;this._atmosphereHazeTechnique=b.techniqueRepository.acquire(m.ChapmanAtmosphereTechnique,c);c.reduced=!0;c.haze=!1;this._atmosphereReducedTechnique=b.techniqueRepository.acquire(m.ChapmanAtmosphereTechnique,
c);c.haze=!0;this._atmosphereHazeReducedTechnique=b.techniqueRepository.acquire(m.ChapmanAtmosphereTechnique,c);this._vao=D.createQuadVAO(a,C.Pos2Tex)}var f=p.prototype;f.destroy=function(){this._handles.destroy();this._atmosphereTechnique.release();this._atmosphereHazeTechnique.release();this._atmosphereReducedTechnique.release();this._atmosphereHazeReducedTechnique.release();this._vao.dispose()};f.render=function(a,b){this._render(a,b?this._atmosphereTechnique:this._atmosphereReducedTechnique,a.offscreenRenderingHelper.depthTexture,
b,!1)};f.renderHaze=function(a,b,c){this._fadeHaze=b;this._render(a,c?this._atmosphereHazeTechnique:this._atmosphereHazeReducedTechnique,a.offscreenRenderingHelper.linearDepthTexture,c,!0)};f._render=function(a,b,c,d,q){if(null!=c){var l=a.offscreenRenderingHelper;this._update(a.bindParameters.camera);this._passParameters.depthTexture=c;var e=l.background.color;n.set(this._passParameters.backgroundColor,e[0]*e[3],e[1]*e[3],e[2]*e[3]);var v=a.rctx.bindTechnique(b,this._passParameters,a.bindParameters);
d?l.renderDepthDetached(()=>this._renderCommon(v,a)):(b=a.rctx.getViewport(),d=n.length(a.bindParameters.camera.eye)-k.earth.radius,d<g.atmosphereHeight?(d=Math.min(1,Math.max(0,d/g.atmosphereHeight)),e=q?h.lerp(.4,.5,d):h.lerp(.2,.3,d)):(d=Math.min(1,Math.max(0,(d-g.atmosphereHeight)/(15*g.atmosphereHeight))),e=q?h.lerp(.5,1,d):h.lerp(.3,.6,d)),d=Math.floor(e*a.bindParameters.camera.fullViewport[2]),e=Math.floor(e*a.bindParameters.camera.fullViewport[3]),a.rctx.setViewport(0,0,d,e),l.renderToTargets(()=>
this._renderCommon(v,a),l.tmpColor,l.tmpDepth,[0,0,0,1],!1,!1),a.rctx.setViewport(b.x,b.y,b.width,b.height),u.set(this._tmpScale,d/a.bindParameters.camera.fullViewport[2],e/a.bindParameters.camera.fullViewport[3]),l.compositeAtmosphereToMain(a.bindParameters,q,c,this._tmpScale))}};f._renderCommon=function(a,b){null!=this._vao&&(b.rctx.bindVAO(this._vao),a.assertCompatibleVertexAttributeLocations(this._vao),b.rctx.drawArrays(E.PrimitiveType.TRIANGLE_STRIP,0,4))};f._adjustRadiusForTesselation=function(a){return a*
Math.cos(Math.PI/16/16)};f._updateRootTileElevationBounds=function(){const a=this._view.basemapTerrain.rootTileElevationBounds.min;a!==this._rootTileElevationMin&&(this._rootTileElevationMin=a,this._lowerBoundEarthRadius=k.earth.radius,this._updateVisibleElevationBounds())};f._updateVisibleElevationBounds=function(){const a=this._adjustRadiusForTesselation(k.earth.radius+this._view.basemapTerrain.visibleElevationBounds.min);a<this._lowerBoundEarthRadius&&this._updateRadius(a)};f._updateRadius=function(a){this._lowerBoundEarthRadius=
a;u.set(this._passParameters.radii,a,a+g.atmosphereHeight);this._passParameters.innerFadeDistance=2*Math.sqrt((2*a-g.innerAtmosphereDepth)*g.innerAtmosphereDepth)};f._update=function(a){if(a){a=n.squaredLength(a.eye);var b=Math.sqrt(a),c=a-this._passParameters.radii[1]*this._passParameters.radii[1],d=h.clamp((b-this._passParameters.radii[0])/g.atmosphereHeight,0,1);z.set(this._passParameters.heightParameters,b,a,c,d);this._passParameters.altitudeFade=g.computeInnerAltitudeFade(b-this._lowerBoundEarthRadius);
this._passParameters.hazeStrength=h.lerp(h.lerp(.6,1,h.smoothstep(9500,10500,b-k.earth.radius)),1,this._fadeHaze)}};p.isSupported=function(a){return a.renderContext.rctx.capabilities.depthTexture};return w._createClass(p)}();r.ChapmanAtmosphere=F;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});