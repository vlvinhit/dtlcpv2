// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../Color ../../../../../intl ../../../../../core/Accessor ../../../../../core/analysisThemeUtils ../../../../../core/has ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityFormatUtils ../../../../../core/quantityUtils ../../../../../core/reactiveUtils ../../../../../core/unitUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../support/viewUtils ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../webgl-engine/lib/Material ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(l,H,n,y,Z,L,q,aa,M,N,m,I,O,E,z,p,ba,ca,P,Q,R,J,w,S,F,A,T,B,C,U,V,W){l.AreaMeasurementVisualization=function(t){function G(a){a=t.call(this,a)||this;a._handles=new M;a._params={pathLineColor:y.toUnitRGBA(q.getAccentColor()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:y.toUnitRGBA(q.getAccentColor()),perimeterLineWidth:2,projectionLineColor:y.toUnitRGBA(q.getAccentColor()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:y.toUnitRGBA(q.getAccentColor(.5)),
areaColor2:y.toUnitRGBA(q.getContrastColor(.5)),labelDistance:25};a._path=null;a._intersectedPath=null;a._perimeter=null;a._intersectedPerimeter=null;a._projectionLines=null;a._measurementArea=null;a._areaLabel=null;a._pathLengthLabel=null;a._cursorSegmentLengthLabel=null;a._perimeterLengthLabel=null;a._pathSegments=[];a._perimeterSegments=[];a._cursorSegment=null;a._origin=w.create();a._originTransform=R.create();a._cursorPositionRenderSpace=w.create();a.messages=null;a.viewData=X;a.areaLabel=null;
a.perimeterLengthLabel=null;a.loadingMessages=!0;return a}H._inherits(G,t);var f=G.prototype;f.initialize=function(){const {analysisViewData:a,_params:b,view:d}=this;this._path=new A.LineVisualElement({view:d,attached:!0,width:b.pathLineWidth,color:b.pathLineColor,polygonOffset:!0,renderOccluded:C.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPath=new A.LineVisualElement({view:d,attached:!0,width:b.pathLineWidth,color:b.intersectingLineColor,polygonOffset:!0,renderOccluded:C.RenderOccludedFlag.OccludeAndTransparent});
this._perimeter=new A.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,color:b.perimeterLineColor,polygonOffset:!0,renderOccluded:C.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPerimeter=new A.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,color:b.intersectingLineColor,polygonOffset:!0,renderOccluded:C.RenderOccludedFlag.OccludeAndTransparent});this._projectionLines=new A.LineVisualElement({view:d,attached:!0,width:b.projectionLineWidth,color:b.projectionLineColor,
stipplePattern:U.createStipplePatternSimple(b.projectionLineStippleSize),polygonOffset:!0,renderOccluded:C.RenderOccludedFlag.OccludeAndTransparent});this._measurementArea=new T.MeasurementAreaVisualElement({view:d,attached:!0,color1:b.areaColor1,color2:b.areaColor2});const e={attached:!0,backgroundColor:q.getTextHaloColor(.6),calloutColor:q.getTextHaloColor(.5),textColor:q.getTextColor(),view:d};this._areaLabel=new F.LabelVisualElement({...e,fontSize:x.Large});this._pathLengthLabel=new F.LabelVisualElement({...e,
fontSize:x.Small});this._cursorSegmentLengthLabel=new F.LabelVisualElement({...e,fontSize:x.Small});this._perimeterLengthLabel=new F.LabelVisualElement({...e,fontSize:x.Small});this._handles.add([E.watch(()=>[a.mode,this.visible,a.unit,a.measurementData,a.cursorPoint],()=>this._update(),E.syncAndInitial),E.watch(()=>d.state?.camera,()=>this._updateLabels(),E.syncAndInitial),V.onLocaleChange(()=>this._updateMessageBundle())]);this._updateMessageBundle()};f.destroy=function(){this._measurementArea=
m.destroyMaybe(this._measurementArea);this._path=m.destroyMaybe(this._path);this._intersectedPath=m.destroyMaybe(this._intersectedPath);this._perimeter=m.destroyMaybe(this._perimeter);this._intersectedPerimeter=m.destroyMaybe(this._intersectedPerimeter);this._areaLabel=m.destroyMaybe(this._areaLabel);this._pathLengthLabel=m.destroyMaybe(this._pathLengthLabel);this._cursorSegmentLengthLabel=m.destroyMaybe(this._cursorSegmentLengthLabel);this._perimeterLengthLabel=m.destroyMaybe(this._perimeterLengthLabel);
this._projectionLines=m.destroyMaybe(this._projectionLines);this._handles=m.destroyMaybe(this._handles);this.set("view",null)};f._update=function(){if(!this.destroyed&&this.view.ready&&this.view.renderCoordsHelper){var {analysisViewData:{measurementData:a},analysisViewData:b}=this;null!=a&&(this._updateViewData(a,b.path,b.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}};f._updateViewData=
function(a,b,d){const e=b.isValidPolygon,g="geodesic"===a.actualMeasurementMode;var h=g?a.geodesicArea:a.area;let c=1;h&&(h=this._toPreferredAreaUnit(h,this.analysisViewData.unit),c=N.nextHighestPowerOfTen(Math.sqrt(h.value)/Math.sqrt(300)),c*=Math.sqrt(z.convertUnit(1,h.unit,"square-meters")),c/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:e,path:b,pathVersion:b.version,cursorPoint:d,measurementData:a,mode:a.actualMeasurementMode,positionsGeographic:a.positionsGeographic,
positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:g?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:g?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:g?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:e?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:c})};f._updateOrigin=
function(){S.midpoint(this.viewData.positionsRenderCoords,this._origin);Q.fromTranslation(this._originTransform,this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform};f._createSegments=function(a){const b=this.viewData,d=b.path,e=this.view.renderCoordsHelper.spatialReference,g=b.mode,h=[],c=[],k=[],u=b.validMeasurement?d.numVertices:d.numVertices-1;for(let r=0;r<u;++r){const v=b[a][r],K=b[a][(r+1)%d.numVertices];let D=null;switch(g){case "euclidean":D=
new B.EuclideanSegment(v,K);break;case "geodesic":D=new B.GeodesicSegment(v,K,e)}b.intersectingSegments.has(r)?k.push(D):c.push(D);h.push(D)}return{all:h,nonIntersecting:c,intersecting:k}};f._updatePathSegments=function(){const {view:{renderCoordsHelper:a},viewData:b,visible:d}=this,e=this._createSegments("positionsRenderCoords"),{cursorPoint:g,mode:h,path:c}=b;var k=!c.isValidPolygon;const u=a.spatialReference;this._cursorSegment=null;if(0<c.numVertices&&k&&null!=g&&a.toRenderCoords(g,this._cursorPositionRenderSpace)){k=
b.positionsRenderCoords[c.numVertices-1];const r=this._cursorPositionRenderSpace;let v=null;switch(h){case "euclidean":v=new B.EuclideanSegment(k,r);break;case "geodesic":v=new B.GeodesicSegment(k,r,u)}e.nonIntersecting.push(v);this._cursorSegment=v}this._path.setGeometryFromSegments(e.nonIntersecting,this._origin);this._path.visible=d;this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin);this._intersectedPath.visible=d;this._pathSegments=e.all};f._updatePerimeterSegments=function(){const a=
this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPerimeter.visible=a;this._perimeterSegments=b.all};f._updateArea=function(){const a=this.viewData;switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}};
f._updateAreaEuclidean=function(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=[a.checkerSize,a.checkerSize],this._measurementArea.visible=b):this._measurementArea.visible=!1};f._updateAreaGeodesic=function(){this._measurementArea.visible=!1};f._updateProjectionLines=function(){const a=this.viewData,
b=this.visible,d=a.path;var e=a.mode;if(0<d.numVertices&&a.validMeasurement&&"euclidean"===e){e=[];for(let g=0;g<d.numVertices;++g){const h=w.create();J.subtract(h,a.positionsRenderCoords[g],this._origin);const c=w.create();J.subtract(c,a.positionsFittedRenderCoords[g],this._origin);e.push([h,c])}this._projectionLines.geometry=e;this._projectionLines.visible=b}else this._projectionLines.geometry=null,this._projectionLines.visible=!1};f._updateLabels=function(){if(!this.destroyed){var {viewData:a}=
this,{measurementData:b,mode:d,path:e}=a;if(e){var g=!e.isValidPolygon,h=this.visible,c=this._formatAreaLabel(this.messages,"geodesic"===d?b.geodesicArea:b.area,this.analysisViewData.unit);null!=c?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=c,this._areaLabel.visible=a.validMeasurement&&0===a.intersectingSegments.size&&h):this._areaLabel.visible=!1;this._set("areaLabel",c);c=this._formatLengthLabel(this.messages,"geodesic"===d?b.geodesicPathLength:b.pathLength,
this.analysisViewData.unit);if(null!=c&&0<=a.pathLengthLabelSegmentIndex&&a.pathLengthLabelSegmentIndex<this._pathSegments.length){var k=this._pathSegments[a.pathLengthLabelSegmentIndex],u=null!=this._cursorSegment?this._cursorSegment:Y;this._pathLengthLabel.distance=this._params.labelDistance;this._pathLengthLabel.geometry={type:"corner",left:k,right:u};this._pathLengthLabel.text=c;this._pathLengthLabel.visible=g&&0<e.numVertices&&h}else this._pathLengthLabel.visible=!1;c="geodesic"===d?a.measurementData.geodesicCursorSegmentLength:
a.measurementData.cursorSegmentLength;null!=c?(k=this._formatLengthLabel(this.messages,c,this.analysisViewData.unit),this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=null!=this._cursorSegment?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=k,this._cursorSegmentLengthLabel.visible=g&&0!==c.value&&h):this._cursorSegmentLengthLabel.visible=
!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1);this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);g="geodesic"===a.mode;c=this._formatLengthLabel(this.messages,g?b.geodesicPathLength:b.perimeterLength,this.analysisViewData.unit);this._set("perimeterLengthLabel",c);if(a.validMeasurement&&0===a.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance;this._perimeterLengthLabel.anchor=
"top";this._perimeterLengthLabel.text=c;k=this._perimeterLengthLabel.visible=!0;for(c=0;c<a.path.numVertices;++c)if(k=(a.perimeterLengthLabelSegmentIndex+c)%a.path.numVertices,u=g?this._pathSegments[k]:this._perimeterSegments[k],k=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._perimeterLengthLabel.overlaps(this._areaLabel))k=!1;else break;this._perimeterLengthLabel.visible=k&&h}else this._perimeterLengthLabel.visible=!1}}};f._toPreferredAreaUnit=function(a,
b){return O.toUnit(a,this._preferredAreaUnit(a,b))};f._preferredAreaUnit=function(a,b){switch(b){case "metric":return z.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return z.preferredImperialAreaUnit(a.value,a.unit);default:return b}};f._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return z.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return z.preferredImperialLengthUnit(a.value,a.unit);default:return b}};f._deriveLengthUnitFromAreaUnit=
function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";
case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};f._formatAreaLabel=function(a,b,d){return a&&b&&I.formatDecimal(a,b,this._preferredAreaUnit(b,d))};f._formatLengthLabel=function(a,b,d){return a&&b&&I.formatDecimal(a,b,this._preferredLengthUnit(b,d))};f._updateMessageBundle=function(){this.loadingMessages=!0;W.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})};H._createClass(G,[{key:"visible",
get:function(){return this.analysisViewData.visible}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}}]);return G}(L);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"view",void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"messages",void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,
"analysis",void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"viewData",void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"analysisViewData",void 0);n.__decorate([p.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"areaLabel",void 0);n.__decorate([p.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"perimeterLengthLabel",void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"loadingMessages",
void 0);n.__decorate([p.property()],l.AreaMeasurementVisualization.prototype,"visible",null);l.AreaMeasurementVisualization=n.__decorate([P.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],l.AreaMeasurementVisualization);var x;(function(t){t[t.Small=12]="Small";t[t.Large=16]="Large"})(x||(x={}));const X={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,
positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Y=new B.EuclideanSegment(w.create(),w.create());Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});