// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../layers/graphics/dehydratedFeatures ./LineOfSightIntersectionResult ../../layers/i3s/Intersector ../../support/geometryUtils/ray ../../terrain/Intersector ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(k,w,q,A,B,x,O,P,Q,C,g,h,m,D,E,r,F,G,H,I,n,J){k.LineOfSightRayIntersector=function(y){function t(b){b=y.call(this,b)||this;b._terrainIntersectionOptionsLayerUids=new Set(["terrain"]);return b}w._inherits(t,y);var p=t.prototype;p.initialize=function(){this.intersector=I.newIntersector(this.view.state.viewingMode);this.intersector.options.hud=!1;this.intersector.options.store=n.StoreResults.MIN};p.getScreenPointIntersection=function(b){b=B.screenPointObjectToArray(b,D.sv2d.get());b=G.fromScreen(this.view.state.camera,
b,u);return this._getRayIntersection(b)};p._getRayIntersection=function(b,d){if(null==b||null==this.view.sceneIntersectionHelper)return null;this.intersector.options.store=n.StoreResults.MIN;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(b,this.intersector,d);var a=this.intersector.results.min;d=h.create();if(!a.getIntersectionPoint(d))return null;const e=this.view.renderCoordsHelper.fromRenderCoords(d,this.view.spatialReference),f=h.clone(a.normal);if(F.isI3sIntersectorResult(a))return new r.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,
id:`${a.target.layerUid}/${a.target.nodeIndex}/${a.target.componentIndex}`,mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:null});if(H.isTerrainIntersectorResult(a))return new r.LineOfSightIntersectionResult({type:n.IntersectorType.TERRAIN,id:a.target.lij.slice(),mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:null});a=J.toGraphic(a,this.view);if(null!=a){const l=a.layer;var c=a.sourceLayer;if(c)switch(c.type){case "scene":c=E.getObjectId(a,c.objectIdField);break;default:c=a.uid}else c=
a.uid;return new r.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,id:`${l?.uid}/${c}`,mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:a})}return null};p.updateFromGroundIntersection=function(b,d,a){var e=K;const f=L,c=M,l=N;g.copy(f,b);this.view.renderCoordsHelper.worldUpAtPosition(f,c);g.normalize(c,c);const v=this.view.basemapTerrain.visibleElevationBounds,z=0<=d?1:-1;g.scale(l,c,z*((v?Math.abs(v.max-v.min):100)+Math.abs(d)));g.add(e,f,l);m.fromPoints(e,f,u);e=this._getRayIntersection(u,
{include:this._terrainIntersectionOptionsLayerUids});if(null!=e)return g.scale(l,c,z*d),g.add(a,e.renderPoint,l),h.clone(e.normal);g.copy(a,b);return null};return w._createClass(t)}(A);q.__decorate([x.property()],k.LineOfSightRayIntersector.prototype,"view",void 0);q.__decorate([x.property()],k.LineOfSightRayIntersector.prototype,"intersector",void 0);k.LineOfSightRayIntersector=q.__decorate([C.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],k.LineOfSightRayIntersector);
const K=h.create(),L=h.create(),M=h.create(),N=h.create(),u=m.create();Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});