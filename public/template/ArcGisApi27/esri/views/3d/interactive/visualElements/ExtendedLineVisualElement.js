// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/has ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4 ../../../../chunks/vec4f32 ../../../../geometry/support/clipRay ../../../../geometry/support/frustum ../../../../geometry/support/lineSegment ../../../../geometry/support/ray ./EngineVisualElement ./LaserlineVisualElement ../../terrain/OverlayRenderer ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/Material ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/RibbonLineMaterial".split(" "),
function(f,p,z,m,h,t,x,u,E,k,v,w,F,G,H,y,I,A,B){z=function(g){function q(a){var b=g.call(this,a)||this;b._ray=v.create();b._isWorldDown=!1;b._start=h.create();b._end=h.fromValues(1,0,0);b._width=1;b._color=x.fromValues(1,0,1,1);b._polygonOffset=!1;b._writeDepthEnabled=!0;b._innerWidth=0;b._innerColor=x.fromValues(1,1,1,1);b._stipplePattern=null;b._stippleOffColor=null;b._stipplePreferContinuous=!0;b._falloff=0;b._extensionType=f.ExtensionType.LINE;b._laserlineStyle=null;b._laserlineEnabled=!1;b._renderOccluded=
y.RenderOccludedFlag.OccludeAndTransparent;b._fadedExtensions=C;b._laserline=new F.LaserlineVisualElement({view:b.view});b.applyProps(a);return b}p._inherits(q,g);var c=q.prototype;c.destroy=function(){this._laserline.destroy();p._get(p._getPrototypeOf(q.prototype),"destroy",this).call(this)};c.createObject3DResourceFactory=function(a){return{view:a,createResources:b=>this._createObject3DResources(b),destroyResources:b=>this._destroyExternalResources(b),recreateGeometry:(b,d)=>this._recreateObject3DGeometry(b,
d),cameraChanged:()=>this._updateGeometry()}};c.createDrapedResourceFactory=function(a){return{view:a,createResources:()=>this._createDrapedResources(),destroyResources:b=>this._destroyExternalResources(b),recreateGeometry:b=>this._recreateDrapedGeometry(b)}};c.updateVisibility=function(a){p._get(p._getPrototypeOf(q.prototype),"updateVisibility",this).call(this,a);this._laserline.visible=a};c.onAttachedChange=function(){this._laserline.attached=this._laserlineAttached};c.setStartEndFromWorldDownAtLocation=
function(a){this._isWorldDown=!0;m.copy(this._start,a);this.view.renderCoordsHelper.worldUpAtPosition(a,this._end);m.subtract(this._end,a,this._end);v.fromPoints(this._start,this._end,this._ray);this._updateGeometry()};c._updateMaterial=function(){const {materialParameters:a}=this;this.object3dResources.resources?.material.setParameters(a);this.drapedResources.resources?.material.setParameters(a)};c._createObject3DResources=function(a){const b=new B.RibbonLineMaterial(this.materialParameters),d=[];
this._createObject3DGeometry(b,a,d);return{material:b,geometries:d,forEach:e=>{e(b);d.forEach(e)}}};c._destroyExternalResources=function(a){a.geometries=[];a.material.dispose()};c._recreateObject3DGeometry=function(a,b){a.geometries.length=0;this._createObject3DGeometry(a.material,b,a.geometries)};c._createObject3DGeometry=function(a,b,d){a=this._createGeometry(a);d.push(a);b.addGeometry(a);this._updateVerticesObject3D(b)};c._createDrapedResources=function(){const a=new B.RibbonLineMaterial(this.materialParameters),
b=this._createDrapedGeometry(a);return{material:a,geometries:[b]}};c._recreateDrapedGeometry=function(a){a.geometries=[this._createDrapedGeometry(a.material)]};c._createDrapedGeometry=function(a){a=this._createGeometry(a);this._updateVerticesDraped(a);return new I.RenderGeometry(a)};c._createGeometry=function(a){const b=this.extensionType===f.ExtensionType.FADED,d=b?[h.create(),h.create(),h.create(),h.create()]:[h.create(),h.create()];return H.createPolylineGeometry(a,d,null,b?[1,1,1,0,1,1,1,1,1,
1,1,1,1,1,1,0]:null)};c._updateGeometry=function(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const a=this.object3dResources.object;a&&this._updateVerticesObject3D(a)}};c._updateVerticesObject3D=function(a){const b=this._lineSegment;this._updateVertexAttributesObject3D(a,b);this._laserline.intersectsLine=b};c._updateVerticesDraped=function(a){this._updateVertexAttributesDraped(a,this._lineSegment)};c._updateLineSegmentFinite=function(a){return k.fromPoints(this._start,this._end,
a)};c._updateLineSegmentInfinite=function(a,b){var d=this.view.state.camera;u.fromRay(this._ray,l);switch(a){case f.ExtensionType.LINE:l.c0=-Number.MAX_VALUE;break;case f.ExtensionType.RAY:case f.ExtensionType.GROUND_RAY:var e=this._ray.origin;a=this.view.elevationProvider.getElevation(e[0],e[1],e[2],this.view.renderCoordsHelper.spatialReference,"ground")??0;e=this.view.renderCoordsHelper.getAltitude(e);this._isWorldDown&&e<a&&m.negate(l.ray.direction,l.ray.direction);this._extensionType===f.ExtensionType.GROUND_RAY&&
null!=a&&(l.c1=Math.abs(e-a))}if(!E.intersectClipRay(d.frustum,l))return this._updateLineSegmentFinite(b);d=u.getStart(l,n);a=u.getEnd(l,J);return k.fromPoints(d,a,b)};c._updateVertexAttributesObject3D=function(a,b){const d=a.geometries[0].getMutableAttribute(A.VertexAttribute.POSITION)?.data;if(d){var e=0;for(const r of this._lineVertices(b))d[e++]=r[0],d[e++]=r[1],d[e++]=r[2];a.geometryVertexAttrsUpdated(a.geometries[0])}};c._updateVertexAttributesDraped=function(a,b){const d=a.getMutableAttribute(A.VertexAttribute.POSITION)?.data;
if(d){var e=0;for(const r of this._lineVertices(b))d[e++]=r[0],d[e++]=r[1],d[e++]=G.DRAPED_Z;a.invalidateBoundingInfo()}};c._lineVertices=function*(a){this.extensionType===f.ExtensionType.FADED?(yield k.pointAt(a,-this.fadedExtensions.start,n),yield k.pointAt(a,0,n),yield k.pointAt(a,1,n),yield k.pointAt(a,1+this.fadedExtensions.end,n)):(yield k.pointAt(a,0,n),yield k.pointAt(a,1,n))};p._createClass(q,[{key:"start",get:function(){return this._start},set:function(a){this._isWorldDown=!1;m.exactEquals(this._start,
a)||(m.copy(this._start,a),v.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"end",get:function(){return this._end},set:function(a){this._isWorldDown=!1;m.exactEquals(this._end,a)||(m.copy(this._end,a),v.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"width",get:function(){return this._width},set:function(a){a!==this._width&&(this._width=a,this._updateMaterial())}},{key:"color",get:function(){return this._color},set:function(a){t.exactEquals(a,
this._color)||(t.copy(this._color,a),this._updateMaterial())}},{key:"polygonOffset",get:function(){return this._polygonOffset},set:function(a){a!==this._polygonOffset&&(this._polygonOffset=a,this._updateMaterial())}},{key:"writeDepthEnabled",get:function(){return this._writeDepthEnabled},set:function(a){this._writeDepthEnabled!==a&&(this._writeDepthEnabled=a,this._updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(a){a!==this._innerWidth&&(this._innerWidth=
a,this._updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(a){t.exactEquals(a,this._innerColor)||(t.copy(this._innerColor,a),this._updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(a){const b=null!=a!==(null!=this._stipplePattern);this._stipplePattern=a;b?this.recreate():this._updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(a){null!=a&&null!=this._stippleOffColor&&
t.exactEquals(a,this._stippleOffColor)||(this._stippleOffColor=null!=a?x.clone(a):null,this._updateMaterial())}},{key:"stipplePreferContinuous",get:function(){return this._stipplePreferContinuous},set:function(a){a!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=a,this._updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(a){a!==this._falloff&&(this._falloff=a,this._updateMaterial())}},{key:"extensionType",get:function(){return this._extensionType},
set:function(a){a!==this._extensionType&&(this._extensionType=a,this.recreateGeometry())}},{key:"_laserlineAttached",get:function(){return this._laserlineEnabled&&null!=this._laserlineStyle&&this.attached&&!this.isDraped}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(a){this._laserlineStyle=a;this._laserline.attached=this._laserlineAttached;null!=a&&(this._laserline.style=a)}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(a){this._laserlineEnabled!==
a&&(this._laserlineEnabled=a,this._laserline.attached=this._laserlineAttached)}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(a){a!==this._renderOccluded&&(this._renderOccluded=a,this._updateMaterial())}},{key:"_normalizedRenderOccluded",get:function(){return this.isDraped&&this._renderOccluded===y.RenderOccludedFlag.OccludeAndTransparentStencil?y.RenderOccludedFlag.OccludeAndTransparent:this._renderOccluded}},{key:"fadedExtensions",get:function(){return this._fadedExtensions},
set:function(a){this._fadedExtensions=a??C;this.recreateGeometry()}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._normalizedRenderOccluded,writeDepth:this._writeDepthEnabled}}},{key:"_lineSegment",get:function(){return this._extensionType===
f.ExtensionType.FADED?this._updateLineSegmentFinite(D):this._updateLineSegmentInfinite(this._extensionType,D)}}]);return q}(w.EngineVisualElement);const l=u.create(),n=h.create(),J=h.create(),D=k.create();f.ExtensionType=void 0;(function(g){g[g.LINE=0]="LINE";g[g.RAY=1]="RAY";g[g.GROUND_RAY=2]="GROUND_RAY";g[g.FADED=3]="FADED"})(f.ExtensionType||(f.ExtensionType={}));w=1/3;const C={start:w,end:w};f.ExtendedLineVisualElement=z;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});