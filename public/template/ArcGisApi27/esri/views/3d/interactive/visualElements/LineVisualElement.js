// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ./Object3DVisualElement ../../support/engineContent/line ../../webgl-engine/lib/Material ../../webgl-engine/materials/RibbonLineMaterial".split(" "),function(r,t,u,y,h,g,n,q,v,z,A){q=function(w){function p(a,c){var b=w.call(this,a)||this;b._hasExternalMaterial=!1;b._hasExternalMaterial=null!=c;b._material=null!=
c?c:new A.RibbonLineMaterial({width:1,color:n.fromValues(1,0,1,1),stippleOffColor:null,stipplePattern:null,stipplePreferContinuous:!0,isClosed:!1,falloff:0,innerColor:null,innerWidth:1,hasPolygonOffset:!1,renderOccluded:z.RenderOccludedFlag.OccludeAndTransparent,writeDepth:!0});b.applyProps(a);return b}t._inherits(p,w);var f=p.prototype;f.setGeometryFromRenderSpacePoint=function(a,c=1E3){this.geometry=[[[a[0]-c,a[1],a[2]],[a[0]+c,a[1],a[2]]],[[a[0],a[1]-c,a[2]],[a[0],a[1]+c,a[2]]],[[a[0],a[1],a[2]-
c],[a[0],a[1],a[2]+c]]]};f.setGeometryFromExtent=function(a){const c=this.view.spatialReference,b=g.create(),d=g.create(),e=[];h.set(b,a[0],a[1],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],d[1],d[2]]);h.set(b,a[2],a[1],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],d[1],d[2]]);h.set(b,a[2],a[3],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],d[1],d[2]]);h.set(b,a[0],a[3],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],
d[1],d[2]]);h.set(b,a[0],a[1],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],d[1],d[2]]);h.set(b,a[0],a[1],100);this.view.renderCoordsHelper.toRenderCoords(b,c,d);e.push([d[0],d[1],d[2]]);this.geometry=[e]};f.setGeometryFromFrustum=function(a){const c=[];a.lines.forEach(b=>{c.push([b.origin[0],b.origin[1],b.origin[2]]);c.push([b.endpoint[0],b.endpoint[1],b.endpoint[2]])});this.geometry=[c]};f.setGeometryFromBoundedPlane=function(a){const c=[],b=a.origin,d=a.basis1;a=a.basis2;
const e=g.create(),k=g.create(),l=g.create(),m=g.create();e[0]=b[0]-.5*d[0]-.5*a[0];e[1]=b[1]-.5*d[1]-.5*a[1];e[2]=b[2]-.5*d[2]-.5*a[2];k[0]=b[0]-.5*d[0]+.5*a[0];k[1]=b[1]-.5*d[1]+.5*a[1];k[2]=b[2]-.5*d[2]+.5*a[2];l[0]=b[0]+.5*d[0]+.5*a[0];l[1]=b[1]+.5*d[1]+.5*a[1];l[2]=b[2]+.5*d[2]+.5*a[2];m[0]=b[0]+.5*d[0]-.5*a[0];m[1]=b[1]+.5*d[1]-.5*a[1];m[2]=b[2]+.5*d[2]-.5*a[2];c.push([e[0],e[1],e[2]]);c.push([k[0],k[1],k[2]]);c.push([l[0],l[1],l[2]]);c.push([m[0],m[1],m[2]]);c.push([e[0],e[1],e[2]]);this.geometry=
[c]};f.setGeometryFromSegment=function(a){const c=a.endRenderSpace;this.transform=u.fromTranslation(x,c);({points:a}=a.createRenderGeometry(c,this.view.renderCoordsHelper));this.geometry=[a]};f.setGeometryFromSegments=function(a,c=g.ZEROS){this.transform=u.fromTranslation(x,c);this.geometry=a.map(b=>b.createRenderGeometry(c,this.view.renderCoordsHelper).points)};f.getTransformedGeometry=function(){return null==this._geometry?null:this._geometry.map(a=>a.map(c=>h.transformMat4(g.create(),c,this.transform)))};
f.createExternalResources=function(){};f.destroyExternalResources=function(){};f.createGeometries=function(a){for(const c of v.lineStripsToParameters(this.geometry)){const b=v.createGeometry(this._material,c);a.addGeometry(b)}};f.forEachExternalMaterial=function(a){this._hasExternalMaterial||a(this._material)};t._createClass(p,[{key:"renderOccluded",get:function(){return this._material.parameters.renderOccluded},set:function(a){this._material.setParameters({renderOccluded:a})}},{key:"geometry",get:function(){return this._geometry},
set:function(a){this._geometry=a;this.recreateGeometry()}},{key:"width",get:function(){return this._material.parameters.width},set:function(a){this._material.setParameters({width:a})}},{key:"color",get:function(){return this._material.parameters.color},set:function(a){const c=1===a[3];this._material.setParameters({color:n.clone(a),writeDepth:c})}},{key:"innerWidth",get:function(){return this._material.parameters.innerWidth},set:function(a){this._material.setParameters({innerWidth:a})}},{key:"innerColor",
get:function(){return this._material.parameters.innerColor},set:function(a){this._material.setParameters({innerColor:null!=a?n.clone(a):null})}},{key:"stipplePattern",get:function(){return this._material.parameters.stipplePattern},set:function(a){null!=this._material&&this._material.setParameters({stipplePattern:a})}},{key:"stippleOffColor",get:function(){return this._material.parameters.stippleOffColor},set:function(a){this._material.setParameters({stippleOffColor:null!=a?n.clone(a):null})}},{key:"stipplePreferContinuous",
get:function(){return this._material.parameters.stipplePreferContinuous},set:function(a){this._material.setParameters({stipplePreferContinuous:a})}},{key:"falloff",get:function(){return this._material.parameters.falloff},set:function(a){this._material.setParameters({falloff:a})}},{key:"polygonOffset",get:function(){return this._material.parameters.hasPolygonOffset},set:function(a){this._material.setParameters({hasPolygonOffset:a})}}]);return p}(q.Object3DVisualElement);const x=y.create();r.LineVisualElement=
q;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});