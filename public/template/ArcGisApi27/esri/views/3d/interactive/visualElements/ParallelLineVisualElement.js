// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4 ../../../../chunks/vec4f32 ../../../../layers/graphics/dehydratedFeatures ./EngineVisualElement ../../terrain/OverlayRenderer ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/Material ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/RibbonLineMaterial".split(" "),
function(A,B,K,u,l,y,p,q,C,L,M,z,D,E,N,O,F,G){z=function(H){function v(a){var b=H.call(this,a)||this;b._location=q.create();b._direction=q.fromValues(1,0,0);b._width=1;b._offset=1;b._length=18;b._color=L.fromValues(1,0,1,1);b._renderOccluded=N.RenderOccludedFlag.OccludeAndTransparent;b.applyProps(a);return b}B._inherits(v,H);var d=v.prototype;d.createObject3DResourceFactory=function(a){return{view:a,createResources:b=>this._createObject3DResources(b),destroyResources:b=>this._destroyObject3DResources(b),
recreateGeometry:(b,c)=>this._recreateObject3DGeometry(b,c),cameraChanged:()=>this._updateGeometry()}};d.createDrapedResourceFactory=function(a){return{view:a,createResources:()=>this._createDrapedResources(),destroyResources:b=>this._destroyDrapedResources(b),recreateGeometry:b=>this._recreateDrapedGeometry(b)}};d.setDirectionFromPoints=function(a,b){p.normalize(this._direction,p.subtract(this._direction,b,a));this._updateGeometry()};d._createObject3DResources=function(a){const b=new G.RibbonLineMaterial(this.materialParameters),
c=[];this._createObject3DGeometry(b,a,c);return{material:b,geometries:c,forEach:e=>{e(b);c.forEach(e)}}};d._destroyObject3DResources=function(a){a.geometries.length=0;a.material.dispose()};d._recreateObject3DGeometry=function(a,b){a.geometries.length=0;this._createObject3DGeometry(a.material,b,a.geometries)};d._createObject3DGeometry=function(a,b,c){const [e,m]=this._createGeometries(a);b.addGeometry(e);b.addGeometry(m);c.push(e);c.push(m);this._updateVerticesObject3D(b)};d._createDrapedResources=
function(){const a=new G.RibbonLineMaterial(this.materialParameters),b=K.watch(()=>this.view.state.contentPixelRatio,()=>{this.drapedResources.recreateGeometry()});return{material:a,geometries:this._createDrapedGeometry(a),pixelRatioHandle:b}};d._destroyDrapedResources=function(a){a.pixelRatioHandle.remove();a.geometries=[];a.material.dispose()};d._recreateDrapedGeometry=function(a){a.geometries=this._createDrapedGeometry(a.material)};d._createDrapedGeometry=function(a){a=this._createGeometries(a);
this._updateVerticesDraped(a);return a.map(b=>new O.RenderGeometry(b))};d._createGeometries=function(a){return[E.createPolylineGeometry(a,[q.create(),q.create()]),E.createPolylineGeometry(a,[q.create(),q.create()])]};d._updateMaterial=function(){const {materialParameters:a}=this;this.object3dResources.resources?.material.setParameters(a);this.drapedResources.resources?.material.setParameters(a)};d._updateGeometry=function(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const a=this.object3dResources.object;
a&&this._updateVerticesObject3D(a)}};d._updateVerticesObject3D=function(a){const b=this.view.state.camera;b.projectToScreen(this.location,w);p.add(n,this.location,this.direction);b.projectToScreen(n,r);l.normalize(r,l.subtract(r,r,w));this._updateVertexAttributesObject3D(b,a,0,w,r,1);this._updateVertexAttributesObject3D(b,a,1,w,r,-1)};d._updateVertexAttributesObject3D=function(a,b,c,e,m,f){c=b.geometries[c];const g=c.getMutableAttribute(F.VertexAttribute.POSITION)?.data;if(g){var {start:h,end:k}=
this._computeStartEnd(m,e,f,this.offset,this.width,this.length);a.unprojectFromScreen(u.castScreenPointArray(h),n);g[0]=n[0];g[1]=n[1];g[2]=n[2];a.unprojectFromScreen(u.castScreenPointArray(k),n);g[3]=n[0];g[4]=n[1];g[5]=n[2];b.geometryVertexAttrsUpdated(c)}};d._updateVerticesDraped=function(a){const {view:{basemapTerrain:{overlayManager:b},state:{contentPixelRatio:c}}}=this,{location:e,width:m,length:f,offset:g}=this;var h=P;h.spatialReference=b.renderer.spatialReference;h.x=e[0];h.y=e[1];var k=
b.overlayPixelSizeInMapUnits(h)*c;h=m*k;const t=f*k;k*=g;this._updateVertexAttributesDraped(a[0],h,t,k,-1);this._updateVertexAttributesDraped(a[1],h,t,k,1)};d._updateVertexAttributesDraped=function(a,b,c,e,m){const f=a.getMutableAttribute(F.VertexAttribute.POSITION)?.data;if(f){var {location:g,direction:h}=this,{start:k,end:t}=this._computeStartEnd(h,g,m,e,b,c);f[0]=k[0];f[1]=k[1];f[2]=D.DRAPED_Z;f[3]=t[0];f[4]=t[1];f[5]=D.DRAPED_Z;a.invalidateBoundingInfo()}};d._computeStartEnd=function(a,b,c,e,
m,f){c=l.scale(I,l.set(I,a[1]*c,a[0]*-c),e+m/2);b=l.add(x,l.add(x,l.add(x,b,l.scale(x,a,f/2)),c),c);a=l.add(J,b,l.scale(J,a,-f));return{start:b,end:a}};B._createClass(v,[{key:"location",get:function(){return this._location},set:function(a){p.exactEquals(this._location,a)||(p.copy(this._location,a),this._updateGeometry())}},{key:"direction",get:function(){return this._direction},set:function(a){p.exactEquals(this._direction,a)||(p.copy(this._direction,a),this._updateGeometry())}},{key:"width",get:function(){return this._width},
set:function(a){a!==this._width&&(this._width=a,this._updateMaterial())}},{key:"offset",get:function(){return this._offset},set:function(a){a!==this._offset&&(this._offset=a,this._updateGeometry())}},{key:"length",get:function(){return this._length},set:function(a){a!==this._length&&(this._length=a,this._updateGeometry())}},{key:"color",get:function(){return this._color},set:function(a){C.exactEquals(a,this._color)||(C.copy(this._color,a),this._updateMaterial())}},{key:"renderOccluded",get:function(){return this._renderOccluded},
set:function(a){a!==this._renderOccluded&&(this._renderOccluded=a,this._updateMaterial())}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}}]);return v}(z.EngineVisualElement);const n=q.create(),I=y.create(),x=y.create(),J=y.create(),w=u.createScreenPointArray(),r=u.createScreenPointArray(),P=M.makeDehydratedPoint(0,0,void 0,null);A.ParallelLineVisualElement=z;Object.defineProperty(A,Symbol.toStringTag,{value:"Module"})});