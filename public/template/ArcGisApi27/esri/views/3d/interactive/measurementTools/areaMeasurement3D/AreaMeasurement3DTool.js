// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/memoize ../../../../../core/promiseUtils ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/support/WatchUpdatingTracking ../../../../../geometry/Point ../../../../../layers/graphics/hydratedFeatures ../../../analysis/support/measurementUtils ../../SnappingVisualizer3D ../../editingTools/dragEventPipeline3D ./AreaMeasurement3DView ../support/PickRequest ../../../../interactive/AnalysisToolBase ../../../../interactive/coordinateHelper ../../../../interactive/dragEventPipeline ../../../../interactive/ManipulatorCollection ../../../../interactive/editGeometry/EditGeometry ../../../../interactive/editGeometry/EditGeometryOperations ../../../../interactive/snapping/SceneSnappingManagerPool ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/snapping/SnappingOperation ../../../../interactive/snapping/snappingUtils ../../../../support/screenUtils".split(" "),
function(u,f,E,v,F,w,r,g,e,Z,aa,G,H,x,m,y,I,z,J,K,L,M,N,O,P,Q,R,S,T,U,V,A){e=function(B){function n(a){var b=B.call(this,a)||this;b._handles=new E;b._updatingHandles=new H.WatchUpdatingTracking;b.polygonState="initial";b.manipulators=new O.ManipulatorCollection;b._getSnappingContext=F.memoize(c=>new S.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:c,editGeometryOperations:new Q.EditGeometryOperations(new P.EditGeometry("point",M.createCoordinateHelper(!0,!1,b.view.spatialReference))),
visualizer:new I.SnappingVisualizer3D}));return b}u._inherits(n,B);var d=n.prototype;d.initialize=function(){const {view:a,analysisViewData:b,manipulators:c,visible:h}=this;this.measurementView=new J({view:a,analysisViewData:b,toolState:this,manipulators:c,visible:h});const p=R.acquire(a);this._snappingManagerResult=p;this._handles.add(p);this._snappingOperation=new U.SnappingOperation({view:a});this._updatingHandles.add(()=>this.stagedPoint,k=>{this.analysisViewData.cursorPoint=null!=k?m.clonePoint(k,
new x):null},r.syncAndInitial);V.setupSnappingToggleHandles(this,()=>{const k=this._getSnappingContext(this.view.inputManager.latestPointerType??"mouse");this._updatingHandles.addPromise(w.ignoreAbortErrors(this._snappingOperation.resnap(this._snappingManager,k)))});this._setupManipulators();this._handles.add(r.watch(()=>this.state,k=>{"measured"===k&&this.finishToolCreation()},r.syncAndInitial))};d.destroy=function(){this.measurementView.destroy();this._set("measurementView",null);this._handles=
v.destroyMaybe(this._handles);this._updatingHandles=v.destroyMaybe(this._updatingHandles)};d.finishMeasurement=function(){const {path:a}=this.analysisViewData;3>a.numVertices?(a.clear(),this.polygonState="initial"):(a.close(),this.polygonState="measured");this._resetSnappingState()};d.onShow=function(){this.measurementView.show()};d.onHide=function(){this.measurementView.hide()};d.onDeactivate=function(){this._resetSnappingState()};d.onInputEvent=function(a){switch(a.type){case "immediate-double-click":this._handleImmediateDoubleClick(a);
break;case "immediate-click":this._handleImmediateClick(a);break;case "pointer-move":this._handlePointerMove(a);break;case "drag":this._handleDrag(a);break;case "key-down":this._handleKeyDown(a)}};d._setupManipulators=function(){const a=c=>c.events.on("grab-changed",()=>{this.analysisViewData.validMeasurement&&(this.polygonState=this.manipulators.some(h=>h.manipulator.grabbing)?"editing":"measured")}),b=c=>{this._handles.add([N.createManipulatorDragEventPipeline(c,(h,p,k,t)=>{const C=z.hideManipulatorWhileDragging(h),
q=h.metadata,W=this._snappingManager;t=this._getSnappingContext(t);const {snappingStep:X,cancelSnapping:Y}=T.createSnapDragEventPipelineStep({snappingManager:W,snappingContext:t,updatingHandles:this._updatingHandles});k=k.next(C).next(l=>{this.analysisViewData.lastDraggedVertex=null;this.analysisViewData.path.setVertexPosition(q,D);h.location=D;return l}).next(Y);p.next(C).next(z.screenToMap3D(this.view)).next(...X).next(l=>{h.location=l.mapEnd;this.analysisViewData.lastDraggedVertex="end"===l.action?
null:q;this.analysisViewData.path.setVertexPosition(q,m.clonePoint(l.mapEnd))});const D=m.clonePoint(this.analysisViewData.path.getVertexPositionAsPoint(q))}),a(c)],c)};this.manipulators.forEach(({manipulator:c})=>{b(c)});this._handles.add([this.manipulators.on("after-add",({item:{manipulator:c}})=>{b(c)}),this.manipulators.on("after-remove",({item:{manipulator:c}})=>this._handles.remove(c))])};d._handleImmediateDoubleClick=function(a){y.isPrimaryPointerAction(a)&&("drawing"===this.polygonState&&
this.finishMeasurement(),a.stopPropagation())};d._handleDrag=function(a){"editing"===this.polygonState&&a.stopPropagation()};d._handleImmediateClick=function(a){if(y.isPrimaryPointerAction(a)){var b=A.createScreenPointFromEvent(a),{pointerType:c}=a;if(this.active)switch(this.polygonState){case "initial":if(this._addVertexAt(b,c)){this.stagedPoint=null;this.polygonState="drawing";a.stopPropagation();return}break;case "drawing":const h=this.measurementView.vertexHandleAt(b,c);if(null==h){if(this._addVertexAt(b,
c)){this.stagedPoint=null;a.stopPropagation();return}}else 0===h.index&&(this.finishMeasurement(),a.stopPropagation())}"mouse"===a.pointerType&&this._hoverAt(b)}};d._handlePointerMove=function(a){"mouse"===a.pointerType&&(a=A.createScreenPointFromEvent(a),this._hoverAt(a))};d._handleKeyDown=function(a){"Enter"===a.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),a.stopPropagation())};d._hoverAt=function(a){var {polygonState:b}=this;!this.active||"initial"!==b&&"drawing"!==b?this.stagedPoint=
null:(a=this._pick(a),null!=a&&null!=a.mapPoint&&(b=this._getSnappingContext("mouse"),this._updatingHandles.addPromise(w.ignoreAbortErrors(this._snappingOperation.snap({point:a.mapPoint},this._snappingManager,b)))))};d._addVertexAt=function(a,b){a=this._pick(a);return null!=a&&null!=a.mapPoint?({mapPoint:a}=a,b=this._getSnappingContext(b),b=this._snappingOperation.update({point:a},this._snappingManager,b),b=m.clonePoint(b,new x),this.analysisViewData.path.add(b),!0):!1};d._pick=function(a){a=new K.PickRequest(a);
return this.measurementView.pick(a)};d._resetSnappingState=function(){this._snappingManager.doneSnapping();this._snappingOperation.abort();this._snappingOperation.stagedPoint=null};u._createClass(n,[{key:"_snappingManager",get:function(){return this._snappingManagerResult.snappingManager}},{key:"state",get:function(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}},{key:"cursor",get:function(){return"ready"===
this.state||"drawing"===this.polygonState?"crosshair":null}},{key:"updating",get:function(){return this._updatingHandles.updating||this._snappingManager.updating}},{key:"stagedPoint",get:function(){return this._snappingOperation.stagedPoint},set:function(a){this._snappingOperation.stagedPoint=a}},{key:"snappingOptions",get:function(){return this._snappingManager.options}},{key:"test",get:function(){return{snappingManager:this._snappingManager}}}]);return n}(L.AnalysisToolBase);f.__decorate([g.property({readOnly:!0})],
e.prototype,"state",null);f.__decorate([g.property()],e.prototype,"polygonState",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,"cursor",null);f.__decorate([g.property()],e.prototype,"measurementView",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"view",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"analysis",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"analysisViewData",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,
"manipulators",void 0);f.__decorate([g.property()],e.prototype,"updating",null);f.__decorate([g.property()],e.prototype,"stagedPoint",null);f.__decorate([g.property()],e.prototype,"snappingOptions",null);return e=f.__decorate([G.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],e)});