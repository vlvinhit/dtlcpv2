// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/arrayUtils ../../../../core/byteSizeEstimations ../../../../core/HandleOwner ../../../../core/handleUtils ../../../../core/Logger ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3f64 ../../../../geometry/projection ../../../../geometry/support/scaleUtils ../../../../layers/graphics/dehydratedFeatures ../../../../layers/graphics/featureConversionUtils ../../../../layers/graphics/OptimizedFeature ../../../../layers/graphics/OptimizedGeometry ../../../../layers/graphics/data/FeatureStore ../../../../layers/support/fieldUtils ../../../../renderers/support/heatmapUtils ../interfaces ./FeatureVisibilityFilter ../../terrain/OverlayRenderer ../../webgl-engine/lib/Attribute ../../webgl-engine/lib/ContentObjectType ../../webgl-engine/lib/DrapedHeatmapRenderer ../../webgl-engine/lib/Geometry ../../webgl-engine/lib/ModelDirtyTypes ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/lib/UpdatePolicy ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/HeatmapDensityMaterial ../../../support/layerViewUtils ../../../webgl/enums ../../../webgl/heatmapTextureUtils".split(" "),
function(b,w,c,I,r,J,x,K,m,p,L,d,ea,fa,M,N,O,P,y,z,Q,A,R,S,T,U,V,W,B,X,Y,Z,t,aa,ba,C,D,E,q,ca){const u=K.getLogger("esri.views.3d.layers.support.HeatmapFeatureProcessor");b.HeatmapFeatureProcessor=function(F){function v(a){a=F.call(this,a)||this;a.type="heatmap";a.preferredUpdatePolicy=ba.UpdatePolicy.ASYNC;a.dataExtent=null;a.drapeSourceType=U.DrapeSourceType.Features;a._renderGeometries=new Map;a._fieldTotal=0;a._drapeSourceRenderer=null;a._dataType=q.PixelType.HALF_FLOAT;a._pixelFormat=q.PixelFormat.RGBA;
a.initializePromise=Promise.resolve();return a}w._inherits(v,F);var k=v.prototype;k.initialize=function(){this._featureStore=new R({geometryType:"esriGeometryPoint",hasZ:this.hasZ,hasM:this.hasM});const {dataType:a,samplingMode:f,pixelFormat:g,internalFormat:e}=ca.loadHeatmapTextureConfiguration(this._renderView.renderingContext,u);this._dataType=a;this._pixelFormat=g;const l=a!==q.PixelType.FLOAT;this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerDrapeSource(this,Y.DrapedHeatmapRenderer,
{...this._rendererParameters,dataType:a,samplingMode:f,pixelFormat:g,internalFormat:e});this._material=new D.HeatmapDensityMaterial({usesHalfFloats:l});this._materialWithField=new D.HeatmapDensityMaterial({usesHalfFloats:l,isAttributeDriven:!0});this._filterVisibility=new V.FeatureVisibilityFilter({context:{layerView:this.owner,featureStore:this.featureStore,getFeatureCount:()=>this._loadedPointGraphics.length,setAllFeaturesVisibility:h=>this._setAllFeaturesVisibility(h),clearFeaturesVisibility:()=>
this._setAllFeaturesVisibility(!0),updateFeatureVisibilities:h=>this._updateFeatureVisibilities(h)}});this.updatingHandles.addOnCollectionChange(()=>this._loadedPointGraphics,h=>this._onLoadedFeaturesChange(h),p.initial);this.updatingHandles.addWhen(()=>this._materialParameters,h=>this._forEachMaterial(n=>n.setParameters(h)),p.initial);this.updatingHandles.add(()=>this._rendererParameters,h=>this._drapeSourceRenderer.set(h));this.updatingHandles.add(()=>this._heatmapRendererField,()=>{this._recreate()},
p.sync);this.updatingHandles.add(()=>({fieldName:this._heatmapRendererFieldName,numeric:this._heatmapRendererFieldIsNumeric}),({fieldName:h,numeric:n})=>{if(null!=h&&n){let G=0;this._featureStore.forEach(da=>G+=da.attributes[h]??0);this._fieldTotal=G}else this._fieldTotal=this._featureStore.numFeatures},p.initial);this.handles.add([p.watch(()=>({fieldName:this._heatmapRendererFieldName,field:this._heatmapRendererField}),({fieldName:h,field:n})=>{h&&!n&&u.warn(`Heatmap renderer field '${h}' for layer '${this.layer.title??
this.layer.id}' not found`)}),p.watch(()=>({field:this._heatmapRendererField,numeric:this._heatmapRendererFieldIsNumeric}),({field:h,numeric:n})=>{null==h||n||u.warn(`Heatmap renderer field '${h.name}' for layer '${this.layer.title??this.layer.id}' does not contain numeric values and cannot be used to drive the heatmap density`)}),x.makeHandle(()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))])};k.destroy=function(){this._renderGeometries.clear();this._material=m.disposeMaybe(this._material);
this._materialWithField=m.disposeMaybe(this._materialWithField);this._featureStore.clear();this._featureStore=null};k.whenGraphicBounds=async function(){return null};k.computeAttachmentOrigin=function(){return null};k.highlight=function(){return H};k.maskOccludee=function(){return H};k.setObjectIdVisibility=function(){};k.refreshFilter=function(){this.filterVisibility.reapply()};k._onLoadedFeaturesChange=function(a){if(this._featuresArePoints){var {objectIdField:f}=this.layer;this._featureStore.removeManyById(a.removed.map(e=>
y.getObjectId(e,f)));this._featureStore.addMany(a.added.map(e=>{const l=new Q.OptimizedFeature(z.convertFromPoint(new A,e.geometry),e.attributes,m.applySome(e.centroid,h=>z.convertFromPoint(new A,h)),y.getObjectId(e,f));l.displayId=e.uid;return l}));var g=a.added;a=a.removed;this._fieldTotal+=this._computeFieldTotalChange(g,a);a=a.map(({uid:e})=>{const l=this._renderGeometries.get(e);this._renderGeometries.delete(e);return l}).filter(I.isSome);g=g.map(e=>{const l=this._pointGraphicToRenderGeometry(e);
this._renderGeometries.set(e.uid,l);return l});0<a.length&&this._drapeSourceRenderer.removeGeometries(a,t.DirtyOperation.REMOVE);0<g.length&&this._drapeSourceRenderer.addGeometries(g,t.DirtyOperation.ADD);if(0<g.length||0<a.length)this.filterVisibility.reapply(),this._renderView.requestRender()}};k._recreate=function(){if(this._loadedPointGraphics){var a=this._loadedPointGraphics.toArray();this._onLoadedFeaturesChange({added:a,removed:a})}};k._pointGraphicToRenderGeometry=function(a){const f=this._heatmapRendererFieldName,
g=null!=f?this._materialWithField:this._material;var e=N.create();O.projectPointToVector(a.geometry,e,this._overlaySpatialReference);e[2]=W.DRAPED_Z;e=[[C.VertexAttribute.POSITION,new B.Attribute(e,e.length)]];const l=this._heatmapRendererFieldIsNumeric;null!=f&&e.push([C.VertexAttribute.FEATUREATTRIBUTE,new B.Attribute([l?a.attributes[f]??0:0],1)]);a=new aa.RenderGeometry(new Z.Geometry(g,e,null,null,X.ContentObjectType.Point),{layerUid:this.layer.uid,graphicUid:a.uid});a.visible=this.filterVisibility.defaultVisibility;
return a};k._forEachMaterial=function(a){a(this._material);a(this._materialWithField)};k._computeFieldTotalChange=function(a,f){if(null==this._heatmapRendererFieldName||!this._heatmapRendererFieldIsNumeric)return a.length-f.length;const g=this._heatmapRendererFieldName,e=(l,h)=>l+(h.attributes[g]??0);return a.reduce(e,0)-f.reduce(e,0)};k._clampSearchRadius=function(a){112<a&&u.warnOnce("SceneView supports a maximum radius of 112 pt for HeatmapRenderer.");return Math.min(a,112)};k._updateFeatureVisibilities=
function(a){const f=[];this._featureStore.forEach(({objectId:g,displayId:e})=>{g=a(g);(e=this._renderGeometries.get(e))&&e.visible!==g&&(f.push(e),e.visible=g)});this._drapeSourceRenderer.modifyGeometries(f,t.DirtyState.VISIBILITY)};k._setAllFeaturesVisibility=function(a){const f=[];for(const g of this._renderGeometries.values())g.visible!==a&&(f.push(g),g.visible=a);this._drapeSourceRenderer.modifyGeometries(f,t.DirtyState.VISIBILITY)};w._createClass(v,[{key:"layer",get:function(){return this.owner.layer}},
{key:"featureStore",get:function(){return this._featureStore}},{key:"updating",get:function(){return this.updatingHandles.updating||this.filterVisibility.updating}},{key:"updatingRemaining",get:function(){return 0}},{key:"suspendInfo",get:function(){return{}}},{key:"legendEnabled",get:function(){return!0}},{key:"filterVisibility",get:function(){return this._filterVisibility}},{key:"displayFeatureLimit",get:function(){var a=this.owner?.view?.resourceController?.memoryController?.memoryFactor??1;const f=
this.owner?.view?.qualitySettings;a=f?Math.ceil(f.heatmap.maxTotalNumberOfFeatures*a):0;return{minimumTotalNumberOfFeatures:0,maximumTotalNumberOfFeatures:a,maximumTotalNumberOfPrimitives:2*a,maximumNumberOfFeatures:a}}},{key:"hasZ",get:function(){return"hasZ"in this.layer&&this.layer.hasZ}},{key:"hasM",get:function(){return"hasM"in this.layer&&this.layer.hasM}},{key:"view",get:function(){return this.owner.view}},{key:"fullOpacity",get:function(){return this.owner.fullOpacity}},{key:"updatePolicy",
get:function(){return this.owner.updatePolicy}},{key:"scaleVisibilitySuspended",get:function(){if(!this._isScaleRangeActive)return!1;const {minScale:a,maxScale:f}=this.layer.effectiveScaleRange,{scale:g}=this.view;return!E.scaleBoundsPredicate(g,a??0,f??0)}},{key:"usedMemory",get:function(){const a=Math.ceil((this._overlayRenderer?.overlays[0]?.resolution??0)*this._densityMapPixelRatio)??0;return a*a*(this._pixelFormat===q.PixelFormat.RED?1:4)*(this._dataType===q.PixelType.FLOAT?4:2)+this.usedMemoryPerFeature*
this._featureStore.numFeatures}},{key:"usedMemoryPerFeature",get:function(){var a=this._loadedPointGraphics.find(()=>!0);if(null==a)return 0;a=r.estimateAttributesObjectSize(a);const f=r.estimateNumberByteSize(),g=6*r.estimateFixedArraySize([0,0,0],f),e=6*r.estimateFixedArraySize([0,0],f);return g+e+(this._heatmapRendererFieldIsNumeric?6*f:0)+a}},{key:"loadedFeatures",get:function(){return this._featureStore.numFeatures}},{key:"unprocessedMemoryEstimate",get:function(){return 0}},{key:"performanceInfo",
get:function(){return{core:{visible:this._visibleFeatures,missing:0,pending:0},elevationUpdating:!1,visibilityFrustum:!0,visibilityScale:!0}}},{key:"renderer",get:function(){return this._heatmapRenderer}},{key:"_overlayRenderer",get:function(){return this.view.basemapTerrain.overlayManager.renderer}},{key:"_overlaySpatialReference",get:function(){return this._overlayRenderer.spatialReference}},{key:"_rendererParameters",get:function(){return{...this._radiusParameter,...this._densityParameters,...this._colorRampParameter,
...this._pixelRatioParameter}}},{key:"_materialParameters",get:function(){return{...this._radiusParameter,...this._resolutionForScaleParameter}}},{key:"_densityParameters",get:function(){const a=this._heatmapRenderer;if(null==a)return null;const {minDensity:f,maxDensity:g}=a;return{minDensity:f,maxDensity:g,fieldTotal:this._fieldTotal}}},{key:"_radiusParameter",get:function(){return m.applySome(this._heatmapRenderer,({radius:a})=>({searchRadius:L.pt2px(this._clampSearchRadius(a))}))}},{key:"_resolutionForScaleParameter",
get:function(){return m.applySome(this._heatmapRenderer,({referenceScale:a})=>({resolutionForScale:0===a?0:P.getResolutionForScale(a,this.view.spatialReference)}))}},{key:"_colorRampParameter",get:function(){return m.applySome(this._heatmapRenderer,a=>({colorRampData:T.generateGradient(a.colorStops)}))}},{key:"_pixelRatioParameter",get:function(){return{pixelRatio:this._densityMapPixelRatio}}},{key:"_densityMapPixelRatio",get:function(){return(this.owner?.view?.qualitySettings.heatmap.pixelRatio??
1)*Math.sqrt(this.owner?.view?.resourceController?.memoryController?.memoryFactor??1)}},{key:"_renderView",get:function(){return this.view._stage.renderView}},{key:"_featuresArePoints",get:function(){return"point"===this.layer.geometryType}},{key:"_loadedPointGraphics",get:function(){return this.owner.loadedGraphics}},{key:"_heatmapRenderer",get:function(){const a=this.layer.renderer;return"heatmap"===a?.type?a:null}},{key:"_heatmapRendererFieldName",get:function(){return m.applySome(this._heatmapRenderer,
a=>a.field)}},{key:"_heatmapRendererField",get:function(){return m.applySome(this._heatmapRendererFieldName,a=>this.layer.fieldsIndex.get(a))}},{key:"_heatmapRendererFieldIsNumeric",get:function(){const a=this._heatmapRendererField;return null==a?!1:S.isNumericField(a)}},{key:"_isScaleRangeActive",get:function(){const {layer:a}=this;if(!("effectiveScaleRange"in a))return!1;const {minScale:f,maxScale:g}=a.effectiveScaleRange;return E.isScaleRangeActive(f,g)}},{key:"_visibleFeatures",get:function(){let a=
0;this._renderGeometries.forEach(f=>{f.visible&&++a});return a}},{key:"test",get:function(){return{visibleFeatureCount:this._visibleFeatures}}}]);return v}(J.HandleOwner);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"type",void 0);c.__decorate([d.property({constructOnly:!0})],b.HeatmapFeatureProcessor.prototype,"owner",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"layer",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"featureStore",
null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"updating",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"updatingRemaining",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"suspendInfo",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"legendEnabled",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"filterVisibility",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"displayFeatureLimit",
null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"preferredUpdatePolicy",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"hasZ",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"hasM",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"dataExtent",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"view",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"fullOpacity",null);
c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"updatePolicy",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"drapeSourceType",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"scaleVisibilitySuspended",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"renderer",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_featureStore",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,
"_filterVisibility",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_overlayRenderer",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_overlaySpatialReference",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_rendererParameters",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_materialParameters",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_densityParameters",null);c.__decorate([d.property()],
b.HeatmapFeatureProcessor.prototype,"_radiusParameter",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_resolutionForScaleParameter",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_colorRampParameter",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_pixelRatioParameter",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_densityMapPixelRatio",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,
"_renderGeometries",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_material",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_materialWithField",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_renderView",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_featuresArePoints",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_loadedPointGraphics",null);c.__decorate([d.property()],
b.HeatmapFeatureProcessor.prototype,"_heatmapRenderer",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldName",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_heatmapRendererField",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_heatmapRendererFieldIsNumeric",null);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_fieldTotal",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,
"_drapeSourceRenderer",void 0);c.__decorate([d.property()],b.HeatmapFeatureProcessor.prototype,"_isScaleRangeActive",null);b.HeatmapFeatureProcessor=c.__decorate([M.subclass("esri.views.3d.layers.support.HeatmapFeatureProcessor")],b.HeatmapFeatureProcessor);const H=x.makeHandle();b.MAX_RADIUS_PT=112;Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});