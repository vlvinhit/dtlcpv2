// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../request ../../../../core/asyncUtils ../../../../core/byteSizeEstimations ../../../../core/Error ../../../../core/Logger ../../../../core/NestedMap ../../../../core/promiseUtils ../../../../core/Version ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingBox ../../../../support/requestImageUtils ../../webgl-engine/lib/Attribute ../../webgl-engine/lib/basicInterfaces ../../webgl-engine/lib/Geometry ../../webgl-engine/lib/Texture ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/DefaultMaterial ../../../webgl/enums".split(" "),
function(v,M,D,N,O,P,Q,E,F,G,z,R,S,n,T,U,V,W,H){async function X(a,b){const c=null!=b&&b.streamDataRequester;if(c)return Y(a,c,b);a=await D.result(M(a,b));if(!0===a.ok)return a.value.data;E.throwIfAbortError(a.error);I(a.error)}async function Y(a,b,c){a=await D.result(b.request(a,"json",c));if(!0===a.ok)return a.value;E.throwIfAbortError(a.error);I(a.error.details.url)}function I(a){throw new O("",`Request for object resource failed: ${a}`);}function Z(a){var b=a.params,c=b.topology;let d=!0;b.vertexAttributes||
(l.warn("Geometry must specify vertex attributes"),d=!1);switch(b.topology){case "PerAttributeArray":break;case "Indexed":case null:case void 0:c=b.faces;if(!c)l.warn("Indexed geometries must specify faces"),d=!1;else if(b.vertexAttributes)for(const e in b.vertexAttributes)(b=c[e])&&b.values?(null!=b.valueType&&"UInt32"!==b.valueType&&(l.warn(`Unsupported indexed geometry indices type '${b.valueType}', only UInt32 is currently supported`),d=!1),null!=b.valuesPerElement&&1!==b.valuesPerElement&&(l.warn(`Unsupported indexed geometry values per element '${b.valuesPerElement}', only 1 is currently supported`),
d=!1)):(l.warn(`Indexed geometry does not specify face indices for '${e}' attribute`),d=!1);break;default:l.warn(`Unsupported topology '${c}'`),d=!1}a.params.material||(l.warn("Geometry requires material"),d=!1);a=a.params.vertexAttributes;for(const e in a)a[e].values||(l.warn("Geometries with externally defined attributes are not yet supported"),d=!1);return d}function aa(a){const b=z.empty();a.forEach(c=>{c=c.boundingInfo;null!=c&&(z.expandWithVec3(b,c.bbMin),z.expandWithVec3(b,c.bbMax))});return b}
async function J(a,b){const c=[];for(const m in a){var d=a[m],e=d.images[0].data;if(!e){l.warn("Externally referenced texture data is not yet supported");continue}e=d.encoding+";base64,"+e;const p="/textureDefinitions/"+m,r="rgba"===d.channels?d.alphaChannelUsage||"transparency":"none",w={noUnpackFlip:!0,wrap:{s:H.TextureWrapMode.REPEAT,t:H.TextureWrapMode.REPEAT},preMultiplyAlpha:K(r)!==n.AlphaDiscardMode.Opaque};d=null!=b&&b.disableTextures?Promise.resolve(null):R.requestImage(e,b);c.push(d.then(A=>
({refId:p,image:A,parameters:w,alphaChannelUsage:r})))}a=await Promise.all(c);b={};for(const m of a)b[m.refId]=m;return b}function K(a){switch(a){case "mask":return n.AlphaDiscardMode.Mask;case "maskAndTransparency":return n.AlphaDiscardMode.MaskBlend;case "none":return n.AlphaDiscardMode.Opaque;case "transparency":return n.AlphaDiscardMode.Blend;default:return n.AlphaDiscardMode.Blend}}function ba(a){a=a.params;return{id:1,material:a.material,texture:a.texture,region:a.texture}}const l=P.getLogger("esri.views.3d.layers.graphics.objectResourceUtils"),
ca=new F.Version(1,2,"wosr");v.createTextureResources=J;v.load=async function(a,b){a=await X(a,b);b=await J(a.textureDefinitions??{},b);let c=0;for(const d in b)if(b.hasOwnProperty(d)){const e=b[d];c+=e?.image?e.image.width*e.image.height*4:0}return{resource:a,textures:b,size:c+N.estimateNestedObjectSize(a)}};v.processLoadResult=function(a,b){const c=[],d=[],e=[],m=new Q.NestedMap,p=a.resource;var r=F.Version.parse(p.version||"1.0","wosr");ca.validate(r);r=p.model.name;const w=p.model.geometries,
A=p.materialDefinitions??{};a=a.textures;let L=0;const B=new Map;for(let C=0;C<w.length;C++){var f=w[C];if(Z(f)){var q=ba(f),t=f.params.vertexAttributes,x=[];for(const k in t){var h=t[k];x.push([k,new S.Attribute(h.values,h.valuesPerElement,!0)])}t=[];if("PerAttributeArray"!==f.params.topology){f=f.params.faces;for(const k in f)t.push([k,f[k].values])}f=q.texture;if((h=a&&a[f])&&!B.has(f)){const {image:k,parameters:da}=h;var u=new U.Texture(k,da);d.push(u);B.set(f,u)}u=(u=B.get(f))?u.id:void 0;q=
q.material;var g=m.get(q,f);if(null==g){g=q.substring(q.lastIndexOf("/")+1);g=A[g].params;1===g.transparency&&(g.transparency=0);var y=h&&h.alphaChannelUsage;y=0<g.transparency||"transparency"===y||"maskAndTransparency"===y;const k=h?K(h.alphaChannelUsage):void 0;h={ambient:G.fromArray(g.diffuse),diffuse:G.fromArray(g.diffuse),opacity:1-(g.transparency||0),transparent:y,textureAlphaMode:k,textureAlphaCutoff:.33,textureId:u,initTextureTransparent:!0,doubleSided:!0,cullFace:n.CullFaceOptions.None,colorMixMode:g.externalColorMixMode||
"tint",textureAlphaPremultiplied:h?.parameters.preMultiplyAlpha??!1};null!=b&&b.materialParamsMixin&&Object.assign(h,b.materialParamsMixin);g=new W.DefaultMaterial(h);m.set(q,f,g)}e.push(g);x=new T.Geometry(g,x,t);L+=t.find(k=>k[0]===V.VertexAttribute.POSITION)?.[1].length??0;c.push(x)}}return{engineResources:[{name:r,stageResources:{textures:d,materials:e,geometries:c},pivotOffset:p.model.pivotOffset,numberOfVertices:L,lodThreshold:null}],referenceBoundingBox:aa(c)}};Object.defineProperty(v,Symbol.toStringTag,
{value:"Module"})});