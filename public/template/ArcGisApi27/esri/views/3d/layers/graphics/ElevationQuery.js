// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../geometry ../../../../core/arrayUtils ../../../../core/promiseUtils ../../../support/Scheduler ../../../../geometry/Multipoint".split(" "),function(n,p,q,t,k,r,u){q=function(){function l(c,a){this.spatialReference=c;this._view=a}var m=l.prototype;m.getElevation=function(c,a,d){return this._view.elevationProvider.getElevation(c,a,0,this.spatialReference,d)};m.queryElevation=async function(c,a,d,f,g){return this._view.elevationProvider.queryElevation(c,
a,0,this.spatialReference,g,d,f)};return p._createClass(l)}();let x=function(){function l(c,a,d,f){this.spatialReference=a;this._getElevationQueryProvider=d;this._queries=[];this._queryOptions={...f,ignoreInvisibleLayers:!0};this._frameTask=c.registerTask(r.TaskPriority.ELEVATION_QUERY,this)}var m=l.prototype;m.destroy=function(){this._frameTask.remove()};m.queryElevation=function(c,a,d,f=0){const g=k.createResolver(),h={x:c,y:a,minDemResolution:f,result:g,signal:d};this._queries.push(h);k.onAbort(d,
()=>{t.remove(this._queries,h);g.reject(k.createAbortError())});return g.promise};m.runTask=function(c){const a=this._queries;this._queries=[];const d=this._getElevationQueryProvider();if(d){var f=a.map(b=>[b.x,b.y]),g=a.reduce((b,e)=>Math.min(b,e.minDemResolution),Infinity);f=new u({points:f,spatialReference:this.spatialReference});var h=1<a.length&&a.some(b=>!!b.signal)?new AbortController:null,v=null!=h?h.signal:a[0].signal;if(null!=h){let b=0;a.forEach(e=>k.onAbort(e.signal,()=>{b++;e.result.reject(k.createAbortError());
b===a.length&&h.abort()}))}d.queryElevation(f,{...this._queryOptions,minDemResolution:g,signal:v}).then(b=>{a.forEach((e,w)=>{null!=e.signal&&e.signal.aborted?e.result.reject(k.createAbortError()):e.result.resolve(b.geometry.points[w][2])})}).catch(b=>{a.forEach(e=>e.result.reject(b))})}else a.forEach(b=>b.result.reject());c.madeProgress()};p._createClass(l,[{key:"running",get:function(){return 0<this._queries.length}},{key:"test",get:function(){const c=this;return{update:()=>0<c._queries.length&&
c.runTask(r.noBudget)}}}]);return l}();n.ElevationQuery=x;n.ViewElevationProvider=q;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});