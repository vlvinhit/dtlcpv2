// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Evented ../../../core/HandleOwner ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../geometry/projection ../../../support/elevationInfoUtils ./Settings ./SnappingDomain ./snappingFactory ./SnappingOptions ./SnappingPoint ./snappingUtils ./candidates/IntersectionSnappingCandidate ../support/viewUtils".split(" "),
function(l,C,p,G,H,I,u,t,O,P,Q,J,A,B,D,x,K,L,v,E,y,M){function N({coordinateHelper:q,elevationInfo:w}){return q.hasZ()?B.absoluteHeightElevationInfo:w}l.SnappingManager=function(q){function w(a){a=q.call(this,a)||this;a.options=new L;a.snappingEnginesFactory=K.defaultSnappingEnginesFactory;a._engines=[];a._currentMainCandidate=null;a._currentOtherActiveCandidates=[];a._currentSnappedType=r.MAIN;return a}C._inherits(w,q);var g=w.prototype;g.initialize=function(){this.handles.add([u.watch(()=>{const {effectiveFeatureEnabled:a,
effectiveSelfEnabled:b,touchSensitivityMultiplier:c,distance:d}=this.options;return{effectiveFeatureEnabled:a,effectiveSelfEnabled:b,touchSensitivityMultiplier:c,distance:d}},()=>{this.doneSnapping();this.emit("changed")},u.sync),u.watch(()=>this.options,a=>{for(const b of this._engines)b.options=a},u.sync),u.watch(()=>({viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,snappingEnginesFactory:this.snappingEnginesFactory}),({viewReady:a,snappingEnginesFactory:b})=>this._recreateEngines(a,
b),u.syncAndInitial)])};g.destroy=function(){this._destroyEngines()};g._recreateEngines=function(a,b){this._destroyEngines();if(a){var {view:c,options:d}=this;this._engines=b(c,d)}};g._destroyEngines=function(){for(const a of this._engines)a.destroy();this._engines=[]};g.snap=async function(a){return null!=a.scenePoint?this._snapMultiPoint(a):this._snapSinglePoint(a)};g.update=function(a){const {point:b,context:c}=a;this._removeVisualization();const d=this._currentMainCandidate;if(null==d)return b;
var e=this._selectUpdateInput(a);if(null==e)return b;({spatialReference:a}=c);var f=A.project(e,a);if(null==f)return b;({view:e}=this);const {elevationInfo:n,visualizer:h}=c,k=[];f=v.pointToSnappingPoint(f,e,c);const m=d.constraint.closestTo(f);if(!this._arePointsWithinScreenThreshold(f,m,c))return this._resetSnappingState(),b;d.targetPoint=m;k.push(...d.hints);for(const z of this._currentOtherActiveCandidates)z.targetPoint=m,k.push(...z.hints);null!=h&&this.handles.add(h.draw(k,{spatialReference:a,
elevationInfo:N(c),view:e,selfSnappingZ:c.selfSnappingZ}),"visualization-handle");return v.snappingPointToSnappingOutput(m,e,{z:b.z,m:b.m,spatialReference:b.spatialReference,elevationInfo:n})};g.doneSnapping=function(){this._removeVisualization();this._resetSnappingState()};g._selectUpdateInput=function({point:a,scenePoint:b}){switch(this._currentSnappedType){case r.MAIN:return a;case r.SCENE:return b}};g._resetSnappingState=function(){this._currentMainCandidate=null;this._currentOtherActiveCandidates=
[];this._currentSnappedType=r.MAIN};g._removeVisualization=function(){this.handles.remove("visualization-handle")};g._snapSinglePoint=async function({point:a,context:b,signal:c}){const {view:d}=this,e=v.pointToSnappingPoint(a,d,b),f=await this._fetchCandidates(e,x.SnappingDomain.ALL,b,c);return this._createSnapResult(e,r.MAIN,f,d,b,{z:a.z,m:a.m,spatialReference:a.spatialReference,elevationInfo:b.elevationInfo},c)};g._snapMultiPoint=async function({point:a,scenePoint:b,context:c,signal:d}){const {view:e}=
this,{coordinateHelper:f,spatialReference:n}=c;await A.initializeProjection(b.spatialReference,n);b=A.project(b,n);var h=v.pointToSnappingPoint(b,e,c);const k=await this._fetchCandidates(h,x.SnappingDomain.FEATURE,c,d);if(0<k.length)return a=await this._fetchCandidates(h,x.SnappingDomain.SELF,c,d),this._createSnapResult(h,r.SCENE,[...k,...a],e,c,{z:b.z,m:b.m,spatialReference:b.spatialReference,elevationInfo:c.elevationInfo},d);b=v.pointToSnappingPoint(a,e,c);h=await this._fetchCandidates(b,x.SnappingDomain.SELF,
c,d);return this._createSnapResult(b,r.MAIN,h,e,c,{z:f.hasZ()&&a.hasZ?a.z??0:void 0,m:f.hasM()&&a.hasM?a.m??0:void 0,spatialReference:a.spatialReference,elevationInfo:c.elevationInfo},d)};g._fetchCandidates=async function(a,b,c,d){return(await Promise.all(this._engines.map(e=>e.fetchCandidates(a,b,c,d)))).flat()};g._createSnapResult=function(a,b,c,d,e,f,n){return{get valid(){return!I.isAborted(n)},apply:()=>{const {spatialReference:h}=e,{snappedPoint:k,hints:m}=this._processCandidates(a,b,c,e);this._removeVisualization();
null!=e.visualizer&&this.handles.add(e.visualizer.draw(m,{spatialReference:h,elevationInfo:B.absoluteHeightElevationInfo,view:d,selfSnappingZ:e.selfSnappingZ}),"visualization-handle");return v.snappingPointToSnappingOutput(k,d,f)}}};g._processCandidates=function(a,b,c,d){if(1>c.length)return this.doneSnapping(),{snappedPoint:a,hints:[]};this._currentSnappedType!==b&&this._resetSnappingState();E.sortCandidatesInPlace(a,c);const e=this._currentMainCandidate;if(null!=e){const f=this._findOldConstraintInNewCandidates(e,
c);if(0<=f)if(c[f]instanceof y.IntersectionSnappingCandidate){if(this._arePointsWithinScreenThreshold(a,e.targetPoint,d))return this._updateSnappingCandidate(e,b,c,d)}else return this._intersectWithOtherCandidates(f,c,a,b,d)}return this._intersectWithOtherCandidates(0,c,a,b,d)};g._findOldConstraintInNewCandidates=function(a,b){return a instanceof y.IntersectionSnappingCandidate?0<=this._findOldCandidateIndex(b,a.first)&&0<=this._findOldCandidateIndex(b,a.second)?0:-1:this._findOldCandidateIndex(b,
a)};g._intersectWithOtherCandidates=function(a,b,c,d,e){const {coordinateHelper:f}=e,n=b[a],h=[];for(let k=0;k<b.length;++k){if(k===a)continue;const m=b[k];for(const z of n.constraint.intersect(m.constraint)){const F=z.closestTo(n.targetPoint);h.push([new y.IntersectionSnappingCandidate(F,n,m,m.isDraped),this._squaredScreenDistance(c,F,f)])}}return 0<h.length&&(h.sort((k,m)=>k[1]-m[1]),h[0][1]<this._squaredPointProximityThreshold(e.pointer))?this._updateSnappingCandidate(h[0][0],d,b,e):this._updateSnappingCandidate(n,
d,b,e)};g._updateSnappingCandidate=function(a,b,c,d){this.doneSnapping();this._currentMainCandidate=a;this._currentSnappedType=b;b=this._currentMainCandidate.targetPoint;const e=[];e.push(...a.hints);for(const f of c){if(a instanceof y.IntersectionSnappingCandidate){if(f.constraint.equals(a.first.constraint)||f.constraint.equals(a.second.constraint))continue}else if(f.constraint.equals(a.constraint))continue;c=f.constraint.closestTo(b);this._squaredScreenDistance(c,b,d.coordinateHelper)<this._squaredSatisfiesConstraintThreshold&&
(f.targetPoint=b,this._currentOtherActiveCandidates.push(f),e.push(...f.hints))}return{snappedPoint:b,hints:e}};g._squaredPointProximityThreshold=function(a){return"touch"===a?this._squaredTouchProximityThreshold:this._squaredMouseProximityTreshold};g._arePointsWithinScreenThreshold=function(a,b,c){return this._squaredScreenDistance(a,b,c.coordinateHelper)<this._squaredPointProximityThreshold(c.pointer)};g._squaredScreenDistance=function(a,b,c){return E.squaredScreenDistance(this._toScreen(a,c),this._toScreen(b,
c))};g._toScreen=function(a,b){return M.vectorToScreenPoint(a,b.spatialReference,B.absoluteHeightElevationInfo,this.view)};g._findOldCandidateIndex=function(a,b){let c=-1;for(let d=0;d<a.length;++d)if(b.constraint.equals(a[d].constraint)){c=d;break}return c};C._createClass(w,[{key:"updating",get:function(){return this._engines.some(a=>a.updating)}},{key:"_squaredMouseProximityTreshold",get:function(){return this.options.distance*this.options.distance}},{key:"_squaredTouchProximityThreshold",get:function(){const {distance:a,
touchSensitivityMultiplier:b}=this.options,c=a*b;return c*c}},{key:"_squaredSatisfiesConstraintThreshold",get:function(){return D.defaults.satisfiesConstraintScreenThreshold*D.defaults.satisfiesConstraintScreenThreshold}},{key:"test",get:function(){return{visualizationsActive:this.handles.has("visualization-handle"),engines:this._engines}}}]);return w}(G.EventedMixin(H.HandleOwner));p.__decorate([t.property({constructOnly:!0})],l.SnappingManager.prototype,"view",void 0);p.__decorate([t.property()],
l.SnappingManager.prototype,"options",void 0);p.__decorate([t.property({readOnly:!0})],l.SnappingManager.prototype,"updating",null);p.__decorate([t.property()],l.SnappingManager.prototype,"snappingEnginesFactory",void 0);p.__decorate([t.property()],l.SnappingManager.prototype,"_engines",void 0);p.__decorate([t.property()],l.SnappingManager.prototype,"_squaredMouseProximityTreshold",null);p.__decorate([t.property()],l.SnappingManager.prototype,"_squaredTouchProximityThreshold",null);p.__decorate([t.property()],
l.SnappingManager.prototype,"_squaredSatisfiesConstraintThreshold",null);l.SnappingManager=p.__decorate([J.subclass("esri.views.interactive.snapping.SnappingManager")],l.SnappingManager);var r;(function(q){q[q.MAIN=0]="MAIN";q[q.SCENE=1]="SCENE"})(r||(r={}));Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});