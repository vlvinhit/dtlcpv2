// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/HandleOwner ../../../../core/handleUtils ../../../../core/promiseUtils ../../../../core/reactiveUtils ../../../../core/signal ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../support/elevationInfoUtils ../../../2d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles2D ../../../3d/interactive/snapping/featureSources/featureServiceSource/FeatureServiceTiles3D ./queryEngineUtils ./WorkerTileTreeDebugger ./featureServiceSource/FeatureServiceSnappingSourceWorkerHandle ./featureServiceSource/FeatureServiceTilesSimple ../../../support/debugFlags".split(" "),
function(b,v,f,z,A,w,g,c,B,k,J,K,L,C,D,E,F,x,G,t,H,I){b.FeatureServiceSnappingSource=function(y){function q(a){a=y.call(this,a)||this;a._workerHandle=null;a._debug=null;return a}v._inherits(q,y);var r=q.prototype;r.initialize=function(){let a;const d=this.view;if(null!=d)switch(d.type){case "2d":this._tilesOfInterest=new E.FeatureServiceTiles2D({view:d,layer:this._layer});a=this._workerHandle=new t.FeatureServiceSnappingSourceWorkerHandle;break;case "3d":const {resourceController:h}=d,n=this._layer,
p=d.whenLayerView(n);this._tilesOfInterest=new F.FeatureServiceTiles3D({view:d});a=this._workerHandle=new t.FeatureServiceSnappingSourceWorkerHandle({schedule:e=>h.immediate.schedule(e),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(e,l)=>{const u=await p;g.throwIfAborted(l);return u.elevationAlignPointsInFeatures(e,l)},queryForSymbologySnapping:async(e,l)=>{const u=await p;g.throwIfAborted(l);return u.queryForSymbologySnapping(e,l)}});const m=B.signal(null);
p.then(e=>m.value=e);this.addHandles([d.elevationProvider.on("elevation-change",({context:e})=>{const {elevationInfo:l}=n;D.elevationContextAffectsAlignment(e,l)&&g.ignoreAbortErrors(a.notifyElevationSourceChange())}),c.watch(()=>n.elevationInfo,()=>g.ignoreAbortErrors(a.notifyElevationSourceChange()),c.initial),c.watch(()=>m.value?.processor?.renderer,()=>g.ignoreAbortErrors(a.notifySymbologyChange()),c.initial),c.watch(()=>m.value?.symbologySnappingSupported??!1,e=>g.ignoreAbortErrors(a.setSymbologySnappingSupported(e)),
c.initial),c.on(()=>m.value?.layer,["edits","apply-edits","graphic-update"],()=>a.notifySymbologyChange())])}else this._tilesOfInterest=new H.FeatureServiceTilesSimple({layer:this._layer}),a=this._workerHandle=new t.FeatureServiceSnappingSourceWorkerHandle;this.handles.add([w.destroyHandle(a)]);g.ignoreAbortErrors(a.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null));this.updatingHandles.add(()=>this._updateTilesParameters,()=>g.ignoreAbortErrors(a.updateTiles(this._updateTilesParameters,
null)),c.initial);this.handles.add([c.watch(()=>this.configuration,h=>g.ignoreAbortErrors(a.configure(h,null)),c.sync)]);null!=d&&this.handles.add(c.watch(()=>I.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,h=>{h&&!this._debug?(this._debug=new G.WorkerTileTreeDebugger({view:d,handle:a}),this.handles.add(w.destroyHandle(this._debug),"debug")):!h&&this._debug&&this.handles.remove("debug")},c.initial));this.handles.add(this.layerSource.layer.on("apply-edits",h=>{g.ignoreAbortErrors(a.applyEdits(h,
null))}))};r.refresh=function(){this._workerHandle?.refresh(null)};r.fetchCandidates=async function(a,d){const {coordinateHelper:h,point:n}=a;this._tilesOfInterest.pointOfInterest=h.arrayToPoint(n);const p=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...a},d)).candidates.map(m=>x.convertSnappingCandidate(m,p))};r.getDebugInfo=function(a){return this._workerHandle.getDebugInfo(a)};v._createClass(q,[{key:"_updateTilesParameters",get:function(){return{tiles:this._tilesOfInterest.tiles,
tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}},{key:"updating",get:function(){return this._workerHandle?.updating||this.updatingHandles.updating}},{key:"configuration",get:function(){var {view:a}=this;a=null!=a?a.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:a}}},{key:"availability",get:function(){return this._workerHandle?.availability??0}},{key:"_layer",get:function(){return this.layerSource.layer}},{key:"_getGroundElevation",
get:function(){return x.makeGetGroundElevation(this.view)}}]);return q}(A.HandleOwnerMixin(z));f.__decorate([k.property({constructOnly:!0})],b.FeatureServiceSnappingSource.prototype,"spatialReference",void 0);f.__decorate([k.property({constructOnly:!0})],b.FeatureServiceSnappingSource.prototype,"layerSource",void 0);f.__decorate([k.property({constructOnly:!0})],b.FeatureServiceSnappingSource.prototype,"view",void 0);f.__decorate([k.property()],b.FeatureServiceSnappingSource.prototype,"_tilesOfInterest",
void 0);f.__decorate([k.property({readOnly:!0})],b.FeatureServiceSnappingSource.prototype,"_updateTilesParameters",null);f.__decorate([k.property({readOnly:!0})],b.FeatureServiceSnappingSource.prototype,"updating",null);f.__decorate([k.property({readOnly:!0})],b.FeatureServiceSnappingSource.prototype,"configuration",null);f.__decorate([k.property({readOnly:!0})],b.FeatureServiceSnappingSource.prototype,"availability",null);f.__decorate([k.property()],b.FeatureServiceSnappingSource.prototype,"_getGroundElevation",
null);b.FeatureServiceSnappingSource=f.__decorate([C.subclass("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],b.FeatureServiceSnappingSource);Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});