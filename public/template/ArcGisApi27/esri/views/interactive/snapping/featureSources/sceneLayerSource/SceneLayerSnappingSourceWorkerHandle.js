// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec3f64 ../../../../../core/workers/WorkerHandle ../../../../../chunks/sphere ../../SnappingPoint ../../candidates/EdgeSnappingCandidate ../../candidates/VertexSnappingCandidate".split(" "),
function(e,p,l,u,q,D,E,F,v,r,w,x,y,z,A){e.SceneLayerSnappingSourceWorkerHandle=function(m){function h(a){a=m.call(this,a)||this;a.availability=0;a._ids=new Set;return a}p._inherits(h,m);var c=h.prototype;c.destroy=function(){this._workerHandle.destroy();this._workerHandle=null};c.initialize=function(){this._workerHandle=new B(this.schedule,{fetchAllEdgeLocations:(a,b)=>this._fetchAllEdgeLocations(a,b)})};c.fetchCandidates=async function(a,b){const f=a.coordinateHelper;var {point:g}=a;const d=C;this.renderCoordsHelper.toRenderCoords(g,
f.spatialReference,d);g=a.distance;a=await this._workerHandle.invoke({bounds:x.fromValues(d[0],d[1],d[2],"number"===typeof g?g:g.distance),returnEdge:a.returnEdge,returnVertex:a.returnVertex},b);a.candidates.sort((n,k)=>n.distance-k.distance);return a.candidates.map(n=>this._convertCandidate(f,n))};c.add=async function(a,b){this._ids.add(a.id);await this._workerHandle.invokeMethod("add",a,b)};c.remove=async function(a,b){this._ids.delete(a.id);await this._workerHandle.invokeMethod("remove",a,b)};
c._convertCandidate=function(a,b){switch(b.type){case "edge":return new z.EdgeSnappingCandidate({objectId:b.objectId,targetPoint:this._convertRenderCoordinate(a,b.target),edgeStart:this._convertRenderCoordinate(a,b.start),edgeEnd:this._convertRenderCoordinate(a,b.end),isDraped:!1});case "vertex":return new A.VertexSnappingCandidate({objectId:b.objectId,targetPoint:this._convertRenderCoordinate(a,b.target),isDraped:!1})}};c._convertRenderCoordinate=function({spatialReference:a},b){const f=r.create();
this.renderCoordsHelper.fromRenderCoords(b,f,a);return y.asSnappingPoint(f)};c._fetchAllEdgeLocations=async function(a,b){const f=[],g=[];for(const {id:d,uid:n}of a.components)this._ids.has(d)&&f.push((async()=>{const k=await this.fetchEdgeLocations(d,b.signal),t=k.locations.buffer;g.push(t);return{id:d,uid:n,objectIds:k.objectIds,locations:t,origin:k.origin,type:k.type}})());return{result:{components:(await Promise.all(f)).filter(({id:d})=>this._ids.has(d))},transferList:g}};return p._createClass(h)}(u.HandleOwner);
l.__decorate([q.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"renderCoordsHelper",void 0);l.__decorate([q.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"fetchEdgeLocations",void 0);l.__decorate([q.property({constructOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"schedule",void 0);l.__decorate([q.property({readOnly:!0})],e.SceneLayerSnappingSourceWorkerHandle.prototype,"availability",void 0);e.SceneLayerSnappingSourceWorkerHandle=
l.__decorate([v.subclass("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],e.SceneLayerSnappingSourceWorkerHandle);let B=function(m){function h(c,a){return m.call(this,"SceneLayerSnappingSourceWorker","fetchCandidates",{},c,{strategy:"dedicated",client:a})||this}p._inherits(h,m);return p._createClass(h)}(w.WorkerHandle);const C=r.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});