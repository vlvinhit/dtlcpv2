// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../core/arrayUtils ../../core/Logger ../../core/maybe ../../core/typedArrayUtil ./checkWebGLError ./contextUtils ./enums".split(" "),function(q,t,u,m,v,r,n,k,d){const g=m.getLogger("esri.views.webgl.BufferObject");m=function(){function f(a,b,c,e){this._context=a;this.bufferType=b;this.usage=c;this._glName=null;this._size=-1;this._indexType=void 0;a.instanceCounter.increment(d.ResourceType.BufferObject,this);this._glName=this._context.gl.createBuffer();
n.checkWebGLError(this._context.gl);e&&this.setData(e)}f.createIndex=function(a,b,c){return new f(a,d.BufferType.ELEMENT_ARRAY_BUFFER,b,c)};f.createVertex=function(a,b,c){return new f(a,d.BufferType.ARRAY_BUFFER,b,c)};f.createUniform=function(a,b,c){if(a.type!==k.ContextType.WEBGL2)throw Error("Uniform buffers are supported in WebGL2 only!");return new f(a,d.BufferType.UNIFORM_BUFFER,b,c)};f.createPixelPack=function(a,b=d.Usage.STREAM_READ,c){if(a.type!==k.ContextType.WEBGL2)throw Error("Pixel pack buffers are supported in WebGL2 only!");
a=new f(a,d.BufferType.PIXEL_PACK_BUFFER,b);c&&a.setSize(c);return a};f.createPixelUnpack=function(a,b=d.Usage.STREAM_DRAW,c){if(a.type!==k.ContextType.WEBGL2)throw Error("Pixel unpack buffers are supported in WebGL2 only!");return new f(a,d.BufferType.PIXEL_UNPACK_BUFFER,b,c)};var h=f.prototype;h.dispose=function(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(d.ResourceType.BufferObject,this),this._context=
v.nullifyNonNullableForDispose(this._context)):this._glName&&g.warn("Leaked WebGL buffer object")};h.setSize=function(a,b=null){0>=a&&g.error("Buffer size needs to be positive!");if(this.bufferType===d.BufferType.ELEMENT_ARRAY_BUFFER&&null!=b)switch(this._indexType=b,b){case d.DataType.UNSIGNED_SHORT:a*=2;break;case d.DataType.UNSIGNED_INT:a*=4}this._setBufferData(a)};h.setData=function(a){if(a){var b=a.byteLength;this.bufferType===d.BufferType.ELEMENT_ARRAY_BUFFER&&(r.isUint16Array(a)&&(b/=2,this._indexType=
d.DataType.UNSIGNED_SHORT),r.isUint32Array(a)&&(b/=4,this._indexType=d.DataType.UNSIGNED_INT));this._setBufferData(b,a)}};h._setBufferData=function(a,b=null){this._size=a;const c=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null);this._context.bindBuffer(this);const e=this._context.gl;null!=b?e.bufferData(this.bufferType,b,this.usage):e.bufferData(this.bufferType,a,this.usage);n.checkWebGLError(e);this._isVAOAware&&this._context.bindVAO(c)};h.setSubData=function(a,b,c,e){if(a){(0>
b||b*a.BYTES_PER_ELEMENT>=this.byteLength)&&g.error("offset is out of range!");c>=e&&g.error("end must be bigger than start!");(b+(e-c))*a.BYTES_PER_ELEMENT>this.byteLength&&g.error("An attempt to write beyond the end of the buffer!");var l=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null);this._context.bindBuffer(this);var p=this._context.gl;this._context.type===k.ContextType.WEBGL2?p.bufferSubData(this.bufferType,b*a.BYTES_PER_ELEMENT,a,c,e-c):(c=0===c&&e===a.length?a:a.subarray(c,
e),p.bufferSubData(this.bufferType,b*a.BYTES_PER_ELEMENT,c));n.checkWebGLError(p);this._isVAOAware&&this._context.bindVAO(l)}};h.getSubData=function(a,b=0,c,e){if(this._context.type!==k.ContextType.WEBGL2)g.error("Get buffer subdata is supported in WebGL2 only!");else if(0>c||0>e)g.error("Problem getting subdata: offset and length were less than zero!");else{var l=u.isArrayLike(a)?a.BYTES_PER_ELEMENT:1;l*((c??0)+(e??0))>a.byteLength?g.error("Problem getting subdata: offset and length exceeded destination size!"):
(b+l*(e??0)>this.byteLength&&g.warn("Potential problem getting subdata: requested data exceeds buffer size!"),l=this._context.gl,this._context.bindBuffer(this,d.BufferType.COPY_READ_BUFFER),l.getBufferSubData(d.BufferType.COPY_READ_BUFFER,b,a,c,e),this._context.unbindBuffer(d.BufferType.COPY_READ_BUFFER))}};h.getSubDataAsync=async function(a,b=0,c,e){this._context.type!==k.ContextType.WEBGL2?g.error("Get buffer subdata is supported in WebGL2 only!"):(await this._context.clientWaitAsync(),this.getSubData(a,
b,c,e))};t._createClass(f,[{key:"glName",get:function(){return this._glName}},{key:"size",get:function(){return this._size}},{key:"indexType",get:function(){return this._indexType}},{key:"byteLength",get:function(){return this.bufferType===d.BufferType.ELEMENT_ARRAY_BUFFER?this._indexType===d.DataType.UNSIGNED_INT?4*this._size:2*this._size:this._size}},{key:"_isVAOAware",get:function(){return this.bufferType===d.BufferType.ELEMENT_ARRAY_BUFFER||this.bufferType===d.BufferType.ARRAY_BUFFER}}]);return f}();
q.BufferObject=m;Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});