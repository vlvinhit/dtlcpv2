// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../core/has ../../core/Logger ../../core/maybe ./BufferObject ./checkWebGLError ./contextUtils ./enums ./GLObjectType ./Renderbuffer ./Texture".split(" "),function(t,A,u,x,v,B,y,C,d,q,D,n){function r(f){return null!=f&&"type"in f&&f.type===q.GLObjectType.Texture}function p(f,e){const a=Math.max(f.width,f.height);return a>e?(E.warn(`Resizing FBO attachment size ${f.width}x${f.height} to device limit ${e}`),e/=a,f.width=Math.round(f.width*e),
f.height=Math.round(f.height*e),!1):!0}function z(f){return f.descriptor.target===d.TextureType.TEXTURE_CUBE_MAP?d.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X:d.TextureType.TEXTURE_2D}const E=x.getLogger("esri.views.webgl.FramebufferObject");u=function(){function f(a,b,c=null){this._context=a;this._glName=null;this._colorAttachments=new Map;this._depthStencilTexture=this._stencilBuffer=this._depthBuffer=null;this._initialized=!1;a.instanceCounter.increment(d.ResourceType.FramebufferObject,this);a=r(b)?
b:new n.Texture(this._context,b);this._colorAttachments.set(d.ColorAttachment.COLOR_ATTACHMENT0,a);this._validateTextureDescriptor(a.descriptor);this._validateColorAttachmentPoint(d.ColorAttachment.COLOR_ATTACHMENT0);null!=c&&(r(c)||null!=c&&"pixelFormat"in c?(this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=r(c)?c:new n.Texture(this._context,c),this._validateTextureDescriptor(this._depthStencilTexture.descriptor)):
(c=null!=c&&"type"in c&&c.type===q.GLObjectType.RenderBuffer?c:new D.Renderbuffer(this._context,c),a=c.descriptor,a.internalFormat===d.RenderbufferFormat.STENCIL_INDEX8?this._stencilBuffer=c:this._depthBuffer=c,this._validateRenderBufferDescriptor(a)))}var e=f.prototype;e.dispose=function(){if(0!==this._colorAttachments.size||this._glName){var a=this._context.getBoundFramebufferObject();this._colorAttachments.forEach((b,c)=>this.detachColorTexture(c)?.dispose());this.detachDepthStencilBuffer()?.dispose();
this.detachDepthStencilTexture()?.dispose();this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null);this._context.bindFramebuffer(a);this._context.instanceCounter.decrement(d.ResourceType.FramebufferObject,this)}};e.getColorTexture=function(a){return(a=this._colorAttachments.get(a))&&r(a)?a:null};e.attachColorTexture=function(a,b=d.ColorAttachment.COLOR_ATTACHMENT0){a&&(this._validateColorAttachmentPoint(b),this._validateTextureDescriptor(a.descriptor),this.detachColorTexture(b)?.dispose(),
this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(a.glName,b)),this._colorAttachments.set(b,a))};e.detachColorTexture=function(a=d.ColorAttachment.COLOR_ATTACHMENT0){const b=this._colorAttachments.get(a);if(b)return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,a)),this._colorAttachments.delete(a),b};e.setColorTextureTarget=function(a,b=d.ColorAttachment.COLOR_ATTACHMENT0){const c=this._colorAttachments.get(b);c&&this._framebufferTexture2D(c.glName,
b,a)};e.attachDepthStencil=function(a){if(a)switch(a.type){case q.GLObjectType.Texture:return this._attachDepthStencilTexture(a);case q.GLObjectType.RenderBuffer:return this._attachDepthStencilBuffer(a)}};e._attachDepthStencilTexture=function(a){if(null!=a){var b=a.descriptor;b.pixelFormat!==d.PixelFormat.DEPTH_STENCIL&&b.pixelFormat!==d.PixelFormat.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!");b.dataType!==d.PixelType.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!");
this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!");this._validateTextureDescriptor(b);this._disposeDepthStencilAttachments();this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(a.glName,d.DepthStencilAttachment));this._depthStencilTexture?.dispose();this._depthStencilTexture=a}};e.detachDepthStencilTexture=function(){const a=this._depthStencilTexture;a&&
this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,d.DepthStencilAttachment));this._depthStencilTexture=null;return a};e._attachDepthStencilBuffer=function(a){if(null!=a){var b=a.descriptor;b.internalFormat!==d.RenderbufferFormat.DEPTH_STENCIL&&b.internalFormat!==d.RenderbufferFormat.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat");this._validateRenderBufferDescriptor(b);this._disposeDepthStencilAttachments();if(this._initialized){this._context.bindFramebuffer(this);
const c=this._context.gl;b=this._getGLAttachmentPoint(b);c.framebufferRenderbuffer(d.FramebufferTarget.FRAMEBUFFER,b,c.RENDERBUFFER,a.glName)}this._depthBuffer?.dispose();this._depthBuffer=a}};e.detachDepthStencilBuffer=function(){const a=this._depthBuffer;if(a&&this._initialized){this._context.bindFramebuffer(this);const b=this._context.gl,c=this._getGLAttachmentPoint(a.descriptor);b.framebufferRenderbuffer(d.FramebufferTarget.FRAMEBUFFER,c,b.RENDERBUFFER,null);a.dispose()}this._depthBuffer=null;
return a};e.copyToTexture=function(a,b,c,g,h,m,k){(0>a||0>b||0>h||0>m)&&console.error("Offsets cannot be negative!");(0>=c||0>=g)&&console.error("Copy width and height must be greater than zero!");var l=k.descriptor;k.descriptor.target!==d.TextureType.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!");(null==l?.width||null==l?.height||a+c>this.width||b+g>this.height||h+c>l.width||m+g>l.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");
l=this._context;k=l.bindTexture(k,n.Texture.TEXTURE_UNIT_FOR_UPDATES);l.setActiveTexture(n.Texture.TEXTURE_UNIT_FOR_UPDATES);l.bindFramebuffer(this);l.gl.copyTexSubImage2D(d.TextureType.TEXTURE_2D,0,h,m,a,b,c,g);l.bindTexture(k,n.Texture.TEXTURE_UNIT_FOR_UPDATES)};e.readPixels=function(a,b,c,g,h,m,k){(0>=c||0>=g)&&console.error("Copy width and height must be greater than zero!");k||console.error("Target memory is not initialized!");this._context.bindFramebuffer(this);this._context.gl.readPixels(a,
b,c,g,h,m,k)};e.readPixelsAsync=async function(a,b,c,g,h,m,k){if(this._context.type!==C.ContextType.WEBGL2)y.webglDebugEnabled()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),this.readPixels(a,b,c,g,h,m,k);else{var l=this._context.gl,w=B.BufferObject.createPixelPack(this._context,d.Usage.STREAM_READ,k.byteLength);this._context.bindBuffer(w);this._context.bindFramebuffer(this);l.readPixels(a,b,c,g,h,m,0);this._context.unbindBuffer(d.BufferType.PIXEL_PACK_BUFFER);
await w.getSubDataAsync(k);w.dispose()}};e.resize=function(a,b){if(this.width!==a||this.height!==b){var c={width:a,height:b};p(c,this._context.parameters.maxTextureSize);this._colorAttachments.forEach(g=>g.resize(c.width,c.height));this._depthStencilTexture?.resize(c.width,c.height);this._initialized&&(p(c,this._context.parameters.maxRenderbufferSize),this._depthBuffer?.resize(c.width,c.height),this._stencilBuffer?.resize(c.width,c.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),
this._initialized=!1)}};e.initializeAndBind=function(a=d.FramebufferTarget.FRAMEBUFFER){const b=this._context.gl;if(this._initialized)b.bindFramebuffer(a,this.glName);else{this._glName&&b.deleteFramebuffer(this._glName);var c=b.createFramebuffer();b.bindFramebuffer(a,c);this._colorAttachments.forEach((h,m)=>this._framebufferTexture2D(h.glName,m,z(h),a));var g=this._depthBuffer||this._stencilBuffer;if(g){const h=this._getGLAttachmentPoint(g.descriptor);b.framebufferRenderbuffer(a,h,b.RENDERBUFFER,
g.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,b.DEPTH_STENCIL_ATTACHMENT,z(this._depthStencilTexture),a);y.webglDebugEnabled()&&b.checkFramebufferStatus(a)!==b.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!");this._glName=c;this._initialized=!0}};e._framebufferTexture2D=function(a,b=d.ColorAttachment.COLOR_ATTACHMENT0,c=d.TextureType.TEXTURE_2D,g=d.FramebufferTarget.FRAMEBUFFER,h=0){this._context.gl.framebufferTexture2D(g,b,
c,a,h)};e._disposeDepthStencilAttachments=function(){const a=this._context.gl;if(this._depthBuffer){if(this._initialized){this._context.bindFramebuffer(this);const b=this._getGLAttachmentPoint(this._depthBuffer.descriptor);a.framebufferRenderbuffer(d.FramebufferTarget.FRAMEBUFFER,b,a.RENDERBUFFER,null)}this._depthBuffer=v.disposeMaybe(this._depthBuffer)}this._stencilBuffer&&(this._initialized&&(this._context.bindFramebuffer(this),a.framebufferRenderbuffer(d.FramebufferTarget.FRAMEBUFFER,a.STENCIL_ATTACHMENT,
a.RENDERBUFFER,null)),this._stencilBuffer=v.disposeMaybe(this._stencilBuffer));this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,a.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=v.disposeMaybe(this._depthStencilTexture))};e._validateTextureDescriptor=function(a){a.target!==d.TextureType.TEXTURE_2D&&a.target!==d.TextureType.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!");p(a,this._context.parameters.maxTextureSize);
this._validateBufferDimensions(a)};e._validateRenderBufferDescriptor=function(a){p(a,this._context.parameters.maxRenderbufferSize);this._validateBufferDimensions(a)};e._validateBufferDimensions=function(a){0>=a.width&&(a.width=this.width);0>=a.height&&(a.height=this.height);0<this.width&&0<this.height&&(this.width!==a.width||this.height!==a.height)&&console.error("Attachment size must match framebuffer size!")};e._getGLAttachmentPoint=function(a){switch(a.internalFormat){case d.RenderbufferFormat.DEPTH_COMPONENT16:case d.RenderbufferFormat.DEPTH_COMPONENT24:case d.RenderbufferFormat.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;
case d.RenderbufferFormat.DEPTH24_STENCIL8:case d.RenderbufferFormat.DEPTH32F_STENCIL8:case d.RenderbufferFormat.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case d.RenderbufferFormat.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}};e._validateColorAttachmentPoint=function(a){if(-1===f._MAX_COLOR_ATTACHMENTS){const b=this._context.capabilities.drawBuffers;f._MAX_COLOR_ATTACHMENTS=b?this._context.gl.getParameter(b.MAX_COLOR_ATTACHMENTS):1}a-=d.ColorAttachment.COLOR_ATTACHMENT0;
a+1>f._MAX_COLOR_ATTACHMENTS&&x.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${a+1}. Implementation supports up to ${f._MAX_COLOR_ATTACHMENTS} color attachments`)};A._createClass(f,[{key:"glName",get:function(){return this._glName}},{key:"colorTexture",get:function(){return this._colorAttachments.get(d.ColorAttachment.COLOR_ATTACHMENT0)}},{key:"depthStencilAttachment",get:function(){return this._depthStencilTexture||
this._depthBuffer||this._stencilBuffer}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}},{key:"width",get:function(){return this._colorAttachments.get(d.ColorAttachment.COLOR_ATTACHMENT0)?.descriptor?.width??0}},{key:"height",get:function(){return this._colorAttachments.get(d.ColorAttachment.COLOR_ATTACHMENT0)?.descriptor?.height??0}},{key:"gpuMemoryUsage",get:function(){return[...this._colorAttachments].reduce((a,[,b])=>a+b.gpuMemoryUsage,this.depthStencilAttachment?.gpuMemoryUsage??
0)}}]);return f}();u._MAX_COLOR_ATTACHMENTS=-1;t.FramebufferObject=u;t.ensureAttachmentMaxSize=p;Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});