// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../core/mathUtils ../../chunks/vec2 ../../chunks/vec2f64 ../../chunks/vec3 ../../chunks/vec3f64 ./geometry2dUtils".split(" "),function(h,z,l,v,d,k,p){function A(a,{start:b,end:f,type:c}){a=d.sub(q,a,b);f=d.sub(t,f,b);a=d.dot(a,f)/d.dot(f,f);return d.scaleAndAdd(k.create(),b,f,c===p.LineType.RAY?Math.max(a,0):a)}function B({start:a,end:b,type:f},c){const e=d.sub(q,c,a);b=d.sub(t,b,a);if(f===p.LineType.RAY&&-1E-6>d.dot(b,e))return d.distance(a,c);a=d.cross(w,b,e);return d.len(a)/
d.len(b)}function C(a,b){const f=a.start,c=b.start;var e=b.end;const n=d.sub(q,a.end,f);e=d.sub(t,e,c);var m=d.sub(w,c,f),g=d.cross(D,n,e),r=d.dot(m,g);if(!z.floatEqualAbsolute(r,0,1E-6))return[];r=d.sqrLen(g);if(z.floatEqualAbsolute(r,0,1E-6))return[];m=d.cross(E,m,e);g=d.dot(m,g)/r;g=d.scaleAndAdd(F,f,n,g);return a.type===p.LineType.RAY&&(a=d.sub(x,g,f),-1E-6>d.dot(n,a))||b.type===p.LineType.RAY&&(b=d.sub(x,g,c),-1E-6>d.dot(e,b))?[]:[k.clone(g)]}function G({start:a,end:b,type:f},c){const e=d.sub(q,
c,a);a=d.sub(t,b,a);b=d.cross(w,a,e);if(1E-6>d.sqrLen(b)/d.sqrLen(a))switch(f){case p.LineType.LINE:return[k.clone(c)];case p.LineType.RAY:return-1E-6>d.dot(a,e)?[]:[k.clone(c)]}return[]}function u(a,b,{start:f,end:c,type:e}){d.set(a.start,f[0],f[1],b);d.set(a.end,c[0],c[1],b);a.type=H[e];return a}h.VerticalPlaneType=void 0;(function(a){a[a.PLANE=0]="PLANE";a[a.HALF_PLANE=1]="HALF_PLANE"})(h.VerticalPlaneType||(h.VerticalPlaneType={}));const H={[h.VerticalPlaneType.PLANE]:p.LineType.LINE,[h.VerticalPlaneType.HALF_PLANE]:p.LineType.RAY},
q=k.create(),t=k.create(),w=k.create(),D=k.create(),E=k.create(),F=k.create(),x=k.create(),y={start:k.create(),end:k.create(),type:p.LineType.LINE},I={start:k.create(),end:k.create(),type:p.LineType.LINE};Object.defineProperty(h,"LineType",{enumerable:!0,get:()=>p.LineType});h.epsilon=1E-6;h.intersectLineAndPoint=G;h.intersectLineLike=C;h.intersectLineLikeAndVerticalCylinder=function({start:a,end:b,type:f},c,e){const n=[];b=d.subtract(q,b,a);var m=l.subtract(t,a,c);c=l.squaredLength(b);const g=2*
l.dot(b,m);e=l.squaredLength(m)-e*e;e=g*g-4*c*e;0===e?(c=-g/(2*c),(f===p.LineType.LINE||0<=c)&&n.push(d.scaleAndAdd(k.create(),a,b,c))):0<e&&(e=Math.sqrt(e),m=(-g+e)/(2*c),(f===p.LineType.LINE||0<=m)&&n.push(d.scaleAndAdd(k.create(),a,b,m)),c=(-g-e)/(2*c),(f===p.LineType.LINE||0<=c)&&n.push(d.scaleAndAdd(k.create(),a,b,c)));return n};h.intersectVerticalCylinderAndPoint=function(a,b,f){return z.floatEqualAbsolute(l.squaredDistance(f,a),b*b,1E-6)?[k.clone(f)]:[]};h.intersectVerticalPlane=function(a,
b){a=u(y,0,a);b=u(I,0,b);b=C(a,b);a=[];for(const f of b)a.push(v.clone(f));return a};h.intersectVerticalPlaneAndLineLike=function(a,b){const f=a.start,c=l.subtract(q,a.end,f);var e=d.set(t,-c[1],c[0],0);const n=b.start,m=d.sub(w,b.end,n);var g=d.dot(m,e),r=d.set(D,f[0],f[1],0);r=d.sub(E,r,n);e=d.dot(r,e);if(1E-6>Math.abs(g))return[];g=d.scaleAndAdd(F,n,m,e/g);return b.type===p.LineType.RAY&&(b=d.sub(x,g,n),-1E-6>d.dot(b,m))||a.type===h.VerticalPlaneType.HALF_PLANE&&(a=l.sub(x,g,f),-1E-6>l.dot(a,c))?
[]:[k.clone(g)]};h.intersectVerticalPlaneAndPoint=function(a,b){return G(u(y,b[2],a),b)};h.intersectVerticalPlaneAndVerticalCylinder=function({start:a,end:b,type:f},c,e){const n=[];b=l.subtract(q,b,a);var m=l.subtract(t,a,c);c=l.squaredLength(b);const g=2*l.dot(b,m);e=l.squaredLength(m)-e*e;e=g*g-4*c*e;0===e?(c=-g/(2*c),(f===h.VerticalPlaneType.PLANE||0<=c)&&n.push(l.scaleAndAdd(v.create(),a,b,c))):0<e&&(e=Math.sqrt(e),m=(-g+e)/(2*c),(f===h.VerticalPlaneType.PLANE||0<=m)&&n.push(l.scaleAndAdd(v.create(),
a,b,m)),c=(-g-e)/(2*c),(f===h.VerticalPlaneType.PLANE||0<=c)&&n.push(l.scaleAndAdd(v.create(),a,b,c)));return n};h.pointToLineLikeDistance=B;h.pointToVerticalCylinderDistance=function(a,b,f){return l.distance(a,b)-f};h.pointToVerticalPlaneDistance=function(a,b){return B(u(y,a[2],b),a)};h.projectPointToLineLike=A;h.projectPointToVerticalCylinder=function(a,b,f){const c=l.subtract(q,a,b);f/=l.length(c);b=l.scaleAndAdd(k.create(),b,c,f);b[2]=a[2];return b};h.projectPointToVerticalPlane=function(a,b){return A(a,
u(y,a[2],b))};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});