// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../geometry ../../../chunks/vec3f64 ../../../chunks/vec3 ../../../geometry/Point ../../../geometry/projection ../../../geometry/support/webMercatorUtils ../core/ExposurePoint ./groundToImageUtils ./utils ../../../geometry/SpatialReference ../../../geometry/Polygon".split(" "),function(J,X,A,B,n,I,y,K,x,t,Q,L){async function R(b,e){const {feature:d,imageProperties:a}=e,{attributes:f}=d;let c=new n(f.location);if(4===f.cameraOrientation?.type){var m=f.cameraOrientation;c=new n(t.ltpToGeographic(c,
[m.latitude,m.longitude,m.ellipsoidRadius,m.squaredEccentricity]))}let u=!1;c.spatialReference.isWGS84&&(u=!0,c=y.geographicToWebMercator(c));const v=c.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*c.y/6378137))):1;m=S(e,c,v);const l=4===f.cameraOrientation?.type?m.map(k=>y.webMercatorToGeographic(new n(k))):m;m=await x.transformPoints(l,e,!0);const p=await Promise.all(m);p.forEach(k=>{k.z=1;k.x=k.x*a.pixelSize.x+a.extent.xmin;k.y=a.extent.ymax-k.y*a.pixelSize.y});const w=
t.computeHFOVAndVFOV(f.horizontalFieldOfView,f.verticalFieldOfView,f.cameraRoll??0).vfov;return Promise.all(b.map(async k=>{k.z=1;let q=t.projectiveTransform2(k,p,l);var g=4===f.cameraOrientation?.type?await (await x.transformPoints([y.webMercatorToGeographic(new n({...q,spatialReference:c.spatialReference}))],e,!0))[0]:await (await x.transformPoints([new n({...q,spatialReference:c.spatialReference})],e,!0))[0];if(!g)return null;g.x=g.x*a.pixelSize.x+a.extent.xmin;g.y=a.extent.ymax-g.y*a.pixelSize.y;
var z=Math.abs(k.x-g.x)+Math.abs(k.y-g.y);1<z&&(g=await T(k,g,p,l,c,q,e),q=g.point,z=g.error);let F;if(d.layer.elevationSource){let C=await U(e);if(C&&C.extent){let r=M(C,c,q);if(!r)return null;g=new n({x:r.x,y:r.y,z:r.z,hasZ:!0,spatialReference:c.spatialReference});if(r){z=I.project(g,e.currentCoveragePolygon.geometry?.spatialReference);z=x.updateElevation([z],e,!1);z=z instanceof Promise?await z:z;g.z=r.z=z[0].z;g=await x.transformPoints([4===f.cameraOrientation?.type?y.webMercatorToGeographic(g):
g],e);if(!g[0])return null;g[0].x=g[0].x*a.pixelSize.x+a.extent.xmin;g[0].y=a.extent.ymax-g[0].y*a.pixelSize.y;let G=Math.abs(k.x-g[0].x)+Math.abs(k.y-g[0].y);F=r.z;if(1<G){let N=0;const O=async h=>{if(1<G){const D=h.width/10,E=h.height/10;if(!h||1>D||1>E)return q=H(q,c,v,F,f.cameraPitch,w,u);h=[{x:r.x-D,y:r.y-E,spatialReference:c.spatialReference},{x:r.x+D,y:r.y-E,spatialReference:c.spatialReference},{x:r.x+D,y:r.y+E,spatialReference:c.spatialReference},{x:r.x-D,y:r.y+E,spatialReference:c.spatialReference}].map(V=>
new n(V));h=await x.updateElevation(h,e,!1);C=new L({rings:[[[h[0].x,h[0].y,h[0].z],[h[1].x,h[1].y,h[1].z],[h[2].x,h[2].y,h[2].z],[h[3].x,h[3].y,h[3].z],[h[0].x,h[0].y,h[0].z]]],spatialReference:c.spatialReference});if(r=M(C,c,q))if(h=I.project(new n({x:r.x,y:r.y,z:r.z,spatialReference:c.spatialReference}),e.currentCoveragePolygon.geometry?.spatialReference),h=await x.transformPoints([4===f.cameraOrientation?.type?y.webMercatorToGeographic(h):h],e),h[0]){h[0].x=h[0].x*a.pixelSize.x+a.extent.xmin;
h[0].y=a.extent.ymax-h[0].y*a.pixelSize.y;G=Math.abs(k.x-h[0].x)+Math.abs(k.y-h[0].y);F=r.z;if(1>=G||8===N)return H(q,c,v,F,f.cameraPitch,w,u);N+=1;return O(C.extent)}}return H(q,c,v,c.z-f.cameraHeight,f.cameraPitch,w,u)};return O(C.extent)}}}}return H(q,c,v,c.z-f.cameraHeight,f.cameraPitch,w,u)}))}function H(b,e,d,a,f,c,m){var u=Math.sqrt((b.z-e.z)**2+(Math.sqrt((b.x-e.x)**2+(b.y-e.y)**2)/d)**2)*d;u=t.scaleWithFactor(B.sub(A.zeros(),[b.x,b.y,b.z],[e.x,e.y,e.z]),1/u,1/d);b.z<a||90>f+c/2?(b=t.scaleAndAddWithFactor([e.x,
e.y,e.z],u,Math.abs((e.z-a)/-u[2])*d,d),b={x:b[0],y:b[1],z:b[2]}):b.z=a;b.spatialReference=e.spatialReference;b=new n(b);m&&(b=y.webMercatorToGeographic(b));return b}function S(b,e,d){({feature:b}=b);({attributes:b}=b);var a=2*Math.tan(b.verticalFieldOfView*P/2)*b.farDistance*d,f=2*Math.tan(b.horizontalFieldOfView*P/2)*b.farDistance*d,c=t.calculateRotationMatrix("HPR",[b.cameraHeading,b.cameraPitch,b.cameraRoll??0]),m=t.transformMat3([0,0,-1],c);b=t.scaleAndAddWithFactor([e.x,e.y,e.z],m,b.farDistance*
d,d);m=t.transformMat3([0,1,0],c);c=t.transformMat3([1,0,0],c);a=t.scaleWithFactor(m,a/2,d);f=t.scaleWithFactor(c,f/2,d);d=B.sub(A.zeros(),a,f);f=B.add(A.zeros(),a,f);return[B.add(A.zeros(),b,d),B.add(A.zeros(),b,f),B.sub(A.zeros(),b,d),B.sub(A.zeros(),b,f)].map(u=>{const [v,l,p]=u;return new n({x:v,y:l,z:p,spatialReference:e.spatialReference})})}function U(b){const {feature:e}=b,d=W(b);if(!d)return Promise.resolve(null);const a=e.attributes.location.spatialReference.isWGS84?new Q({wkid:102100}):
e.attributes.location.spatialReference;return x.updateElevation(d,b,!1).then(f=>{f=f.map(c=>I.project(c,a));return new L({hasZ:!0,rings:[f.map(c=>[c.x,c.y,c.z])],spatialReference:a})})}function W(b){if(!b.currentCoveragePolygon.geometry)return null;const {xmin:e,xmax:d,ymin:a,ymax:f,spatialReference:c}=b.currentCoveragePolygon.geometry.extent.toJSON();return[new n({x:e,y:f,spatialReference:c}),new n({x:d,y:f,spatialReference:c}),new n({x:d,y:a,spatialReference:c}),new n({x:e,y:a,spatialReference:c})]}
async function T(b,e,d,a,f,c,m){const {feature:{attributes:u},imageProperties:v}=m;var l=Math.abs(b.x-e.x)+Math.abs(b.y-e.y);if(1<l)for(e=0;9>e;e++)if(1<l){var p={x:b.x-l,y:b.y-l,z:1},w={x:b.x+l,y:b.y-l,z:1};let q={x:b.x+l,y:b.y+l,z:1};l={x:b.x-l,y:b.y+l,z:1};p=t.projectiveTransform(p,d[0],d[1],d[2],d[3],{x:a[0].x,y:a[0].y,z:a[0].z},{x:a[1].x,y:a[1].y,z:a[1].z},{x:a[2].x,y:a[2].y,z:a[2].z},{x:a[3].x,y:a[3].y,z:a[3].z});w=t.projectiveTransform(w,d[0],d[1],d[2],d[3],{x:a[0].x,y:a[0].y,z:a[0].z},{x:a[1].x,
y:a[1].y,z:a[1].z},{x:a[2].x,y:a[2].y,z:a[2].z},{x:a[3].x,y:a[3].y,z:a[3].z});q=t.projectiveTransform(q,d[0],d[1],d[2],d[3],{x:a[0].x,y:a[0].y,z:a[0].z},{x:a[1].x,y:a[1].y,z:a[1].z},{x:a[2].x,y:a[2].y,z:a[2].z},{x:a[3].x,y:a[3].y,z:a[3].z});l=t.projectiveTransform(l,d[0],d[1],d[2],d[3],{x:a[0].x,y:a[0].y,z:a[0].z},{x:a[1].x,y:a[1].y,z:a[1].z},{x:a[2].x,y:a[2].y,z:a[2].z},{x:a[3].x,y:a[3].y,z:a[3].z});p.spatialReference=f.spatialReference;w.spatialReference=f.spatialReference;q.spatialReference=f.spatialReference;
l.spatialReference=f.spatialReference;var k=void 0;k=4===u.cameraOrientation?.type?await x.transformPoints([y.webMercatorToGeographic(new n(p)),y.webMercatorToGeographic(new n(w)),y.webMercatorToGeographic(new n(q)),y.webMercatorToGeographic(new n(l))],m,!0):await x.transformPoints([new n(p),new n(w),new n(q),new n(l)],m,!0);k=await Promise.all(k);k.forEach(g=>{g.z=0;g.x=g.x*v.pixelSize.x+v.extent.xmin;g.y=v.extent.ymax-g.y*v.pixelSize.y});p=t.projectiveTransform(b,k[0],k[1],k[2],k[3],p,w,q,l);w=
4===u.cameraOrientation?.type?await (await x.transformPoints([y.webMercatorToGeographic(new n({x:p.x,y:p.y,z:p.z,spatialReference:f.spatialReference}))],m,!0))[0]:await (await x.transformPoints([new n({x:p.x,y:p.y,z:p.z,spatialReference:f.spatialReference})],m,!0))[0];l=Math.abs(b.x-w.x)+Math.abs(b.y-w.y);if(1>=l||8===e){c=p;break}}return{error:l,point:c}}function M(b,e,d){var a=b.rings[0][0][0],f=b.rings[0][0][1],c=b.rings[0][0][2],m=b.rings[0][1][0],u=b.rings[0][1][1],v=b.rings[0][1][2],l=b.rings[0][1][0],
p=b.rings[0][1][1],w=b.rings[0][1][2],k=b.rings[0][2][0],q=b.rings[0][2][1],g=b.rings[0][2][2];b=(g-w)*(u-f)-(q-p)*(v-c);v=-((g-w)*(m-a)-(v-c)*(k-l));m=(q-p)*(m-a)-(u-f)*(k-l);a=-(b*a+v*f+m*c);return t.getPlaneLineIntersectionPoint(e.toJSON(),d,b,v,m,a)}const P=Math.PI/180;J.transformPoints=function(b,e){if(!b)return Promise.resolve([]);var d=e.feature;let a=d.attributes;a instanceof K||!(a=K.fromJSON(d))||(d.attributes=a);({attributes:d}=e.feature);b=d.isSpherical||360===d.horizontalFieldOfView?
[]:R(b,e);return b};Object.defineProperty(J,Symbol.toStringTag,{value:"Module"})});