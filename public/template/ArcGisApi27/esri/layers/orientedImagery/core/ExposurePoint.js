// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Clonable ../../../core/Error ../../../core/JSONSupport ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/cast ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/reader ../../../core/accessorSupport/decorators/subclass ./cameraOrientationFactory ../enums/CameraOrientationType ../../../geometry/Point".split(" "),function(q,
e,c,u,r,v,g,w,D,E,k,x,y,z,t){c=function(n){function p(a){a=n.call(this,a)||this;a.cameraOrientation=null;a.elevation=null;a.elevationSource=null;a.name=null;return a}q._inherits(p,n);var h=p.prototype;h.read=function(a,b){const d={},{attributes:f}=a;for(const l in f)d[l.toLowerCase()]=f[l];q._get(q._getPrototypeOf(p.prototype),"read",this).call(this,{...a,attributes:d},b)};h.readCameraHeading=function(a,b){const {attributes:d,layer:f}=b;return d.cameraheading??d.camheading??f.cameraHeading};h.readCameraHeight=
function(a,b){const {attributes:d,layer:f}=b;return d.cameraheight??d.avghtag??f.cameraHeight};h.readCamOffset=function(a,b){({attributes:a}=b);return a.cameraoffset?.split(";").map(Number)??a.camoffset?.split(";").map(Number)??null};h.readCameraOrientation=function(a,b){({attributes:a}=b);return a.cameraorientation??a.camori};h.readCameraPitch=function(a,b){const {attributes:d,layer:f}=b;return d.camerapitch??d.campitch??f.cameraPitch};h.readCameraRoll=function(a,b){const {attributes:d,layer:f}=
b;return d.cameraroll??d.camroll??f.cameraRoll};h.readDepthImage=function(a,b){const {attributes:d,layer:f}=b;a=d.depthimage??d.depthimg??null;if(!a)return null;const {depthImagePathPrefix:l,depthImagePathSuffix:m}=f;(b=l?.trim())&&(a=`${b}/${a}`);(b=m?.trim())&&(a=`${a}/${b}`);return a};h.readElevationSource=function(a,b){const {attributes:d,layer:f}=b;if(d.elevationSource){b=d.elevationSource;({url:a}=b);if(a){const {demPathSuffix:l,demPathPrefix:m}=f;m?.trim()&&(a=m?.trim()+"/"+a);l?.trim()&&(a=
a+"/"+l?.trim());return{...b,url:a}}return b}if(d.dem&&(a=d.dem.trim())){const {demPathSuffix:l,demPathPrefix:m}=b.layer;m?.trim()&&(a=m?.trim()+"/"+a);l?.trim()&&(a=a+"/"+l?.trim());return{url:a}}return f.effectiveElevationSource};h.readFarDistance=function(a,b){const {attributes:d,layer:f}=b;return d.fardistance??d.fardist??f.farDistance};h.readHFOV=function(a,b){const {attributes:d,layer:f}=b;return d.horizontalfieldofview??d.hfov??f.horizontalFieldOfView};h.readImageURL=function(a,b){const {attributes:d,
layer:f}=b;({image:a}=d);if(!a)throw new r("exposure-point:missing-attribute-value","a value for image is missing in attribute table",{exposurePoint:this});const {imagePathPrefix:l,imagePathSuffix:m}=f;(b=l?.trim())&&(a=`${b.trim()}/${a}`);(b=m?.trim())&&(a=`${a}/${b.trim()}`);return a};h.readImageRotation=function(a,b){const {attributes:d,layer:f}=b;return d.imagerotation??d.imgrot??f.imageRotation};h.readName=function(a,b){({attributes:a}=b);return a.name};h.readNearDistance=function(a,b){const {attributes:d,
layer:f}=b;return d.neardistance??d.neardist??f.nearDistance};h.readOrientationAccuracy=function(a,b){return b.attributes.orientationaccuracy?.split(";").map(Number)??b.attributes.accuracy?.split(";").map(Number)??null};h.readOIType=function(a,b){const {attributes:d,layer:f}=b;if(d.orientedimagerytype)return d.orientedimagerytype.toLowerCase();if(d.oitype){a=d.camerapitch??d.campitch??f.cameraPitch;a:switch(d.oitype.toUpperCase()){case "O":a=a&&10>a?"nadir":"oblique";break a;case "B":case "S":case "D":a=
"360";break a;default:a="horizontal"}return a}return f.orientedImageryType};h.readSortOrder=function(a,b){return b.attributes.sortorder};h.readVFOV=function(a,b){const {attributes:d,layer:f}=b;return d.verticalfieldofview??d.vfov??f.verticalFieldOfView};q._createClass(p,[{key:"isHorizontal",get:function(){return"horizontal"===this.orientedImageryType}},{key:"isInspection",get:function(){return"inspection"===this.orientedImageryType}},{key:"isNadir",get:function(){return"nadir"===this.orientedImageryType}},
{key:"isOblique",get:function(){return"oblique"===this.orientedImageryType}},{key:"isSpherical",get:function(){return"360"===this.orientedImageryType}},{key:"location",get:function(){const {cameraOrientation:a,geometry:b,cameraHeight:d,elevation:f}=this;if(a){const {type:l,x:m,y:A,z:B,horizontalWKID:C}=a;return new t({x:m,y:A,z:B,spatialReference:{wkid:l===z.CameraOrientationType.LTP?4326:C}})}if(!d){throw new r("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties");
throw void 0;}b.z=(f??0)+d;return b}}]);return p}(u.ClonableMixin(v.JSONSupport));e.__decorate([g.property({type:Date,json:{write:!0,name:"attributes.acquisitiondate"}})],c.prototype,"acquisitionDate",void 0);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"cameraHeading",void 0);e.__decorate([k.reader("cameraHeading",["attributes"])],c.prototype,"readCameraHeading",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"cameraHeight",void 0);e.__decorate([k.reader("cameraHeight",
["attributes"])],c.prototype,"readCameraHeight",null);e.__decorate([g.property({json:{write:!0}})],c.prototype,"cameraOffset",void 0);e.__decorate([k.reader("cameraOffset",["attributes"])],c.prototype,"readCamOffset",null);e.__decorate([g.property({json:{write:!0}}),w.cast(n=>n?y.getCameraOrientation(n):null)],c.prototype,"cameraOrientation",void 0);e.__decorate([k.reader("cameraOrientation",["attributes"])],c.prototype,"readCameraOrientation",null);e.__decorate([g.property({type:Number,json:{write:!0}})],
c.prototype,"cameraPitch",void 0);e.__decorate([k.reader("cameraPitch",["attributes"])],c.prototype,"readCameraPitch",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"cameraRoll",void 0);e.__decorate([k.reader("cameraRoll",["attributes"])],c.prototype,"readCameraRoll",null);e.__decorate([g.property({json:{write:!0}})],c.prototype,"depthImage",void 0);e.__decorate([k.reader("depthImage",["attributes"])],c.prototype,"readDepthImage",null);e.__decorate([g.property({type:Number,
json:{write:!0}})],c.prototype,"elevation",void 0);e.__decorate([g.property({json:{write:!0}})],c.prototype,"elevationSource",void 0);e.__decorate([k.reader("elevationSource",["attributes"])],c.prototype,"readElevationSource",null);e.__decorate([g.property({json:{write:!0,name:"attributes.exposurestationid"}})],c.prototype,"exposureStationId",void 0);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"farDistance",void 0);e.__decorate([k.reader("farDistance",["attributes"])],c.prototype,
"readFarDistance",null);e.__decorate([g.property({type:t})],c.prototype,"geometry",void 0);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"horizontalFieldOfView",void 0);e.__decorate([k.reader("horizontalFieldOfView",["attributes"])],c.prototype,"readHFOV",null);e.__decorate([g.property({json:{write:!0}})],c.prototype,"image",void 0);e.__decorate([k.reader("image",["attributes"])],c.prototype,"readImageURL",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,
"imageRotation",void 0);e.__decorate([k.reader("imageRotation",["attributes"])],c.prototype,"readImageRotation",null);e.__decorate([g.property()],c.prototype,"isHorizontal",null);e.__decorate([g.property()],c.prototype,"isInspection",null);e.__decorate([g.property()],c.prototype,"isNadir",null);e.__decorate([g.property()],c.prototype,"isOblique",null);e.__decorate([g.property()],c.prototype,"isSpherical",null);e.__decorate([g.property({json:{write:!0}})],c.prototype,"location",null);e.__decorate([g.property({json:{write:!0}})],
c.prototype,"name",void 0);e.__decorate([k.reader("name",["attributes"])],c.prototype,"readName",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"nearDistance",void 0);e.__decorate([k.reader("nearDistance",["attributes"])],c.prototype,"readNearDistance",null);e.__decorate([g.property({json:{write:!0,name:"attributes.objectid"}})],c.prototype,"objectId",void 0);e.__decorate([g.property({json:{write:!0}})],c.prototype,"orientationAccuracy",void 0);e.__decorate([k.reader("orientationAccuracy",
["attributes"])],c.prototype,"readOrientationAccuracy",null);e.__decorate([g.property({json:{write:!0}})],c.prototype,"orientedImageryType",void 0);e.__decorate([k.reader("orientedImageryType",["attributes"])],c.prototype,"readOIType",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"sortOrder",void 0);e.__decorate([k.reader("sortOrder",["attributes"])],c.prototype,"readSortOrder",null);e.__decorate([g.property({type:Number,json:{write:!0}})],c.prototype,"verticalFieldOfView",
void 0);e.__decorate([k.reader("verticalFieldOfView",["attributes"])],c.prototype,"readVFOV",null);return c=e.__decorate([x.subclass("esri.layers.orientedImagery.core.ExposurePoint")],c)});