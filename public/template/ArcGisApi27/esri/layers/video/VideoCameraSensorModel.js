// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Accessor ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../chunks/mat3f64 ../../chunks/vec3f64 ../../chunks/mat3 ../../chunks/vec3 ../../geometry/Point ../../geometry/projection ../../geometry/SpatialReference ../../geometry/spatialReferenceEllipsoidUtils ../../geometry/support/Ellipsoid ./videoUtils".split(" "),
function(A,k,h,l,I,J,K,H,u,p,B,r,C,D,v,w,E,f){const m=Math.PI/180;h=function(F){function x(g){var a=F.call(this)||this;a.averageElevation=0;a.imageHeight=0;a.imageWidth=0;a.metadataSupportsTransforms=!1;a.platformHeadingAngle=0;a.platformPitchAngle=0;a.platformRollAngle=0;a.sensorHeadingAngle=0;a.sensorAltitude=0;a.sensorHorizontalFieldOfView=0;a.sensorLatitude=0;a.sensorLongitude=0;a.sensorPitchAngle=0;a.sensorRollAngle=0;a.sensorVerticalFieldOfView=0;a.vttMetadata=new Map;a._createMat3FromValues=
b=>{const c=b[0],d=b[1];b=b[2];return u.fromValues(c[0],d[0],b[0],c[1],d[1],b[1],c[2],d[2],b[2])};a._multiplyMat3=(b,c)=>{const d=u.create();B.multiply(d,b,c);return d};a._transposeMat3=b=>{const c=u.create();B.transpose(c,b);return c};a._calculateCameraFovForward=()=>a._createMat3FromValues([[0,0,1],[Math.tan(.5*a.sensorHorizontalFieldOfView*m),0,0],[0,Math.tan(.5*a.sensorVerticalFieldOfView*m),0]]);a._calculateCameraFovReverse=()=>a._createMat3FromValues([[0,1/Math.tan(.5*a.sensorHorizontalFieldOfView*
m),0],[0,0,1/Math.tan(.5*a.sensorVerticalFieldOfView*m)],[1,0,0]]);a._calculateCameraLook=()=>a._getRotationMatrixZYX(a.sensorHeadingAngle*m,a.sensorPitchAngle*m,a.sensorRollAngle*m);a._calculateImageDimensionsForward=()=>a._createMat3FromValues([[2/a.imageWidth,0,-1],[0,-2/a.imageHeight,-1],[0,0,1]]);a._calculateImageDimensionsReverse=()=>a._createMat3FromValues([[a.imageWidth/2,0,a.imageWidth/2],[0,-a.imageHeight/2,-a.imageHeight/2],[0,0,1]]);a._calculatePlatformPositionMatrix=()=>{const b=Math.sin(a.sensorLatitude*
m),c=Math.cos(a.sensorLatitude*m),d=Math.sin(a.sensorLongitude*m),e=Math.cos(a.sensorLongitude*m);return a._createMat3FromValues([[-b*e,-d,-c*e],[-b*d,e,-c*d],[c,0,-b]])};a._calculatePlatformOrientation=()=>a._getRotationMatrixZYX(a.platformHeadingAngle*m,a.platformPitchAngle*m,a.platformRollAngle*m);a._extractValues=b=>{a.imageWidth=b.get(f.VideoMetadataEntryId.EsriVideoWidth)?.Value;a.imageHeight=b.get(f.VideoMetadataEntryId.EsriVideoHeight)?.Value;const c=b.get(f.VideoMetadataEntryId.SensorEllipsoidHeight)?.Value;
a.sensorAltitude=c??b.get(f.VideoMetadataEntryId.SensorTrueAltitude)?.Value;a.sensorLatitude=b.get(f.VideoMetadataEntryId.SensorLatitude)?.Value;a.sensorLongitude=b.get(f.VideoMetadataEntryId.SensorLongitude)?.Value;a.sensorHeadingAngle=b.get(f.VideoMetadataEntryId.SensorAzimuthAngle)?.Value;a.sensorPitchAngle=b.get(f.VideoMetadataEntryId.SensorElevationAngle)?.Value;a.sensorRollAngle=b.get(f.VideoMetadataEntryId.SensorRollAngle)?.Value;a.sensorHorizontalFieldOfView=b.get(f.VideoMetadataEntryId.SensorHorizontalFOV)?.Value;
a.sensorVerticalFieldOfView=b.get(f.VideoMetadataEntryId.SensorVerticalFOV)?.Value;a.platformHeadingAngle=b.get(f.VideoMetadataEntryId.PlatformHeadingAngle)?.Value;a.platformPitchAngle=b.get(f.VideoMetadataEntryId.PlatformPitchAngle)?.Value;a.platformRollAngle=b.get(f.VideoMetadataEntryId.PlatformRollAngle)?.Value;a.averageElevation=b.get(f.VideoMetadataEntryId.FrameCenterElevation)?.Value||0};a._getRotationMatrixZYX=(b,c,d)=>{const e=Math.cos(b);b=Math.sin(b);const n=Math.cos(c);c=Math.sin(c);const q=
Math.cos(d);d=Math.sin(d);return a._createMat3FromValues([[e*n,e*c*d-q*b,b*d+e*q*c],[n*b,e*q+b*c*d,q*b*c-e*d],[-c,n*d,n*q]])};a._initCameraSensor=()=>{var b=a._calculateCameraFovForward();const c=a._calculateCameraFovReverse();var d=a._calculateCameraLook();const e=a._calculateImageDimensionsForward(),n=a._calculateImageDimensionsReverse(),q=a._calculatePlatformPositionMatrix(),y=a._calculatePlatformOrientation();d=a._multiplyMat3(a._multiplyMat3(q,y),d);a._imageToEarthTransform=a._multiplyMat3(a._multiplyMat3(d,
b),e);b=a._multiplyMat3(n,c);a._earthToImageTransform=a._multiplyMat3(b,a._transposeMat3(d));a._platformPositionEcef=a._projectPointToECEF(a.sensorLongitude,a.sensorLatitude,a.sensorAltitude||a.averageElevation)};a._metadataSupportsTransforms=b=>{if(!b?.size)return!1;var c=b.get(f.VideoMetadataEntryId.EsriVideoWidth)?.Value??0,d=b.get(f.VideoMetadataEntryId.EsriVideoHeight)?.Value??0;if(0>=c||0>=d)return!1;c=b.get(f.VideoMetadataEntryId.SensorEllipsoidHeight)?.Value;d=b.get(f.VideoMetadataEntryId.SensorTrueAltitude)?.Value;
var e=b.get(f.VideoMetadataEntryId.SensorLatitude)?.Value;const n=b.get(f.VideoMetadataEntryId.SensorLongitude)?.Value;if(null==c&&null==d||null==e||null==n)return!1;c=b.get(f.VideoMetadataEntryId.PlatformHeadingAngle)?.Value;d=b.get(f.VideoMetadataEntryId.PlatformPitchAngle)?.Value;e=b.get(f.VideoMetadataEntryId.PlatformRollAngle)?.Value;if(null==c||null==d||null==e)return!1;c=b.get(f.VideoMetadataEntryId.SensorHorizontalFOV)?.Value;d=b.get(f.VideoMetadataEntryId.SensorVerticalFOV)?.Value;if(null==
c||null==d)return!1;c=b.get(f.VideoMetadataEntryId.SensorAzimuthAngle)?.Value;d=b.get(f.VideoMetadataEntryId.SensorElevationAngle)?.Value;b=b.get(f.VideoMetadataEntryId.SensorRollAngle)?.Value;return null==c||null==d||null==b?!1:!0};a._projectPointToECEF=(b,c,d)=>{const e=[];D.projectBuffer([b,c,d],v.WGS84,0,e,w.WGS84ECEFSpatialReference,0,1);return new C({x:e[0],y:e[1],z:e[2],spatialReference:w.WGS84ECEFSpatialReference})};a._projectImageVectorToEllipsoid=(b,c)=>{var d=E.earth.semiMajorAxis+c,e=
E.earth.semiMinorAxis+c;c=e/d;const {x:n,y:q,z:y}=a._platformPositionEcef;e=p.fromValues(n,q,d/e*(y??a.averageElevation));var t=r.dot(b,b);const z=r.dot(b,e);d=r.dot(e,e)-d*d;d=(-z-Math.sqrt(z*z-t*d))/t;if(0>d)return[NaN,NaN,NaN];t=p.create();r.scaleAndAdd(t,e,b,d);t[2]*=c;return t};g=g?.videoMetadata;a._set("metadataSupportsTransforms",a._metadataSupportsTransforms(g));a.metadataSupportsTransforms&&(a._extractValues(g),a._initCameraSensor());return a}A._inherits(x,F);var G=x.prototype;G.transformGeoToImage=
function(g,a,b){var c=this._platformPositionEcef;if(!c)return[0,0];const {x:d,y:e,z:n}=c;c=p.fromValues(d,e,n);a=this._projectPointToECEF(g,a,b||this.averageElevation);g=p.create();a=p.fromValues(a.x,a.y,a.z);r.subtract(g,a,c);r.transformMat3(g,g,this._earthToImageTransform);c=g[0];a=g[1];g=g[2];b=p.fromValues(NaN,NaN,NaN);isNaN(g)||(b=p.fromValues(c/g,a/g,g/g));return[b[0],b[1]]};G.transformImageToGeo=function(g,a){g=p.fromValues(g,a,1);a=p.create();r.transformMat3(a,g,this._imageToEarthTransform);
g=this._projectImageVectorToEllipsoid(a,this.averageElevation);if(!isNaN(g[0])){var b=[];D.projectBuffer([g[0],g[1],g[2]],w.WGS84ECEFSpatialReference,0,b,v.WGS84,0,1);b=new C({x:b[0],y:b[1],z:b[2],spatialReference:v.WGS84})}return b};return A._createClass(x)}(h);k.__decorate([l.property()],h.prototype,"averageElevation",void 0);k.__decorate([l.property()],h.prototype,"imageHeight",void 0);k.__decorate([l.property()],h.prototype,"imageWidth",void 0);k.__decorate([l.property({readOnly:!0})],h.prototype,
"metadataSupportsTransforms",void 0);k.__decorate([l.property()],h.prototype,"platformHeadingAngle",void 0);k.__decorate([l.property()],h.prototype,"platformPitchAngle",void 0);k.__decorate([l.property()],h.prototype,"platformRollAngle",void 0);k.__decorate([l.property()],h.prototype,"sensorHeadingAngle",void 0);k.__decorate([l.property()],h.prototype,"sensorAltitude",void 0);k.__decorate([l.property()],h.prototype,"sensorHorizontalFieldOfView",void 0);k.__decorate([l.property()],h.prototype,"sensorLatitude",
void 0);k.__decorate([l.property()],h.prototype,"sensorLongitude",void 0);k.__decorate([l.property()],h.prototype,"sensorPitchAngle",void 0);k.__decorate([l.property()],h.prototype,"sensorRollAngle",void 0);k.__decorate([l.property()],h.prototype,"sensorVerticalFieldOfView",void 0);k.__decorate([l.property()],h.prototype,"vttMetadata",void 0);return h=k.__decorate([H.subclass("esri.layers.video.VideoCameraSensorModel")],h)});