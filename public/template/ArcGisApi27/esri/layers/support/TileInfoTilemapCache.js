// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["../../chunks/_rollupPluginBabelHelpers","../../core/Error","../../core/promiseUtils"],function(m,n,e){return function(){function f(b,c=0,d=b.lods[b.lods.length-1].level){this.tileInfo=b;this.minLOD=c;this.maxLOD=d;b.lodAt(c)||(this.minLOD=b.lods[0].level);b.lodAt(d)||(this.maxLOD=b.lods[b.lods.length-1].level)}var g=f.prototype;g.getAvailability=function(b,c,d){const a=this.tileInfo?.lodAt(b);return!a||b<this.minLOD||b>this.maxLOD?"unavailable":a.cols&&a.rows?d>=a.cols[0]&&d<=a.cols[1]&&
c>=a.rows[0]&&c<=a.rows[1]?"unknown":"unavailable":"unknown"};g.fetchAvailability=async function(b,c,d,a){await e.waitTick(a);a=this.getAvailability(b,c,d);if("unavailable"===a)throw new n("tile-map:tile-unavailable","Tile is not available",{level:b,row:c,col:d});return a};g.fetchAvailabilityUpsample=async function(b,c,d,a,h){await e.waitTick(h);a.level=b;a.row=c;a.col=d;const l=this.tileInfo;l.updateTileInfo(a);return this.fetchAvailability(b,c,d,h).catch(k=>{if(e.isAbortError(k))throw k;if(l.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,
a.row,a.col,a,h);throw k;})};m._createClass(f,[{key:"effectiveMinLOD",get:function(){return this.minLOD??this.tileInfo.lods[0].level}},{key:"effectiveMaxLOD",get:function(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}}]);return f}()});