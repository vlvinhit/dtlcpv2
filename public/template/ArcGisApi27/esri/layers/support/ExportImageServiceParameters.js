// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/JSONSupport ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ./imageryRendererUtils ./MosaicRule ./rasterEnums ./RasterFunction".split(" "),function(c,r,d,u,e,x,y,z,v,l,h,w,m,q){c.ExportImageServiceParameters=function(t){function n(){var a=t.apply(this,
arguments)||this;a.layer=null;a.compression=void 0;a.pixelType=void 0;a.lercVersion=2;return a}r._inherits(n,t);var g=n.prototype;g.writeAdjustAspectRatio=function(a,b,f){10.3>this.layer.version||(b[f]=a)};g.writeCompressionQuality=function(a,b,f){this.format&&this.format.toLowerCase().includes("jpg")&&null!=a&&(b[f]=a)};g.writeCompressionTolerance=function(a,b,f){"lerc"===this.format&&null!=a&&(b[f]=a)};g.writeLercVersion=function(a,b,f){"lerc"===this.format&&10.5<=this.layer.version&&(b[f]=a)};
g.combineRendererWithRenderingRule=function(a){const b=this.layer,{rasterInfo:f,renderer:k}=b;a=a||b.rasterFunction;return k&&h.isSupportedRendererType(k)?h.combineRenderingRules(h.convertRendererToRenderingRule(k,{rasterAttributeTable:f.attributeTable,pixelType:f.pixelType,dataType:f.dataType,bandNames:f.bandInfos.map(({name:p})=>p),convertColorRampToColormap:10.6>b.version,convertToRFT:!!a?.rasterFunctionDefinition,bandCount:f.bandCount}),a):a};g._addResampleRasterFunction=function(a){if("vector-field"!==
this.layer.renderer?.type||"Resample"===a?.functionName)return a;let b=new q({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:this.layer.serviceRasterInfo.pixelSize}});b=a?.rasterFunctionDefinition?new q({rasterFunctionDefinition:h.convertRenderingRuleToRFT(b)}):b;return h.combineRenderingRules(b,a)};g._addClipFunction=function(a,b){b=new q({functionName:"Clip",functionArguments:{ClippingGeometry:b.toJSON(),
ClippingType:1}});return h.combineRenderingRules(b,a)};r._createClass(n,[{key:"adjustAspectRatio",get:function(){return this.layer.adjustAspectRatio}},{key:"bandIds",get:function(){return this.layer.bandIds}},{key:"compressionQuality",get:function(){return this.layer.compressionQuality}},{key:"compressionTolerance",get:function(){return this.layer.compressionTolerance}},{key:"format",get:function(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}},{key:"interpolation",get:function(){return this.layer.interpolation}},
{key:"noData",get:function(){return this.layer.noData}},{key:"noDataInterpretation",get:function(){return this.layer.noDataInterpretation}},{key:"version",get:function(){const a=this.layer;a.commitProperty("bandIds");a.commitProperty("format");a.commitProperty("compressionQuality");a.commitProperty("compressionTolerance");a.commitProperty("interpolation");a.commitProperty("noData");a.commitProperty("noDataInterpretation");a.commitProperty("mosaicRule");a.commitProperty("rasterFunction");a.commitProperty("adjustAspectRatio");
a.commitProperty("pixelFilter");a.commitProperty("definitionExpression");a.commitProperty("multidimensionalSubset");return(this._get("version")||0)+1},set:function(a){this._set("version",a)}},{key:"mosaicRule",get:function(){var a=this.layer;let b=a.mosaicRule;a=a.definitionExpression;b?a&&a!==b.where&&(b=b.clone(),b.where=a):a&&(b=new w({where:a}));return b}},{key:"rasterFunction",get:function(){const a=this.layer;let {rasterFunction:b}=a;const f=a.pixelFilter,k=!a.format||a.format.includes("jpg")||
a.format.includes("png");b=this._addResampleRasterFunction(b);const p=a.multidimensionalSubset?.areaOfInterest;p&&(b=this._addClipFunction(b,p));k&&!f&&"vector-field"!==a.renderer?.type&&(b=this.combineRendererWithRenderingRule(b));return b}}]);return n}(u.JSONSupport);d.__decorate([e.property()],c.ExportImageServiceParameters.prototype,"layer",void 0);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"adjustAspectRatio",null);d.__decorate([l.writer("adjustAspectRatio")],
c.ExportImageServiceParameters.prototype,"writeAdjustAspectRatio",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"bandIds",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"compression",void 0);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"compressionQuality",null);d.__decorate([l.writer("compressionQuality")],c.ExportImageServiceParameters.prototype,"writeCompressionQuality",
null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"compressionTolerance",null);d.__decorate([l.writer("compressionTolerance")],c.ExportImageServiceParameters.prototype,"writeCompressionTolerance",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"format",null);d.__decorate([e.property({type:String,json:{read:{reader:m.interpolationKebab.read},write:{writer:m.interpolationKebab.write}}})],c.ExportImageServiceParameters.prototype,
"interpolation",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"noData",null);d.__decorate([e.property({type:String,json:{read:{reader:m.noDataInterpretationKebab.read},write:{writer:m.noDataInterpretationKebab.write}}})],c.ExportImageServiceParameters.prototype,"noDataInterpretation",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"pixelType",void 0);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,
"lercVersion",void 0);d.__decorate([l.writer("lercVersion")],c.ExportImageServiceParameters.prototype,"writeLercVersion",null);d.__decorate([e.property({type:Number})],c.ExportImageServiceParameters.prototype,"version",null);d.__decorate([e.property({json:{write:!0}})],c.ExportImageServiceParameters.prototype,"mosaicRule",null);d.__decorate([e.property({json:{write:!0,name:"renderingRule"}})],c.ExportImageServiceParameters.prototype,"rasterFunction",null);c.ExportImageServiceParameters=d.__decorate([v.subclass("esri.layers.mixins.ExportImageServiceParameters")],
c.ExportImageServiceParameters);Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});