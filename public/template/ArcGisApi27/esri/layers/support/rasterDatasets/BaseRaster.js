// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../DimensionalDefinition ../LOD ../RasterStorageInfo ../TileInfo ./multidimensionalUtils ./RawBlockCache ../rasterFormats/pixelRangeUtils ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(T,B,y,aa,U,ba,ca,da,ea,fa,C,ha,ra,sa,ia,ja,ka,la,ma,na,V,L,E,oa,pa,I,w,W,J,H){y=function(X){function M(){var a=X.apply(this,arguments)||this;a.datasetName=null;a.datasetFormat=null;a.hasUniqueSourceStorageInfo=!0;a.rasterInfo=null;a.ioConfig={sampling:"closest"};return a}T._inherits(M,X);var u=M.prototype;u.init=async function(){const a=w.load();this.addResolvingPromise(a);await this.when()};u.normalizeCtorArgs=function(a){a&&a.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",
tileInfo:V.create(),...a.ioConfig}});return a};u.open=async function(a){throw new U("BaseRaster:open-not-implemented","open() is not implemented");};u.fetchTile=async function(a,b,d,c={}){const e=c.tileInfo||this.rasterInfo.storageInfo.tileInfo;a=this.getTileExtentFromTileInfo(a,b,d,e);return this.fetchPixels(a,e.size[0],e.size[1],c)};u.identify=async function(a,b={}){a=ha.ensureClass(H,a).clone().normalize();const {multidimensionalDefinition:d,timeExtent:c}=b;var {rasterInfo:e}=this;const {hasMultidimensionalTranspose:g,
multidimensionalInfo:f}=e;var {transposedVariableName:h}=b,k=null!=f&&g&&(null!=c||L.isMultiSliceOrRangeDefinition(d));k&&!h&&(h=null!=d&&0<d.length?d[0].variableName??void 0:f.variables[0].name,b={...b,transposedVariableName:h});b=this._getRequestOptionsWithSliceId(b);const {spatialReference:m,extent:p}=e;var {datumTransformation:n}=b;n=w.projectPoint(a,m,n);if(!p.intersects(n)||null!=e.transform&&(n=e.transform.inverseTransform(n),!e.nativeExtent.intersects(n)))return{location:n,value:null};let r=
0;var q=null!=h&&null!=f&&e.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){k=this.primaryRasters.rasters[0];if(q)return k.identify(n,b);({pixelSize:q}=e);b=3*q.x/2;q=3*q.y/2;b=new J({xmin:n.x-b,xmax:n.x+b,ymin:n.y-q,ymax:n.y+q,spatialReference:m});q={interpolation:"nearest"};({pixelBlock:k}=await k.fetchPixels(b,3,3,q));({pixelBlock:b}=await this.fetchPixels(b,3,3,q));if(null==k)return{location:n,value:null};k=!k.mask||k.mask[4]?k.pixels.map(A=>A[4]):null;var l;null!=b&&(l=!b.mask||
b.mask[4]?b.pixels.map(A=>A[4]):void 0);return{location:n,value:k,processedValue:l,pyramidLevel:0}}if(!q)if(b.srcResolution)r=w.snapPyramid(b.srcResolution,e,this.ioConfig.sampling).pyramidLevel;else if(r=await this.computeBestPyramidLevelForLocation(a,b),null==r)return{location:n,value:null};l=this.identifyPixelLocation(n,r,null,q);if(null===l)return{location:n,value:null};const {row:t,col:v,rowOffset:x,colOffset:z,blockWidth:F}=l;l=E.getRasterId(this.url,h??b.sliceId);e=`${r}/${t}/${v}`;h=E.getBlock(l,
null,e);null==h&&(h=this.fetchRawTile(r,t,v,b),E.putBlock(l,null,e,h));l=await h;return null!=l&&l.pixels?.length?this._processIdentifyResult(l,{srcLocation:n,position:x*F+z,pyramidLevel:r,useTransposedTile:!!q,requestSomeSlices:k,identifyOptions:b}):{location:n,value:null}};u.fetchPixels=async function(a,b,d,c={}){a=w.snapExtent(a);c=this._getRequestOptionsWithSliceId(c);var {_hasNoneOrGCSShiftTransform:e}=this;if(c.requestRawData&&e)return this._fetchPixels(a,b,d,c);var g=w.getWorldWidth(a.spatialReference),
f=w.getWorldWrapCount(a);if(null==g||0===f||1===f&&this._isGlobalWrappableSource&&e)return this._fetchPixels(a,b,d,c);if(3<=f)return{extent:a,pixelBlock:null};const h=[],{xmin:k,xmax:m}=a,p=Math.round(g/(m-k)*b),n=p-Math.round((g/2-k)/(m-k)*b);let r=0;e=[];for(let l=0;l<=f;l++){var q=new J({xmin:0===l?k:-g/2,xmax:l===f?m-g*l:g/2,ymin:a.ymin,ymax:a.ymax,spatialReference:a.spatialReference});const t=0===l?p-n:l===f?b-r:p;r+=t;e.push(t);q=c.disableWrapAround&&0<l?null:this._fetchPixels(q,t,d,c);h.push(q)}g=
(await Promise.all(h)).map(l=>l?.pixelBlock);f=null;b={width:b,height:d};f=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:e},c)).pixelBlock:I.mosaic(g,b,{blockWidths:e});c=w.projectExtent(a,this.rasterInfo.spatialReference,c.datumTransformation);return{extent:a,srcExtent:c,pixelBlock:f}};u.fetchRawPixels=async function(a,b,d,c={}){b={x:Math.floor(b.x),
y:Math.floor(b.y)};const e=await this._fetchRawTiles(a,b,d,c),{nativeExtent:g,nativePixelSize:f,storageInfo:h}=this.rasterInfo;var k=2**a,m=f.x*k;k*=f.y;m=new J({xmin:g.xmin+m*b.x,xmax:g.xmin+m*(b.x+d.width-1),ymin:g.ymax-k*(b.y+d.height-1),ymax:g.ymax-k*b.y,spatialReference:g.spatialReference});if(!e)return{extent:m,srcExtent:m,pixelBlock:null};const {pixelBlocks:p,mosaicSize:n}=e;if(1===p.length&&null!=p[0]&&p[0].width===d.width&&p[0].height===d.height)return{extent:m,srcExtent:m,pixelBlock:e.pixelBlocks[0]};
a={x:b.x%(0<a?h.pyramidBlockWidth:h.blockWidth),y:b.y%(0<a?h.pyramidBlockHeight:h.blockHeight)};d=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:n,destDimension:d,clipOffset:a,clipSize:d,coefs:null,sampleSpacing:null,interpolation:c.interpolation,alignmentInfo:null,blockWidths:null},c)).pixelBlock:I.mosaic(p,n,{clipOffset:a,clipSize:d});return{extent:m,srcExtent:m,pixelBlock:d}};u.fetchRawTile=function(a,b,d,c){throw new U("BaseRaster:read-not-implemented",
"fetchRawTile() is not implemented");};u.computeExtent=function(a){return w.projectExtent(this.rasterInfo.extent,a)};u.decodePixelBlock=function(a,b){return!this.rasterJobHandler||b.useCanvas?pa.decode(a,b):this.rasterJobHandler.decode({data:a,options:b})};u.request=async function(a,b,d=0){const {customFetchParameters:c}=this.ioConfig,{range:e,query:g,headers:f}=b;d=d??b.retryCount??this.ioConfig.retryCount;const h=e?{Range:`bytes=${e.from}-${e.to}`}:null;try{return await aa(a,{...b,query:{...g,...c},
headers:{...f,...h}})}catch(k){if(0<d)return d--,this.request(a,b,d);throw k;}};u.getSliceIndex=function(a){const {multidimensionalInfo:b}=this.rasterInfo;return null==b||null==a||0===a.length?null:L.getSliceIndex(a,b)};u.getTileExtentFromTileInfo=function(a,b,d,c){a=da.unwrapOrThrow(c.lodAt(a));return this.getTileExtent({x:a.resolution,y:a.resolution},b,d,c.origin,c.spatialReference,c.size)};u.updateTileInfo=function(){const {storageInfo:a,spatialReference:b,extent:d,pixelSize:c}=this.rasterInfo;
if(!a.tileInfo){const g=[];var e=a.maximumPyramidLevel||0;let f=Math.max(c.x,c.y),h=1/.0254*96*f;for(let k=0;k<=e;k++)g.push(new ma({level:e-k,resolution:f,scale:h})),f*=2,h*=2;e=new H({x:d.xmin,y:d.ymax,spatialReference:b});a.tileInfo=new V({origin:e,size:[a.blockWidth,a.blockHeight],spatialReference:b,lods:g});a.isVirtualTileInfo=!0}};u.createRemoteDatasetStorageInfo=function(a,b=512,d=512,c){const {width:e,height:g,nativeExtent:f,pixelSize:h,spatialReference:k}=a,m=new H({x:f.xmin,y:f.ymax,spatialReference:k});
null==c&&(c=Math.max(0,Math.round(Math.log(Math.max(e,g))/Math.LN2-8)));const p=this.computeBlockBoundary(f,512,512,{x:f.xmin,y:f.ymax},[h],c);a.storageInfo=new na({blockWidth:b,blockHeight:d,pyramidBlockWidth:b,pyramidBlockHeight:d,origin:m,firstPyramidLevel:1,maximumPyramidLevel:c,blockBoundary:p})};u.computeBestPyramidLevelForLocation=async function(a,b){return 0};u.computeBlockBoundary=function(a,b,d,c,e,g=0,f=2){if(1===e.length&&0<g){e=[...e];let {x:m,y:p}=e[0];for(let n=0;n<g;n++)m*=f,p*=f,
e.push({x:m,y:p})}g=[];const {x:h,y:k}=c;for(c=0;c<e.length;c++){const {x:m,y:p}=e[c];g.push({minCol:Math.floor((a.xmin-h+.1*m)/b/m),maxCol:Math.floor((a.xmax-h-.1*m)/b/m),minRow:Math.floor((k-a.ymax+.1*p)/d/p),maxRow:Math.floor((k-a.ymin-.1*p)/d/p)})}return g};u.getPyramidPixelSize=function(a){const {nativePixelSize:b}=this.rasterInfo,{pyramidResolutions:d,pyramidScalingFactor:c}=this.rasterInfo.storageInfo;if(0===a)return b;if(null!=d&&d.length)return d[a-1];a=c**a;return{x:b.x*a,y:b.y*a}};u.identifyPixelLocation=
function(a,b,d,c){const {spatialReference:e,nativeExtent:g,storageInfo:f}=this.rasterInfo,{maximumPyramidLevel:h,origin:k,transposeInfo:m}=f,p=c&&null!=m?m.tileSize[0]:f.blockWidth;c=c&&null!=m?m.tileSize[1]:f.blockHeight;a=w.projectPoint(a,e,d);if(!g.intersects(a)||0>b||b>h)return null;d=this.getPyramidPixelSize(b);const {x:n,y:r}=d;d=(k.y-a.y)/r/c;const q=(a.x-k.x)/n/p;return{pyramidLevel:b,row:Math.floor(d),col:Math.floor(q),rowOffset:Math.min(c-1,Math.floor((d-Math.floor(d))*c)),colOffset:Math.min(p-
1,Math.floor((q-Math.floor(q))*p)),blockWidth:p,srcLocation:a}};u.getTileExtent=function(a,b,d,c,e,g){const [f,h]=g;d=c.x+d*f*a.x;b=c.y-b*h*a.y;return new J({xmin:d,xmax:d+f*a.x,ymin:b-h*a.y,ymax:b,spatialReference:e})};u.getBlockWidthHeight=function(a){return{blockWidth:0<a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}};u.isBlockOutside=function(a,b,d){a=
this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<b||a.maxCol<d||a.minRow>b||a.minCol>d};u._fetchPixels=async function(a,b,d,c={}){var e=w.getWorldWrapCount(a);if(2<=e)return{extent:a,pixelBlock:null};var g=this._getSourceDataInfo(a,b,d,c);const {pyramidLevel:f,srcResolution:h,srcExtent:k,srcWidth:m,srcHeight:p,ul:n}=g;if(0===m||0===p)return{extent:a,srcExtent:k,pixelBlock:null};var {rasterInfo:r}=this,q=r.transform,l="gcs-shift"===q?.type,t=null!=w.getWorldWidth(a.spatialReference);
if(l||!t)e=w.getWorldWrapCount(g.srcExtent,l);g=await this._fetchRawTiles(f,n,{width:m,height:p,wrapCount:e},c);if(!g)return{extent:a,srcExtent:k,pixelBlock:null};var v=r.storageInfo;l=0<f?v.pyramidBlockWidth:v.blockWidth;var x=0<f?v.pyramidBlockHeight:v.blockHeight;let {x:z,y:F}=r.pixelSize;if(0<f){const {pyramidResolutions:D,pyramidScalingFactor:G}=v;null!=D&&D[f-1]?{x:z,y:F}=D[f-1]:(v=G**f,z*=v,F*=v)}var A=r.spatialReference;r=new H({x:z,y:F,spatialReference:A});const N=l===m&&x===p&&0===n.x%l&&
0===n.y%x;v=new H({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});const O=!a.spatialReference.equals(A),P=A.isGeographic?1E-9:1E-4;({datumTransformation:A}=c);if(!O&&N&&1===g.pixelBlocks.length&&l===b&&x===d&&this._isSameResolution(h,v,P))return{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:g.pixelBlocks[0]};l=t&&null!=w.getWorldWidth(k.spatialReference)&&this._hasNoneOrGCSShiftTransform;(t=c.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector"))&&
!this.rasterJobHandler&&await w.load();e=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:g.extent,pixelSize:v.toJSON(),datumTransformation:A,rasterTransform:q,hasWrapAround:0<e||l,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:t},c):w.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:g.extent,pixelSize:v,datumTransformation:A,rasterTransform:q,hasWrapAround:0<e||l,isAdaptive:!1,includeGCSGrid:t});q=!c.requestRawData;
l={rows:e.spacing[0],cols:e.spacing[1]};x=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(f,g.extent.xmin):void 0;const {pixelBlocks:Q,mosaicSize:K,isPartiallyFilled:R}=g;g=null;this.rasterJobHandler?(b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:Q,srcMosaicSize:K,destDimension:q?{width:b,height:d}:null,coefs:q?e.coefficients:null,sampleSpacing:q?l:null,projectDirections:t,gcsGrid:t?e.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:c.interpolation,
alignmentInfo:x,blockWidths:null},c),{pixelBlock:q,localNorthDirections:g}=b):(x=I.mosaic(Q,K,{alignmentInfo:x}),q=q?I.approximateTransform(x,{width:b,height:d},e.coefficients,l,c.interpolation):x,t&&e.gcsGrid&&(g=I.getLocalArithmeticNorthRotations({width:b,height:d},e.gcsGrid),q=W.convertToLocalDirections(q,this.rasterInfo.dataType,g)));return c.requestRawData||t?{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:q,transformGrid:e,localNorthDirections:g,isPartiallyFilled:R}:{extent:a,srcExtent:k,
srcTilePixelSize:r,pixelBlock:q}};u._fetchRawTiles=async function(a,b,d,c){const {origin:e,blockBoundary:g}=this.rasterInfo.storageInfo,{blockWidth:f,blockHeight:h}=this.getBlockWidthHeight(a);let {x:k,y:m}=b,{width:p,height:n,wrapCount:r}=d;var q=this._getRasterTileAlignmentInfo(a,0);c.buffer&&(k-=c.buffer.cols,m-=c.buffer.rows,p+=2*c.buffer.cols,n+=2*c.buffer.rows);var l=0,t=0;let v=0;r&&null!=q&&({worldColumnCountFromOrigin:t,originColumnOffset:v,rightPadding:l}=q,t*q.blockWidth-l>=k+p&&(l=0));
b=Math.floor(k/f);d=Math.floor(m/h);const x=Math.floor((k+p+l-1)/f);l=Math.floor((m+n+l-1)/h);var z=g[a];if(!z)return null;const {minRow:F,minCol:A,maxCol:N,maxRow:O}=z;if(0===r&&(l<F||x<A||d>O||b>N))return null;z=[];let P=!1;const Q=null==this.ioConfig.allowPartialFill?c.allowPartialFill:this.ioConfig.allowPartialFill;for(let D=d;D<=l;D++)for(let G=b;G<=x;G++){let S=G;!c.disableWrapAround&&r&&null!=q&&t<=G&&(S=G-t-v);if(D>=F&&S>=A&&O>=D&&N>=S){const Y=this._fetchRawTile(a,D,S,c);Q?z.push(new Promise(Z=>
{Y.then(qa=>Z(qa)).catch(()=>{P=!0;Z(null)})})):z.push(Y)}else z.push(Promise.resolve(null))}if(0===z.length)return null;c=await Promise.all(z);q={height:(l-d+1)*h,width:(x-b+1)*f};({spatialReference:t}=this.rasterInfo);a=this.getPyramidPixelSize(a);const {x:K,y:R}=a;return{extent:new J({xmin:e.x+b*f*K,xmax:e.x+(x+1)*f*K,ymin:e.y-(l+1)*h*R,ymax:e.y-d*h*R,spatialReference:t}),pixelBlocks:c,mosaicSize:q,isPartiallyFilled:P}};u._isSameResolution=function(a,b,d){return Math.abs(a.x-b.x)<d&&Math.abs(a.y-
b.y)<d};u._fetchRawTile=function(a,b,d,c){var e=this.rasterInfo.storageInfo.blockBoundary[a];if(!e)return Promise.resolve(null);const {minRow:g,minCol:f,maxCol:h,maxRow:k}=e;if(b<g||d<f||b>k||d>h)return Promise.resolve(null);const m=E.getRasterId(this.url,c.sliceId),p=`${a}/${b}/${d}`;e=E.getBlock(m,c.registryId,p);if(null==e){const n=new AbortController;e=this.fetchRawTile(a,b,d,{...c,signal:n.signal});E.putBlock(m,c.registryId,p,e,n);e.catch(()=>E.deleteBlock(m,c.registryId,p))}if(c.signal)fa.onAbort(c,
()=>{E.decreaseRefCount(m,c.registryId,p)});return e};u._computeMagDirValues=function(a){const {bandCount:b,dataType:d}=this.rasterInfo;if((2!==b||"vector-magdir"!==d)&&"vector-uv"!==d||2!==a?.length||!a[0]?.length)return null;var c=a[0].length;if("vector-magdir"===d)return c=a[1].map(h=>(h+360)%360),[a[0],c];const [e,g]=a;a=[];const f=[];for(let h=0;h<c;h++){const [k,m]=W.uvComponentToVector([e[h],g[h]]);a.push(k);f.push(m)}return[a,f]};u._getRasterTileAlignmentInfo=function(a,b){null==this._rasterTileAlighmentInfo&&
(this._rasterTileAlighmentInfo=w.getRasterDatasetAlignmentInfo(this.rasterInfo));return null==this._rasterTileAlighmentInfo.pyramidsInfo?null:{startX:b,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[a]}};u._getSourceDataInfo=function(a,b,d,c={}){const e={datumTransformation:c.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,
srcWidth:0,ul:{x:0,y:0}};c.srcResolution&&(e.srcResolution=c.srcResolution,this._updateSourceDataInfo(a,e));var g=this.rasterInfo.storageInfo.maximumPyramidLevel||0;const {srcWidth:f,srcHeight:h,pyramidLevel:k}=e;var m=f/b;const p=h/d,n=k<g&&16<=m*p;var r=k===g&&this._requireTooManySrcTiles(f,h,b,d);if(n||r||0===f||0===h){r=new H({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});r=w.projectResolution(r,this.rasterInfo.spatialReference,a,e.datumTransformation);const q=
!r||c.srcResolution&&r.x+r.y<c.srcResolution.x+c.srcResolution.y;n&&c.srcResolution&&q&&(m=Math.round(Math.log(Math.max(m,p))/Math.LN2)-1,g-k+3>=m&&(g=2**m,r={x:c.srcResolution.x*g,y:c.srcResolution.y*g}));r&&(e.srcResolution=r,this._updateSourceDataInfo(a,e))}this._requireTooManySrcTiles(e.srcWidth,e.srcHeight,b,d)&&(e.srcWidth=0,e.srcHeight=0);return e};u._requireTooManySrcTiles=function(a,b,d,c){const {tileInfo:e}=this.rasterInfo.storageInfo;return 256<=Math.ceil(a/e.size[0])*Math.ceil(b/e.size[1])||
8<a/d||8<b/c};u._updateSourceDataInfo=function(a,b){b.srcWidth=0;b.srcHeight=0;var {rasterInfo:d}=this,c=d.spatialReference;const {srcResolution:e,datumTransformation:g}=b,{pyramidLevel:f,pyramidResolution:h,excessiveReading:k}=w.snapPyramid(e,d,this.ioConfig.sampling);if(!k&&(a=b.srcExtent||w.projectExtent(a,c,g),null!=a)){(c=d.transform)&&(a=c.inverseTransform(a));b.srcExtent=a;var {x:m,y:p}=d.storageInfo.origin;d=Math.floor((a.xmin-m)/h.x+.1);c=Math.floor((p-a.ymax)/h.y+.1);var n=Math.floor((a.xmax-
m)/h.x-.1),r=Math.floor((p-a.ymin)/h.y-.1);n=a.width<.1*h.x?0:n-d+1;a=a.height<.1*h.y?0:r-c+1;b.pyramidLevel=f;b.pyramidResolution=h;b.srcWidth=n;b.srcHeight=a;b.ul={x:d,y:c}}};u._getRequestOptionsWithSliceId=function(a){null!=this.rasterInfo.multidimensionalInfo&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)});return a};u._processIdentifyResult=function(a,b){const {srcLocation:d,position:c,pyramidLevel:e,useTransposedTile:g}=b,f=a.pixels[0].length/a.width/a.height;
if(a.mask&&!a.mask[c])return{location:d,value:null};const {multidimensionalInfo:h}=this.rasterInfo;if(null==h||!g)return b=a.pixels.map(l=>l[c]),a={location:d,value:b,pyramidLevel:e},b=this._computeMagDirValues(b.map(l=>[l])),b?.length&&(a.magdirValue=b.map(l=>l[0])),a;let k=a.pixels.map(l=>l.slice(c*f,c*f+f)),m=this._computeMagDirValues(k);const {requestSomeSlices:p,identifyOptions:n}=b;let r=L.createSlices(h,n.transposedVariableName);if(p){const l=L.getSliceIds(r,n.multidimensionalDefinition,n.timeExtent);
k=k.map(t=>l.map(v=>t[v]));m=m?.map(t=>l.map(v=>t[v]));r=l.map(t=>r[t])}b=a.noDataValues||this.rasterInfo.noDataValue;a={pixels:k,pixelType:a.pixelType};let q;null!=b&&(oa.convertNoDataToMask(a,b),q=a.mask);a=r.map((l,t)=>{l={value:0===q?.[t]?null:k.map(v=>v[t]),multidimensionalDefinition:l.multidimensionalDefinition.map(v=>new la({...v,isSlice:!0}))};m?.length&&(l.magdirValue=[m[0][t],m[1][t]]);return l});return{location:d,value:null,dataSeries:a,pyramidLevel:e}};T._createClass(M,[{key:"_isGlobalWrappableSource",
get:function(){const {rasterInfo:a}=this,b=w.getWorldWidth(a.spatialReference);return null!=b&&a.extent.width>=b/2}},{key:"_hasNoneOrGCSShiftTransform",get:function(){const {transform:a}=this.rasterInfo;return null==a||"gcs-shift"===a.type}},{key:"rasterJobHandler",set:function(a){this._set("rasterJobHandler",a);"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(b=>b.rasterJobHandler=a)}},{key:"url",set:function(a){this._set("url",ja.sanitizeUrl(a,ca.getLogger(this)))}}]);return M}(ea.EsriPromiseMixin(ba.JSONSupport));
B.__decorate([C.property()],y.prototype,"_rasterTileAlighmentInfo",void 0);B.__decorate([C.property({readOnly:!0})],y.prototype,"_isGlobalWrappableSource",null);B.__decorate([C.property({readOnly:!0})],y.prototype,"_hasNoneOrGCSShiftTransform",null);B.__decorate([C.property()],y.prototype,"rasterJobHandler",null);B.__decorate([C.property(ka.url)],y.prototype,"url",null);B.__decorate([C.property({type:String,json:{write:!0}})],y.prototype,"datasetName",void 0);B.__decorate([C.property({type:String,
json:{write:!0}})],y.prototype,"datasetFormat",void 0);B.__decorate([C.property()],y.prototype,"hasUniqueSourceStorageInfo",void 0);B.__decorate([C.property()],y.prototype,"rasterInfo",void 0);B.__decorate([C.property()],y.prototype,"ioConfig",void 0);B.__decorate([C.property()],y.prototype,"sourceJSON",void 0);return y=B.__decorate([ia.subclass("esri.layers.support.rasterDatasets.BaseRaster")],y)});