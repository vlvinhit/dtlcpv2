// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/Logger ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../ogc/crsUtils ../DimensionalDefinition ./BaseRaster ./multipartParser ./wcsCapabilitiesParser ./wcsCoverageParser ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../../../geometry/Extent".split(" "),
function(K,G,B,A,I,L,H,Z,aa,ba,O,P,Q,R,S,T,M,U,V,W){const X=["nearest neighbor","bilinear","bicubic"],Y=["nearest","linear","cubic"];B=function(N){function J(){var a=N.apply(this,arguments)||this;a.datasetFormat="WCSServer";return a}K._inherits(J,N);var z=J.prototype;z.open=async function(a){await this.init();a=a?.signal;var b=await this._getCapabilities(a);this.capabilities=b;if(!this.version){var c=b.capabilitiesVersion?.slice(0,3);this.version="2.0"===c||"1.1"===c||"1.0"===c?b.capabilitiesVersion:
c=b.supportedVersions.find(f=>"2.0.1"===f)||b.supportedVersions.find(f=>"2.0"===f.slice(0,3))||b.supportedVersions.find(f=>"1.1"===f.slice(0,3))||b.supportedVersions.find(f=>"1.0"===f.slice(0,3))||"1.0.0"}c=b.coverages.filter(f=>null==f.coverageSubType||""===f.coverageSubType||f.coverageSubType?.toLowerCase().startsWith("rectifiedgrid"));null==this.coverageId&&(this.coverageId=c[0].id);c=c.find(f=>f.id===this.coverageId);if(null==c)throw new A("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);
this.coverageInfo=(await this._describeCoverage(a))[0];"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=c.lonLatEnvelope,this.coverageInfo.supportedInterpolations=M.standardizeInterpolations(b.supportedInterpolations));this.datasetName=this.coverageInfo.title;({rasterInfo:b}=this.coverageInfo);this.createRemoteDatasetStorageInfo(b,512,512);this._set("rasterInfo",b);if(null==b.spatialReference)throw new A("wcsraster-open",`coverage without spatial referernce is not supported: ${this.coverageId}`);
const {pixelType:d,bandCount:e}=await this._getPixelTypeAndBandCount(a);b.pixelType=d;1===b.bandCount&&1<e&&(b.bandCount=e);this.updateTileInfo()};z.fetchRawTile=async function(a,b,c,d={}){if(this.isBlockOutside(a,b,c))return null;const {nativePixelSize:e,spatialReference:f}=this.rasterInfo;var h=2**a,g=e.x*h;const q=e.y*h,{blockWidth:u,blockHeight:l}=this.getBlockWidthHeight(a);({origin:a}=this.rasterInfo.storageInfo.tileInfo);const m=this.getTileExtent({x:g,y:q},b,c,a,f,[u,l]),w=this.rasterInfo.extent,
x=m.xmax>w.xmax,r=m.ymin<w.ymin;b=x||r;let k=m;c=u;a=l;b&&(k=m.clone().intersection(w),null!=k&&(x&&(c=Math.floor((k.xmax-k.xmin)/g),k.xmax=k.xmin+g*c),r&&(a=Math.floor((k.ymax-k.ymin)/q),k.ymin=k.ymax-q*a)));if(null==k||1>=c||1>=a)return null;h=await this._getCoverage(k,c,a,h,d);if(!h)return null;({coverageDescription:g}=this.coverageInfo);let {noDataValue:p,multidimensionalInfo:C}=this.rasterInfo;({multidimensionalDefinition:d}=d);if(null!=C&&null!=d&&d.length){const v=d[0].variableName;"2.0"===
g.version?p=g.rangeType[0].find(n=>n.name===v)?.nilValue:"1.1"===g.version&&(p=g.range.find(n=>n.identifier===v)?.nullValues)}d=await this.decodePixelBlock(h,{width:c,height:a,planes:null,pixelType:null,noDataValue:Array.isArray(p)?p[0]:p});if(null==d)return null;if(d&&(d.width!==c||d.height!==a))throw new A("wcsraster-fetch",`the reponse has unexpected dimension width: ${d.width}, height: {pixelBlock.height}`);return b?V.clip(d,{x:0,y:0},{width:l,height:l}):d};z._getCapabilities=async function(a){const b=
{service:"WCS",request:"GetCapabilities"};this.version&&(b.version=this.version,b.acceptVersions=this.version);try{const {data:c}=await this.request(this.url,{query:b,responseType:"xml",signal:a});return T.parseCapabilities(c)}catch(c){if(!L.isAbortError(c))throw new A("wcslayer:open","wcs capabilities is not valid or supported");throw c;}};z._describeCoverage=async function(a){const b={service:"WCS",request:"DescribeCoverage",version:this.version},c=this.version?.slice(0,3);"1.0"===c?b.coverage=
this.coverageId:"1.1"===c?b.identifiers=this.coverageId:"2.0"===c&&(b.coverageId=this.coverageId);try{const {data:d}=await this.request(this.url,{query:b,responseType:"xml",signal:a});return M.parseCoverages(d,this.version)}catch(d){if(!L.isAbortError(d))throw new A("wcslayer:open","wcs coverage description is not valid or supported");throw d;}};z._getPixelTypeAndBandCount=async function(a){const {pixelSize:b,extent:c,multidimensionalInfo:d}=this.rasterInfo;var e=c.center;e=new W({xmin:e.x-b.x,xmax:e.x+
b.x,ymin:e.y-b.y,ymax:e.y+b.y,spatialReference:c.spatialReference});let f=[];if(null!=d){const l=d.variables[0];f=[];l.dimensions.forEach(m=>{f.push(new Q({variableName:l.name,dimensionName:m.name,values:m.hasRegularIntervals?m.extent[0]:m.values?.[0],isSlice:!0}))})}var {coverageDescription:h}=this.coverageInfo;a={interpolation:"nearest",multidimensionalDefinition:f,signal:a};({version:h}=h);const {ioConfig:g}=this,q="2.0"===h&&null==g.allowAnyMediaType||"1.1"===h&&null==g.use2GridOffsets;try{var u=
await this._getCoverage(e,2,2,1,a,!0)}catch(l){if(!q)throw l;if("1.1"===h)if(l.details?.isResolutionMismatch)g.use2GridOffsets=!0;else throw l;}!u&&q&&("2.0"===h&&(g.allowAnyMediaType=!0),(u=await this._getCoverage(e,2,2,1,a))&&I.getLogger(this).warn("wcsraster:getcoverage","response is not a supported multipart/related mediaType with inline tiff,  switching to compability mode"));if(!u)throw new A("wcsraster-open","unable to determine pixel type");u=await this.decodePixelBlock(u,{width:2,height:2,
planes:null,pixelType:null});if(null==u)throw new A("wcsraster-open","unable to determine pixel type");return{pixelType:u.pixelType,bandCount:u.getPlaneCount()??0}};z._getCoverage=async function(a,b,c,d,e,f=!1){const {coverageDescription:h}=this.coverageInfo;var {version:g}=h;a="2.0"===g?this._getCoverage201Parameters(a,b,c,d,e,h):"1.1"===g?this._getCoverage110Parameters(a,b,c,e,h):this._getCoverage100Parameters(a,b,c,e);e="2.0"===g?await this.request(this._constructWCS201Url(a),{signal:e.signal,
responseType:"array-buffer"}):await this.request(this.url,{query:a,signal:e.signal,responseType:"array-buffer"});if("1.0"===g)return e.data;if("2.0"===g&&!1!==this.ioConfig.allowAnyMediaType&&"tiff"===U.getFormat(e.data))return f&&(this.ioConfig.allowAnyMediaType=!0,I.getLogger(this).warn("wcsraster:getcoverage","response is not a supported multipart/related mediaType with inline tiff,  switching to compability mode")),e.data;g=S.parse(e);if(g.isMultipart&&g.data)return g=g.data.find(q=>q.contentType?.toLowerCase().includes("image")&&
null!=q.contentData),f&&"base64"===g?.contentTransferEncoding&&I.getLogger(this).warn("wcsraster:getcoverage","response is base64 encoded which may impact layer display performance"),g?.contentData;g=new Uint8Array(e.data,0,Math.min(e.data.byteLength,2E3));g=(f=String.fromCharCode.apply(null,g).toLowerCase().includes("exception"))&&String.fromCharCode.apply(null,g).includes("A non-zero RESX/RESY or WIDTH/HEIGHT is required but neither was provided");if(f)throw new A("wcsraster:getcoverage","server returns an exception",
{isResolutionMismatch:g});throw new A("wcsraster:getcoverage","response is not a supported multipart mediaType with inline tiff");};z._getInterpolationIndex=function(a){return a&&this.coverageInfo.supportedInterpolations?.includes(a)?"nearest"===a?0:"bilinear"===a?1:"cubic"===a?2:0:0};z._getCoverage100Parameters=function(a,b,c,d){const e=`${a.xmin},${a.ymin},${a.xmax},${a.ymax}`;a=a.spatialReference.wkid;const f=(this.coverageInfo.supportedFormats||[]).find(m=>m.toLowerCase().includes("tiff"))||"GEOTIFF",
{bandIds:h,interpolation:g}=d;var q=this._getInterpolationIndex(g);const u=h?h.map(m=>this.coverageInfo.bandNames[m]):null;q=X[q];({multidimensionalDefinition:d}=d);let l;null!=d&&null!=this.rasterInfo.multidimensionalInfo&&(d=d.find(m=>"StdTime"===m.dimensionName)?.values)&&0<d.length&&(d[0]instanceof Array&&(d=d[0]),l=d.map(m=>this._convertToISOTime(m)).join(","));return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:f,crs:`EPSG:${a}`,bbox:e,width:b,height:c,
time:l,interpolation:q,band:u?.join(",")}};z._getCoverage110Parameters=function(a,b,c,d,e){const {multidimensionalDefinition:f,bandIds:h,interpolation:g}=d;d=a.spatialReference.wkid;const q=`urn:ogc:def:crs:EPSG::${d}`,u=(this.coverageInfo.supportedFormats||[]).find(v=>v.toLowerCase().includes("tiff"))||"image/tiff";var l=this._getInterpolationIndex(g);l=Y[l];const m=null==g||0===this.coverageInfo.supportedInterpolations?.indexOf(g);var w=e.domain.spatialDomain,x=w.origin.x<=w.envelope.xmin&&w.origin.y<=
w.envelope.ymin,r=a.width/b,k=a.height/c*(x?1:-1);c=x?[a.xmin,a.ymin]:[a.xmin,a.ymax];c=(b=w.useEPSGAxis&&P.isAxesOrderReversedForWkid(d))?`${c[1]},${c[0]}`:`${c[0]},${c[1]}`;w=this.ioConfig.use2GridOffsets;w=b?w?`${k},${r}`:`${k},0,0,${r}`:w?`${r},${k}`:`${r},0,0,${k}`;x=r/2;r=a.xmin+x;x=a.xmax-x;var p=Math.abs(k)/2;k=a.ymin+p;a=a.ymax-p;a=b?`${k},${r},${a},${x},${q}`:`${r},${k},${x},${a},${q}`;b=(b=e.range.find(v=>v.axis.some(n=>n.identifier.toLowerCase().includes("band"))))&&l&&h?m?`${b.identifier}[${b.axis[0].identifier}[${h.join(",")}]]`:
`${b.identifier}:${l}[${b.axis[0].identifier}[${h.join(",")}]]`:null;let C;if(null!=f&&f.length)for(k=0;k<f.length;k++){r=f[k].values;const v=f[k].dimensionName?.toLowerCase(),n=f[k].variableName?.toLowerCase();0<r.length&&(r[0]instanceof Array&&(r=r[0]),"stdtime"===v?C=r.map(t=>this._convertToISOTime(t)).join(","):(x=e.range.find(t=>t.identifier.toLowerCase()===n))&&(p=x.axis.find(t=>t.identifier.toLowerCase()===v))&&(b=m?x.identifier+"["+p.identifier+"["+r.join(",")+"]]":x.identifier+":"+l+"["+
p.identifier+"["+r.join(",")+"]]"))}return{service:"WCS",request:"GetCoverage",version:this.version,identifier:this.coverageId,format:u,crs:`EPSG:${d}`,boundingbox:a,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",gridOrigin:c,gridOffsets:w,gridBaseCRS:q,timeSequence:C,rangeSubset:b}};z._convertToISOTime=function(a,b=!1){return(b?new Date(864E5*(a-25569)):new Date(a)).toISOString()};z._getCoverage201Parameters=function(a,b,c,d,e,f){const {multidimensionalDefinition:h,
interpolation:g}=e;var q=this._getInterpolationIndex(g);let u=null;var {supportedInterpolations:l}=this.capabilities;if(l?.length)switch(q){case 0:u=l.find(y=>y.toLowerCase().includes("nearest"));break;case 1:u=l.find(y=>y.toLowerCase().includes("linear"));break;case 2:u=l.find(y=>y.toLowerCase().includes("cubic")||y.toLowerCase().includes("quadratic"))}q=(this.coverageInfo.supportedFormats||[]).find(y=>y.toLowerCase().includes("tiff"))||"image/tiff";const {bandNames:m}=this.coverageInfo,{boundedBy:w,
domainSet:x,rangeType:r}=f;var k=w.isEastFirst?0:1,{axisLabels:p}=w;l=p[k];k=p[1-k];const C=`http://www.opengis.net/def/crs/EPSG/0/${a.spatialReference.wkid}`,v=[];v.push(`${l}(${a.xmin},${a.xmax})`);v.push(`${k}(${a.ymin},${a.ymax})`);a=[];if(2<p.length)for(var n=2;n<p.length;n++){var t=x.origin[n];if(p[n].toLowerCase().includes("time")){let y=t.toString();w.uomLabels?.[n].toLowerCase().includes("ole")&&(a.push(p[n]),y=this._convertToISOTime(t,!0));v.push(p[n]+",http://www.opengis.net("+y+")")}else v.push(p[n]+
",http://www.opengis.net("+t+")")}a=null;if(null!=h&&h.length){const y=[];r.forEach(D=>D.forEach(E=>y.push(E.name)));e=[];for(let D=0;D<h.length;D++){const E=p.find(F=>F===h[D].dimensionName);n=y.find(F=>F===h[D].variableName);e.includes(n)||e.push(n);E&&(t=h[D].values,0<t.length&&(Array.isArray(t[0])&&(t=t[0]),n="",n=E.toLowerCase().includes("time")?t.map(F=>this._convertToISOTime(F)).join(","):t.join(","),t=v.findIndex(F=>0===F.indexOf(E+",http://www.opengis.net")),-1===t&&v.push(E+",http://www.opengis.net("+
n+")"),-1===t||v[t].includes("("+n+")")||v.splice(t,1,E+",http://www.opengis.net("+n+")")))}e.length&&(a=e.join(","))}else 2<=m?.length&&(a=(e.bandIds?e.bandIds.map(y=>m[y]):m).join(","));p=v.join("\x26subset\x3d");f=!f.domainSet.hasSameAxisLabelsAsBoundedBy&&!1!==this.ioConfig.allowScaleFactor;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,rangesubset:a,interpolation:u,scaleSize:f?null:`${l}(${b}),${k}(${c})`,scaleFactor:f?1/d:null,subset:p,format:q,mediaType:this.ioConfig.allowAnyMediaType?
null:"multipart/related",outputcrs:C,subsettingcrs:C}};z._constructWCS201Url=function(a){const b={...this.ioConfig.customFetchParameters,...a},c=[];Object.keys(b).forEach(e=>{const f=b[e];null!=f&&("subset"!==e?c.push(`${e}=${encodeURIComponent(f)}`):"string"===typeof f&&f.split("\x26subset\x3d").forEach(h=>{h&&c.push(`subset=${encodeURIComponent(h)}`)}))});a=encodeURI(this.url);const d=c.join("\x26");return`${a}?${d}`};return K._createClass(J)}(R);G.__decorate([H.property({type:String,json:{write:!0}})],
B.prototype,"datasetFormat",void 0);G.__decorate([H.property()],B.prototype,"tileType",void 0);G.__decorate([H.property({type:String,json:{write:!0}})],B.prototype,"version",void 0);G.__decorate([H.property({type:String,json:{write:!0}})],B.prototype,"coverageId",void 0);return B=G.__decorate([O.subclass("esri.layers.support.rasterDatasets.WCSRaster")],B)});