// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../kernel ../../request ../../core/promiseUtils ../FeatureLayer ../../portal/Portal ../../portal/PortalItem".split(" "),function(l,r,t,h,k,m,u,v){let w=function(){function n(a,b,c,g){this._parsedUrl=a;this._portalItem=b;this._apiKey=c;this.signal=g;this._rootDocument=null;if(a=this._parsedUrl?.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i))this._urlParts={root:a[1],layerId:parseInt(a[2],10)}}var d=n.prototype;d.fetch=async function(){if(!this._urlParts)return null;
var a=this._portalItem??await this._portalItemFromServiceItemId();if(null==a)return this._loadFromUrl();a=await this._findAndLoadRelatedPortalItem(a);return null==a?null:this._loadFeatureLayerFromPortalItem(a)};d.fetchPortalItem=async function(){if(!this._urlParts)return null;const a=this._portalItem??await this._portalItemFromServiceItemId();return null==a?null:this._findAndLoadRelatedPortalItem(a)};d._fetchRootDocument=async function(){if(null!=this._rootDocument)return this._rootDocument;if(null==
this._urlParts)return this._rootDocument={},{};const a={query:{f:"json",token:this._apiKey},responseType:"json",signal:this.signal},b=`${this._urlParts.root}/SceneServer`;try{this._rootDocument=(await h(b,a)).data}catch{this._rootDocument={}}return this._rootDocument};d._fetchServiceOwningPortalUrl=async function(){var a=this._parsedUrl?.path;const b=a?t.id?.findServerInfo(a):null;if(b?.owningSystemUrl)return b.owningSystemUrl;a=a?a.replace(/(.*\/rest)\/.*/i,"$1")+"/info":null;try{const c=(await h(a,
{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(c)return c}catch(c){k.throwIfAbortError(c)}return null};d._findAndLoadRelatedPortalItem=async function(a){try{return(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find(b=>"Feature Service"===b.type)||null}catch(b){return k.throwIfAbortError(b),null}};d._loadFeatureLayerFromPortalItem=async function(a){await a.load({signal:this.signal});const b=await this._findMatchingAssociatedSublayerUrl(a.url??
"");return(new m({url:b,portalItem:a})).load({signal:this.signal})};d._loadFromUrl=async function(){const a=await this._findMatchingAssociatedSublayerUrl(`${this._urlParts?.root}/FeatureServer`);return(new m({url:a})).load({signal:this.signal})};d._findMatchingAssociatedSublayerUrl=async function(a){const b=a.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1");a=this._urlParts?.layerId;var c=this._fetchRootDocument();const g=f=>h(b,{query:{f:"json"},responseType:"json",authMode:f,signal:this.signal});
var e=g("anonymous").catch(()=>g("no-prompt"));const [p,q]=await Promise.all([e,c]);c=q&&q.layers;e=p.data&&p.data.layers;if(!Array.isArray(e))throw Error("expected layers array");if(!Array.isArray(c)){if(null!=a&&a<e.length)return`${b}/${e[a].id}`}else for(let f=0;f<Math.min(c.length,e.length);f++)if(c[f].id===a)return`${b}/${e[f].id}`;throw Error("could not find matching associated sublayer");};d._portalItemFromServiceItemId=async function(){var a=(await this._fetchRootDocument()).serviceItemId;
if(!a)return null;a=new v({id:a,apiKey:this._apiKey});const b=await this._fetchServiceOwningPortalUrl();null!=b&&(a.portal=new u({url:b}));try{return a.load({signal:this.signal})}catch(c){return k.throwIfAbortError(c),null}};return r._createClass(n)}();l.FetchAssociatedFeatureLayer=w;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});