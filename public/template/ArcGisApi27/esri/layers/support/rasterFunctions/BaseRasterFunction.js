// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/JSONSupport ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/cast ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../PixelBlock ../RasterInfo".split(" "),function(q,g,f,k,r,y,z,t,u,v){const w=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);f=function(n){function p(){var a=n.apply(this,arguments)||this;a.functionArguments=
null;a.readingBufferSize=0;a.id=-1;a.isNoopProcess=!1;a.rawInputBandIds=[];a.isInputBandIdsSwizzled=!1;a.swizzledBandSelection=[];a.isBranch=!1;a._bindingResult=null;return a}q._inherits(p,n);var l=p.prototype;l.bind=function(a,c=!1,b=-1){this.id=b+1;b=this._getRasterValues();let d=!0;for(let h=0;h<b.length;h++){var e=b[h];if(null!=e&&this._isRasterFunctionValue(e)){e=e.bind(a,c,this.id+h);if(!e.success)return this._bindingResult=e;d=d&&e.supportsGPU}}if(!this.rasterInfo||c)return this.sourceRasterInfos=
this._getSourceRasterInfos(a),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=d&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult;this._bindingResult={success:!0,supportsGPU:!0};this.processInputBandIds();return this._bindingResult};l.process=function(a){var c=this._getRasterValues();c=0===c.length?a.pixelBlocks??a.primaryPixelBlocks:c.map(b=>this._readRasterValue(b,a));return this._processPixels({...a,
pixelBlocks:c})};l.processInputBandIds=function(){var a=this._getRasterValues().filter(this._isRasterFunctionValue);if(1<a.length)return this.rawInputBandIds=a.map(b=>b.processInputBandIds()[0]),this.isInputBandIdsSwizzled=this.rawInputBandIds.some((b,d)=>b!==d),a=a.filter(b=>"ExtractBand"===b.functionName),a.length&&a.forEach((b,d)=>{b.isInputBandIdsSwizzled=!0;b.swizzledBandSelection=[d,d,d]}),this.rawInputBandIds;var c=a[0];if(c){if(a=c.processInputBandIds(),c.isInputBandIdsSwizzled)return this.rawInputBandIds=
a}else{a=[];({bandCount:c}=this.sourceRasterInfos[0]);for(let b=0;b<c;b++)a.push(b)}a=this._getInputBandIds(a);this.isInputBandIdsSwizzled=a.some((b,d)=>b!==d);return this.rawInputBandIds=a};l.getPrimaryRasters=function(){const a=[],c=[];this._getPrimaryRasters(this,a,c);return{rasters:a,rasterIds:c}};l.getWebGLProcessorDefinition=function(){const a=this._getWebGLParameters(),{raster:c,rasters:b}=this.functionArguments;b&&Array.isArray(b)&&b.length?(a.rasters=b.map(d=>this._isRasterFunctionValue(d)?
d.getWebGLProcessorDefinition():"number"===typeof d?{name:"Constant",parameters:{value:d},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:d},pixelType:"f32",id:-1,isNoopProcess:!1}),a.rasters.some(d=>null!=d)||(a.rasters=null)):this._isRasterFunctionValue(c)&&(a.raster=c.getWebGLProcessorDefinition());return{name:this.functionName,parameters:a,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}};l._getOutputPixelType=function(a){return"unknown"===
this.outputPixelType?a:this.outputPixelType??a};l._getWebGLParameters=function(){return{}};l._getInputBandIds=function(a){return a};l._isOutputRoundingNeeded=function(){const {outputPixelType:a}=this;return(a?.startsWith("u")||a?.startsWith("s"))??!1};l._getRasterValues=function(){const {rasterArgumentNames:a}=this;return"rasters"===a[0]?this.functionArguments.rasters??[]:a.map(c=>this.functionArguments[c]).flat()};l._getSourceRasterInfos=function(a){const c=this._getRasterValues(),{rasterInfos:b,
rasterIds:d}=a;if(0===c.length)return b;const e=c.map(m=>{if(m&&"object"===typeof m&&"bind"in m&&m.rasterInfo)return m.rasterInfo;if("string"===typeof m&&d.includes(m))return b[d.indexOf(m)];if("number"!==typeof m)return b[0]}),h=e.find(m=>m)??b[0];e.forEach((m,x)=>{void 0===m&&(e[x]=h)});return e};l._getPrimaryRasterId=function(a){return a?.url};l._getPrimaryRasters=function(a,c=[],b=[]){for(let e=0;e<a.sourceRasters.length;e++){var d=a.sourceRasters[e];if("number"!==typeof d)if("bind"in d)this._getPrimaryRasters(d,
c,b);else{const h=this._getPrimaryRasterId(d);null==h||b.includes(h)||(this.mainPrimaryRasterId===h?(c.unshift(d),b.unshift(h)):(c.push(d),b.push(h)))}}};l._isRasterFunctionValue=function(a){return null!=a&&"object"===typeof a&&"getWebGLProcessorDefinition"in a};l._readRasterValue=function(a,c){var {primaryPixelBlocks:b}=c;if(null==a||"$$"===a)return a=b[0],null==a?null:a.clone();if("string"===typeof a)return a=c.primaryRasterIds.indexOf(a),-1===a?null:b[a];if("number"===typeof a){b=b[0];if(null==
b)return null;const {width:d,height:e,pixelType:h,mask:m}=b;b=m?new Uint8Array(m):null;c=new Float32Array(d*e);c.fill(a);a=Array(this.sourceRasterInfos[0].bandCount).fill(c);return new u({width:d,height:e,pixelType:h,pixels:a,mask:b})}return a.process(c)};l._patchRasterInfo=function(){const {rasterInfo:a}=this;if(a?.keyProperties){var {bandCount:c,keyProperties:b,statistics:d,histograms:e}=a,h=b.BandProperties;h&&h.length!==c&&(a.keyProperties={...b,BandProperties:void 0});d&&d.length!==c&&(a.statistics=
d.length>c?d.slice(0,c):null);e&&e.length!==c&&(a.histograms=e.length>c?e.slice(0,c):null);b.BAND_COUNT&&Number(b.BAND_COUNT)!==c&&(a.keyProperties={...b,BAND_COUNT:"string"===typeof b.BAND_COUNT?String(c):c})}};q._createClass(p,[{key:"supportsGPU",get:function(){return this._bindingResult.supportsGPU}},{key:"flatWebGLFunctionChain",get:function(){var a=this.getWebGLProcessorDefinition();if(!a)return null;const c=[a];({parameters:a}=a);for(a=a.rasters||a.raster&&[a.raster];a?.length;){c.unshift(...a);
var b=[];for(var d=0;d<a.length;d++){var {parameters:e}=a[d];e=e.rasters||e.raster&&[e.raster];e?.length&&b.push(...e)}a=b}for(a=c.length-1;0<=a;a--)c[a].isNoopProcess&&c.splice(a,1);a=!1;for(b=0;b<c.length;b++)d=c[b],d.id=c.length-b-1,{rasters:d}=d.parameters,a=a||null!=d&&1<d.length;b=c.some(({name:h})=>w.has(h.toLowerCase()));return{functions:c,hasBranches:a,hasSurfaceFunction:b}}}]);return p}(f.JSONSupport);g.__decorate([k.property({json:{write:!0}})],f.prototype,"functionName",void 0);g.__decorate([k.property({json:{write:!0}})],
f.prototype,"functionArguments",void 0);g.__decorate([k.property()],f.prototype,"rasterArgumentNames",void 0);g.__decorate([k.property({json:{write:!0}}),r.cast(n=>n?.toLowerCase())],f.prototype,"outputPixelType",void 0);g.__decorate([k.property({json:{write:!0}})],f.prototype,"mainPrimaryRasterId",void 0);g.__decorate([k.property()],f.prototype,"sourceRasters",void 0);g.__decorate([k.property({type:[v],json:{write:!0}})],f.prototype,"sourceRasterInfos",void 0);g.__decorate([k.property({json:{write:!0}})],
f.prototype,"rasterInfo",void 0);g.__decorate([k.property({json:{write:!0}})],f.prototype,"readingBufferSize",void 0);g.__decorate([k.property({json:{write:!0}})],f.prototype,"id",void 0);g.__decorate([k.property()],f.prototype,"isNoopProcess",void 0);g.__decorate([k.property()],f.prototype,"supportsGPU",null);g.__decorate([k.property()],f.prototype,"rawInputBandIds",void 0);g.__decorate([k.property()],f.prototype,"isInputBandIdsSwizzled",void 0);g.__decorate([k.property()],f.prototype,"swizzledBandSelection",
void 0);g.__decorate([k.property()],f.prototype,"isBranch",void 0);g.__decorate([k.property()],f.prototype,"flatWebGLFunctionChain",null);g.__decorate([k.property()],f.prototype,"_bindingResult",void 0);return f=g.__decorate([t.subclass("esri.layers.support.rasterFunctions.BaseRasterFunction")],f)});