// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ./bandIndexUtils ./BaseRasterFunction ./ExtractBandFunctionArguments ./pixelUtils".split(" "),function(y,v,w,r,F,G,A,B,C,D,E){r=function(z){function x(){var a=z.apply(this,arguments)||this;a.functionName="ExtractBand";a.functionArguments=null;
a.rasterArgumentNames=["raster"];return a}y._inherits(x,z);var n=x.prototype;n._bindSourceRasters=function(){const {functionArguments:a,sourceRasterInfos:c}=this;var b=c[0];const {method:d,bandNames:f,bandWavelengths:e,bandIds:h,missingBandAction:p}=a,t=f?.length&&("name"===d||"id"!==d&&!h?.length),m=e?.length&&("wavelength"===d||"id"!==d&&!h?.length);var g=p===E.MissingBandAction.fail;g=t?this._matchBandNames(b,f):m?this._matchBandWavelengths(b,e,g):this._matchBandIds(b,h,g);if(null==g)return{success:!1,
supportsGPU:!1,error:`extract-band-function: Invalid ${t?"band names":m?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=g;this.functionArguments.method="id";this.outputPixelType=this._getOutputPixelType("f32");b=b.clone();b.pixelType=this.outputPixelType;b.bandCount=g.length;const {statistics:k,histograms:l}=b;null!=k&&k.length&&(b.statistics=g.map(u=>k[u]||k[k.length-1]));null!=l&&l.length&&(b.histograms=g.map(u=>l[u]||l[l.length-1]));let q=b.keyProperties?.BandProperties;
q?.length&&(q=g.map(u=>u>=q.length?q[q.length-1]:q[u]),b.keyProperties={...b.keyProperties,BandProperties:q});this.rasterInfo=b;return{success:!0,supportsGPU:3>=b.bandCount}};n._processPixels=function(a){a=a.pixelBlocks?.[0];if(null==a)return null;const c=a.pixels.length,b=this.functionArguments.bandIds.map(d=>d>=c?c-1:d);return a.extractBands(b)};n._getWebGLParameters=function(){let a;if(this.isInputBandIdsSwizzled)a=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{a=[...this.functionArguments.bandIds];
0===a.length?a=[0,1,2]:3>a.length&&(a[1]=a[1]??a[0],a[2]=a[2]??a[1]);for(let c=0;3>c;c++)a[c]=Math.min(a[c],2)}return{bandIndexMat3:B.getBandMatrix3(a)}};n._getInputBandIds=function(a){const c=a.length;return this.functionArguments.bandIds.map(b=>b>=c?c-1:b).map(b=>a[b])};n._matchBandNames=function(a,c){a=a.bandInfos.map(({name:d})=>d.toLowerCase());const b=[];for(let d=0;d<c.length;d++){const f=c[d].toLowerCase();let e=a.indexOf(f);-1===e&&"nearinfrared"===f&&(e=a.findIndex(h=>h.startsWith("nearinfrared_1")),
-1===e&&(e=a.findIndex(h=>h.startsWith("nearinfrared"))));if(-1===e)return null;b.push(e)}return b};n._matchBandIds=function(a,c,b){const {bandCount:d}=a;return!c?.length||b&&c.some(f=>0>f||f>=d)?null:c};n._matchBandWavelengths=function(a,c,b){var {bandInfos:d}=a;a=[];for(var f=0;f<d.length;f++){const {minWavelength:e,maxWavelength:h}=d[f];if(!e||!h)return null;a.push({minWavelength:e,maxWavelength:h})}({wavelengthMatchTolerance:d}=this.functionArguments);f=[];for(let e=0;e<c.length;e++){const h=
c[e];let p=!1,t=-1,m=Number.MAX_VALUE;for(let g=0;g<a.length;g++){const k=a[g],l=Math.abs(h-(k.minWavelength+k.maxWavelength)/2);h>=k.minWavelength&&h<=k.maxWavelength?l<m&&(p=!0,t=g,m=l):!p&&l<m&&(t=g,m=l)}!p&&d&&m<d&&(p=!0);if(!p&&b)return null;f.push(t)}return f};return y._createClass(x)}(C);v.__decorate([w.property({json:{write:!0,name:"rasterFunction"}})],r.prototype,"functionName",void 0);v.__decorate([w.property({type:D,json:{write:!0,name:"rasterFunctionArguments"}})],r.prototype,"functionArguments",
void 0);v.__decorate([w.property()],r.prototype,"rasterArgumentNames",void 0);return r=v.__decorate([A.subclass("esri.layers.support.rasterFunctions.ExtractBandFunction")],r)});