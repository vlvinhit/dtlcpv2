// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../PixelBlock","../rasterFunctionConstants"],function(w,F,f){function G(b){const a=Math.sqrt(b.length),l=b.slice(0,a),g=[1];for(let h=1;h<a;h++){let d=null;for(let c=0;c<a;c++){const k=b[c+h*a],m=b[c];if(null==d)if(0===m){if(k)return{separable:!1,row:null,col:null}}else d=k/m;else if(k/m!==d)return{separable:!1,row:null,col:null}}if(null==d)return{separable:!1,row:null,col:null};g.push(d)}return{separable:!0,row:l,col:g}}function H(b,a,l,g,h,d,c){const k=new Float32Array(a*l),m=
d.length,v=c?0:g,u=c?g:0;c=c?1:a;for(let r=v;r<l-v;r++){const q=r*a;for(let n=u;n<a-u;n++){if(h&&!h[q+n])continue;let t=0;for(let p=0;p<m;p++)t+=b[q+n+(p-g)*c]*d[p];k[q+n]=t}}return k}function N(b,a,l=!0){const {pixels:g,width:h,height:d,pixelType:c,mask:k}=b;b=g.length;const m=[],{kernel:v,rows:u,cols:r}=a;for(a=0;a<b;a++){var q=g[a],n=h,t=d,p=u,A=r,I=k,O=v;const J=new Float32Array(n*t),B=Math.floor(p/2),C=Math.floor(A/2);for(let D=B;D<t-B;D++){const E=D*n;for(let x=C;x<n-C;x++){if(I&&!I[E+x])continue;
let K=0;for(let y=0;y<p;y++)for(let z=0;z<A;z++)K+=q[E+x+(y-B)*n+z-C]*O[y*A+z];J[E+x]=K}}q=J;l&&L(q,h,d,u,r);m.push(q)}return new F({width:h,height:d,pixelType:c,pixels:m,mask:k})}function L(b,a,l,g,h){g=Math.floor(g/2);for(var d=0;d<g;d++)for(var c=0;c<a;c++)b[d*a+c]=b[(h-1-d)*a+c],b[(l-1-d)*a+c]=b[(l-h+d)*a+c];g=Math.floor(h/2);for(d=0;d<l;d++){c=d*a;for(let k=0;k<g;k++)b[c+k]=b[c+h-1-k],b[c+a-k-1]=b[c+a+k-h]}}function M(b,a,l,g=!0){const {pixels:h,width:d,height:c,pixelType:k,mask:m}=b;b=h.length;
const v=[],u=a.length,r=l.length,q=Math.floor(u/2),n=Math.floor(r/2);for(let t=0;t<b;t++){let p=H(h[t],d,c,q,m,a,!0);p=H(p,d,c,n,m,l,!1);g&&L(p,d,c,u,r);v.push(p)}return new F({width:d,height:c,pixelType:k,pixels:v,mask:m})}const e=new Map;e.set(f.convolutionKernel.none,[0,0,0,0,1,0,0,0,0]);e.set(f.convolutionKernel.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]);e.set(f.convolutionKernel.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]);e.set(f.convolutionKernel.lineDetectionLeftDiagonal,[2,-1,
-1,-1,2,-1,-1,-1,2]);e.set(f.convolutionKernel.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]);e.set(f.convolutionKernel.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]);e.set(f.convolutionKernel.gradientWest,[-1,0,1,-2,0,2,-1,0,1]);e.set(f.convolutionKernel.gradientEast,[1,0,-1,2,0,-2,1,0,-1]);e.set(f.convolutionKernel.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]);e.set(f.convolutionKernel.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]);e.set(f.convolutionKernel.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]);e.set(f.convolutionKernel.smoothArithmeticMean,
[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]);e.set(f.convolutionKernel.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]);e.set(f.convolutionKernel.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]);e.set(f.convolutionKernel.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]);e.set(f.convolutionKernel.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]);e.set(f.convolutionKernel.laplacian3x3,
[0,-1,0,-1,4,-1,0,-1,0]);e.set(f.convolutionKernel.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]);e.set(f.convolutionKernel.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]);e.set(f.convolutionKernel.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]);e.set(f.convolutionKernel.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]);e.set(f.convolutionKernel.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]);e.set(f.convolutionKernel.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);w.convolute=
function(b,a){const l=G(a.kernel),g=!1!==a.mirrorEdges;b=l.separable?M(b,l.row,l.col,g):N(b,a,g);({outputPixelType:a}=a);a&&b.clamp(a);return b};w.convoluteSeparable=M;w.convolutionKernels=e;w.separateKernels=G;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});