// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ./bandIndexUtils ./BaseRasterFunction ./NDVIFunctionArguments".split(" "),function(l,f,h,e,y,z,p,m,q,r){e=function(n){function k(){var a=n.apply(this,arguments)||this;a.functionName="NDVI";a.functionArguments=null;a.rasterArgumentNames=["raster"];
return a}l._inherits(k,n);var g=k.prototype;g._bindSourceRasters=function(){const {scientificOutput:a,visibleBandID:c,infraredBandID:d}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(a?"f32":"u8");var b=this.sourceRasterInfos[0];const t=Math.max(c,d);if(2>b.bandCount||t>=b.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};b=b.clone();b.pixelType=this.outputPixelType;b.colormap=null;b.histograms=null;b.bandCount=
1;b.keyProperties={...b.keyProperties,BandProperties:void 0};const [u,v,w,x]=a?[-1,1,0,.1]:[0,200,100,10];b.statistics=[{min:u,max:v,avg:w,stddev:x}];this.rasterInfo=b;return{success:!0,supportsGPU:!0}};g._processPixels=function(a){a=a.pixelBlocks?.[0];if(null==a)return null;const {visibleBandID:c,infraredBandID:d,scientificOutput:b}=this.functionArguments;return m.calculateNDVI(a,c,d,!b)};g._getWebGLParameters=function(){const {visibleBandID:a,infraredBandID:c,scientificOutput:d}=this.functionArguments;
return{bandIndexMat3:m.getBandMatrix3(this.isInputBandIdsSwizzled?[0,1,2]:[c,a,0]),scaled:!d}};g._getInputBandIds=function(a){const {visibleBandID:c,infraredBandID:d}=this.functionArguments;return[d,c,0].map(b=>a[b])};return l._createClass(k)}(q);f.__decorate([h.property({json:{write:!0,name:"rasterFunction"}})],e.prototype,"functionName",void 0);f.__decorate([h.property({type:r,json:{write:!0,name:"rasterFunctionArguments"}})],e.prototype,"functionArguments",void 0);f.__decorate([h.property()],e.prototype,
"rasterArgumentNames",void 0);return e=f.__decorate([p.subclass("esri.layers.support.rasterFunctions.NDVIFunction")],e)});