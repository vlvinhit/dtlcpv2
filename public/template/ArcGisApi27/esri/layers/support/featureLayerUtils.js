// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../kernel ../../symbols ../../core/Error ../../core/jsonMap ../../core/sql ../../core/accessorSupport/extensions/serializableProperty/reader ./layerUtils ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../rest/support/AttachmentQuery ../../rest/support/Query ../../rest/support/RelationshipQuery".split(" "),function(r,f,l,w,g,n,x,y,z,A,B,C,m,t){function p(a,b,c){const {attributes:d}=b,{objectIdField:e}=a;return a.get("capabilities.data.supportsAttachment")?
b?d?e&&d[e]?Promise.resolve():Promise.reject(new g(c,`feature is missing the identifying attribute ${e}`)):Promise.reject(new g(c,"'attributes' are required on a feature to query attachments")):Promise.reject(new g(c,"A feature is required to add/delete/update attachments")):Promise.reject(new g(c,"this layer doesn't support attachments"))}async function k(a){return(await a.load()).source}async function D(a,b){if(l.id&&!l.id.findCredential(a)){var c;try{const d=await z.getOwningPortalUrl(a,b);d&&
(c=await l.id.checkSignInStatus(`${d}/sharing`))}catch(d){}if(c)try{await l.id.getCredential(a,{signal:null!=b?b.signal:null})}catch(d){}}}n=new n.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"});const q=y.createTypeReader({types:w.symbolTypesRenderer});f.addAttachment=async function(a,b,c,d){const e=await k(a);await p(a,b,d);if(!e.addAttachment)throw new g(d,"Layer source does not support addAttachment capability");
return e.addAttachment(b,c)};f.applyEdits=async function(a,b,c){const {applyEdits:d}=await new Promise((e,h)=>r(["../graphics/editingSupport"],e,h));a=await a.load();return d(a,a.source,b,c)};f.computeEffectiveEditingEnabled=function(a){return a.sourceJSON?.isMultiServicesView?!1:a.userHasUpdateItemPrivileges||a.editingEnabled};f.createDefaultRenderer=function(a,b){if(a.defaultSymbol)return a.types&&a.types.length?new B({defaultSymbol:q(a.defaultSymbol,a,b),field:a.typeIdField,uniqueValueInfos:a.types.map(c=>
({id:c.id,symbol:q(c.symbol,c,b)}))}):new A({symbol:q(a.defaultSymbol,a,b)})};f.createQuery=function(a){const b=new m,c=a.get("capabilities.data"),d=a.get("capabilities.query");b.historicMoment=a.historicMoment;b.gdbVersion=a.gdbVersion;b.returnGeometry=!0;d&&(b.compactGeometryEnabled=d.supportsCompactGeometry,b.defaultSpatialReferenceEnabled=d.supportsDefaultSpatialReference);c&&(c.supportsZ&&null!=a.returnZ&&(b.returnZ=a.returnZ),c.supportsM&&null!=a.returnM&&(b.returnM=a.returnM));b.outFields=
["*"];const {timeOffset:e,timeExtent:h}=a;b.timeExtent=null!=e&&null!=h?h.offset(-e.value,e.unit):h||null;b.multipatchOption="multipatch"===a.geometryType?"xyFootprint":null;return b};f.deleteAttachments=async function(a,b,c,d){const e=await k(a);await p(a,b,d);if(!e.deleteAttachments)throw new g(d,"Layer source does not support deleteAttachments capability");return e.deleteAttachments(b,c)};f.ensureLayerCredential=async function(a,b){const c=a.parsedUrl?.path;if(c){{const d=a.editFieldsInfo;a=d?.creatorField||
d?.editorField?!0:a.userHasUpdateItemPrivileges?a.hasUpdateItemRestrictions:a.userHasFullEditingPrivileges?a.hasFullEditingRestrictions:!1}a&&await D(c,b)}};f.fetchRecomputedExtents=async function(a,b,c){a=(await a.load({signal:b?.signal})).source;if(!a.fetchRecomputedExtents)throw new g(c,"Layer source does not support fetchUpdates capability");return a.fetchRecomputedExtents(b)};f.geometryTypeKebabDict=n;f.hasDataChanged=async function(a){const b=a.source;if(b?.refresh)try{const {dataChanged:c,
updates:d}=await b.refresh();null!=d&&(a.sourceJSON={...a.sourceJSON,...d},a.read(d,{origin:"service",url:a.parsedUrl}));if(c)return!0}catch{}if(a.definitionExpression)try{return(await x.parseWhereClause(a.definitionExpression,a.fieldsIndex)).hasDateFunctions}catch{}return!1};f.queryAttachments=async function(a,b,c,d){b=C.from(b);await a.load();c=a.source;a=a.capabilities;if(!a?.data?.supportsAttachment)throw new g(d,"this layer doesn't support attachments");const {attachmentTypes:e,objectIds:h,globalIds:u,
num:E,size:F,start:G,where:v}=b;if(!a?.operations?.supportsQueryAttachments&&(0<e?.length||0<u?.length||0<F?.length||E||G||v))throw new g(d,"when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",b);if(!(h?.length||u?.length||v))throw new g(d,"'objectIds', 'globalIds', or 'where' are required to perform attachment query",b);if(!c.queryAttachments)throw new g(d,"Layer source does not support queryAttachments capability",b);return c.queryAttachments(b)};f.queryExtent=
async function(a,b,c,d){const e=await k(a);if(!e.queryExtent)throw new g(d,"Layer source does not support queryExtent capability");return e.queryExtent(m.from(b)??a.createQuery(),c)};f.queryFeatureCount=async function(a,b,c,d){const e=await k(a);if(!e.queryFeatureCount)throw new g(d,"Layer source does not support queryFeatureCount capability");return e.queryFeatureCount(m.from(b)??a.createQuery(),c)};f.queryObjectIds=async function(a,b,c,d){const e=await k(a);if(!e.queryObjectIds)throw new g(d,"Layer source does not support queryObjectIds capability");
return e.queryObjectIds(m.from(b)??a.createQuery(),c)};f.queryRelatedFeatures=async function(a,b,c,d){a=await k(a);if(!a.queryRelatedFeatures)throw new g(d,"Layer source does not support queryRelatedFeatures capability");return a.queryRelatedFeatures(t.from(b),c)};f.queryRelatedFeaturesCount=async function(a,b,c,d){a=await k(a);if(!a.queryRelatedFeaturesCount)throw new g(d,"Layer source does not support queryRelatedFeaturesCount capability");return a.queryRelatedFeaturesCount(t.from(b),c)};f.readGlobalIdField=
function(a){const {globalIdField:b,fields:c}=a;if(b)return b;if(c)for(const d of c)if("esriFieldTypeGlobalID"===d.type)return d.name};f.readObjectIdField=function(a){const {objectIdField:b,fields:c}=a;if(b)return b;if(c)for(const d of c)if("esriFieldTypeOID"===d.type)return d.name};f.readVersion=function(a){return a.currentVersion?a.currentVersion:a.hasOwnProperty("capabilities")||a.hasOwnProperty("drawingInfo")||a.hasOwnProperty("hasAttachments")||a.hasOwnProperty("htmlPopupType")||a.hasOwnProperty("relationships")||
a.hasOwnProperty("timeInfo")||a.hasOwnProperty("typeIdField")||a.hasOwnProperty("types")?10:9.3};f.updateAttachment=async function(a,b,c,d,e){const h=await k(a);await p(a,b,e);if(!h.updateAttachment)throw new g(e,"Layer source does not support updateAttachment capability");return h.updateAttachment(b,c,d)};f.uploadAssets=async function(a,b,c){const {uploadAssets:d}=await new Promise((e,h)=>r(["../graphics/editingSupport"],e,h));a=await a.load();return d(a,a.source,b,c)};Object.defineProperty(f,Symbol.toStringTag,
{value:"Module"})});