// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../Graphic ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../request ../core/Clonable ../core/Collection ../core/Error ../core/Logger ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/reactiveUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/utils ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/PropertyOrigin ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/EditBusLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/arcgisLayerUrl ./support/capabilities ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FetchAssociatedFeatureLayer ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/LayerFloorInfo ./support/RangeInfo ./support/SceneFilter ../renderers/support/styleUtils ../rest/support/Query ../support/featureFlags ../support/popupUtils ../views/3d/layers/i3s/I3SUtil ../views/layers/support/popupUtils ../webdoc/support/opacityUtils".split(" "),
function(I,v,e,J,K,w,Da,Ea,Fa,Ga,Ha,Ia,Ja,Ka,L,M,c,B,k,m,N,C,O,P,f,La,Ma,Na,D,r,Q,x,R,S,T,U,V,W,X,y,Y,Z,t,aa,ba,ca,da,ea,z,u,fa,E,ha,ia,ja,ka,la,F,ma,na,G,oa){const pa=["3DObject","Point"];w=da.defineFieldProperties();c=function(l){function n(...a){a=l.call(this,...a)||this;a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.floorInfo=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=null;
a.geometryDefinitions=null;a.serviceUpdateTimeStamp=null;a.excludeObjectIds=new B;a.definitionExpression=null;a.filter=null;a.path=null;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.priority=null;a.semantic=null;a.cachedDrawingInfo={color:!1};a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.globalIdField=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}v._inherits(n,l);var g=n.prototype;g.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,
...b}:a};g.destroy=function(){this._set("renderer",null)};g.getField=function(a){return this.fieldsIndex.get(a)};g.getFieldDomain=function(a,b){return(b=this.getFeatureType(b?.feature)?.domains?.[a])&&"inherited"!==b.type?b:this.getField(a)?.domain??null};g.getFeatureType=function(a){return a&&this.associatedLayer?this.associatedLayer.getFeatureType(a):null};g.readNodePages=function(a,b,d){"Point"===b.layerType&&(a=b.pointNodePages);return null==a||"object"!==typeof a?null:u.I3SNodePageDefinition.fromJSON(a,
d)};g.readCachedDrawingInfo=function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};g.readObjectIdField=function(a,b){!a&&b.fields&&b.fields.some(d=>{"esriFieldTypeOID"===d.type&&(a=d.name);return!!a});return a||void 0};g.readGlobalIdField=function(a,b){!a&&b.fields&&b.fields.some(d=>{"esriFieldTypeGlobalID"===d.type&&(a=d.name);return!!a});return a||void 0};g.readProfile=function(a,b){a=b.store.profile;if(null!=a&&H[a])return H[a];m.getLogger(this).error("Unknown or missing profile",
{profile:a,layer:this});return"mesh-pyramids"};g.load=function(a){const b=null!=a?a.signal:null,d=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(C.throwIfAbortError).then(()=>this._fetchService(b)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,b),this._setAssociatedFeatureLayer(b),this._loadFilterGeometries()])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>ka.loadStyleRenderer(this,
{origin:"service"},b)).then(()=>z.fixRendererFields(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(a));this.addResolvingPromise(d);return Promise.resolve(this)};g.beforeSave=async function(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())};g._loadFilterGeometries=async function(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(a){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",
{error:a}),this.filter=null}};g.createQuery=function(){const a=new la;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";a.outFields=["*"];return a};g.queryExtent=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryExtent(a||this.createQuery(),b))};g.queryFeatureCount=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryFeatureCount(a||this.createQuery(),b))};g.queryFeatures=function(a,
b){return this._getAssociatedLayerForQuery().then(d=>d.queryFeatures(a||this.createQuery(),b)).then(d=>{if(d?.features)for(const h of d.features)h.layer=this,h.sourceLayer=this;return d})};g.queryCachedAttributes=async function(a,b){const d=z.unpackFieldNames(this.fieldsIndex,await G.getRequiredFields(this,G.getFetchPopupTemplate(this)));return na.queryAttributesFromCachedAttributesId(this.parsedUrl.path,this.attributeStorageInfo??[],a,b,d)};g.queryCachedFeature=async function(a,b){a=await this.queryCachedAttributes(a,
[b]);if(!a||0===a.length)throw new k("scenelayer:feature-not-in-cached-data","Feature not found in cached data");b=new J;b.attributes=a[0];b.layer=this;b.sourceLayer=this;return b};g.queryObjectIds=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryObjectIds(a||this.createQuery(),b))};g.queryAttachments=function(a,b){return this._getAssociatedLayerForQuery().then(d=>d.queryAttachments(a,b))};g.getFieldUsageInfo=function(a){const b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,
supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};g.createPopupTemplate=function(a){return ma.createPopupTemplate(this,a)};g._getAssociatedLayerForQuery=function(){const a=this.associatedLayer;return a?.loaded?Promise.resolve(a):this._loadAssociatedLayerForQuery()};g._loadAssociatedLayerForQuery=async function(){await this.load();if(!this.associatedLayer)throw new k("scenelayer:query-not-available",
"SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(a){throw new k("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:a});}return this.associatedLayer};g.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(b=>b.name===a)};g.queryCachedStatistics=async function(a,b){await this.load(b);if(!this.statisticsInfo)throw new k("scenelayer:no-cached-statistics",
"Cached statistics are not available for this layer");const d=this.fieldsIndex.get(a);if(!d)throw new k("scenelayer:field-unexisting",`Field '${a}' does not exist on the layer`);for(const h of this.statisticsInfo)if(h.name===d.name)return a=P.join(this.parsedUrl.path,h.href),M(a,{query:{f:"json",token:this.apiKey},responseType:"json",signal:b?b.signal:null}).then(p=>p.data);throw new k("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available");};g.saveAs=async function(a,
b){return this._debouncedSaveOperations(y.SaveOperationType.SAVE_AS,{...b,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},a)};g.save=async function(){return this._debouncedSaveOperations(y.SaveOperationType.SAVE,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"})};g.applyEdits=async function(a,b){const {applyEdits:d}=await new Promise((h,p)=>I(["./graphics/editingSupport"],h,p));await this.load();if(!this.associatedLayer)throw new k(`${this.type}-layer:not-editable`,
"Service is not editable");await this.associatedLayer.load();return d(this,this.associatedLayer.source,a,b)};g.uploadAssets=async function(a,b){await this.load();if(null==this.associatedLayer)throw new k(`${this.type}-layer:not-editable`,"Service is not editable");await this.associatedLayer.load();return this.associatedLayer.uploadAssets(a,b)};g.on=function(a,b){return v._get(v._getPrototypeOf(n.prototype),"on",this).call(this,a,b)};g.validateLayer=function(a){if(a.layerType&&!pa.includes(a.layerType))throw new k("scenelayer:layer-type-not-supported",
"SceneLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new k("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(2<this.version.major)throw new k("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});a=this.normalReferenceFrame;var b=this.spatialReference;
let d=!1,h=!1;if(null==a)h=d=!0;else switch(b=b&&b.isGeographic,a){case "east-north-up":case "earth-centered":d=!0;h=b;break;case "vertex-reference-frame":d=!0;h=!b;break;default:d=!1}if(!d)throw new k("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!h)throw new k("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.");};g._getTypeKeywords=function(){const a=[];if("points"===this.profile)a.push("Point");
else if("mesh-pyramids"===this.profile)a.push("3DObject");else throw new k("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);return a};g._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(const a of this.fields){const b=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(h=>h.name===a.name)),d=!!this.associatedLayer?.fields?.some(h=>h&&a.name===h.name);this._fieldUsageInfo[a.name]={supportsLabelingInfo:b,
supportsRenderer:b,supportsPopupTemplate:b||d,supportsLayerQuery:d}}};g._applyAssociatedLayerOverrides=function(){this._applyAssociatedLayerFieldsOverrides();this._applyAssociatedLayerPopupOverrides();this._applyAssociatedLayerExtentOverride()};g._applyAssociatedLayerFieldsOverrides=function(){if(this.associatedLayer?.fields){var a=null;for(const b of this.associatedLayer.fields){const d=this.getField(b.name);d?(!d.domain&&b.domain&&(d.domain=b.domain.clone()),d.editable=b.editable,d.nullable=b.nullable,
d.length=b.length):(a||(a=this.fields?this.fields.slice():[]),a.push(b.clone()))}a&&this._set("fields",a)}};g._applyAssociatedLayerPopupOverrides=function(){if(this.associatedLayer){var a=["popupTemplate","popupEnabled"],b=D.getProperties(this);for(let d=0;d<a.length;d++){const h=a[d],p=this.originIdOf(h),q=this.associatedLayer.originIdOf(h);p<q&&(q===x.OriginId.SERVICE||q===x.OriginId.PORTAL_ITEM)&&b.setAtOrigin(h,this.associatedLayer[h],q)}}};g._applyAssociatedLayerExtentOverride=function(){const a=
this.associatedLayer?.editingInfo?.lastEditDate,b=this.associatedLayer?.serverGens,d=this.associatedLayer?.getAtOrigin("fullExtent","service");F.sceneLayerEditingEnabled()&&null!=this.associatedLayer?.infoFor3D&&d&&Y.isHostedAgolService(this.associatedLayer?.url)&&a&&this.serviceUpdateTimeStamp?.lastUpdate!==a.getTime()&&(this.serviceUpdateTimeStamp||b?.minServerGen!==b?.serverGen)&&D.getProperties(this).setAtOrigin("fullExtent",d.clone(),x.OriginId.SERVICE)};g._setAssociatedFeatureLayer=async function(a){if(["mesh-pyramids",
"points"].includes(this.profile)){a=new ca.FetchAssociatedFeatureLayer(this.parsedUrl,this.portalItem,this.apiKey,a);try{this.associatedLayer=await a.fetch()}catch(b){C.isAbortError(b)||this._logWarningOnPopupEnabled()}}};g._logWarningOnPopupEnabled=async function(){await O.whenOnce(()=>this.popupEnabled&&null!=this.popupTemplate);const a=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${a}`):
m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${a}`)};g._validateElevationInfo=function(){const a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"relative-to-scene"===a.mode&&m.getLogger(this).warn(".elevationInfo\x3d","Mesh scene layers don't support relative-to-scene elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&m.getLogger(this).warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};
v._createClass(n,[{key:"types",get:function(){return this.associatedLayer?.types??[]}},{key:"typeIdField",get:function(){return this.associatedLayer?.typeIdField??null}},{key:"templates",get:function(){return this.associatedLayer?.templates??null}},{key:"formTemplate",get:function(){return this.associatedLayer?.formTemplate??null}},{key:"fieldsIndex",get:function(){return new ea(this.fields)}},{key:"elevationInfo",set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()}},
{key:"geometryType",get:function(){return qa[this.profile]||"mesh"}},{key:"renderer",set:function(a){z.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}},{key:"capabilities",get:function(){var a=this.associatedLayer?.capabilities??Z.zeroCapabilities;const {query:b,editing:{supportsGlobalId:d,supportsRollbackOnFailure:h,supportsUploadWithItemId:p,supportsGeometryUpdate:q,supportsReturnServiceEditsInSourceSpatialReference:ra},data:{supportsZ:sa,supportsM:ta,isVersioned:ua,supportsAttachment:va},
operations:{supportsEditing:wa,supportsAdd:xa,supportsUpdate:ya,supportsDelete:za,supportsQuery:Aa,supportsQueryAttachments:Ba,supportsAsyncConvert3D:Ca}}=a;a=a.operations.supportsChangeTracking;const A=!!this.associatedLayer?.infoFor3D&&F.sceneLayerEditingEnabled();return{query:b,editing:{supportsGlobalId:d,supportsReturnServiceEditsInSourceSpatialReference:ra,supportsRollbackOnFailure:h,supportsGeometryUpdate:A&&q,supportsUploadWithItemId:p},data:{supportsAttachment:va,supportsZ:sa,supportsM:ta,
isVersioned:ua},operations:{supportsQuery:Aa,supportsQueryAttachments:Ba,supportsEditing:wa&&a,supportsAdd:A&&xa&&a,supportsDelete:A&&za&&a,supportsUpdate:ya&&a,supportsAsyncConvert3D:Ca}}}},{key:"editingEnabled",get:function(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges},set:function(a){this._overrideIfSome("editingEnabled",a)}},{key:"infoFor3D",get:function(){return this.associatedLayer?.infoFor3D??null}},{key:"defaultPopupTemplate",get:function(){return this.associatedLayer||
this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"displayField",get:function(){return this.associatedLayer?.displayField??null}}]);return n}(U.EditBusLayer(y.SceneService(T.ArcGISService(V.OperationalLayer(W.PortalLayer(X.ScaleRangeLayer(N.MultiOriginJSONMixin(S.APIKeyMixin(c.ClonableMixin(R))))))))));e.__decorate([f.property({types:{key:"type",base:aa.FeatureReduction,typeMap:{selection:ba}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",
write:!0}}}})],c.prototype,"featureReduction",void 0);e.__decorate([f.property({type:[ia.RangeInfo],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],c.prototype,"rangeInfos",void 0);e.__decorate([f.property({json:{read:!1}})],c.prototype,"associatedLayer",void 0);e.__decorate([f.property({type:["show","hide"]})],c.prototype,"listMode",void 0);e.__decorate([f.property({type:["ArcGISSceneServiceLayer"]})],
c.prototype,"operationalLayerType",void 0);e.__decorate([f.property({json:{read:!1},readOnly:!0})],c.prototype,"type",void 0);e.__decorate([f.property({...w.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"fields",void 0);e.__decorate([f.property()],c.prototype,"types",null);e.__decorate([f.property()],c.prototype,"typeIdField",null);e.__decorate([f.property()],c.prototype,"templates",null);e.__decorate([f.property()],c.prototype,"formTemplate",null);e.__decorate([f.property({readOnly:!0})],
c.prototype,"fieldsIndex",null);e.__decorate([f.property({type:ha,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],c.prototype,"floorInfo",void 0);e.__decorate([f.property(w.outFields)],c.prototype,"outFields",void 0);e.__decorate([f.property({type:u.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],c.prototype,"nodePages",void 0);e.__decorate([r.reader("service","nodePages",["nodePages","pointNodePages"])],c.prototype,"readNodePages",null);e.__decorate([f.property({type:[u.I3SMaterialDefinition],
readOnly:!0})],c.prototype,"materialDefinitions",void 0);e.__decorate([f.property({type:[u.I3STextureSetDefinition],readOnly:!0})],c.prototype,"textureSetDefinitions",void 0);e.__decorate([f.property({type:[u.I3SGeometryDefinition],readOnly:!0})],c.prototype,"geometryDefinitions",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,"serviceUpdateTimeStamp",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,"attributeStorageInfo",void 0);e.__decorate([f.property({readOnly:!0})],c.prototype,
"statisticsInfo",void 0);e.__decorate([f.property({type:B.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],c.prototype,"excludeObjectIds",void 0);e.__decorate([f.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],c.prototype,"definitionExpression",void 0);e.__decorate([f.property({type:ja,json:{name:"layerDefinition.polygonFilter",
write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],c.prototype,"filter",void 0);e.__decorate([f.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);e.__decorate([f.property(t.elevationInfo)],c.prototype,"elevationInfo",null);e.__decorate([f.property({type:String})],c.prototype,"geometryType",null);e.__decorate([f.property(t.labelsVisible)],c.prototype,"labelsVisible",void 0);e.__decorate([f.property({type:[fa],json:{origins:{service:{name:"drawingInfo.labelingInfo",
read:{reader:E.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:E.reader},write:!0}})],c.prototype,"labelingInfo",void 0);e.__decorate([f.property(t.legendEnabled)],c.prototype,"legendEnabled",void 0);e.__decorate([f.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(l,n){if("number"===
typeof l&&0<=l&&1>=l)return l;l=n.layerDefinition?.drawingInfo?.transparency;return void 0!==l?oa.transparencyToOpacity(l):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],c.prototype,"opacity",void 0);e.__decorate([f.property({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"priority",void 0);e.__decorate([f.property({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"semantic",void 0);e.__decorate([f.property({types:L.webSceneRendererTypes,
json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],c.prototype,"renderer",null);e.__decorate([f.property({json:{read:!1}})],c.prototype,"cachedDrawingInfo",void 0);e.__decorate([r.reader("service","cachedDrawingInfo")],c.prototype,"readCachedDrawingInfo",null);e.__decorate([f.property({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",null);e.__decorate([f.property({type:Boolean,json:{read:!1}})],c.prototype,"editingEnabled",
null);e.__decorate([f.property({readOnly:!0,json:{write:!1,read:!1}})],c.prototype,"infoFor3D",null);e.__decorate([f.property(t.popupEnabled)],c.prototype,"popupEnabled",void 0);e.__decorate([f.property({type:K,json:{name:"popupInfo",write:!0}})],c.prototype,"popupTemplate",void 0);e.__decorate([f.property({readOnly:!0,json:{read:!1}})],c.prototype,"defaultPopupTemplate",null);e.__decorate([f.property({type:String,json:{read:!1}})],c.prototype,"objectIdField",void 0);e.__decorate([r.reader("service",
"objectIdField",["objectIdField","fields"])],c.prototype,"readObjectIdField",null);e.__decorate([f.property({type:String,json:{read:!1}})],c.prototype,"globalIdField",void 0);e.__decorate([r.reader("service","globalIdField",["globalIdField","fields"])],c.prototype,"readGlobalIdField",null);e.__decorate([f.property({readOnly:!0,type:String,json:{read:!1}})],c.prototype,"displayField",null);e.__decorate([f.property({type:String,json:{read:!1}})],c.prototype,"profile",void 0);e.__decorate([r.reader("service",
"profile",["store.profile"])],c.prototype,"readProfile",null);e.__decorate([f.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],c.prototype,"normalReferenceFrame",void 0);e.__decorate([f.property(t.screenSizePerspectiveEnabled)],c.prototype,"screenSizePerspectiveEnabled",void 0);c=e.__decorate([Q.subclass("esri.layers.SceneLayer")],c);const H={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",
points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},qa={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return c});