// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/GeoJSONSource":function(){define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/has ../../../core/Loadable ../../../core/Logger ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ./support/clientSideDefaults ../../../rest/support/FeatureSet ../../../geometry/Extent ../../../geometry/Polygon ../../../geometry/support/typeUtils".split(" "),
function(r,t,c,I,D,P,Q,R,S,T,z,X,Y,U,E,d,J,F,e){const K=R.getLogger("esri.layers.graphics.sources.GeoJSONSource");r.GeoJSONSource=function(L){function G(){var b=L.apply(this,arguments)||this;b.type="geojson";b.refresh=S.debounce(async f=>{await b.load();const {extent:m,timeExtent:p}=await b._connection.invoke("refresh",f);b.sourceJSON.extent=m;p&&(b.sourceJSON.timeInfo.timeExtent=[p.start,p.end]);return{dataChanged:!0,updates:{extent:b.sourceJSON.extent,timeInfo:b.sourceJSON.timeInfo}}});return b}
t._inherits(G,L);var k=G.prototype;k.load=function(b){this.addResolvingPromise(this._startWorker(null!=b?b.signal:null));return Promise.resolve(this)};k.destroy=function(){this._connection?.close();this._connection=null};k.applyEdits=function(b){return this.load().then(()=>this._applyEdits(b))};k.openPorts=function(){return this.load().then(()=>this._connection.openPorts())};k.queryFeatures=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("queryFeatures",b?b.toJSON():null,f)).then(m=>
d.fromJSON(m))};k.queryFeaturesJSON=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("queryFeatures",b?b.toJSON():null,f))};k.queryFeatureCount=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("queryFeatureCount",b?b.toJSON():null,f))};k.queryObjectIds=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("queryObjectIds",b?b.toJSON():null,f))};k.queryExtent=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("queryExtent",
b?b.toJSON():null,f)).then(m=>({count:m.count,extent:J.fromJSON(m.extent)}))};k.querySnapping=function(b,f={}){return this.load(f).then(()=>this._connection.invoke("querySnapping",b,f))};k._applyEdits=function(b){if(!this._connection)throw new D("geojson-layer-source:edit-failure","Memory source not loaded");const f=this.layer.objectIdField,m=[],p=[],w=[];if(b.addFeatures)for(const l of b.addFeatures)m.push(this._serializeFeature(l));if(b.deleteFeatures)for(const l of b.deleteFeatures)"objectId"in
l&&null!=l.objectId?p.push(l.objectId):"attributes"in l&&null!=l.attributes[f]&&p.push(l.attributes[f]);if(b.updateFeatures)for(const l of b.updateFeatures)w.push(this._serializeFeature(l));return this._connection.invoke("applyEdits",{adds:m,updates:w,deletes:p}).then(({extent:l,timeExtent:v,featureEditResults:x})=>{this.sourceJSON.extent=l;v&&(this.sourceJSON.timeInfo.timeExtent=[v.start,v.end]);return this._createEditsResult(x)})};k._createEditsResult=function(b){return{addFeatureResults:b.addResults?
b.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:b.updateResults?b.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:b.deleteResults?b.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}};k._createFeatureEditResult=function(b){const f=!0===b.success?null:b.error||{code:void 0,description:void 0};return{objectId:b.objectId,globalId:b.globalId,error:f?new D("geojson-layer-source:edit-failure",
f.description,{code:f.code}):null}};k._serializeFeature=function(b){const {attributes:f}=b;return(b=this._geometryForSerialization(b))?{geometry:b.toJSON(),attributes:f}:{attributes:f}};k._geometryForSerialization=function(b){({geometry:b}=b);return null==b?null:"mesh"===b.type||"extent"===b.type?F.fromExtent(b.extent):b};k._startWorker=async function(b){this._connection=await T.open("GeoJSONSourceWorker",{strategy:P("feature-layers-workers")?"dedicated":"local",signal:b});const {fields:f,spatialReference:m,
hasZ:p,geometryType:w,objectIdField:l,url:v,timeInfo:x,customParameters:M}=this.layer;var A="defaults"===this.layer.originOf("spatialReference");A={url:v,customParameters:M,fields:f&&f.map(y=>y.toJSON()),geometryType:e.featureGeometryTypeKebabDictionary.toJSON(w),hasZ:p,objectIdField:l,timeInfo:x?x.toJSON():null,spatialReference:A?null:m&&m.toJSON()};b=await this._connection.invoke("load",A,{signal:b});for(const y of b.warnings)K.warn(y.message,{layer:this.layer,warning:y});b.featureErrors.length&&
K.warn(`Encountered ${b.featureErrors.length} validation errors while loading features`,b.featureErrors);this.sourceJSON=b.layerDefinition;this.capabilities=E.createCapabilities(this.sourceJSON.hasZ,!0)};return t._createClass(G)}(Q);c.__decorate([z.property()],r.GeoJSONSource.prototype,"capabilities",void 0);c.__decorate([z.property()],r.GeoJSONSource.prototype,"type",void 0);c.__decorate([z.property({constructOnly:!0})],r.GeoJSONSource.prototype,"layer",void 0);c.__decorate([z.property()],r.GeoJSONSource.prototype,
"sourceJSON",void 0);r.GeoJSONSource=c.__decorate([U.subclass("esri.layers.graphics.sources.GeoJSONSource")],r.GeoJSONSource);Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geometry/support/typeUtils ./Layer ./graphics/sources/GeoJSONSource ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/commonProperties ./support/FeatureTemplate ./support/FeatureType ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../geometry/SpatialReference ../geometry/Extent".split(" "),function(r,
t,c,I,D,P,Q,R,S,T,z,X,Y,U,E,d,J,F,e,K,L,G,k,b,f,m,p,w,l,v,x,M,A,y,Z,aa,u,ba,ca,da,ea,N,fa,ha,B,ia,V,ja){I=ea.defineFieldProperties();d=function(W){function C(a){a=W.call(this,a)||this;a.copyright=null;a.definitionExpression=null;a.displayField=null;a.editingEnabled=!1;a.elevationInfo=null;a.fields=null;a.fieldsIndex=null;a.fullExtent=null;a.geometryType=null;a.hasZ=void 0;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.objectIdField=null;a.operationalLayerType="GeoJSON";a.popupEnabled=
!0;a.popupTemplate=null;a.screenSizePerspectiveEnabled=!0;a.source=new m.GeoJSONSource({layer:t._assertThisInitialized(a)});a.spatialReference=V.WGS84;a.templates=null;a.title="GeoJSON";a.type="geojson";a.typeIdField=null;a.types=null;return a}t._inherits(C,W);var n=C.prototype;n.destroy=function(){this.source?.destroy()};n.load=function(a){const g=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},a).catch(J.throwIfAbortError).then(()=>this.source.load(a)).then(()=>{this.read(this.source.sourceJSON,
{origin:"service",url:this.parsedUrl});this.revert(["objectIdField","fields","timeInfo"],"service");N.fixRendererFields(this.renderer,this.fieldsIndex);N.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)});this.addResolvingPromise(g);return Promise.resolve(this)};n.applyEdits=async function(a,g){const {applyEdits:h}=await new Promise((q,H)=>r(["./graphics/editingSupport"],q,H));await this.load();a=await h(this,this.source,a,g);this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},
{origin:"service",ignoreDefaults:!0});return a};n.on=function(a,g){return t._get(t._getPrototypeOf(C.prototype),"on",this).call(this,a,g)};n.createPopupTemplate=function(a){return ia.createPopupTemplate(this,a)};n.createQuery=function(){const a=new B,g=this.get("capabilities.data");a.returnGeometry=!0;g&&g.supportsZ&&(a.returnZ=!0);a.outFields=["*"];a.where=this.definitionExpression||"1\x3d1";const {timeOffset:h,timeExtent:q}=this;a.timeExtent=null!=h&&null!=q?q.offset(-h.value,h.unit):q||null;return a};
n.getFieldDomain=function(a,g){let h,q=!1;g=(g=g&&g.feature)&&g.attributes;const H=this.typeIdField&&g&&g[this.typeIdField];null!=H&&this.types&&(q=this.types.some(O=>O.id==H?((h=O.domains&&O.domains[a])&&"inherited"===h.type&&(h=this._getLayerDomain(a)),!0):!1));q||h||(h=this._getLayerDomain(a));return h};n.getField=function(a){return this.fieldsIndex.get(a)};n.queryFeatures=function(a,g){return this.load().then(()=>this.source.queryFeatures(B.from(a)||this.createQuery(),g)).then(h=>{if(h?.features)for(const q of h.features)q.layer=
q.sourceLayer=this;return h})};n.queryObjectIds=function(a,g){return this.load().then(()=>this.source.queryObjectIds(B.from(a)||this.createQuery(),g))};n.queryFeatureCount=function(a,g){return this.load().then(()=>this.source.queryFeatureCount(B.from(a)||this.createQuery(),g))};n.queryExtent=function(a,g){return this.load().then(()=>this.source.queryExtent(B.from(a)||this.createQuery(),g))};n.hasDataChanged=async function(){try{const {dataChanged:a,updates:g}=await this.source.refresh(this.customParameters);
null!=g&&this.read(g,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0});return a}catch{}return!1};n._getLayerDomain=function(a){if(!this.fields)return null;let g=null;this.fields.some(h=>{h.name===a&&(g=h.domain);return!!g});return g};t._createClass(C,[{key:"capabilities",get:function(){return this.source?this.source.capabilities:null}},{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");
this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"isTable",get:function(){return this.loaded&&null==this.geometryType}},{key:"parsedUrl",get:function(){return this.url?F.urlToObject(this.url):null}},{key:"renderer",set:function(a){N.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}},{key:"url",set:function(a){a?(a=F.urlToObject(a),this._set("url",a.path),a.query&&(this.customParameters=
{...this.customParameters,...a.query})):this._set("url",a)}}]);return C}(M.OrderedLayer(w.CustomParametersMixin(v.FeatureReductionLayer(l.FeatureEffectLayer(p.BlendLayer(aa.TemporalLayer(Z.ScaleRangeLayer(y.RefreshableLayer(x.OperationalLayer(A.PortalLayer(d.MultiOriginJSONMixin(f))))))))))));c.__decorate([e.property({readOnly:!0,json:{read:!1,write:!1}})],d.prototype,"capabilities",null);c.__decorate([e.property({type:String})],d.prototype,"copyright",void 0);c.__decorate([e.property({readOnly:!0})],
d.prototype,"createQueryVersion",null);c.__decorate([e.property({readOnly:!0})],d.prototype,"defaultPopupTemplate",null);c.__decorate([e.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],d.prototype,"definitionExpression",void 0);c.__decorate([e.property({type:String})],d.prototype,"displayField",void 0);c.__decorate([e.property({type:Boolean})],d.prototype,"editingEnabled",void 0);c.__decorate([e.property(u.elevationInfo)],d.prototype,"elevationInfo",
void 0);c.__decorate([e.property({type:[da],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],d.prototype,"fields",void 0);c.__decorate([e.property(I.fieldsIndex)],d.prototype,"fieldsIndex",void 0);c.__decorate([e.property({type:ja,json:{name:"extent"}})],d.prototype,"fullExtent",void 0);c.__decorate([e.property({type:["point","polygon","polyline","multipoint"],json:{read:{reader:b.featureGeometryTypeKebabDictionary.read}}})],d.prototype,
"geometryType",void 0);c.__decorate([e.property({type:Boolean})],d.prototype,"hasZ",void 0);c.__decorate([e.property(u.id)],d.prototype,"id",void 0);c.__decorate([e.property({type:Boolean,readOnly:!0})],d.prototype,"isTable",null);c.__decorate([e.property(u.labelsVisible)],d.prototype,"labelsVisible",void 0);c.__decorate([e.property({type:[fa],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ha.reader},write:!0}})],d.prototype,"labelingInfo",void 0);c.__decorate([e.property(u.legendEnabled)],
d.prototype,"legendEnabled",void 0);c.__decorate([e.property({type:["show","hide"]})],d.prototype,"listMode",void 0);c.__decorate([e.property({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],d.prototype,"objectIdField",void 0);c.__decorate([e.property(u.opacity)],d.prototype,"opacity",void 0);c.__decorate([e.property({type:["GeoJSON"]})],d.prototype,"operationalLayerType",void 0);c.__decorate([e.property({readOnly:!0})],
d.prototype,"parsedUrl",null);c.__decorate([e.property(u.popupEnabled)],d.prototype,"popupEnabled",void 0);c.__decorate([e.property({type:D,json:{name:"popupInfo",write:!0}})],d.prototype,"popupTemplate",void 0);c.__decorate([e.property({types:E.rendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:E.webSceneRendererTypes}}}})],d.prototype,"renderer",null);c.__decorate([e.property(u.screenSizePerspectiveEnabled)],
d.prototype,"screenSizePerspectiveEnabled",void 0);c.__decorate([e.property({readOnly:!0})],d.prototype,"source",void 0);c.__decorate([e.property({type:V})],d.prototype,"spatialReference",void 0);c.__decorate([e.property({type:[ba]})],d.prototype,"templates",void 0);c.__decorate([e.property()],d.prototype,"title",void 0);c.__decorate([e.property({json:{read:!1},readOnly:!0})],d.prototype,"type",void 0);c.__decorate([e.property({type:String,readOnly:!0})],d.prototype,"typeIdField",void 0);c.__decorate([e.property({type:[ca]})],
d.prototype,"types",void 0);c.__decorate([e.property(u.url)],d.prototype,"url",null);return d=c.__decorate([k.subclass("esri.layers.GeoJSONLayer")],d)});