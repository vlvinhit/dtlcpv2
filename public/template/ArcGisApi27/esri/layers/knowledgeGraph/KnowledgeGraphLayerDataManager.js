// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Accessor ../../core/Error ../../core/Logger ../../core/sql ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geohash/geohashUtils ../../geometry/Polygon ../../geometry/projection ../../geometry/support/spatialReferenceUtils ./SessionMemoryStorage ../../rest/knowledgeGraphService ../../rest/knowledgeGraph/GraphQueryStreaming ../../rest/support/Query".split(" "),
function(t,M,A,T,I,U,N,D,Y,Z,aa,V,O,W,P,Q,J,K,E,X){const R=U.getLogger("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager");t.KnowledgeGraphLayerDataManager=function(S){function L(c){var a=S.call(this,c)||this;a.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map};a.entityTypeNames=new Set;a.relationshipTypeNames=new Set;a.geographicLookup=new Map;a.sublayerCaches=new Map;a._processingCacheUpdatesLookup=new Map;a._memberIdTypeLookup=new Map;const k=
new Map;c.knowledgeGraph.dataModel.entityTypes?.forEach(f=>{f.name&&(k.set(f.name,"entity"),a._processingCacheUpdatesLookup.set(f.name,[]),c.inclusionModeDefinition&&!c.inclusionModeDefinition?.generateAllSublayers||a.entityTypeNames.add(f.name),f.properties?.forEach(e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&a.geographicLookup.set(f.name,{name:e.name??"",geometryType:e.geometryType})}))});c.knowledgeGraph.dataModel.relationshipTypes?.forEach(f=>{f.name&&(k.set(f.name,"relationship"),
a._processingCacheUpdatesLookup.set(f.name,[]),c.inclusionModeDefinition&&!c.inclusionModeDefinition?.generateAllSublayers||a.relationshipTypeNames.add(f.name),f.properties?.forEach(e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&a.geographicLookup.set(f.name,{name:e.name??"",geometryType:e.geometryType})}))});c.inclusionModeDefinition?.namedTypeDefinitions.forEach((f,e)=>{if("entity"===k.get(e))a.entityTypeNames.add(e);else if("relationship"===k.get(e))a.relationshipTypeNames.add(e);else{R.warn(`A named type, ${e}, was in the inclusion list that wasn't in the data model and will be removed`);
c.inclusionModeDefinition?.namedTypeDefinitions.delete(e);return}const m=new Map;f.members?.forEach(n=>{a._memberIdTypeLookup.set(n.id,e);const r=a.getById(n.id);r&&m.set(n.id,r)});a.sublayerCaches.set(e,m)});return a}M._inherits(L,S);var B=L.prototype;B.addToLayerInclusionSet=function(c){c.forEach(({typeName:a,id:k})=>{if(!this.inclusionModeDefinition)throw new I("knowledge-graph:layer-data-manager","You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
if(!this.inclusionModeDefinition.namedTypeDefinitions.has(a)){var f=new Map;f.set(k,{id:k});this.inclusionModeDefinition.namedTypeDefinitions.set(a,{useAllData:!1,members:f});this._memberIdTypeLookup.set(k,a)}else if(this.inclusionModeDefinition.namedTypeDefinitions.has(a)){f=this.inclusionModeDefinition.namedTypeDefinitions.get(a);if(f.useAllData)throw new I("knowledge-graph:layer-data-manager","You cannot add members to an exclusion list for a sublayer where the sublayer is set to always retrieve its entire data set");
f.members||(f.members=new Map);f.members.set(k,{id:k});this._memberIdTypeLookup.set(k,a)}})};B.getById=function(c){return J.getInstance().readFromStoreById(c)};B.getData=async function(c,a,k){if(a.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&0<this.inclusionModeDefinition.namedTypeDefinitions.size&&!this.inclusionModeDefinition.namedTypeDefinitions.has(a.objectType.name))return[];c=c?c:new X({where:"1\x3d1",outFields:["*"]});if("link-chart"===a.parentCompositeLayer.type){const f=
a.parentCompositeLayer;k=this._processingCacheUpdatesLookup.get(a.objectType.name??"");const e=c.outFields,m=c.geometry;let n="",r="";m&&m.extent&&(n=O.encodeGeohash(m.extent.ymin,m.extent.xmin,12),r=O.encodeGeohash(m.extent.ymax,m.extent.xmax,12));e&&1===e.length&&"ESRI__ID"===e[0]&&"1\x3d1"===c.where||await Promise.all(k??[]);const d=[];(this.sublayerCaches.has(a.objectType.name??"")?Array.from(this.sublayerCaches.get(a.objectType.name)?.values()):[]).forEach(b=>{b.geometry=f.linkChartDiagramLookup.get(b.attributes[a.objectIdField]);
b.attributes.ESRI__LAYOUT_GEOMETRY=b.geometry;if(n&&r){const l=f.linkChartGeohashLookup.get(b.attributes[a.objectIdField]);l?l>=n&&l<=r&&d.push(b):d.push(b)}else d.push(b)});return d}return this.retrieveDataFromService(c,a,k)};B.getConnectedRecordIds=async function(c){const a=[],k=[],f=new Map;c.forEach(e=>{if(this._memberIdTypeLookup.has(e)){const m=this._memberIdTypeLookup.get(e);this.entityTypeNames.has(m)&&(f.has(m)?f.get(m)?.push(e):f.set(m,[e]))}});f.forEach((e,m)=>{const n=`MATCH (n:${m})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`;
m=new Promise(r=>{(async()=>{const d=(await K.executeQueryStreaming(this.knowledgeGraph,new E({openCypherQuery:n,bindParameters:{ids:e}}))).resultRowsStream.getReader();try{for(;;){const {done:b,value:l}=await d.read();if(b)break;for(let p=0;p<l.length;p++){const h=l[p];a.push({id:h[0],typeName:h[1]});a.push({id:h[2],typeName:h[3]})}}}catch(b){if("AbortError"===b.name)R.info("Request aborted as expected");else throw b;}})().then(()=>{r()})});k.push(m)});await Promise.all(k);return a};B.refreshCacheContent=
async function(c,a,k,f=!0){const e=J.getInstance(),m=[],n=new Map,r=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&r.set(d.name,d)});this.knowledgeGraph.dataModel.relationshipTypes?.forEach(d=>{d.name&&r.set(d.name,d)});c||this.inclusionModeDefinition?c?c.forEach(d=>{if(this._memberIdTypeLookup.has(d)){const b=this._memberIdTypeLookup.get(d);n.has(b)?n.get(b)?.push(d):n.set(b,[d])}}):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((d,b)=>{d.useAllData?n.set(b,null):
d.members&&d.members.forEach(l=>{n.has(b)&&null!==n.get(b)?n.get(b)?.push(l.id):n.set(b,[l.id])})}):(this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&n.set(d.name,null)}),this.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&n.set(d.name,null)}));for(const [d,b]of n)c=new Promise(l=>{(async()=>{const p=new Set,h=[];let q="",w=!1;a||r.get(d)?.properties?.forEach(u=>{u.name&&p.add(u.name)});if(k&&this.geographicLookup.has(d)){var v=this.geographicLookup.get(d)?.name;v&&p.add(v)}if(this.entityTypeNames.has(d))q=
`MATCH (n:${d}) ${b?"WHERE id(n) IN $ids ":""}return ID(n)`,p.forEach(u=>{q+=`, n.${u}`;h.push(u)});else if(this.relationshipTypeNames.has(d))w=!0,q=`MATCH ()-[n:${d}]->() ${b?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,p.forEach(u=>{q+=`, n.${u}`;h.push(u)});else throw new I("knowledge-graph:layer-data-manager",`The graph type of ${d} could not be determined. Was this type set in the KG data model and inclusion definition?`);v=b?new E({openCypherQuery:q,bindParameters:{ids:b}}):
new E({openCypherQuery:q});for(v=(await K.executeQueryStreaming(this.knowledgeGraph,v)).resultRowsStream.getReader();;){const {done:u,value:g}=await v.read();if(u)break;var z=[];for(let x=0;x<g.length;x++){const F=g[x];let y=0,H=0;const G={properties:{}};G.id=F[y];y++;H++;w&&(G.originId=F[y],y++,H++,G.destinationId=F[y],y++,H++);for(;y<F.length;y++)G.properties[h[y-H]]=F[y];z.push(G)}z=e.writeToStore(z,"ESRI__ID",this.geographicLookup.get(d)?.name);this.sublayerCaches.has(d)||this.sublayerCaches.set(d,
new Map);f&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(d)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(d,{useAllData:!1,members:new Map});f&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(d).members=new Map);const C=this.sublayerCaches.get(d);z.forEach(x=>{C?.set(x.attributes.ESRI__ID,x);f&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members.has(x.attributes.ESRI__ID)&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(d).members.set(x.attributes.ESRI__ID,
{id:x.attributes.ESRI__ID}),this._memberIdTypeLookup.set(x.attributes.ESRI__ID,d))})}})().then(()=>{l(null)})}),m.push(c),this._processingCacheUpdatesLookup.get(d)?.push(c);await Promise.all(m)};B.removeFromLayer=function(c){const a=new Set;c.forEach(k=>{this._memberIdTypeLookup.get(k)&&a.add(this._memberIdTypeLookup.get(k));this._memberIdTypeLookup.delete(k);this.inclusionModeDefinition?.namedTypeDefinitions.forEach(f=>{f.members?.has(k)&&f.members.delete(k)})});a.forEach(k=>{this.sublayerCaches.get(k)?.forEach((f,
e)=>{c.includes(e)&&this.sublayerCaches.get(k)?.delete(e)})})};B.retrieveDataFromService=async function(c,a,k){const f=J.getInstance(),e=new Set,m=[];let n="",r=[];const d="relationship"===a.graphType;var b=this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData,l=a.parentCompositeLayer.sublayerIdsCache.get(a.objectType.name);b=!b&&l?Array.from(l).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData&&
null!=c.objectIds&&(b=c.objectIds);else if(null!=c.objectIds&&b&&0<b.length){const h=c.objectIds;c.objectIds=b.filter(q=>h.includes(q))}else if(null!=c.objectIds)b=c.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(a.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members||1>this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members?.size))return c.objectIds=[],[];c.objectIds=b}null!=c.outFields&&(l=c.outFields,
l.includes("*")?a.fields.forEach(h=>{e.add(h.name)}):l.forEach(h=>{"ESRI__ID"!==h&&h!==a.geometryFieldName&&e.add(h)}));if(null!=c.geometry){b=c.geometry;b?.extent?.spatialReference&&!b.spatialReference?.isWGS84?(await P.initializeProjection(b.extent.spatialReference,Q.WGS84),b=P.project(b.extent,Q.WGS84)):b=b.extent;if(null!=c.where&&"1\x3d1"!==c.where){const h=await N.parseWhereClause(c.where.toUpperCase(),a.fieldsIndex);a.fields.forEach(q=>{h.fieldNames.includes(q.name)&&e.add(q.name)})}n=d?`Match ()-[n:${a.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:
`Match (n:${a.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n)`;a.geometryFieldName&&e.add(a.geometryFieldName);e.forEach(h=>{n+=`, n.${h}`;m.push(h)});c=new E({openCypherQuery:n,bindParameters:{param_filter_geom:new W({rings:[[[b.xmin,b.ymin],[b.xmin,b.ymax],[b.xmax,b.ymax],[b.xmax,b.ymin],[b.xmin,b.ymin]]]})}})}else{l="";if(null!=c.where&&"1\x3d1"!==c.where){const q=await N.parseWhereClause(c.where,a.fieldsIndex);a.fields.forEach(g=>{q.fieldNames.includes(g.name)&&
e.add(g.name)});const w=["column-reference","string","number","binary-expression"],v="\x3d \x3c \x3c\x3d \x3c\x3e \x3e \x3e\x3d AND OR LIKE".split(" ");let z=!1;const u=g=>{if("column-reference"===g.type)return`n.${g.column}`;if("string"===g.type)return`'${g.value}'`;if("number"===g.type)return`${g.value}`;if("binary-expression"===g.type&&w.includes(g.left.type)&&w.includes(g.right.type)&&v.includes(g.operator))return`${u(g.left)} ${g.operator} ${u(g.right)}`;if("binary-expression"===g.type&&"LIKE"===
g.operator){let C="";if("function"===g.left.type&&"column-reference"===g.left.args.value[0].type)C+=`lower(n.${g.left.args.value[0].column})`;else if("column-reference"===g.left.type)C+=`lower(n.${g.left.column})`;else return z=!0,"";C+=" CONTAINS (";if("string"===g.right.type)g=g.right.value,"%"===g.charAt(0)&&(g=g.slice(1)),"%"===g.charAt(g.length-1)&&(g=g.slice(0,-1)),C+=`'${g.toLowerCase()}')`;else return z=!0,"";return C}z=!0;return""};l=u(q.parseTree);z&&(l="")}let h="";h=d?`Match ()-[n:${a.objectType.name}]->()`:
`Match (n:${a.objectType.name})`;var p=!1;b&&(p=!0,h+=" WHERE ID(n) IN $ids");l&&(h=p?h+" AND":h+" WHERE",h+=` ${l}`);h+=" return ID(n)";d&&(h+=", id(startNode(n)), id(endNode(n))");c.returnGeometry&&a.geometryFieldName&&e.add(a.geometryFieldName);e.forEach(q=>{h+=`, n.${q}`;m.push(q)});c=b?new E({openCypherQuery:h,bindParameters:{ids:b}}):new E({openCypherQuery:h})}for(k=(await K.executeQueryStreaming(a.parentCompositeLayer.dataManager.knowledgeGraph,c,k)).resultRowsStream.getReader();;){const {done:h,
value:q}=await k.read();if(h)break;c=[];for(b=0;b<q.length;b++){l=q[b];let w=p=0;const v={properties:{}};v.id=l[p];p++;w++;d&&(v.originId=l[p],p++,w++,v.destinationId=l[p],p++,w++);for(;p<l.length;p++)v.properties[m[p-w]]=l[p];c.push(v)}r=r.concat(f.writeToStore(c,"ESRI__ID",a.parentCompositeLayer.dataManager.geographicLookup.get(a.objectType.name)?.name))}return r};return M._createClass(L)}(T);A.__decorate([D.property()],t.KnowledgeGraphLayerDataManager.prototype,"knowledgeGraph",void 0);A.__decorate([D.property()],
t.KnowledgeGraphLayerDataManager.prototype,"inclusionModeDefinition",void 0);A.__decorate([D.property()],t.KnowledgeGraphLayerDataManager.prototype,"entityTypeNames",void 0);A.__decorate([D.property()],t.KnowledgeGraphLayerDataManager.prototype,"relationshipTypeNames",void 0);A.__decorate([D.property()],t.KnowledgeGraphLayerDataManager.prototype,"geographicLookup",void 0);A.__decorate([D.property()],t.KnowledgeGraphLayerDataManager.prototype,"sublayerCaches",void 0);t.KnowledgeGraphLayerDataManager=
A.__decorate([V.subclass("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],t.KnowledgeGraphLayerDataManager);t.GEOHASH_ENCODING_PRECISION=12;t.MOCK_DESTINATION_ID_FIELD_NAME="ESRI__DESTINATION_ID";t.MOCK_LAYOUT_GEOMETRY_FIELD_NAME="ESRI__LAYOUT_GEOMETRY";t.MOCK_OID_FIELD_NAME="ESRI__ID";t.MOCK_ORIGIN_ID_FIELD_NAME="ESRI__ORIGIN_ID";Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});