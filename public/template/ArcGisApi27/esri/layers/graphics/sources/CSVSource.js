// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/has ../../../core/Loadable ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../../../rest/support/FeatureSet ../../../geometry/Extent".split(" "),function(c,m,e,B,p,q,r,t,f,C,D,u,v,w){c.CSVSource=function(n){function k(a){var b=
n.call(this,a)||this;b.type="csv";b.refresh=r.debounce(async l=>{await b.load();const {extent:h,timeExtent:g}=await b._connection.invoke("refresh",l);h&&(b.sourceJSON.extent=h);g&&(b.sourceJSON.timeInfo.timeExtent=[g.start,g.end]);return{dataChanged:!0,updates:{extent:b.sourceJSON.extent,timeInfo:b.sourceJSON.timeInfo}}});return b}m._inherits(k,n);var d=k.prototype;d.load=function(a){this.addResolvingPromise(this._startWorker(null!=a?a.signal:null));return Promise.resolve(this)};d.destroy=function(){this._connection?.close();
this._connection=null};d.openPorts=async function(){await this.load();return this._connection.openPorts()};d.queryFeatures=async function(a,b={}){await this.load(b);a=await this._connection.invoke("queryFeatures",a?a.toJSON():null,b);return v.fromJSON(a)};d.queryFeaturesJSON=async function(a,b={}){await this.load(b);return this._connection.invoke("queryFeatures",a?a.toJSON():null,b)};d.queryFeatureCount=async function(a,b={}){await this.load(b);return this._connection.invoke("queryFeatureCount",a?
a.toJSON():null,b)};d.queryObjectIds=async function(a,b={}){await this.load(b);return this._connection.invoke("queryObjectIds",a?a.toJSON():null,b)};d.queryExtent=async function(a,b={}){await this.load(b);a=await this._connection.invoke("queryExtent",a?a.toJSON():null,b);return{count:a.count,extent:w.fromJSON(a.extent)}};d.querySnapping=async function(a,b={}){await this.load(b);return this._connection.invoke("querySnapping",a,b)};d._startWorker=async function(a){this._connection=await t.open("CSVSourceWorker",
{strategy:p("feature-layers-workers")?"dedicated":"local",signal:a});const {url:b,delimiter:l,fields:h,latitudeField:g,longitudeField:x,spatialReference:y,timeInfo:z}=this.loadOptions;a=await this._connection.invoke("load",{url:b,customParameters:this.customParameters,parsingOptions:{delimiter:l,fields:h?.map(A=>A.toJSON()),latitudeField:g,longitudeField:x,spatialReference:y?.toJSON(),timeInfo:z?.toJSON()}},{signal:a});this.locationInfo=a.locationInfo;this.sourceJSON=a.layerDefinition;this.delimiter=
a.delimiter};return m._createClass(k)}(q);e.__decorate([f.property()],c.CSVSource.prototype,"type",void 0);e.__decorate([f.property()],c.CSVSource.prototype,"loadOptions",void 0);e.__decorate([f.property()],c.CSVSource.prototype,"customParameters",void 0);e.__decorate([f.property()],c.CSVSource.prototype,"locationInfo",void 0);e.__decorate([f.property()],c.CSVSource.prototype,"sourceJSON",void 0);e.__decorate([f.property()],c.CSVSource.prototype,"delimiter",void 0);c.CSVSource=e.__decorate([u.subclass("esri.layers.graphics.sources.CSVSource")],
c.CSVSource);Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});