// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/Collection ../core/Error ../core/Logger ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ./Layer ./knowledgeGraph/KnowledgeGraphLayerDataManager ./knowledgeGraph/KnowledgeGraphSublayer ./mixins/BlendLayer ./mixins/ScaleRangeLayer ../rest/knowledgeGraphService ../rest/knowledgeGraph/EntityType ../rest/knowledgeGraph/RelationshipType".split(" "),
function(q,f,r,u,t,g,e,F,G,v,w,x,p,y,z,A,B,C){const D=(m,l,h)=>{m.has(l)||m.set(l,h());return m.get(l)};e=function(m){function l(a){var b=m.call(this,a)||this;b._graphTypeLookup=new Map;b.knowledgeGraph=null;b.layers=new r;b.memberEntityTypes=null;b.memberRelationshipTypes=null;b.sublayerIdsCache=new Map;b.tables=new r;b.type="knowledge-graph";b._originalInclusionList=a.inclusionModeDefinition;return b}q._inherits(l,m);var h=l.prototype;h.normalizeCtorArgs=function(a){return{url:a.url,title:a.title}};
h._initializeLayerProperties=function(a){const b=new Set;let c=[],n=[];if(a.inclusionModeDefinition&&(!a.inclusionModeDefinition.namedTypeDefinitions||1>a.inclusionModeDefinition.namedTypeDefinitions.size))throw new u("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");a.knowledgeGraph.dataModel.entityTypes?.forEach(k=>{k.name&&this._graphTypeLookup.set(k.name,k)});a.knowledgeGraph.dataModel.relationshipTypes?.forEach(k=>
{k.name&&this._graphTypeLookup.set(k.name,k)});a.inclusionModeDefinition?.generateAllSublayers?(c=a.knowledgeGraph.dataModel.entityTypes??[],n=a.knowledgeGraph.dataModel.relationshipTypes??[]):a.inclusionModeDefinition?.namedTypeDefinitions&&0<a.inclusionModeDefinition?.namedTypeDefinitions.size?a.inclusionModeDefinition?.namedTypeDefinitions.forEach((k,d)=>{this._graphTypeLookup.get(d)?this._graphTypeLookup.get(d)instanceof C||"strictOrigin"in this._graphTypeLookup.get(d)?b.has(d)||(b.add(d),n.push(this._graphTypeLookup.get(d))):
this._graphTypeLookup.get(d)instanceof B||"properties"in this._graphTypeLookup.get(d)?b.has(d)||(b.add(d),c.push(this._graphTypeLookup.get(d))):(t.getLogger(this).warn(`A named type, ${d}, was in the inclusion list that wasn't properly modeled and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(d)):(t.getLogger(this).warn(`A named type, ${d}, was in the inclusion list that wasn't in the data model and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(d))}):
(c=a.knowledgeGraph.dataModel.entityTypes??[],n=a.knowledgeGraph.dataModel.relationshipTypes??[]);const E=new x.KnowledgeGraphLayerDataManager({knowledgeGraph:a.knowledgeGraph,inclusionModeDefinition:a.inclusionModeDefinition});this.knowledgeGraph=a.knowledgeGraph;this.memberEntityTypes=c;this.memberRelationshipTypes=n;this.dataManager=E};h.load=function(){this.addResolvingPromise(A.fetchKnowledgeGraph(this.url).then(a=>{this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList});
this.loadLayerAssumingLocalCache()}));return Promise.resolve(this)};h._handleNewRecords=async function(a){var b=[];this.dataManager.addToLayerInclusionSet(a);for(const c of a)this.sublayerIdsCache.has(c.typeName)||(this.sublayerIdsCache.set(c.typeName,new Set),b.push(c.typeName)),this.sublayerIdsCache.get(c.typeName).add(c.id);for(const c of b)this._graphTypeLookup.has(c)&&(b=this._graphTypeLookup.get(c),a="endPoints"in b?"relationship":"entity",b=new p({objectType:b,parentCompositeLayer:this,graphType:a,
title:c}),"entity"===a?this.dataManager.entityTypeNames.add(c):this.dataManager.relationshipTypeNames.add(c),b.geometryType?this.layers.push(b):this.tables.push(b),this.dataManager.sublayerCaches.set(c,new Map));this.layers.forEach(c=>{c.emit("refresh",{dataChanged:!0})})};h.loadLayerAssumingLocalCache=function(){this.memberEntityTypes.forEach(a=>{const b=new p({objectType:a,parentCompositeLayer:this,graphType:"entity",title:a.name});b.geometryType?this.layers.push(b):this.tables.push(b);this.dataManager.sublayerCaches.has(a.name)||
this.dataManager.sublayerCaches.set(a.name,new Map)});this.memberRelationshipTypes.forEach(a=>{const b=new p({objectType:a,parentCompositeLayer:this,graphType:"relationship",title:a.name});b.geometryType?this.layers.push(b):this.tables.push(b);this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((a,b)=>{const c=D(this.sublayerIdsCache,
b,()=>new Set);a.members?.forEach(n=>{c.add(n.id)})})};h.addRecords=async function(a){await this._handleNewRecords(a)};return q._createClass(l)}(y.BlendLayer(z.ScaleRangeLayer(w)));f.__decorate([g.property()],e.prototype,"dataManager",void 0);f.__decorate([g.property()],e.prototype,"knowledgeGraph",void 0);f.__decorate([g.property()],e.prototype,"layers",void 0);f.__decorate([g.property()],e.prototype,"memberEntityTypes",void 0);f.__decorate([g.property()],e.prototype,"memberRelationshipTypes",void 0);
f.__decorate([g.property()],e.prototype,"sublayerIdsCache",void 0);f.__decorate([g.property()],e.prototype,"tables",void 0);f.__decorate([g.property({json:{read:!1}})],e.prototype,"type",void 0);return e=f.__decorate([v.subclass("esri.layers.KnowledgeGraphLayer")],e)});