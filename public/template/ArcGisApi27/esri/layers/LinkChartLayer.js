// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../core/Collection ../core/Error ../core/Logger ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geohash/geohashUtils ./Layer ./graphics/featureConversionUtils ./graphics/OptimizedGeometry ./knowledgeGraph/KnowledgeGraphLayerDataManager ./knowledgeGraph/KnowledgeGraphSublayer ./mixins/BlendLayer ./mixins/ScaleRangeLayer ../libs/linkchartlayout/LinkChartLayout ../rest/knowledgeGraphService ../rest/knowledgeGraph/EntityType ../rest/knowledgeGraph/RelationshipType ../geometry/Extent ../geometry/Point ../geometry/Polyline".split(" "),
function(L,x,v,M,H,I,W,y,fa,ha,ia,X,E,Y,C,N,e,J,Z,aa,r,ba,ca,da,O,P,Q){const ea=(D,B,w)=>{D.has(B)||D.set(B,w());return D.get(B)};v=function(D){function B(a){var d=D.call(this,a)||this;d.dataPreloadedInLocalCache=!1;d._currentLinkChartConfig={layoutMode:"RADIAL_TREE",xScaleFactor:1,yScaleFactor:1};d._graphTypeLookup=new Map;d.layers=new M;d.linkChartDiagramLookup=new Map;d.linkChartExtent=new O({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});d.linkChartGeohashLookup=new Map;d.sublayerIdsCache=new Map;
d.tables=new M;d.type="link-chart";d._originalInclusionList=a.inclusionModeDefinition;if(a.dataPreloadedInLocalCache&&!a.inclusionModeDefinition)throw new H("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");return d}L._inherits(B,D);var w=B.prototype;w.normalizeCtorArgs=function(a){return{url:a.url,title:a.title,
dataPreloadedInLocalCache:a.dataPreloadedInLocalCache,defaultLinkChartConfig:a.defaultLinkChartConfig}};w._initializeLayerProperties=function(a){if(!this.title&&this.url){var d=this.url.split("/");this.title=d[d.length-2]}const c=new Set;let b=[],h=[];if(a.inclusionModeDefinition&&(!a.inclusionModeDefinition.namedTypeDefinitions||1>a.inclusionModeDefinition.namedTypeDefinitions.size))throw new H("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");
a.knowledgeGraph.dataModel.entityTypes?.forEach(m=>{m.name&&this._graphTypeLookup.set(m.name,m)});a.knowledgeGraph.dataModel.relationshipTypes?.forEach(m=>{m.name&&this._graphTypeLookup.set(m.name,m)});a.inclusionModeDefinition?.generateAllSublayers?(b=a.knowledgeGraph.dataModel.entityTypes??[],h=a.knowledgeGraph.dataModel.relationshipTypes??[]):a.inclusionModeDefinition?.namedTypeDefinitions&&0<a.inclusionModeDefinition?.namedTypeDefinitions.size?a.inclusionModeDefinition?.namedTypeDefinitions.forEach((m,
q)=>{this._graphTypeLookup.get(q)?this._graphTypeLookup.get(q)instanceof da||"strictOrigin"in this._graphTypeLookup.get(q)?c.has(q)||(c.add(q),h.push(this._graphTypeLookup.get(q))):this._graphTypeLookup.get(q)instanceof ca||"properties"in this._graphTypeLookup.get(q)?c.has(q)||(c.add(q),b.push(this._graphTypeLookup.get(q))):(I.getLogger(this).warn(`A named type, ${q}, was in the inclusion list that wasn't properly modeled and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(q)):
(I.getLogger(this).warn(`A named type, ${q}, was in the inclusion list that wasn't in the data model and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(q))}):(b=a.knowledgeGraph.dataModel.entityTypes??[],h=a.knowledgeGraph.dataModel.relationshipTypes??[]);d=new e.KnowledgeGraphLayerDataManager({knowledgeGraph:a.knowledgeGraph,inclusionModeDefinition:a.inclusionModeDefinition});this.knowledgeGraph=a.knowledgeGraph;this.memberEntityTypes=b;this.memberRelationshipTypes=h;this.dataManager=
d};w.load=function(a){this.addResolvingPromise(new Promise(d=>{ba.fetchKnowledgeGraph(this.url).then(c=>{this._initializeLayerProperties({knowledgeGraph:c,inclusionModeDefinition:this._originalInclusionList});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(b=>{b.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(b.name,
{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(b=>{b.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(b.name,{useAllData:!0})}));this.dataPreloadedInLocalCache?(this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(b=>{b.useAllData=!1;b.members?.forEach(h=>{let m;m=h.linkChartLocation instanceof
N?h.linkChartLocation:h.linkChartLocation?C.convertFromGeometry(h.linkChartLocation):null;this.linkChartDiagramLookup.set(h.id,m);m&&2===m.coords.length&&0===m.lengths.length?this.linkChartGeohashLookup.set(h.id,E.encodeGeohash(m.coords[1],m.coords[0],e.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(h.id,"")});this.addResolvingPromise(this._initializeDiagram().then(async()=>{this.layers.forEach(async h=>{await h.refreshCachedQueryEngine()});this.tables.forEach(async h=>{await h.refreshCachedQueryEngine()})}))})):
this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,"GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode,!0).then(async()=>{W.throwIfAborted(a);const b=[],h=[];this.loadLayerAssumingLocalCache();this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach(m=>{m.useAllData=!1}));await this._initializeDiagram();this.layers.forEach(m=>{h.push(m.refreshCachedQueryEngine());
b.push(new Promise(q=>{m.on("layerview-create",()=>{q(null)})}))});this.tables.forEach(m=>{h.push(m.refreshCachedQueryEngine())});await Promise.all(h)}));d(null)})}));return Promise.resolve(this)};w.addRecords=async function(a){await this._handleNewRecords(a)};w.expand=async function(a){a=await this.dataManager.getConnectedRecordIds(a);const d=a.filter(c=>!this.sublayerIdsCache.get(c.typeName)?.has(c.id));await this._handleNewRecords(a);return{records:d}};w.loadLayerAssumingLocalCache=function(){this.memberRelationshipTypes.forEach(a=>
{const d=new J({objectType:a,parentCompositeLayer:this,graphType:"relationship",title:a.name});d.geometryType?this.layers.push(d):this.tables.push(d);this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)});this.memberEntityTypes.forEach(a=>{const d=new J({objectType:a,parentCompositeLayer:this,graphType:"entity",title:a.name});d.geometryType?this.layers.push(d):this.tables.push(d);this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,
new Map)});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((a,d)=>{const c=ea(this.sublayerIdsCache,d,()=>new Set);a.members?.forEach(b=>{c.add(b.id);if(b.linkChartLocation)if(b.linkChartLocation instanceof N)this.linkChartDiagramLookup.set(b.id,b.linkChartLocation),2===b.linkChartLocation.coords.length&&0===b.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(b.id,E.encodeGeohash(b.linkChartLocation.coords[1],
b.linkChartLocation.coords[0],e.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(b.id,"");else{const h=C.convertFromGeometry(b.linkChartLocation);this.linkChartDiagramLookup.set(b.id,b.linkChartLocation?h:null);"x"in b.linkChartLocation&&"y"in b.linkChartLocation?this.linkChartGeohashLookup.set(b.id,E.encodeGeohash(b.linkChartLocation.x,b.linkChartLocation.y,e.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(b.id,"")}})})};w.calculateLinkChartLayout=async function(a="RADIAL_TREE",
d){const c=[],b=[];this.dataManager.sublayerCaches.forEach((k,p)=>{this.dataManager.entityTypeNames.has(p)?k.forEach(g=>{c.push({typeName:p,feature:g})}):this.dataManager.relationshipTypeNames.has(p)&&k.forEach(g=>{b.push({typeName:p,feature:g})})});this.linkChartDiagramLookup=new Map;const h=new Map,m=new Map,q=new Map,F=new Map,A=new Uint8Array(c.length),t=new Float64Array(c.length),u=new Float64Array(c.length),R=new Uint32Array(b.length),S=new Uint32Array(b.length),n=[],T=d?.xScaleFactor??1,U=
d?.yScaleFactor??1,z=new O({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});let l=0,K=0;switch("GEOGRAPHIC"===a?"FORCE_DIRECTED":a){case "FORCE_DIRECTED":var f=r.LCForceDirectedLayout.apply;break;case "COMMUNITY":f=r.LCCommunityLayout.apply;break;case "HIERARCHICAL":f=r.LCHierarchicalLayout.apply;break;case "RADIAL_TREE":f=r.LCRadialTreeLayout.apply;break;case "SMART_TREE":f=r.LCSmartTreeLayout.apply;break;default:f=r.LCSimpleLayout.apply}c.forEach(({typeName:k,feature:p})=>{if(d?.lockedNodeLocations?.has(p.attributes[e.MOCK_OID_FIELD_NAME])){"GEOGRAPHIC"===
a&&this.dataManager.geographicLookup.has(k)?A[l]=r.NodeFlag.IsGeographic:A[l]=r.NodeFlag.None;var g=d.lockedNodeLocations.get(p.attributes[e.MOCK_OID_FIELD_NAME]);t[l]=g.x;u[l]=g.y}else if("GEOGRAPHIC"===a&&this.dataManager.geographicLookup.has(k)){A[l]=r.NodeFlag.IsGeographic;g=null;g=p.attributes[this.dataManager.geographicLookup.get(k).name];switch(this.dataManager.geographicLookup.get(k)?.geometryType){case "esriGeometryPoint":t[l]=g?.x;u[l]=g?.y;break;case "esriGeometryPolygon":g=g?.centroid;
null!=g?.x&&null!=g?.y?(t[l]=g.x,u[l]=g.y):A[l]=r.NodeFlag.IsMovable;break;case "esriGeometryPolyline":g=g?.extent?.center;null!=g?.x&&null!=g?.y?(t[l]=g.x,u[l]=g.y):A[l]=r.NodeFlag.IsMovable;break;case "esriGeometryMultipoint":g=g?.extent?.center;null!=g?.x&&null!=g?.y?(t[l]=g.x,u[l]=g.y):A[l]=r.NodeFlag.IsMovable;break;default:A[l]=r.NodeFlag.IsMovable}if(null==t[l]||null==u[l]||Number.isNaN(t[l])||Number.isNaN(u[l]))A[l]=r.NodeFlag.IsMovable,t[l]=0,u[l]=0}else A[l]=r.NodeFlag.IsMovable,t[l]=0,
u[l]=0;F.set(p.attributes[e.MOCK_OID_FIELD_NAME],l);n[l]={feature:p,typeName:k};l++});let V=!1;b.forEach(k=>{const p=F.get(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME]),g=F.get(k.feature.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME]);void 0!==p&&void 0!==g?(R[K]=p,S[K]=g,K++):(V=!0,this.linkChartDiagramLookup.set(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME],null),this.linkChartGeohashLookup.set(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME],null))});V&&I.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");
await r.load();if(!f(A,t,u,R,S))throw new H("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(f=0;f<n.length;f++){A[f]===r.NodeFlag.IsMovable&&(t[f]*=T,u[f]*=U);84.9999<u[f]&&(u[f]=84.9999);-84.9999>u[f]&&(u[f]=-84.9999);179.9999<t[f]&&(t[f]=179.9999);-179.9999>t[f]&&(t[f]=-179.9999);n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=new P(t[f],u[f]);if(h.has(n[f].typeName))h.get(n[f].typeName)?.set(n[f].feature.attributes[e.MOCK_OID_FIELD_NAME],
n[f].feature);else{var G=new Map;G.set(n[f].feature.attributes[e.MOCK_OID_FIELD_NAME],n[f].feature);h.set(n[f].typeName,G)}q.set(n[f].feature.attributes[e.MOCK_OID_FIELD_NAME],n[f].feature);G=C.convertFromGeometry(n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]);this.linkChartDiagramLookup.set(n[f].feature.attributes[e.MOCK_OID_FIELD_NAME],n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?G:null);this.linkChartGeohashLookup.set(n[f].feature.attributes[e.MOCK_OID_FIELD_NAME],E.encodeGeohash(n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y,
n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x,e.GEOHASH_ENCODING_PRECISION));n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x<z.xmin&&(z.xmin=n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x);n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x>z.xmax&&(z.xmax=n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x);n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y<z.ymin&&(z.ymin=n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y);
n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y>z.ymax&&(z.ymax=n[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y)}this.linkChartExtent.xmin=z.xmin;this.linkChartExtent.xmax=z.xmax;this.linkChartExtent.ymin=z.ymin;this.linkChartExtent.ymax=z.ymax;b.forEach(k=>{var p=n[F.get(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME])]?.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME];const g=n[F.get(k.feature.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME])]?.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME];
p&&g&&(p=new Q({paths:[[p.x,p.y],[g.x,g.y]]}),k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=p,m.has(k.typeName)?m.get(k.typeName)?.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature):(p=new Map,p.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature),m.set(k.typeName,p)),q.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature),p=C.convertFromGeometry(k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]),this.linkChartDiagramLookup.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],
k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?p:null),this.linkChartGeohashLookup.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],""))});this._currentLinkChartConfig={layoutMode:a,xScaleFactor:T,yScaleFactor:U};return{nodes:h,links:m,idMap:q}};w.applyNewLinkChartLayout=async function(a="RADIAL_TREE",d){const c=[];await this.calculateLinkChartLayout(a,d);this.layers.forEach(b=>{c.push(b.refreshCachedQueryEngine())});await Promise.all(c);this.layers.forEach(b=>{b.emit("refresh",{dataChanged:!0})})};
w.getCurrentNodeLocations=function(){const a=new Map;this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(d=>{d?.members?.forEach(c=>{var b=c.linkChartLocation;const h=c.id;b&&("x"in b?(c=b.x,b=b.y):(c=b.coords[0],b=b.coords[1]),a.set(h,new P({x:c,y:b})))})});return a};w.synchronizeInclusionListWithCache=async function(){return new Promise(a=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((d,c)=>{d.useAllData=!1;if(d.members&&0<d.members.size&&this.dataManager.sublayerCaches.get(c)){var b=
Array.from(this.dataManager.sublayerCaches.get(c).keys());Array.from(d.members.keys()).filter(h=>!b.includes(h)).forEach(h=>{d.members?.delete(h)})}});a()})};w.refreshLinkChartCache=async function(a){await this.dataManager.refreshCacheContent(a);const d=[];this.layers.forEach(c=>{d.push(c.refreshCachedQueryEngine())});await Promise.all(d);this.layers.forEach(c=>{c.emit("refresh",{dataChanged:!0})})};w._handleNewRecords=async function(a){var d=[];this.dataManager.addToLayerInclusionSet(a);for(var c of a)this.sublayerIdsCache.has(c.typeName)||
(this.sublayerIdsCache.set(c.typeName,new Set),d.push(c.typeName)),this.sublayerIdsCache.get(c.typeName).add(c.id);for(const b of d)this._graphTypeLookup.has(b)&&(c=this._graphTypeLookup.get(b),d="endPoints"in c?"relationship":"entity",c=new J({objectType:c,parentCompositeLayer:this,graphType:d,title:b}),"entity"===d?this.dataManager.entityTypeNames.add(b):this.dataManager.relationshipTypeNames.add(b),c.geometryType?this.layers.push(c):this.tables.push(c),this.dataManager.sublayerCaches.set(b,new Map));
await this.dataManager.refreshCacheContent(a.map(b=>b.id));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor})};w._initializeDiagram=async function(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(a=>{a?.members?.forEach(d=>{var c=d.linkChartLocation;d=d.id;if(c){c=
"x"in c?{x:c.x,y:c.y}:{x:c.coords[0],y:c.coords[1]};var b=C.convertFromGeometry(c);this.linkChartDiagramLookup.set(d,b);this.linkChartGeohashLookup.set(d,E.encodeGeohash(c.x,c.y,e.GEOHASH_ENCODING_PRECISION));this.linkChartExtent.xmin>c.x&&(this.linkChartExtent.xmin=c.x);this.linkChartExtent.xmax<c.x&&(this.linkChartExtent.xmax=c.x);this.linkChartExtent.ymin>c.y&&(this.linkChartExtent.ymin=c.y);this.linkChartExtent.ymax<c.y&&(this.linkChartExtent.ymax=c.y)}})}),this.memberRelationshipTypes.forEach(a=>
{a.name&&this.dataManager.sublayerCaches.get(a.name)?.forEach(d=>{var c=this.linkChartDiagramLookup.get(d.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME]);const b=this.linkChartDiagramLookup.get(d.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME]);c&&b?(c=C.convertFromGeometry(new Q({paths:[[c.coords[0],c.coords[1]],[b.coords[0],b.coords[1]]]})),this.linkChartDiagramLookup.set(d.attributes[e.MOCK_OID_FIELD_NAME],c)):this.linkChartDiagramLookup.set(d.attributes[e.MOCK_OID_FIELD_NAME],null);this.linkChartGeohashLookup.set(d.attributes[e.MOCK_OID_FIELD_NAME],
"")})})):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})};return L._createClass(B)}(Z.BlendLayer(aa.ScaleRangeLayer(Y)));x.__decorate([y.property()],v.prototype,"dataPreloadedInLocalCache",void 0);x.__decorate([y.property()],
v.prototype,"defaultLinkChartConfig",void 0);x.__decorate([y.property()],v.prototype,"dataManager",void 0);x.__decorate([y.property()],v.prototype,"knowledgeGraph",void 0);x.__decorate([y.property()],v.prototype,"layers",void 0);x.__decorate([y.property()],v.prototype,"linkChartDiagramLookup",void 0);x.__decorate([y.property()],v.prototype,"linkChartExtent",void 0);x.__decorate([y.property()],v.prototype,"linkChartGeohashLookup",void 0);x.__decorate([y.property()],v.prototype,"memberEntityTypes",
void 0);x.__decorate([y.property()],v.prototype,"memberRelationshipTypes",void 0);x.__decorate([y.property()],v.prototype,"sublayerIdsCache",void 0);x.__decorate([y.property()],v.prototype,"tables",void 0);x.__decorate([y.property({json:{read:!1}})],v.prototype,"type",void 0);return v=x.__decorate([X.subclass("esri.layers.LinkChartLayer")],v)});