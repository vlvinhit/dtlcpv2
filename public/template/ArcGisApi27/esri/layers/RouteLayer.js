// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../geometry ../Graphic ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../core/Collection ../core/Error ../core/HandleOwner ../core/Logger ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/reactiveUtils ../core/unitUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/originUtils ../geometry/Extent ../geometry/projection ../geometry/support/spatialReferenceUtils ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./support/arcgisLayerUrl ./support/RouteSymbols ../portal/Portal ../portal/PortalItem ../portal/support/portalItemUtils ../rest/networkService ../rest/route ../rest/support/DirectionLine ../rest/support/DirectionPoint ../rest/support/PointBarrier ../rest/support/PolygonBarrier ../rest/support/PolylineBarrier ../rest/support/RouteInfo ../rest/support/RouteParameters ../rest/support/RouteSettings ../rest/support/Stop ../geometry/SpatialReference ../geometry/Multipoint".split(" "),
function(Q,k,R,h,da,ea,Ja,Ka,La,Ma,Na,Oa,Pa,Qa,fa,x,y,ha,ia,ja,ka,la,ma,na,oa,u,Ra,Sa,Ta,z,pa,qa,ra,sa,S,T,ta,ua,va,wa,xa,ya,U,za,Aa,Ba,Ca,Da,H,I,D,E,F,J,V,Ea,G,B,Fa){function K(t){return t.length?t:null}function L(t){switch(t){case "esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:L("esriGeometryPolyline")};case "esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case "esriGeometryPolygon":return{type:"esriSFS",
style:"esriSFSNull",outline:L("esriGeometryPolyline")}}}function Ga(t,m,g){const a=m.networkDataset?.networkAttributes?.filter(({usageType:d})=>"cost"===d)??[],b=g.travelMode??m.defaultTravelMode;if(null==b)W.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");else{var {timeAttributeName:c,distanceAttributeName:f}=b,l=a.find(({name:d})=>d===c),p=a.find(({name:d})=>d===f),v=g.travelMode?.impedanceAttributeName??
g.impedanceAttribute??m.impedance;l=l?.units;p=p?.units;if(!l||!p)throw new y("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");var e=g.directionsLanguage??m.directionsLanguage,w=g.accumulateAttributes??m.accumulateAttributeNames??[],q=new Set(a.filter(({name:d})=>d===c||d===f||d===v||null!=d&&w.includes(d)).map(({name:d})=>d));m=d=>{for(const X in d)q.has(X)||delete d[X]};for(var n of t.pointBarriers)null!=n.costs&&(n.addedCost=n.costs[v]??0,m(n.costs));
for(const d of t.polygonBarriers)null!=d.costs&&(d.scaleFactor=d.costs[v]??1,m(d.costs));for(const d of t.polylineBarriers)null!=d.costs&&(d.scaleFactor=d.costs[v]??1,m(d.costs));({routeInfo:n}=t);var {findBestSequence:r,preserveFirstStop:A,preserveLastStop:M,startTimeIsUTC:N,timeWindowsAreUTC:O}=g;n.analysisSettings=new Ea({accumulateAttributes:w,directionsLanguage:e,findBestSequence:r,preserveFirstStop:A,preserveLastStop:M,startTimeIsUTC:N,timeWindowsAreUTC:O,travelMode:b});n.totalDuration=C(n.totalCosts?.[c]??
0,l);n.totalDistance=P(n.totalCosts?.[f]??0,p);n.totalLateDuration=C(n.totalViolations?.[c]??0,l);n.totalWaitDuration=C(n.totalWait?.[c]??0,l);null!=n.totalCosts&&m(n.totalCosts);null!=n.totalViolations&&m(n.totalViolations);null!=n.totalWait&&m(n.totalWait);for(const d of t.stops)null!=d.serviceCosts&&(d.serviceDuration=C(d.serviceCosts[c]??0,l),d.serviceDistance=P(d.serviceCosts[f]??0,p),m(d.serviceCosts)),null!=d.cumulativeCosts&&(d.cumulativeDuration=C(d.cumulativeCosts[c]??0,l),d.cumulativeDistance=
P(d.cumulativeCosts[f]??0,p),m(d.cumulativeCosts)),null!=d.violations&&(d.lateDuration=C(d.violations[c]??0,l),m(d.violations)),null!=d.wait&&(d.waitDuration=C(d.wait[c]??0,l),m(d.wait))}}async function Y(t){const m=B.WGS84;await S.initializeProjection(t.spatialReference,m);return S.project(t,m)}function C(t,m){switch(m){case "seconds":return t/60;case "hours":return 60*t;case "days":return 1440*t;default:return t}}function P(t,m){return"decimal-degrees"===m||"points"===m||"unknown"===m?t:na.convertUnit(t,
m,"meters")}const Ha=x.ofType(H),Ia=x.ofType(I),Z=x.ofType(D),aa=x.ofType(E),ba=x.ofType(F),ca=x.ofType(G),W=ia.getLogger("esri.layers.RouteLayer");h=function(t){function m(a){var b=t.call(this,a)||this;b._cachedServiceDescription=null;b._featureCollection=null;b._type="Feature Collection";b.defaultSymbols=new U;b.directionLines=null;b.directionPoints=null;b.featureCollectionType="route";b.legendEnabled=!1;b.maxScale=0;b.minScale=0;b.pointBarriers=new Z;b.polygonBarriers=new aa;b.polylineBarriers=
new ba;b.routeInfo=null;b.spatialReference=B.WGS84;b.stops=new ca;b.type="route";a=()=>{b._setStopSymbol(b.stops)};b.addHandles(ma.on(()=>b.stops,"change",a,{sync:!0,onListenerAdd:a}));return b}Q._inherits(m,t);var g=m.prototype;g.writeFeatureCollectionWebmap=function(a,b,c,f){a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(l=>!!l);c=a.map((l,p)=>p);ka.setDeepValue("web-map"===
f.origin?"featureCollection.layers":"layers",a,b);b.opacity=this.opacity;b.visibility=this.visible;b.visibleLayers=c};g.readDirectionLines=function(a,b){return this._getNetworkFeatures(b,"DirectionLines",c=>H.fromGraphic(c))};g.readDirectionPoints=function(a,b){return this._getNetworkFeatures(b,"DirectionPoints",c=>I.fromGraphic(c))};g.readMaxScale=function(a,b){return("layers"in b?b.layers:b.featureCollection?.layers)?.find(c=>null!=c.layerDefinition.maxScale)?.layerDefinition.maxScale??0};g.readMinScale=
function(a,b){return("layers"in b?b.layers:b.featureCollection?.layers)?.find(c=>null!=c.layerDefinition.minScale)?.layerDefinition.minScale??0};g.readPointBarriers=function(a,b){return this._getNetworkFeatures(b,"Barriers",c=>D.fromGraphic(c))};g.readPolygonBarriers=function(a,b){return this._getNetworkFeatures(b,"PolygonBarriers",c=>E.fromGraphic(c))};g.readPolylineBarriers=function(a,b){return this._getNetworkFeatures(b,"PolylineBarriers",c=>F.fromGraphic(c))};g.readRouteInfo=function(a,b){a=this._getNetworkFeatures(b,
"RouteInfo",c=>J.fromGraphic(c));return 0<a.length?a.at(0):null};g.readSpatialReference=function(a,b){a="layers"in b?b.layers:b.featureCollection?.layers;if(!a?.length)return B.WGS84;const {layerDefinition:c,featureSet:f}=a[0];return B.fromJSON(f.features[0]?.geometry?.spatialReference??f.spatialReference??c.spatialReference??c.extent.spatialReference??T.WGS84)};g.readStops=function(a,b){return this._getNetworkFeatures(b,"Stops",c=>G.fromGraphic(c),c=>this._setStopSymbol(c))};g.load=function(a){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},
a));return Promise.resolve(this)};g.removeAll=function(){this.removeResult();this.pointBarriers.removeAll();this.polygonBarriers.removeAll();this.polylineBarriers.removeAll();this.stops.removeAll()};g.removeResult=function(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null));null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null));null!=this.routeInfo&&this._set("routeInfo",null)};g.save=async function(){await this.load();
const {fullExtent:a,portalItem:b}=this;if(!b)throw new y("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!b.id)throw new y("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==b.type)throw new y("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new y("routelayer:route-unsolved","save() requires a solved route");var {portal:c}=
b;await c.signIn();c.user||await b.reload();const {itemUrl:f,itemControl:l}=b;if("admin"!==l&&"update"!==l)throw new y("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p=f?oa.urlToObject(f):void 0;c=this.write(void 0,{messages:[],origin:"portal-item",portal:c,url:p,writtenProperties:[]});b.extent=await Y(a);b.title=this.title;await b.update({data:c});return b};g.saveAs=async function(a,b={}){await this.load();if(null==
this.routeInfo)throw new y("routelayer:route-unsolved","saveAs() requires a solved route");a=Aa.from(a).clone();a.extent??(a.extent=await Y(this.fullExtent));a.id=null;a.portal??(a.portal=za.getDefault());a.title??(a.title=this.title);a.type="Feature Collection";a.typeKeywords=["Data","Feature Collection",Ba.TypeKeyword.MULTI_LAYER,"Route Layer"];const {portal:c}=a,f={messages:[],origin:"portal-item",portal:c,url:null,writtenProperties:[]};await c.signIn();b=b?.folder;const l=this.write(void 0,f);
await c.user?.addItem({item:a,folder:b,data:l});this.portalItem=a;ra.updateOrigins(f);return f.portalItem=a};g.solve=async function(a,b){var c=a?.stops??this.stops;const f=a?.pointBarriers??K(this.pointBarriers),l=a?.polylineBarriers??K(this.polylineBarriers),p=a?.polygonBarriers??K(this.polygonBarriers);if(null==c)throw new y("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===c.declaredClass||"esri.rest.support.NetworkFeatureSet"===
c.declaredClass)&&2>c.features.length||x.isCollection(c)&&2>c.length)throw new y("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(x.isCollection(c))for(var v of c)v.routeName=null;const e=this.url;v=await this._getServiceDescription(e,a?.apiKey,b);var w=a?.travelMode??v.defaultTravelMode;const q=a?.accumulateAttributes??[];null!=w&&(q.push(w.distanceAttributeName),w.timeAttributeName&&q.push(w.timeAttributeName));w={startTime:new Date};c={accumulateAttributes:q,
directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:f,polylineBarriers:l,polygonBarriers:p,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!f,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!l,returnRoutes:!0,returnStops:!0,stops:c};a=a?V.from(a):new V;for(const r in w)null==a[r]&&(a[r]=w[r]);a.set(c);let n;try{n=await Da.solve(e,a,b)}catch(r){throw la.isAbortError(r)?r:new y("routelayer:failed-route-request","the routing request failed",{error:r});
}b=this._toRouteLayerSolution(n);this._isOverridden("title")||(this.title=b.routeInfo.name??"Route");Ga(b,v,a);return b};g.update=function(a){const {stops:b,directionLines:c,directionPoints:f,pointBarriers:l,polylineBarriers:p,polygonBarriers:v,routeInfo:e}=a;this.set({stops:b,pointBarriers:l,polylineBarriers:p,polygonBarriers:v});this._set("directionLines",c);this._set("directionPoints",f);this._set("routeInfo",e);null!=e.geometry&&(this.spatialReference=e.geometry.spatialReference)};g._getNetworkFeatures=
function(a,b,c,f){a=("layers"in a?a.layers:a.featureCollection?.layers)?.find(r=>r.layerDefinition.name===b);if(null==a)return new x;const {layerDefinition:l,popupInfo:p,featureSet:v}=a;a=l.drawingInfo.renderer;const {features:e}=v,w=v.spatialReference??l.spatialReference??l.extent.spatialReference??T.WGS84,q=a&&fa.read(a),n=B.fromJSON(w);a=e.map(r=>{const A=da.fromJSON(r);null!=A.geometry&&null!=r.geometry&&null==r.geometry.spatialReference&&(A.geometry.spatialReference=n);r=c(A);r.symbol??(r.symbol=
q?.getSymbol(A)??this._getNetworkSymbol(b));r.popupTemplate??(r.popupTemplate=p&&ea.fromJSON(p));return r});f&&a.some(r=>!r.symbol)&&f(a);return new x(a)};g._getNetworkSymbol=function(a){switch(a){case "Barriers":return this.defaultSymbols.pointBarriers;case "DirectionPoints":return this.defaultSymbols.directionPoints;case "DirectionLines":return this.defaultSymbols.directionLines;case "PolylineBarriers":return this.defaultSymbols.polylineBarriers;case "PolygonBarriers":return this.defaultSymbols.polygonBarriers;
case "RouteInfo":return this.defaultSymbols.routeInfo;case "Stops":return null}};g._getServiceDescription=async function(a,b,c){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===a)return this._cachedServiceDescription.serviceDescription;b=await Ca.fetchServiceDescription(a,b,c);this._cachedServiceDescription={serviceDescription:b,url:a};return b};g._setStopSymbol=function(a){if(a&&0!==a.length&&null!=this.defaultSymbols.stops&&!a.every(({symbol:q})=>null!=q)){var {first:b,
last:c,middle:f,unlocated:l,waypoint:p,break:v}=this.defaultSymbols.stops;if(null==this.routeInfo||1===a.length)a.forEach((q,n)=>{switch(n){case 0:q.symbol=b;break;case a.length-1:q.symbol=c;break;default:q.symbol=f}});else{var e=a.map(({sequence:q})=>q).filter(q=>null!=q),w=Math.min(...e);e=Math.max(...e);for(const q of a)q.symbol=q.sequence===w?b:q.sequence===e?c:"ok"!==q.status&&"not-located-on-closest"!==q.status?l:"waypoint"===q.locationType?p:"break"===q.locationType?v:f}}};g._toRouteLayerSolution=
function(a){var b=a.routeResults[0].stops?.map(e=>G.fromJSON(e.toJSON()));this._setStopSymbol(b);b=new ca(b);const c=new aa(a.polygonBarriers?.map(e=>{e=E.fromJSON(e.toJSON());e.symbol=this.defaultSymbols.polygonBarriers;return e})),f=new ba(a.polylineBarriers?.map(e=>{e=F.fromJSON(e.toJSON());e.symbol=this.defaultSymbols.polylineBarriers;return e})),l=new Z(a.pointBarriers?.map(e=>{e=D.fromJSON(e.toJSON());e.symbol=this.defaultSymbols.pointBarriers;return e}));var p=a.routeResults[0].route?.toJSON();
p=J.fromJSON(p);p.symbol=this.defaultSymbols.routeInfo;const v=new Ia(a.routeResults[0].directionPoints?.features.map(e=>{e=I.fromJSON(e.toJSON());e.symbol=this.defaultSymbols.directionPoints;return e}));return{directionLines:new Ha(a.routeResults[0].directionLines?.features.map(e=>{e=H.fromJSON(e.toJSON());e.symbol=this.defaultSymbols.directionLines;return e})),directionPoints:v,pointBarriers:l,polygonBarriers:c,polylineBarriers:f,routeInfo:p,stops:b}};g._writeDirectionLines=function(){return this._writeNetworkFeatures(this.directionLines,
this.defaultSymbols.directionLines,"esriGeometryPolyline",H.fields,H.popupInfo,"DirectionLines","Direction Lines")};g._writeDirectionPoints=function(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",I.fields,I.popupInfo,"DirectionPoints","Direction Points")};g._writeNetworkFeatures=function(a,b,c,f,l,p,v){if(null==a||!a.length)return null;const e=this.spatialReference.toJSON(),{fullExtent:w,maxScale:q,minScale:n}=this;return{featureSet:{features:a.toArray().map(r=>
{const {attributes:A,geometry:M,popupTemplate:N,symbol:O}=r.toGraphic().toJSON();return{attributes:A,geometry:M,popupInfo:N,symbol:O}}),geometryType:c,spatialReference:e},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=b?b.toJSON():L(c)}},extent:w.toJSON(),fields:f,geometryType:c,hasM:!1,hasZ:!1,maxScale:q,minScale:n,name:p,objectIdField:"ObjectID",spatialReference:e,title:v,type:"Feature Layer",typeIdField:""},popupInfo:l}};g._writePointBarriers=
function(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",D.fields,D.popupInfo,"Barriers","Point Barriers")};g._writePolygonBarriers=function(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",E.fields,E.popupInfo,"PolygonBarriers","Polygon Barriers")};g._writePolylineBarriers=function(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,
"esriGeometryPolyline",F.fields,F.popupInfo,"PolylineBarriers","Line Barriers")};g._writeRouteInfo=function(){return this._writeNetworkFeatures(null!=this.routeInfo?new x([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",J.fields,J.popupInfo,"RouteInfo","Route Details")};g._writeStops=function(){const a=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",G.fields,G.popupInfo,"Stops","Stops");if(null==a)return null;var {stops:b}=this.defaultSymbols;const c=null!=
b&&null!=b.first&&b.first.toJSON(),f=null!=b&&null!=b.middle&&b.middle.toJSON();b=null!=b&&null!=b.last&&b.last.toJSON();a.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:f,uniqueValueInfos:[{value:"1",symbol:c,label:"First Stop"},{value:`${this.stops.length}`,symbol:b,label:"Last Stop"}]};return a};Q._createClass(m,[{key:"fullExtent",get:function(){var a=new sa({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:B.WGS84});if(null!=this.routeInfo&&null!=
this.routeInfo.geometry)return this.routeInfo.geometry.extent??a;if(null==this.stops)return a;const b=this.stops.filter(f=>null!=f.geometry);if(2>b.length)return a;const {spatialReference:c}=b.at(0).geometry;if(null==c)return a;a=b.toArray().map(f=>{f=f.geometry;return[f.x,f.y]});return(new Fa({points:a,spatialReference:c})).extent}},{key:"title",get:function(){return null!=this.routeInfo&&null!=this.routeInfo.name?this.routeInfo.name:"Route"},set:function(a){this._overrideIfSome("title",a)}},{key:"url",
get:function(){return R.routeServiceUrl},set:function(a){null==a?this._set("url",R.routeServiceUrl):this._set("url",ya.sanitizeUrl(a,W))}}]);return m}(ua.BlendLayer(xa.ScaleRangeLayer(va.OperationalLayer(wa.PortalLayer(ja.MultiOriginJSONMixin(ha.HandleOwnerMixin(ta)))))));k.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],h.prototype,"_featureCollection",
void 0);k.__decorate([qa.writer(["web-map","portal-item"],"_featureCollection")],h.prototype,"writeFeatureCollectionWebmap",null);k.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],h.prototype,"_type",void 0);k.__decorate([u.property({nonNullable:!0,type:U})],h.prototype,"defaultSymbols",void 0);k.__decorate([u.property({readOnly:!0})],h.prototype,"directionLines",void 0);k.__decorate([z.reader(["web-map",
"portal-item"],"directionLines",["layers","featureCollection.layers"])],h.prototype,"readDirectionLines",null);k.__decorate([u.property({readOnly:!0})],h.prototype,"directionPoints",void 0);k.__decorate([z.reader(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],h.prototype,"readDirectionPoints",null);k.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],h.prototype,"featureCollectionType",void 0);k.__decorate([u.property({readOnly:!0})],
h.prototype,"fullExtent",null);k.__decorate([u.property({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],h.prototype,"legendEnabled",void 0);k.__decorate([u.property({type:["show","hide"]})],h.prototype,"listMode",void 0);k.__decorate([u.property({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"maxScale",void 0);k.__decorate([z.reader(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],h.prototype,"readMaxScale",null);k.__decorate([u.property({type:Number,
nonNullable:!0,json:{write:!1}})],h.prototype,"minScale",void 0);k.__decorate([z.reader(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],h.prototype,"readMinScale",null);k.__decorate([u.property({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],h.prototype,"operationalLayerType",void 0);k.__decorate([u.property({nonNullable:!0,type:x.ofType(D)})],h.prototype,"pointBarriers",void 0);k.__decorate([z.reader(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],
h.prototype,"readPointBarriers",null);k.__decorate([u.property({nonNullable:!0,type:x.ofType(E)})],h.prototype,"polygonBarriers",void 0);k.__decorate([z.reader(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolygonBarriers",null);k.__decorate([u.property({nonNullable:!0,type:x.ofType(F)})],h.prototype,"polylineBarriers",void 0);k.__decorate([z.reader(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],h.prototype,
"readPolylineBarriers",null);k.__decorate([u.property({readOnly:!0})],h.prototype,"routeInfo",void 0);k.__decorate([z.reader(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],h.prototype,"readRouteInfo",null);k.__decorate([u.property({type:B})],h.prototype,"spatialReference",void 0);k.__decorate([z.reader(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],h.prototype,"readSpatialReference",null);k.__decorate([u.property({nonNullable:!0,
type:x.ofType(G)})],h.prototype,"stops",void 0);k.__decorate([z.reader(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],h.prototype,"readStops",null);k.__decorate([u.property()],h.prototype,"title",null);k.__decorate([u.property({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0);k.__decorate([u.property()],h.prototype,"url",null);return h=k.__decorate([pa.subclass("esri.layers.RouteLayer")],h)});