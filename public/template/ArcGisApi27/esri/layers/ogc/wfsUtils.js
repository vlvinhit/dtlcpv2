// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../geometry ../../request ../../core/Error ../../core/iteratorUtils ../../core/promiseUtils ../../core/urlUtils ../../geometry/projection ../../geometry/support/spatialReferenceUtils ../../geometry/support/typeUtils ../graphics/sources/geojson/geojson ./dateUtils ./xmlUtils ../support/Field ../../geometry/SpatialReference ../../geometry/Extent".split(" "),function(l,Z,r,k,w,K,t,A,u,L,M,N,m,q,B,O){function C(a){a=x(a);P(a);y(a);a=a.firstElementChild;const b=w.cache(Q(a));return{operations:R(a),
get featureTypes(){return Array.from(b())},readFeatureTypes:b}}function R(a){let b=!1;const c={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};m.visitXML(a,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case "GetCapabilities":return{DCP:{HTTP:{Get:d=>{c.GetCapabilities.url=d.getAttribute("xlink:href")}}}};case "DescribeFeatureType":return{DCP:{HTTP:{Get:d=>{c.DescribeFeatureType.url=d.getAttribute("xlink:href")}}}};
case "GetFeature":return{DCP:{HTTP:{Get:d=>{c.GetFeature.url=d.getAttribute("xlink:href")}}},Parameter:d=>{if("outputFormat"===d.getAttribute("name"))return{AllowedValues:{Value:f=>{(f=f.textContent)&&S.has(f.toLowerCase())&&(c.GetFeature.outputFormat=f)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case "KVPEncoding":return{DefaultValue:d=>{b="true"===d.textContent.toLowerCase()}};case "ImplementsResultPaging":return{DefaultValue:d=>{c.GetFeature.supportsPagination="true"===d.textContent.toLowerCase()}}}}}});
if(!b)throw new k("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(null==c.GetFeature.outputFormat)throw new k("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return c}function Q(a){return m.iterateXML(a,{FeatureTypeList:{FeatureType:b=>{const c={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},e=new Set([4326]),d=
f=>{f=parseInt(f.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(f)||e.add(f)};m.visitXML(b,{Name:f=>{const {name:g,prefix:h}=v(f.textContent);c.typeName=`${h}:${g}`;c.name=g;c.namespacePrefix=h;c.namespaceUri=f.lookupNamespaceURI(h)},Abstract:f=>{c.description=f.textContent},Title:f=>{c.title=f.textContent},WGS84BoundingBox:f=>{c.extent=T(f)},DefaultSRS:d,DefaultCRS:d,OtherSRS:d,OtherCRS:d});c.title||(c.title=c.name);c.supportedSpatialReferences.push(...e);return c}}})}function T(a){let b,
c,e,d;for(const f of a.children)switch(f.localName){case "LowerCorner":[b,c]=f.textContent.split(" ").map(g=>Number.parseFloat(g));break;case "UpperCorner":[e,d]=f.textContent.split(" ").map(g=>Number.parseFloat(g))}return{xmin:b,ymin:c,xmax:e,ymax:d,spatialReference:u.WGS84}}function D(a,b,c){return w.find(a,e=>c?e.name===b&&e.namespaceUri===c:e.typeName===b||e.name===b)}async function E(a,b,c,e={}){const {spatialReference:d=B.WGS84}=e;a=a.readFeatureTypes();c=b?D(a,b,c):a.next().value;if(null==
c){if(b)throw new k("wfs-layer:feature-type-not-found",`The type '${b}' could not be found in the service`);throw new k("wfs-layer:empty-service","The service is empty");}b=new O({...c.extent,spatialReference:d});if(!u.equals(d,u.WGS84))try{await A.initializeProjection(u.WGS84,d,void 0,e),b=A.project(b,u.WGS84)}catch{throw new k("wfs-layer:unsupported-spatial-reference","Projection not supported");}return{extent:b,spatialReference:d,featureType:c}}async function U(a,b,c={}){const [e,d]=await K.eachAlways([F(a.operations.DescribeFeatureType.url,
b,c),V(a,b,c)]);if(e.error||d.error)throw new k("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${b}'`,{error:e.error||d.error});const {fields:f,errors:g}=e.value??{};a=e.value?.geometryType||d.value?.geometryType;c=d.value?.swapXY??!1;if(null==a)throw new k("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${b}`,{typeName:b,geometryType:a,fields:f,errors:g});return{...G(f??[]),geometryType:a,swapXY:c}}function G(a){const b=
a.find(e=>"geometry"===e.type);let c=a.find(e=>"oid"===e.type);a=a.filter(e=>"geometry"!==e.type);c||(c=new q({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),a.unshift(c));return{geometryField:b?.name??null,objectIdField:c.name,fields:a}}async function V(a,b,c={}){let e,d=!1;const [f,g]=await Promise.all([H(a.operations.GetFeature.url,b,a.operations.GetFeature.outputFormat,{...c,count:1}),r(a.operations.GetFeature.url,{responseType:"text",query:I(b,void 0,{...c,count:1}),signal:c?.signal})]);
if(a="FeatureCollection"===f.type&&f.features[0]?.geometry){e=L.featureGeometryTypeKebabDictionary.fromJSON(M.getGeometryType(a.type));switch(a.type){case "Point":var h=a.coordinates;break;case "LineString":case "MultiPoint":h=a.coordinates[0];break;case "MultiLineString":case "Polygon":h=a.coordinates[0][0];break;case "MultiPolygon":h=a.coordinates[0][0][0]}if(b=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(g.data))a=h[0].toFixed(3),h=h[1].toFixed(3),c=parseFloat(b[1]).toFixed(3),b=
parseFloat(b[2]).toFixed(3),a===b&&h===c&&(d=!0)}return{geometryType:e,swapXY:d}}async function F(a,b,c){a=await r(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:b,...c?.customParameters},signal:c?.signal});return J(b,a.data)}function J(a,b){const {name:c}=v(a);b=x(b);y(b);const e=w.find(m.iterateXML(b.firstElementChild,{element:d=>({name:d.getAttribute("name"),typeName:v(d.getAttribute("type")).name})}),({name:d})=>d===c);if(null!=e){const d=w.find(m.iterateXML(b.firstElementChild,
{complexType:f=>f}),f=>f.getAttribute("name")===e.typeName);if(null!=d)return W(d)}throw new k("wfs-layer:feature-type-not-found",`Type '${a}' not found in document`,{document:(new XMLSerializer).serializeToString(b)});}function W(a){const b=[],c=[];let e=void 0;var d=m.iterateXML(a,{complexContent:{extension:{sequence:{element:f=>f}}}});for(const f of d){d=f.getAttribute("name");if(!d)continue;let g,h;f.hasAttribute("type")?g=v(f.getAttribute("type")).name:m.visitXML(f,{simpleType:{restriction:z=>
{g=v(z.getAttribute("base")).name;return{maxLength:X=>{h=+X.getAttribute("value")}}}}});if(!g)continue;const p="true"===f.getAttribute("nillable");let n=!1;switch(g.toLowerCase()){case "integer":case "nonpositiveinteger":case "negativeinteger":case "long":case "int":case "short":case "byte":case "nonnegativeinteger":case "unsignedlong":case "unsignedint":case "unsignedshort":case "unsignedbyte":case "positiveinteger":c.push(new q({name:d,alias:d,type:"integer",nullable:p}));break;case "float":case "double":case "decimal":c.push(new q({name:d,
alias:d,type:"double",nullable:p}));break;case "boolean":case "string":case "gyearmonth":case "gyear":case "gmonthday":case "gday":case "gmonth":case "anyuri":case "qname":case "notation":case "normalizedstring":case "token":case "language":case "idrefs":case "entities":case "nmtoken":case "nmtokens":case "name":case "ncname":case "id":case "idref":case "entity":case "duration":case "time":c.push(new q({name:d,alias:d,type:"string",nullable:p,length:h??255}));break;case "datetime":case "date":c.push(new q({name:d,
alias:d,type:"date",nullable:p,length:h??36}));break;case "pointpropertytype":e="point";n=!0;break;case "multipointpropertytype":e="multipoint";n=!0;break;case "curvepropertytype":case "multicurvepropertytype":case "multilinestringpropertytype":e="polyline";n=!0;break;case "surfacepropertytype":case "multisurfacepropertytype":case "multipolygonpropertytype":e="polygon";n=!0;break;case "geometrypropertytype":case "multigeometrypropertytype":n=!0;b.push(new k("wfs-layer:unknown-geometry-type",`geometry type '${g}' is not supported`,
{type:(new XMLSerializer).serializeToString(a)}));break;default:b.push(new k("wfs-layer:unknown-field-type",`Unknown field type '${g}'`,{type:(new XMLSerializer).serializeToString(a)}))}n&&c.push(new q({name:d,alias:d,type:"geometry",nullable:p}))}for(const f of c)if("integer"===f.type&&!f.nullable&&Y.has(f.name.toLowerCase())){f.type="oid";break}return{geometryType:e,fields:c,errors:b}}async function H(a,b,c,e){({data:a}=await r(a,{responseType:"text",query:I(b,c,e),signal:e?.signal}));a=a.replaceAll(/": +(-?\d+),(\d+)(,)?/g,
'": $1.$2$3');try{if(e?.dateFields?.length){const d=new Set(e.dateFields);return JSON.parse(a,(f,g)=>d.has(f)?N.parseDate(g):g)}return JSON.parse(a)}catch(d){throw new k("wfs-layer:malformed-json","Error while parsing the\u00a0response",{response:a,error:d});}}function I(a,b,c){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:a,OUTPUTFORMAT:b,SRSNAME:"EPSG:4326",STARTINDEX:c?.startIndex,COUNT:c?.count,...c?.customParameters}}function x(a){return(new DOMParser).parseFromString(a.trim(),
"text/xml")}function v(a){const [b,c]=a.split(":");return{prefix:c?b:"",name:c??b}}function P(a){if((a=a.firstElementChild?.getAttribute("version"))&&"2.0.0"!==a)throw new k("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${a}. Supported version: ${"2.0.0"}`);}function y(a){let b="",c="";m.visitXML(a.firstElementChild,{Exception:e=>{b=e.getAttribute("exceptionCode");return{ExceptionText:d=>{c=d.textContent}}}});if(b)throw new k(`wfs-layer:${b}`,c);}const S=new Set(["json","application/json",
"geojson","application/json; subtype\x3dgeojson"]),Y=new Set(["objectid","fid"]);l.WFS_OID_FIELD_NAME="__esri_wfs_id__";l.describeFeatureType=F;l.findFeatureType=D;l.getCapabilities=async function(a,b){b=await r(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...b?.customParameters},signal:b?.signal});b=C(b.data);t.isHTTPSProtocol(a)&&(t.hasSameOrigin(a,b.operations.DescribeFeatureType.url,!0)&&(b.operations.DescribeFeatureType.url=t.toHTTPS(b.operations.DescribeFeatureType.url)),
t.hasSameOrigin(a,b.operations.GetFeature.url,!0)&&(b.operations.GetFeature.url=t.toHTTPS(b.operations.GetFeature.url)));return b};l.getFeature=H;l.getFeatureCount=async function(a,b,c){a=await r(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:b,RESULTTYPE:"hits",...c?.customParameters},signal:c?.signal});a=x(a.data);y(a);a=Number.parseFloat(a.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(a)?0:a};l.getFeatureTypeInfo=E;l.getWFSLayerInfo=
async function(a,b,c,e={}){const {featureType:d,extent:f}=await E(a,b,c,e),{fields:g,geometryType:h,swapXY:p,objectIdField:n,geometryField:z}=await U(a,d.typeName,e);return{url:a.operations.GetCapabilities.url,name:d.name,namespaceUri:d.namespaceUri,fields:g,geometryField:z,geometryType:h,objectIdField:n,spatialReference:e.spatialReference??B.WGS84,extent:f,swapXY:p,wfsCapabilities:a,customParameters:e.customParameters}};l.parseDescribeFeatureTypeResponse=J;l.parseGetCapabilitiesResponse=C;l.prepareWFSLayerFields=
G;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});