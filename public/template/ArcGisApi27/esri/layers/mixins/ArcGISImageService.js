// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/deprecate ../../core/Error ../../core/lang ../../core/Logger ../../core/reactiveUtils ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageBitmapUtils ../support/imageryRendererUtils ../support/MosaicRule ../support/MultidimensionalSubset ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterDatasets/multidimensionalUtils ../support/rasterFormats/RasterCodec ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../core/has ../support/source/DataLayerSource ../../rest/query/executeQueryJSON ../../config ../../kernel ../../core/unitUtils ../../geometry/support/spatialReferenceUtils ../graphics/featureConversionUtils ../../geometry/Extent ../../geometry/Geometry ../../geometry/Multipoint ../../geometry/Point ../../geometry/Polygon ../../geometry/Polyline ../../geometry/support/normalizeUtils ../../core/pbf ../../rest/support/FeatureSet ../../rest/support/Query ../../rest/query/support/AttachmentInfo ../../rest/support/AttachmentQuery ../../rest/query/executeForCount ../../rest/query/executeForIds ../../rest/support/RelationshipQuery ../../rest/support/TopFeaturesQuery ../../rest/imageService/fetchRasterInfo ../../rest/imageService/getCatalogItemRasterInfo ../../rest/support/ImageAngleParameters ../../rest/support/ImageAreaParameters ../../rest/support/ImageDistanceParameters ../../rest/support/ImageHeightParameters ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImagePixelLocationParameters ../../rest/support/ImagePointParameters ../../rest/support/ImageSampleParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(X,Y,h,Pa,ia,P,B,Z,v,aa,K,ja,ka,n,y,z,la,I,ba,ma,na,G,oa,ca,pa,H,qa,Q,D,E,ra,sa,J,R,ta,L,ua,C,Qa,Ra,va,Sa,Ta,Ua,Va,Wa,S,Xa,Ya,Za,wa,$a,ab,bb,xa,T,cb,db,ya,za,eb,fb,da,Aa,Ba,Ca,Da,Ea,U,ea,Fa,Ga,Ha,Ia,V){function Ja(g){return g?(g=JSON.stringify(g).match(/"rasterFunction":"(.*?")/gi)?.map(w=>w.replace('"rasterFunction":"',"").replace('"',"")))?g.join("/"):null:null}const Ka=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),La=n.ensureRange(y.ensureNumber,{min:0,max:255});
X.ArcGISImageService=g=>{function w(F){return F?.path??""}g=function(F){function M(){var a=F.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._cachedRendererJson=null;a._serviceSupportsMosaicRule=null;a._rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.defaultMosaicRule=null;a.definitionExpression=
null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalInfo=null;a.multidimensionalSubset=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.geometryType="polygon";a.typeIdField=null;a.types=[];a.pixelFilter=null;a.raster=void 0;a.sourceType=null;a.viewId=void 0;a.symbolizer=null;a.rasterFunctionInfos=null;a.serviceDataType=
null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=void 0;return a}Y._inherits(M,F);var f=M.prototype;f.initialize=function(){this._set("exportImageServiceParameters",new na.ExportImageServiceParameters({layer:this}))};f.readServiceSupportsMosaicRule=function(a,b){return this._isMosaicRuleSupported(b)};f.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>"number"===typeof c))return a};f.readCapabilities=function(a,b){return this._readCapabilities(b)};
f.writeCompressionQuality=function(a,b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};f.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};f.readDefaultMosaicRule=function(a,b){return this._serviceSupportsMosaicRule?H.fromJSON(b):null};f.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};f.readMinScale=function(a,b){return null!=
b.minLOD&&null!=b.maxLOD?a:0};f.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};f.readMosaicRule=function(a,b){return(a=a||b.mosaicRule)?H.fromJSON(a):this._isMosaicRuleSupported(b)?H.fromJSON(b):null};f.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),a.where=d):d&&(a=new H({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};f.writeNoData=function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=La(a))};
f.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};f.readSourceType=function(a,b){return this._isMosaicDataset(b)?"mosaic-dataset":"raster-dataset"};f.readRenderer=function(a,b,c){a=b?.layerDefinition?.drawingInfo?.renderer;c=P.read(a,c);if(null==c)return null;"vector-field"===c.type&&b.symbolTileSize&&!a.symbolTileSize&&(c.symbolTileSize=b.symbolTileSize);pa.isSupportedRendererType(c)||K.getLogger(this).warn("ArcGISImageService",
"Imagery layer doesn't support given renderer type.");return c};f.writeRenderer=function(a,b,c){b.layerDefinition=b.layerDefinition||{};b.layerDefinition.drawingInfo=b.layerDefinition.drawingInfo||{};b.layerDefinition.drawingInfo.renderer=a.toJSON();"vector-field"===a.type&&(b.symbolTileSize=a.symbolTileSize)};f.readRasterFunction=function(a,b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?this._isRFTJson(b.renderingRule)?E.fromJSON({rasterFunctionDefinition:b.renderingRule}):
E.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};f.readSpatialReference=function(a,b){return(a=a||b.extent.spatialReference)?V.fromJSON(a):null};f.readPixelType=function(a){return D.pixelTypeKebabDict.fromJSON(a)||a};f.writePixelType=function(a,b,c){if(null==this.serviceRasterInfo||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=D.pixelTypeKebabDict.toJSON(a)};f.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?
10:9.3);return a};f.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));return b};f.applyRenderer=async function(a,b){var c=a;const {renderer:d,symbolizer:k,pixelFilter:e,bandIds:p}=this;if(!this._isPicture()&&d&&k&&!e){c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(d.toJSON());const l=this._rasterJobHandler.instance;l?(c&&(k.bind(),await l.updateSymbolizer(k,b),this._cachedRendererJson=d.toJSON()),b=await l.symbolize({bandIds:p,...a},b),
c={extent:a.extent,pixelBlock:b}):c={extent:a.extent,pixelBlock:k.symbolize({bandIds:p,...a})}}return c};f.destroy=function(){this._shutdownJobHandler()};f.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};f.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};f.computeAngles=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsComputeAngles)throw new v("imagery-layer:compute-angles",
"this operation is not supported on the input image service");a=y.ensureClass(Ba,a).clone();return C.computeAngles(this.url,a,this._getRequestOptions(b))};f.computePixelSpaceLocations=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsComputePixelLocation)throw new v("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");a=y.ensureClass(Fa,a).clone();return C.computePixelSpaceLocations(this.url,a,this._getRequestOptions(b))};
f.computeHistograms=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsComputeHistograms)throw new v("imagery-layer:compute-histograms","this operation is not supported on the input image service");a=y.ensureClass(U,a).clone();this._applyMosaicAndRenderingRules(a);return C.computeHistograms(this.url,a,this._getRequestOptions(b))};f.computeStatisticsHistograms=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsComputeStatisticsHistograms)throw new v("imagery-layer:compute-statistics-histograms",
"this operation is not supported on the input image service");a=y.ensureClass(U,a).clone();this._applyMosaicAndRenderingRules(a);return C.computeStatisticsHistograms(this.url,a,this._getRequestOptions(b))};f.measureHeight=async function(a,b){const c=await this._fetchCapabilities(b?.signal);if(!("base-and-top"===a.operationType?c.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===a.operationType?c.mensuration.supportsHeightFromBaseAndTopShadow:c.mensuration.supportsHeightFromTopAndTopShadow))throw new v("imagery-layer:measure-height",
"this operation is not supported on the input image service");a=y.ensureClass(Ea,a).clone();this._applyMosaicAndRenderingRules(a);return C.measureHeight(this.url,a,this._getRequestOptions(b))};f.measureAreaAndPerimeter=async function(a,b){const c=await this._fetchCapabilities(b?.signal);if(!c.mensuration.supportsAreaAndPerimeter||a.is3D&&!c.mensuration.supports3D)throw new v("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");a=y.ensureClass(Ca,
a).clone();this._applyMosaicAndRenderingRules(a);return C.measureAreaAndPerimeter(this.url,a,this._getRequestOptions(b))};f.measureDistanceAndAngle=async function(a,b){const c=await this._fetchCapabilities(b?.signal);if(!c.mensuration.supportsDistanceAndAngle||a.is3D&&!c.mensuration.supports3D)throw new v("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");a=y.ensureClass(Da,a).clone();this._applyMosaicAndRenderingRules(a);return C.measureDistanceAndAngle(this.url,
a,this._getRequestOptions(b))};f.measurePointOrCentroid=async function(a,b){const c=await this._fetchCapabilities(b?.signal);if(!c.mensuration.supportsPointOrCentroid||a.is3D&&!c.mensuration.supports3D)throw new v("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");a=y.ensureClass(Ga,a).clone();this._applyMosaicAndRenderingRules(a);return C.measurePointOrCentroid(this.url,a,this._getRequestOptions(b))};f.getField=function(a){const {fieldsIndex:b}=
this;return null!=b?b.get(a):void 0};f.getFieldDomain=function(a,b){return(a=this.getField(a))?a.domain:null};f.fetchImage=async function(a,b,c,d={}){if(null==a||null==b||null==c)throw new v("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){var k=await this._generateRasterInfo(this.rasterFunction,{signal:d.signal});k&&(this.rasterInfo=k)}k=this.getExportImageServiceParameters(a,b,
c,d.timeExtent);if(null==k){if(d.requestAsImageElement&&this._canRequestImageElement(this.format))return a=document.createElement("canvas"),a.width=b,a.height=c,d.returnImageBitmap?{imageBitmap:await ca.createBitmap(a,`${w(this.parsedUrl)}/exportImage`,d.signal)}:{imageOrCanvasElement:a};const {bandIds:p,rasterInfo:l}=this;d=(p?.length||l.bandCount)??0;k=b*c;var e=l.pixelType;const r=[];for(let m=0;m<d;m++)r.push(Q.createEmptyBand(e,k));return{pixelData:{pixelBlock:new Q({width:b,height:c,pixels:r,
mask:new Uint8Array(k),pixelType:e}),extent:a}}}e=!!d.requestAsImageElement&&!this.pixelFilter;return this._requestArrayBuffer({imageServiceParameters:k,imageProps:{extent:a,width:b,height:c,format:this.format},requestAsImageElement:e,returnImageBitmap:e&&!!d.returnImageBitmap,signal:d.signal})};f.fetchKeyProperties=function(a){return B(w(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version?a?.rasterFunction:null})}).then(b=>b.data)};f.fetchRasterAttributeTable=
function(a){return 10.1>this.version?Promise.reject(new v("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):B(w(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version?a?.rasterFunction:null})}).then(b=>xa.fromJSON(b.data))};f.getCatalogItemRasterInfo=function(a,b){const c=this._getQueryParams();b={...b,query:c};return Aa.getCatalogItemRasterInfo(w(this.parsedUrl),a,b)};f.getCatalogItemICSInfo=async function(a,b){var {data:c}=await B(w(this.parsedUrl)+
"/"+a+"/info/ics",{query:this._getQueryParams(),...b});if(c=c&&c.ics){var d=null;try{d=(await B(w(this.parsedUrl)+"/"+a+"/info",{query:this._getQueryParams(),...b})).data.extent}catch{}if(!d||!d.spatialReference)return{ics:c,icsToPixelTransform:null,icsExtent:null,northDirection:null};var k=10.7<=this.version?B(w(this.parsedUrl)+"/"+a+"/info/icstopixel",{query:this._getQueryParams(),...b}).then(q=>q.data).catch(()=>({})):{},e=d.spatialReference,p={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",
geometries:[d]}),inSR:e.wkid||JSON.stringify(e),outSR:"0:"+a};p=B(w(this.parsedUrl)+"/project",{query:this._getQueryParams(p),...b}).then(q=>q.data).catch(()=>({}));var l=(d.xmin+d.xmax)/2,r=(d.ymax-d.ymin)/6;d=d.ymin+r;var m=[];for(let q=0;5>q;q++)m.push({x:l,y:d+r*q});a={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:e.wkid||JSON.stringify(e),outSR:"0:"+a};b=B(w(this.parsedUrl)+"/project",{query:this._getQueryParams(a),...b}).then(q=>q.data).catch(()=>({}));a=await Promise.all([k,
p,b]);b=a[0].ipxf;null==b&&(k=c.geodataXform?.xf_0,"topup"===k?.name?.toLowerCase()&&6===k?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:k.coefficients,cellsizeRatio:0,type:"GeometricXform"}}));if(k=S.fromJSON(a[1]&&a[1].geometries&&a[1].geometries[0]))k.spatialReference=new V({wkid:0,imageCoordinateSystem:c});a=a[2].geometries?a[2].geometries.filter(q=>null!=q&&null!=q.x&&null!=q.y&&"NaN"!==q.x&&"NaN"!==q.y):[];p=a.length;if(3>p)return{ics:c,
icsToPixelTransform:b,icsExtent:k,northDirection:null};d=r=l=e=0;for(m=0;m<p;m++)e+=a[m].x,l+=a[m].y,r+=a[m].x*a[m].x,d+=a[m].x*a[m].y;p=(p*d-e*l)/(p*r-e*e);e=0;l=a[4].x>a[0].x;a=a[4].y>a[0].y;Infinity===p?e=a?90:270:0===p?e=l?0:180:0<p?e=l?180*Math.atan(p)/Math.PI:180*Math.atan(p)/Math.PI+180:0>p&&(e=a?180+180*Math.atan(p)/Math.PI:360+180*Math.atan(p)/Math.PI);return{ics:c,icsToPixelTransform:b,icsExtent:k,northDirection:e}}};f.generateRasterInfo=async function(a,b){a=y.ensureClass(E,a);if(this.serviceRasterInfo&&
(!a||"none"===a.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(a)))return this.serviceRasterInfo;const c=Ja(a);if(!c)throw new v("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[c])return this._functionRasterInfos[c];const d=this._getQueryParams();b={...b,query:d};a=da.generateRasterInfo(w(this.parsedUrl),a,b);this._functionRasterInfos[c]=a;try{return await a}catch(k){throw this._functionRasterInfos[c]=null,k;}};f.getExportImageServiceParameters=
function(a,b,c,d){a=a.clone().shiftCentralMeridian();const k=C.getImageSpatialReferenceQueryParameter(a.spatialReference,w(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const e=this.exportImageServiceParameters.toJSON(),{bandIds:p,noData:l}=e;var {renderingRule:r}=e,m=this.rasterFunction?.rasterFunctionDefinition,q=!this.renderer||"raster-stretch"===this.renderer.type;p?.length&&this._hasRasterFunction(this.rasterFunction)&&
!m&&q?(m={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:p}},"Stretch"===r.rasterFunction?(m.rasterFunctionArguments.Raster=r.rasterFunctionArguments.Raster,r.rasterFunctionArguments.Raster=m):"Colormap"===r.rasterFunction?(q=r.rasterFunctionArguments.Raster,"Stretch"===q?.rasterFunction?(m.rasterFunctionArguments.Raster=q.rasterFunctionArguments.Raster,q.rasterFunctionArguments.Raster=m):(m.rasterFunctionArguments.Raster=q,r.rasterFunctionArguments.Raster=m)):(m.rasterFunctionArguments.Raster=
r,r=m),e.bandIds=void 0):e.bandIds=p?.join(",");l instanceof Array&&0<l.length&&(e.noData=l.join(","));d=this._processMultidimensionalIntersection(null,d,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;e.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null;d=d.timeExtent;e.renderingRule=this._getRenderingRuleString(E.fromJSON(r));r={};if(null!=d){const {start:t,end:A}=d.toJSON();if(t&&A&&t===A)r.time=""+t;else if(null!=t||null!=A)r.time=`${null==t?"null":t},${null==
A?"null":A}`}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:k,imageSR:k,size:b+","+c,...e,...r}};f.getSamples=async function(a,b){if(!(await this._fetchCapabilities(b?.signal))?.operations.supportsGetSamples)throw new v("imagery-layer:get-samples","getSamples operation is not supported on the input image service");a=y.ensureClass(Ha,a).clone();const {raster:c}=this;c&&null==a.raster&&(a.raster=c);return C.getSamples(this.url,a,this._getRequestOptions(b))};f.identify=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsIdentify)throw new v("imagery-layer:identify",
"identify operation is not supported on the input image service");a=y.ensureClass(ea,a).clone();const c=this._processMultidimensionalIntersection(a.geometry,a.timeExtent,a.mosaicRule||this.mosaicRule);if(c.isOutSide)throw new v("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");a.timeExtent=c.timeExtent;a.mosaicRule=c.mosaicRule;const {raster:d,rasterFunction:k}=this;k&&null==a.rasterFunction&&(a.rasterFunction=k);d&&null==a.raster&&(a.raster=
d);return C.identify(this.url,a,this._getRequestOptions(b))};f.createQuery=function(){const a=new T;a.outFields=["*"];a.returnGeometry=!0;a.where=this.definitionExpression||"1\x3d1";return a};f.queryRasters=async function(a,b){({query:a,requestOptions:b}=await this._prepareForQuery(a,b));return va.executeQueryJSON(this.url,a,b)};f.queryObjectIds=async function(a,b){({query:a,requestOptions:b}=await this._prepareForQuery(a,b));return za.executeForIds(this.url,a,b)};f.queryRasterCount=async function(a,
b){({query:a,requestOptions:b}=await this._prepareForQuery(a,b));return ya.executeForCount(this.url,a,b)};f.queryVisibleRasters=async function(a,b){if(!a)throw new v("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const {pixelSize:c,returnDomainValues:d,returnTopmostRaster:k,showNoDataRecords:e}=b||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let p=!1;var l=null,r=null;const m=this._rasterFunctionNamesIndex;if(null!=a.outFields&&
(p=a.outFields.some(u=>!u.toLowerCase().includes("raster.servicepixelvalue")),10.4<=this.version)){r=a.outFields.filter(x=>x.toLowerCase().includes("raster.servicepixelvalue")&&24<x.length).map(x=>{x=x.slice(25);return[this._updateRenderingRulesFunctionName(x,m),x]});l=r.map(x=>new E({functionName:x[0]}));r=r.map(x=>x[1]);const {rasterFunction:u}=this;0===l.length?u?.functionName?(l.push(u),r.push(u.functionName)):l=null:u?.functionName&&!l.some(x=>x.functionName===u.functionName)&&(l.push(u),r.push(u.functionName))}const q=
null==a.outSpatialReference||a.outSpatialReference.equals(this.spatialReference);var {multidimensionalSubset:t}=this;let A=a.timeExtent||this.timeExtent;if(t){const {isOutside:u,intersection:x}=J.intersectMultimensionalSubset(t,{geometry:a.geometry,timeExtent:a.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(u)throw new v("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");
x&&null!=x.timeExtent&&(A=x.timeExtent)}t=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,A);l=this._getQueryParams({geometry:a.geometry,timeExtent:A,mosaicRule:t,rasterFunction:10.4>this.version?this.rasterFunction:null,rasterFunctions:l,pixelSize:c,returnCatalogItems:p,returnGeometry:q,raster:this.raster,maxItemCount:k?1:null});delete l.f;l=new ea(l);try{await this._generateRasterInfo(this.rasterFunction);const u=await C.identify(this.url,l,{signal:b?.signal,query:{...this.customParameters}}),
x=a.outFields,Ma=null!=u.value&&u.value.toLowerCase().includes("nodata");if(!p||q||!u?.catalogItems?.features.length||!e&&Ma)return this._processVisibleRastersResponse(u,{returnDomainValues:d,templateRRFunctionNames:r,showNoDataRecords:e,templateFields:x});const N=this.objectIdField||"ObjectId",fa=u.catalogItems?.features??[],Na=fa.map(O=>O.attributes?.[N]),Oa=new T({objectIds:Na,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[N]}),ha=await this.queryRasters(Oa);ha?.features?.length&&
ha.features.forEach(O=>{fa.forEach(W=>{W.attributes[N]===O.attributes[N]&&(W.geometry=new wa(O.geometry),null!=a.outSpatialReference&&(W.geometry.spatialReference=a.outSpatialReference))})});return this._processVisibleRastersResponse(u,{returnDomainValues:d,templateRRFunctionNames:r,showNoDataRecords:e,templateFields:x})}catch{throw new v("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");}};f.fetchVariableStatisticsHistograms=async function(a,b){var c=B(w(this.parsedUrl)+
"/statistics",{query:this._getQueryParams({variable:a}),signal:b}).then(d=>d.data?.statistics);a=B(w(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:a}),signal:b}).then(d=>d.data?.histograms);c=await Promise.all([c,a]);c[0]&&c[0].forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:c[0]||null,histograms:c[1]||null}};f.createFlowMesh=async function(a,b){const c=this._rasterJobHandler.instance;return c?c.createFlowMesh(a,b):Ia.createFlowMesh(a.meshType,a.simulationSettings,
a.flowData,null!=b.signal?b.signal:(new AbortController).signal)};f.getMultidimensionalSubsetVariables=function(a){return J.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,a??this.serviceRasterInfo.multidimensionalInfo)};f._fetchService=async function(a){await this._fetchServiceInfo(a);this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);var b=this.sourceJSON;b=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):da.fetchServiceRasterInfo(w(this.parsedUrl),b,{signal:a,
query:this._getQueryParams()}).then(d=>{this._set("serviceRasterInfo",d);this._set("multidimensionalInfo",d.multidimensionalInfo);return d});a=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:a}):null;const c=this._getRasterFunctionInfos();return Promise.all([b,a,c]).then(d=>{d[1]?this._set("rasterInfo",d[1]):this._set("rasterInfo",d[0]);d[2]&&this._set("rasterFunctionInfos",d[2]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",
null),K.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));this._set("renderer",this._configRenderer(this.renderer));this.addHandles([ja.watch(()=>this.rasterFunction,k=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(k).then(e=>{e&&(this.rasterInfo=e)})})]);({serviceRasterInfo:d}=this);null!=d.multidimensionalInfo&&this._updateMultidimensionalDefinition(d)})};f._combineMosaicRuleWithTimeExtent=
function(a,b){var c=this.timeInfo,{multidimensionalInfo:d}=this.serviceRasterInfo;if(null==a||null==d||null==b||null==c?.startField)return a;const {startField:k}=c,e=d.variables.some(m=>m.dimensions.some(q=>q.name===k))?k:"StdTime";a=a.clone();if("mosaic-dataset"===this.sourceType)return a.multidimensionalDefinition=a.multidimensionalDefinition?.filter(m=>m.dimensionName!==e),this._cleanupMultidimensionalDefinition(a);a.multidimensionalDefinition=a.multidimensionalDefinition||[];c=a.multidimensionalDefinition.filter(m=>
m.dimensionName===e);d=null!=b.start?b.start.getTime():null;b=null!=b.end?b.end.getTime():null;const p=null==d||null==b||d===b,l=p?[d||b]:[[d,b]],r=10.8<=this.version;c.length?c.forEach(m=>{m.dimensionName===e&&(r?(m.dimensionName=null,m.isSlice=!1,m.values=[]):(m.isSlice=p,m.values=l))}):r||(b=a.multidimensionalDefinition.filter(m=>null!=m.variableName&&null==m.dimensionName),b.length?b.forEach(m=>{m.dimensionName=e;m.isSlice=p;m.values=l}):a.multidimensionalDefinition.push(new ma({variableName:"",
dimensionName:e,isSlice:p,values:l})));return this._cleanupMultidimensionalDefinition(a)};f._cleanupMultidimensionalDefinition=function(a){if(null==a)return null;a.multidimensionalDefinition&&(a.multidimensionalDefinition=a.multidimensionalDefinition.filter(b=>!(!b.variableName&&!b.dimensionName)),0===a.multidimensionalDefinition.length&&(a.multidimensionalDefinition=null));return"mosaic-dataset"!==this.sourceType&&null==a.multidimensionalDefinition?null:a};f._prepareForQuery=async function(a,b){if(!(await this._fetchCapabilities(b?.signal)).operations.supportsQuery)throw new v("imagery-layer:query-rasters",
"query operation is not supported on the input image service");a=null!=a?y.ensureClass(T,a):this.createQuery();b=this._getRequestOptions(b);this.raster&&(b.query={...b.query,raster:this.raster});return{query:a,requestOptions:b}};f._initJobHandler=async function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const a=new sa;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=a},()=>{});await this._rasterJobHandler.connectionPromise};
f._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=null};f._isSupportedRenderer=function(a){const {rasterInfo:b,rasterFunction:c}=this;return"unique-value"===a.type&&this._hasRasterFunction(c)&&1===b?.bandCount&&["u8","s8"].includes(b.pixelType)||null!=b&&null!=a&&L.getSupportedRendererTypes(b).includes(a.type)};
f._fetchCapabilities=async function(a){if(this.capabilities)return this.capabilities;await this._fetchServiceInfo(a);return this.capabilities};f._fetchServiceInfo=async function(a){let b=this.sourceJSON;if(!b){const {data:c,ssl:d}=await B(w(this.parsedUrl),{query:this._getQueryParams(),signal:a});this.sourceJSON=b=c;d&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<b.capabilities?.toLowerCase().split(",").map(c=>c.trim()).indexOf("tilesonly"))throw new v("imagery-layer:fetch-service-info",
"use ImageryTileLayer to open tiles-only image services");this.read(b,{origin:"service",url:this.parsedUrl})};f._isMosaicDataset=function(a){return a.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===a.serviceSourceType:0<a.fields?.length};f._isMosaicRuleSupported=function(a){if(!a)return!1;const b=this._isMosaicDataset(a);a=10.71<=a.currentVersion&&a.hasMultidimensions&&!(1<a.fields?.length);return b||a};f._isVectorFieldResampleFunction=function(a){if(null==a)return!1;const {functionName:b,
functionArguments:c}=a;a="resample"===b?.toLowerCase();const d=c?.ResampleType||c?.resampleType;return a&&(7===d||10===d)};f._isPicture=function(){return!this.format||this.format.includes("jpg")||this.format.includes("png")};f._configRenderer=function(a){var b=this._isPicture();const {rasterInfo:c}=this;if(!b&&!this.pixelFilter||this._isVectorDataSet())!this.bandIds&&3<=c.bandCount&&(!(b=L.getDefaultBandCombination(c))||3===c.bandCount&&0===b[0]&&1===b[1]&&2===b[2]||(this.bandIds=b)),a||(a=L.createDefaultRenderer(c,
{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName})),b=L.normalizeRendererJSON(a.toJSON()),this.symbolizer?(this.symbolizer.rendererJSON=b,this.symbolizer.rasterInfo=c):this.symbolizer=new ua({rendererJSON:b,rasterInfo:c}),this.symbolizer.bind().success||(this.symbolizer=null);return a};f._clonePixelData=function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:null!=a.pixelBlock?a.pixelBlock.clone():null}};f._getQueryParams=
function(a){a&&null!=a.renderingRule&&"string"!==typeof a.renderingRule&&(a.renderingRule=this._getRenderingRuleString(a.renderingRule));const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a,...this.customParameters}};f._getRequestOptions=function(a){return{...a,query:{...a?.query,...this.customParameters}}};f._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):R.decode(a,b,c)};f._getRasterFunctionInfos=
async function(a){const b=this.sourceJSON.rasterFunctionInfos;return this.loaded?b:b&&10.3<=this.version?1===b.length&&"none"===b[0].name.toLowerCase()?b:(await B(w(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:a})).data?.rasterFunctionInfos:null};f._canRequestImageElement=function(a){return!this.pixelFilter&&(!a||a.includes("png"))};f._requestArrayBuffer=async function(a){const {imageProps:b,requestAsImageElement:c,returnImageBitmap:d,signal:k}=a;if(c&&this._canRequestImageElement(b.format)){var e=
`${w(this.parsedUrl)}/exportImage`;({data:a}=await B(e,{responseType:d?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...a.imageServiceParameters}),signal:k}));return a instanceof Blob?{imageBitmap:await ca.createBitmap(a,e,k),params:b}:{imageOrCanvasElement:a,params:b}}e=this._initJobHandler();a=B(w(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:k});a=(await Promise.all([a,e]))[0].data;
var p=e=b.format||"jpgpng";"bsq"!==p&&"bip"!==p&&(p=R.getFormat(a));if(!p)throw new v("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(a)));p="gif"===e||"bmp"===e||e.includes("png")&&("png"===p||"jpg"===p);const l={signal:k};return{pixelData:{pixelBlock:await (p?R.decode(a,{useCanvas:!0,...b},l):this._decodePixelBlock(a,{width:b.width,height:b.height,planes:null,pixelType:null,noDataValue:null,format:e},l)),extent:b.extent},params:b}};f._generateRasterInfo=
function(a,b){return this.generateRasterInfo(a,b).catch(()=>null)};f._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())};f._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)&&(a=J.getDefaultMultidimensionalDefinition(a,{multidimensionalSubset:this.multidimensionalSubset}),null!=a&&0<a.length)){this.mosaicRule=this.mosaicRule||new H;const b=this.mosaicRule.multidimensionalDefinition;
!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&a.forEach(c=>c.variableName="");a=a.filter(({variableName:c,dimensionName:d})=>c&&"*"!==c||d);!b?.length&&a.length&&(this.mosaicRule.multidimensionalDefinition=a)}};f._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,showNoDataRecords:k,returnDomainValues:e,templateFields:p}=b;b=a.processedValues;var l=a.catalogItems&&a.catalogItems.features;
let r=a.properties&&a.properties.Values&&a.properties.Values.map(u=>u.replaceAll(/ /gi,", "))||[];var m=this.objectIdField||"ObjectId",q="string"===typeof c&&c.toLowerCase().includes("nodata");a=[];!c||l||q||(l={},l[m]=0,l=new ia(this.fullExtent,null,l),r=[c],l=[l]);if(!l)return[];this._updateResponseFieldNames(l,p);q&&!k&&(l=[]);for(m=0;m<l.length;m++){q=l[m];if(null!=c){var t=r[m];var A=this.rasterFunction&&b&&0<b.length&&d&&0<d.length&&d.includes(this.rasterFunction.functionName)?b[d.indexOf(this.rasterFunction.functionName)]:
c;if("nodata"===t.toLowerCase()&&!k)continue;q.attributes["Raster.ItemPixelValue"]=t;q.attributes["Raster.ServicePixelValue"]=A;this._updateFeatureWithMagDirValues(q,t);const u=this.fields&&0<this.fields.length;A=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?u?t:c:A;this.rasterFunction||(A=u?t:c);this._updateFeatureWithRasterAttributeTableValues(q,A)}q.sourceLayer=q.layer=this;e&&this._updateFeatureWithDomainValues(q);if(d&&b&&d.length===b.length)for(t=0;t<d.length;t++)q.attributes["Raster.ServicePixelValue."+
d[t]]=b[t];a.push(l[m])}return a};f._processMultidimensionalIntersection=function(a,b,c){const {multidimensionalSubset:d}=this;if(!d)return c=this._combineMosaicRuleWithTimeExtent(c,b),{isOutSide:!1,timeExtent:b,mosaicRule:c};if(d){const {isOutside:k,intersection:e}=J.intersectMultimensionalSubset(d,{geometry:a,timeExtent:b});if(k)return{isOutSide:!0,timeExtent:null,mosaicRule:null};e&&null!=e.timeExtent&&(b=e.timeExtent)}c=this._combineMosaicRuleWithTimeExtent(c,b);return null!=c&&c.multidimensionalDefinition&&
({isOutside:a}=J.intersectMultimensionalSubset(d,{multidimensionalDefinition:c.multidimensionalDefinition}),a)?{isOutSide:!0,timeExtent:null,mosaicRule:null}:{isOutSide:!1,timeExtent:b,mosaicRule:c}};f._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null!=c){var {features:d,fields:k}=c,e=(c=k.map(l=>l.name).filter(l=>"value"===l.toLowerCase()))&&c[0];if(e){var p=d.filter(l=>l.attributes[e]===(null!=b?parseInt(b,
10):null));p&&p[0]&&k.forEach(l=>{a.attributes[this._rasterAttributeTableFieldPrefix+l.name]=p[0].attributes[l.name]})}}};f._updateFeatureWithMagDirValues=function(a,b){if(this._isVectorDataSet()){var c=b.split(/,\s*/).map(d=>parseFloat(d));b=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));b=new Q({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:b,extent:new S(0,0,0,0,this.spatialReference)});b="esriImageServiceDataTypeVector-MagDir"===
this.serviceDataType?[b.pixels[0][0],b.pixels[1][0]]:ta.uvComponentToVector([b.pixels[0][0],b.pixels[1][0]]);a.attributes["Raster.Magnitude"]=b[0];a.attributes["Raster.Direction"]=b[1]}};f._updateFeatureWithDomainValues=function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const k=c.domain.codedValues.find(e=>e.code===d);k&&(a.attributes[c.name]=k.name)}})};f._updateResponseFieldNames=function(a,
b){if(b&&!(1>b.length)){var c=this.fieldsIndex;null!=c&&a.forEach(d=>{if(d&&d.attributes)for(const k of b){const e=c.get(k)?.name;e&&e!==k&&(d.attributes[k]=d.attributes[e],delete d.attributes[e])}})}};f._getRenderingRuleString=function(a){if(a){a=a.toJSON();a=a.rasterFunctionDefinition??a;if(a.thumbnail||a.thumbnailEx)a.thumbnail=a.thumbnailEx=null;return JSON.stringify(a)}return null};f._hasRasterFunction=function(a){return null!=a&&null!=a.functionName&&"none"!==a.functionName.toLowerCase()};f._updateRenderingRulesFunctionName=
function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw","None");var c=a.toLowerCase().replaceAll(/ /gi,"_");return b.has(c)?b.get(c):a}};f._isRFTJson=function(a){return a&&a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};f._isVectorDataSet=function(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType};f._applyMosaicAndRenderingRules=function(a){const {raster:b,mosaicRule:c,rasterFunction:d}=
this;d&&a instanceof U&&null==a.rasterFunction&&(a.rasterFunction=d);c&&null==a.mosaicRule&&(a.mosaicRule=c);b&&null==a.raster&&(a.raster=b)};f._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(t=>t.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:k}=a,e=b.includes("image"),p="esriImageServiceDataTypeElevation"===a.serviceDataType;var l=!!(a.spatialReference||a.extent&&a.extent.spatialReference);const r=b.includes("edit");
l=b.includes("mensuration")&&l;const m=null==a.mensurationCapabilities?[]:a.mensurationCapabilities.toLowerCase().split(",").map(t=>t.trim()),q=l&&m.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:e,supportsExportImage:e,supportsIdentify:e,supportsMeasure:l,supportsDownload:b.includes("download"),supportsQuery:b.includes("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&e,supportsProject:10.3<=c&&e,supportsComputeStatisticsHistograms:10.4<=
c&&e,supportsQueryBoundary:10.6<=c&&e,supportsCalculateVolume:10.7<=c&&p,supportsComputePixelLocation:10.7<=c&&b.includes("catalog"),supportsComputeAngles:10.91<=c,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsUpdate:r,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},
query:{maxRecordCount:k,maxRecordCountFactor:void 0,supportsStatistics:!!d?.supportsStatistics,supportsOrderBy:!!d?.supportsOrderBy,supportsDistinct:!!d?.supportsDistinct,supportsPagination:!!d?.supportsPagination,supportsStandardizedQueriesOnly:!!d?.useStandardizedQueries,supportsPercentileStatistics:!!d?.supportsPercentileStatistics,supportsCentroid:!!d?.supportsReturningGeometryCentroid,supportsDistance:!!d?.supportsQueryWithDistance,supportsExtent:!!d?.supportsReturningQueryExtent,supportsGeometryProperties:!!d?.supportsReturningGeometryProperties,
supportsHavingClause:!!d?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!d?.supportsDefaultSR,
supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:q,supportsAreaAndPerimeter:q,supportsPointOrCentroid:q,supportsHeightFromBaseAndTop:l&&m.includes("base-top height"),supportsHeightFromBaseAndTopShadow:l&&m.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:l&&m.includes("top-top shadow height"),supports3D:l&&m.includes("3d")}}};Y._createClass(M,[{key:"_rasterFunctionNamesIndex",get:function(){const a=
new Map;if(!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&1>this.rasterFunctionInfos.length)return a;null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replaceAll(/ /gi,"_"),b.name)});return a}},{key:"fieldsIndex",get:function(){return this.fields?new oa(this.fields):null}},{key:"format",set:function(a){a&&Ka.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=H.fromJSON({...a.toJSON(),
mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"parsedUrl",get:function(){return ka.urlToObject(this.url)}},{key:"renderer",set:function(a){this.loaded&&(a=this._configRenderer(a));this._set("renderer",a)}},{key:"rasterFields",get:function(){const a=this._rasterAttributeTableFieldPrefix||"Raster.";var b=new G({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new G({name:"Raster.ServicePixelValue",
alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new G({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let k=this.fields?aa.clone(this.fields):[];k.push(c);this.capabilities?.operations.supportsQuery&&this.fields&&0<this.fields.length&&k.push(b);10.4<=this.version&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&k.push(d);null!=this.rasterFunctionInfos&&
this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{k.push(new G({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))});this._isVectorDataSet()&&(k.push(new G({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),k.push(new G({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));({attributeTable:b}=this.rasterInfo??{});null!=b&&(b=b.fields.filter(e=>"esriFieldTypeOID"!==
e.type&&"value"!==e.name.toLowerCase()).map(e=>{const p=aa.clone(e);p.name=a+e.name;return p}),k=k.concat(b));return k}},{key:"renderingRule",get:function(){Z.deprecatedProperty(K.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0});return this._get("rasterFunction")},set:function(a){Z.deprecatedProperty(K.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0});this._set("rasterFunction",a)}},{key:"rasterFunction",set:function(a){a&&
a.rasterFunction&&(a=E.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("rasterFunction",a)}}]);return M}(g);h.__decorate([n.property()],g.prototype,"_functionRasterInfos",void 0);h.__decorate([n.property()],g.prototype,"_rasterJobHandler",void 0);h.__decorate([n.property()],g.prototype,"_cachedRendererJson",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"_serviceSupportsMosaicRule",void 0);h.__decorate([z.reader("_serviceSupportsMosaicRule",
["currentVersion","fields"])],g.prototype,"readServiceSupportsMosaicRule",null);h.__decorate([n.property()],g.prototype,"_rasterAttributeTableFieldPrefix",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"_rasterFunctionNamesIndex",null);h.__decorate([n.property()],g.prototype,"adjustAspectRatio",void 0);h.__decorate([n.property({type:[y.Integer],json:{write:!0}})],g.prototype,"bandIds",void 0);h.__decorate([z.reader("bandIds")],g.prototype,"readBandIds",null);h.__decorate([n.property({readOnly:!0,
json:{read:!1}})],g.prototype,"capabilities",void 0);h.__decorate([z.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g.prototype,"readCapabilities",null);h.__decorate([n.property({type:Number})],g.prototype,"compressionQuality",void 0);h.__decorate([I.writer("compressionQuality")],g.prototype,"writeCompressionQuality",null);h.__decorate([n.property({type:Number})],g.prototype,"compressionTolerance",void 0);h.__decorate([I.writer("compressionTolerance")],g.prototype,
"writeCompressionTolerance",null);h.__decorate([n.property({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0);h.__decorate([n.property({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],g.prototype,"defaultMosaicRule",void 0);h.__decorate([z.reader("defaultMosaicRule",["defaultMosaicMethod"])],g.prototype,"readDefaultMosaicRule",null);h.__decorate([n.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],g.prototype,
"definitionExpression",void 0);h.__decorate([n.property({readOnly:!0,constructOnly:!0})],g.prototype,"exportImageServiceParameters",void 0);h.__decorate([n.property()],g.prototype,"rasterInfo",void 0);h.__decorate([n.property({readOnly:!0,type:[G]})],g.prototype,"fields",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"fieldsIndex",null);h.__decorate([n.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],g.prototype,"format",null);h.__decorate([z.reader("service",
"format",["serviceDataType"])],g.prototype,"readFormat",null);h.__decorate([n.property({type:S})],g.prototype,"fullExtent",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"hasMultidimensions",void 0);h.__decorate([n.property({json:{read:{source:"maxImageHeight"}}})],g.prototype,"imageMaxHeight",void 0);h.__decorate([n.property({json:{read:{source:"maxImageWidth"}}})],g.prototype,"imageMaxWidth",void 0);h.__decorate([n.property({type:String,json:{type:D.interpolationKebab.jsonValues,read:D.interpolationKebab.read,
write:D.interpolationKebab.write}})],g.prototype,"interpolation",void 0);h.__decorate([n.property()],g.prototype,"minScale",void 0);h.__decorate([z.reader("service","minScale")],g.prototype,"readMinScale",null);h.__decorate([n.property()],g.prototype,"maxScale",void 0);h.__decorate([z.reader("service","maxScale")],g.prototype,"readMaxScale",null);h.__decorate([n.property({type:H})],g.prototype,"mosaicRule",null);h.__decorate([z.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],g.prototype,
"readMosaicRule",null);h.__decorate([I.writer("mosaicRule")],g.prototype,"writeMosaicRule",null);h.__decorate([n.property()],g.prototype,"multidimensionalInfo",void 0);h.__decorate([n.property({type:qa,json:{write:!0}})],g.prototype,"multidimensionalSubset",void 0);h.__decorate([n.property({json:{type:y.Integer}})],g.prototype,"noData",void 0);h.__decorate([I.writer("noData")],g.prototype,"writeNoData",null);h.__decorate([n.property({type:String,json:{type:D.noDataInterpretationKebab.jsonValues,read:D.noDataInterpretationKebab.read,
write:D.noDataInterpretationKebab.write}})],g.prototype,"noDataInterpretation",void 0);h.__decorate([n.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g.prototype,"objectIdField",void 0);h.__decorate([z.reader("objectIdField")],g.prototype,"readObjectIdField",null);h.__decorate([n.property({})],g.prototype,"geometryType",void 0);h.__decorate([n.property({})],g.prototype,"typeIdField",void 0);h.__decorate([n.property({})],g.prototype,"types",void 0);h.__decorate([n.property({readOnly:!0})],
g.prototype,"parsedUrl",null);h.__decorate([n.property({type:Function})],g.prototype,"pixelFilter",void 0);h.__decorate([n.property()],g.prototype,"raster",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"sourceType",void 0);h.__decorate([z.reader("sourceType",["serviceSourceType","fields"])],g.prototype,"readSourceType",null);h.__decorate([n.property()],g.prototype,"viewId",void 0);h.__decorate([n.property({types:P.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",
origins:{"web-scene":{types:P.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(F){return{enabled:F&&"vector-field"!==F.type&&"flow"!==F.type}}}}}}})],g.prototype,"renderer",null);h.__decorate([z.reader("renderer")],g.prototype,"readRenderer",null);h.__decorate([I.writer("renderer")],g.prototype,"writeRenderer",null);h.__decorate([n.property()],g.prototype,"symbolizer",void 0);h.__decorate([n.property(ba.opacity)],g.prototype,"opacity",void 0);h.__decorate([n.property({readOnly:!0})],
g.prototype,"rasterFields",null);h.__decorate([n.property({constructOnly:!0})],g.prototype,"rasterFunctionInfos",void 0);h.__decorate([n.property({type:E})],g.prototype,"renderingRule",null);h.__decorate([n.property({type:E,json:{name:"renderingRule"}})],g.prototype,"rasterFunction",null);h.__decorate([z.reader("rasterFunction",["renderingRule","rasterFunctionInfos"])],g.prototype,"readRasterFunction",null);h.__decorate([n.property()],g.prototype,"serviceDataType",void 0);h.__decorate([n.property({readOnly:!0,
type:V})],g.prototype,"spatialReference",void 0);h.__decorate([z.reader("spatialReference",["spatialReference","extent"])],g.prototype,"readSpatialReference",null);h.__decorate([n.property({json:{type:D.pixelTypeKebabDict.jsonValues}})],g.prototype,"pixelType",void 0);h.__decorate([z.reader("pixelType")],g.prototype,"readPixelType",null);h.__decorate([I.writer("pixelType")],g.prototype,"writePixelType",null);h.__decorate([n.property({constructOnly:!0,type:ra})],g.prototype,"serviceRasterInfo",void 0);
h.__decorate([n.property()],g.prototype,"sourceJSON",void 0);h.__decorate([n.property(ba.url)],g.prototype,"url",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"version",void 0);h.__decorate([z.reader("version",["currentVersion","fields","timeInfo"])],g.prototype,"readVersion",null);return g=h.__decorate([la.subclass("esri.layers.mixins.ArcGISImageService")],g)};Object.defineProperty(X,Symbol.toStringTag,{value:"Module"})});