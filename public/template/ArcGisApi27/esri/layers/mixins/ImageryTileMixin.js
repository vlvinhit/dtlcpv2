// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../rasterRenderers ../../request ../../core/Error ../../core/Logger ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/MultidimensionalSubset ../support/RasterFunction ../support/RasterJobHandler ../support/TileInfo ../support/rasterDatasets/FunctionRaster ../support/rasterDatasets/multidimensionalUtils ../support/rasterFunctions/clipUtils ../support/rasterFunctions/rasterFunctionHelper ../support/rasterFunctions/rasterProjectionHelper ../support/rasterFunctions/stretchUtils ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/support/ImageHistogramParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference ../../geometry/Point".split(" "),
function(C,D,k,ea,A,I,w,J,l,K,fa,ha,L,M,N,O,P,Q,R,E,S,F,T,v,G,U,B,V,W,t,X,Y,Z,aa,ba){const H=J.getLogger("esri.layers.mixins.ImageryTileMixin");C.ImageryTileMixin=g=>{function x(r){if(!r.raster||!r.rasterInfo)throw new w("imagery-tile","no raster");}g=function(r){function y(...a){var b=r.call(this,...a)||this;b._isConstructedFromFunctionRaster=!1;b._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};b.bandIds=null;b.copyright=null;b.interpolation="nearest";b.multidimensionalSubset=
null;b.raster=null;b.rasterInfo=null;b.sourceJSON=null;b.spatialReference=null;b.symbolizer=null;b._isConstructedFromFunctionRaster="Function"===a[0]?.raster?.datasetFormat;return b}D._inherits(y,r);var h=y.prototype;h.readRenderer=function(a,b,c){return A.read(b?.layerDefinition?.drawingInfo?.renderer,c)||void 0};h.convertVectorFieldData=async function(a,b){if(null==a||!this.rasterInfo)return null;const c=this._rasterJobHandler.instance,d=this.rasterInfo.dataType;return c?c.convertVectorFieldData({pixelBlock:a,
dataType:d},b):W.convertVectorFieldData(a,d)};h.computeStatisticsHistograms=async function(a,b){a=K.ensureClass(Y,a).clone();var {rasterInfo:c}=this;const {geometry:d}=a;if(null==d)throw new w("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");var e=d;const {spatialReference:m}=c;d.spatialReference.equals(m)||(await B.load(),e="extent"===d.type?B.projectExtent(d,m):B.projectPolygon(d,m));a=a.pixelSize??new ba({x:c.pixelSize.x,y:c.pixelSize.y,spatialReference:m});const {extent:u,
width:z,height:n}=G.snapToRaster(c,e,a);c=await this.fetchPixels(u,z,n,{...b,interpolation:"nearest"});if(null==c.pixelBlock)throw new w("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");e=await G.clip(c.pixelBlock,u,e);return(c=this._rasterJobHandler.instance)?c.computeStatisticsHistograms({pixelBlock:e},b):V.computeStatisticsHistograms(e)};h.createFlowMesh=async function(a,b){const c=this._rasterJobHandler.instance;return c?c.createFlowMesh(a,b):Z.createFlowMesh(a.meshType,
a.simulationSettings,a.flowData,null!=b.signal?b.signal:(new AbortController).signal)};h.normalizeRasterFetchOptions=function(a){var {multidimensionalInfo:b}=this.rasterInfo??{};if(null==b)return a;let c=a.multidimensionalDefinition||this.multidimensionalDefinition;null!=c&&c.length||(c=v.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));var d=a.timeExtent||this.timeExtent;if(null!=c&&null!=d&&(null!=d.start||null!=d.end)){c=c.map(f=>
f.clone());var e=b.variables.find(({name:f})=>f===c[0].variableName)?.dimensions?.find(({name:f})=>"StdTime"===f);b=c.find(({dimensionName:f})=>"StdTime"===f);if(!e||!b)return{...a,multidimensionalDefinition:null};const {start:m,end:u}=d;d=null==m?null:m.getTime();const z=null==u?null:u.getTime(),n=d??z,p=z??d;if(null!=e.values)e=e.values.filter(f=>{if(Array.isArray(f)){if(n===p)return f[0]<=n&&f[1]>=n;const q=f[0]>=n&&f[1]<=p||f[0]<n&&f[1]>p;return f[0]<=n&&f[1]>n||f[0]<p&&f[1]>=p||q}return n===
p?f===n:f>=n&&f<=p}),e.length?(e=e.sort((f,q)=>{const ca=Array.isArray(f)?f[0]:f;f=Array.isArray(f)?f[1]:f;const da=Array.isArray(q)?q[0]:q;q=Array.isArray(q)?q[1]:q;return n===p?ca-da:Math.abs(f-p)-Math.abs(q-p)})[0],b.values=[e]):c=null;else if(e.hasRegularIntervals&&e.extent){const [f,q]=e.extent;n>q||p<f?c=null:b.values=n===p?[n]:[Math.max(f,n),Math.min(q,p)]}}return null!=c&&v.hasExcludedVariableOrDimension(c,this.multidimensionalSubset)?{...a,multidimensionalDefinition:null}:{...a,multidimensionalDefinition:c}};
h.updateRasterFunction=async function(){if(this.loaded&&"imagery-tile"===this.type&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson))if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){var a=this.raster.rasterFunction.toJSON();!this.rasterFunction&&a&&this._set("rasterFunction",E.fromJSON(a));this._cachedRasterFunctionJson=this.rasterFunction?.toJSON()}else{var b=this.raster;a=
!1;if("Function"===b.datasetFormat){var c=b.primaryRasters.rasters;b=c[0];a=!0}else c=[b];var {rasterFunction:d}=this;if(d){const m={raster:b};1<c.length&&c.forEach(u=>m[u.url]=u);b=U.create(d.functionDefinition?.toJSON()??d.toJSON(),m);b=new T({rasterFunction:b});b.rasterJobHandler=this._rasterJobHandler.instance;await b.open();this._cachedRasterFunctionJson=this.rasterFunction?.toJSON();this.raster=b}else this.raster=b,this._cachedRasterFunctionJson=null,await b.when();this._cachedRendererJson=
null;if(a||d){({bandIds:a}=this);var {bandCount:e}=this.raster.rasterInfo;d=a?.length?a.some(m=>m>=e):3<=e;a&&(d||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null);this._configDefaultRenderer("auto")}}};h.updateRenderer=async function(){const {loaded:a,symbolizer:b}=this;if(a&&b&&this.renderer){var {rasterInfo:c}=this.raster,d=v.getDefaultVariablInfo(c,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,
e=t.normalizeRendererJSON({...this.renderer.toJSON(),variableName:d});if(JSON.stringify(this._cachedRendererJson)!==JSON.stringify(e)){var m=this._rasterJobHandler.instance;m&&(b.rasterInfo=t.getVariableRasterInfo(c,d),b.rendererJSON=e,b.bind(),await m.updateSymbolizer(b),this._cachedRendererJson=e)}}};h.applyRenderer=async function(a,b){var c=a&&a.pixelBlock;if(!(null!=c&&c.pixels&&0<c.pixels.length))return null;await this.updateRenderer();c=this._rasterJobHandler.instance;const d=this.bandIds??
[];return c?await c.symbolize({...a,simpleStretchParams:b,bandIds:d}):this.symbolizer.symbolize({...a,simpleStretchParams:b,bandIds:d})};h.getTileUrl=function(a,b,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${a}/${b}/${c}`:""};h.getCompatibleTileInfo=function(a,b,c=!1){if(!this.loaded||null==b)return null;if(c&&a.equals(this.spatialReference))return this.tileInfo;c=N.getInfo(a);return F.create({size:256,spatialReference:a,origin:c?{x:c.origin[0],y:c.origin[1]}:{x:b.xmin,
y:b.ymax}})};h.getCompatibleFullExtent=function(a){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(a)?this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(a):null};h.fetchTile=async function(a,b,c,d={}){x(this);if(d.requestAsImageElement)return a=this.getTileUrl(a,b,c),I(a,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:d.signal}).then(m=>m.data);const {rasterInfo:e}=
this;if(null!=e.multidimensionalInfo&&(d=this.normalizeRasterFetchOptions(d),null==d.multidimensionalDefinition))return{extent:this.raster.getTileExtentFromTileInfo(a,b,c,d.tileInfo||e.storageInfo.tileInfo),pixelBlock:null};await this._initJobHandler();await this.updateRasterFunction();"raster-shaded-relief"===this.renderer?.type&&(d={...d,buffer:{cols:1,rows:1}});return this.raster.fetchTile(a,b,c,d)};h.fetchPixels=async function(a,b,c,d={}){if(null!=this.rasterInfo.multidimensionalInfo&&(d=this.normalizeRasterFetchOptions(d),
null==d.multidimensionalDefinition))return{extent:a,pixelBlock:null};await this._initJobHandler();await this.updateRasterFunction();b=Math.round(b);c=Math.round(c);return this.raster.fetchPixels(a,b,c,d)};h.identify=async function(a,b={}){const {raster:c,rasterInfo:d}=this;if(!(null==d.multidimensionalInfo||d.hasMultidimensionalTranspose&&(v.isMultiSliceOrRangeDefinition(b.multidimensionalDefinition)||b.transposedVariableName||b.timeExtent))&&(b=this.normalizeRasterFetchOptions(b),null==b.multidimensionalDefinition))return{location:a,
value:null};const e=this.multidimensionalSubset?.areaOfInterest;if(e&&!e.contains(a))throw new w("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return c.identify(a,b)};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h.hasStandardTime=function(){const a=this.rasterInfo?.multidimensionalInfo;
if(null==a||"standard-time"!==this.rasterInfo?.dataType)return!1;const b=this.multidimensionalDefinition,c=b?.[0]?.variableName;return a.variables.some(d=>d.name===c&&(!b?.[0].dimensionName||d.dimensions.some(e=>"StdTime"===e.name)))};h.getStandardTimeValue=function(a){return(new Date(864E5*(a-25569))).toString()};h.getMultidimensionalSubsetVariables=function(a){return v.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,a??this.rasterInfo?.multidimensionalInfo)};h._configDefaultSettings=function(){this._configDefaultInterpolation();
this.multidimensionalDefinition||(this.multidimensionalDefinition=v.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON());this._configDefaultRenderer()};h._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const a=new S;this._rasterJobHandler.connectionPromise=
a.initialize().then(async()=>{x(this);this._rasterJobHandler.instance=a;this.raster.rasterJobHandler=a;"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler();this.rasterFunction&&await this.updateRasterFunction().catch(()=>{});this.renderer&&this.updateRenderer()}).catch(()=>{});return this._rasterJobHandler.connectionPromise};h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=
null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=null;this.raster&&(this.raster.rasterJobHandler=null)};h._configDefaultInterpolation=function(){if(null==this.interpolation){x(this);var {raster:a}=this;a=t.getDefaultInterpolation(a.rasterInfo,a.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",a)}};h._configDefaultRenderer=function(a="no"){x(this);var {rasterInfo:b}=this.raster;!this.bandIds&&1<b.bandCount&&(this.bandIds=t.getDefaultBandCombination(b));var c=
v.getDefaultVariablInfo(b,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===a){var d=t.createDefaultRenderer(b,{bandIds:this.bandIds,variableName:c}),e=b.statistics;e=e&&0<e.length?e[0]:null;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===d.type&&(1E24<(e?.max??0)||-1E24>(e?.min??0))&&(d.dynamicRangeAdjustment=!0,d.statistics=null,"none"===d.stretchType&&(d.stretchType="min-max"));this.renderer=
d}d=t.normalizeRendererJSON({...this.renderer.toJSON(),variableName:c});b=t.getVariableRasterInfo(b,c);this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=b):this.symbolizer=new X({rendererJSON:d,rasterInfo:b});b=this.symbolizer.bind();b.success?"auto"===a&&({colormap:b}=this.raster.rasterInfo,a=this.renderer,null!=b&&"raster-colormap"===a.type?(b=t.createDefaultRenderer(this.raster.rasterInfo),JSON.stringify(b)!==JSON.stringify(a)&&this._configDefaultRenderer("override")):
"raster-stretch"===a.type&&(b=this.bandIds?.length,c=a.statistics?.length,!a.dynamicRangeAdjustment&&c&&b&&c!==b&&this._configDefaultRenderer("override"))):(H.warn("imagery-tile-mixin",b.error||"The given renderer is not supported by the layer."),"auto"===a&&this._configDefaultRenderer("override"))};D._createClass(y,[{key:"fullExtent",get:function(){return this.rasterInfo?.extent}},{key:"multidimensionalDefinition",set:function(a){this._set("multidimensionalDefinition",a);this.updateRenderer()}},
{key:"rasterFunction",set:function(a){"none"===a?.functionName?.toLowerCase()&&(a=void 0);this._set("rasterFunction",a);this.updateRasterFunction()}},{key:"url",set:function(a){this._set("url",O.sanitizeUrl(a,H))}},{key:"renderer",set:function(a){null==a&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",a),this.updateRenderer())}}]);return y}(g);k.__decorate([l.property()],g.prototype,"_cachedRendererJson",void 0);k.__decorate([l.property()],g.prototype,"_cachedRasterFunctionJson",
void 0);k.__decorate([l.property()],g.prototype,"_compatibleFullExtent",void 0);k.__decorate([l.property()],g.prototype,"_isConstructedFromFunctionRaster",void 0);k.__decorate([l.property()],g.prototype,"_rasterJobHandler",void 0);k.__decorate([l.property()],g.prototype,"bandIds",void 0);k.__decorate([l.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],g.prototype,"copyright",void 0);k.__decorate([l.property({json:{read:!1}})],g.prototype,"fullExtent",null);k.__decorate([l.property()],
g.prototype,"interpolation",void 0);k.__decorate([l.property()],g.prototype,"ioConfig",void 0);k.__decorate([l.property({type:[Q],json:{write:!0}})],g.prototype,"multidimensionalDefinition",null);k.__decorate([l.property({type:R,json:{write:!0}})],g.prototype,"multidimensionalSubset",void 0);k.__decorate([l.property()],g.prototype,"raster",void 0);k.__decorate([l.property({type:E,json:{name:"renderingRule",write:!0}})],g.prototype,"rasterFunction",null);k.__decorate([l.property()],g.prototype,"rasterInfo",
void 0);k.__decorate([l.property()],g.prototype,"sourceJSON",void 0);k.__decorate([l.property({readOnly:!0,type:aa,json:{read:!1}})],g.prototype,"spatialReference",void 0);k.__decorate([l.property({type:F})],g.prototype,"tileInfo",void 0);k.__decorate([l.property(P.url)],g.prototype,"url",null);k.__decorate([l.property({types:A.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const r="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&
!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!r}}},origins:{"web-scene":{types:A.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(r){return{enabled:r&&"vector-field"!==r.type&&"flow"!==r.type}}}}}}})],g.prototype,"renderer",null);k.__decorate([L.reader("renderer")],g.prototype,"readRenderer",null);k.__decorate([l.property()],g.prototype,"symbolizer",void 0);return g=k.__decorate([M.subclass("esri.layers.ImageryTileMixin")],
g)};Object.defineProperty(C,Symbol.toStringTag,{value:"Module"})});