// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../arcade/featureset/support/errorsupport","../string","../../chunks/datetime"],function(h,n,e,p,q){function k(a){a=new Date(a.getTime());a.setHours(0,0,0,0);return a}function l(a,b){if(a instanceof Date)return b?k(a):a;if("string"===typeof a||a instanceof String)if(a=q.DateTime.fromSQL(a),a.isValid)return b?k(a.toJSDate()):a.toJSDate();throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);}let r=function(){function a(){this.op="+";this.millis=
this.minute=this.year=this.month=this.hour=this.second=this.day=0}a._fixDefaults=function(b){if(null!==b.precision||null!==b.secondary)throw Error("Primary and Secondary SqlInterval qualifiers not supported");};a._parseSecondsComponent=function(b,c){c.includes(".")?(c=c.split("."),b.second=parseFloat(c[0]),b.millis=parseInt(c[1],10)):b.second=parseFloat(c)};a.createFromMilliseconds=function(b){const c=new a;c.second=b/1E3;return c};a.createFromValueAndQualifer=function(b,c,g){let f=null;const d=new a;
d.op="-"===g?"-":"+";if("interval-period"===c.type){a._fixDefaults(c);g=RegExp("^[0-9]{1,}$");if("year"===c.period||"month"===c.period)throw Error("Year-Month Intervals not supported");if("second"===c.period)if(/^[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$/.test(b))a._parseSecondsComponent(d,b);else throw Error("Illegal Interval");else if(g.test(b))d[c.period]=parseFloat(b);else throw Error("Illegal Interval");}else{a._fixDefaults(c.start);a._fixDefaults(c.end);if("year"===c.start.period||"month"===c.start.period)throw Error("Year-Month Intervals not supported");
if("year"===c.end.period||"month"===c.end.period)throw Error("Year-Month Intervals not supported");switch(c.start.period){case "day":switch(c.end.period){case "hour":f=RegExp("^[0-9]{1,} [0-9]{1,}$");if(f.test(b))d[c.start.period]=parseFloat(b.split(" ")[0]),d[c.end.period]=parseFloat(b.split(" ")[1]);else throw Error("Illegal Interval");break;case "minute":f=RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$");if(f.test(b))d[c.start.period]=parseFloat(b.split(" ")[0]),b=b.split(" ")[1].split(":"),d.hour=parseFloat(b[0]),
d.minute=parseFloat(b[1]);else throw Error("Illegal Interval");break;case "second":f=RegExp("^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$");if(f.test(b))d[c.start.period]=parseFloat(b.split(" ")[0]),b=b.split(" ")[1].split(":"),d.hour=parseFloat(b[0]),d.minute=parseFloat(b[1]),a._parseSecondsComponent(d,b[2]);else throw Error("Illegal Interval");break;default:throw Error("Invalid Interval.");}break;case "hour":switch(c.end.period){case "minute":f=RegExp("^[0-9]{1,}:[0-9]{1,}$");
if(f.test(b))d.hour=parseFloat(b.split(":")[0]),d.minute=parseFloat(b.split(":")[1]);else throw Error("Illegal Interval");break;case "second":f=RegExp("^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$");if(f.test(b))b=b.split(":"),d.hour=parseFloat(b[0]),d.minute=parseFloat(b[1]),a._parseSecondsComponent(d,b[2]);else throw Error("Illegal Interval");break;default:throw Error("Invalid Interval.");}break;case "minute":switch(c.end.period){case "second":f=RegExp("^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$");
if(f.test(b))b=b.split(":"),d.minute=parseFloat(b[0]),a._parseSecondsComponent(d,b[1]);else throw Error("Illegal Interval");break;default:throw Error("Invalid Interval.");}break;default:throw Error("Invalid Interval.");}}return d};a.prototype.valueInMilliseconds=function(){return("-"===this.op?-1:1)*(this.millis+1E3*this.second+6E4*this.minute+36E5*this.hour+864E5*this.day+365/12*this.month*864E5+31536E6*this.year)};return n._createClass(a)}();const m={extract:{minParams:2,maxParams:2,evaluate:([a,
b])=>{if(null==b)return null;if(b instanceof Date)switch(a.toUpperCase()){case "SECOND":return b.getSeconds();case "MINUTE":return b.getMinutes();case "HOUR":return b.getHours();case "DAY":return b.getDate();case "MONTH":return b.getMonth()+1;case "YEAR":return b.getFullYear()}throw Error("Invalid Parameter for call to EXTRACT");}},substring:{minParams:2,maxParams:3,evaluate:a=>{if(2===a.length){const [b,c]=a;return null==b||null==c?null:b.toString().substring(c-1)}if(3===a.length){const [b,c,g]=
a;return null==b||null==c||null==g?null:0>=g?"":b.toString().substring(c-1,c+g-1)}}},position:{minParams:2,maxParams:2,evaluate:([a,b])=>null==a||null==b?null:b.indexOf(a)+1},trim:{minParams:2,maxParams:3,evaluate:a=>{var b=3===a.length,c=b?a[1]:" ";b=b?a[2]:a[1];if(null==c||null==b)return null;c=`(${p.escapeRegExpString(c)})`;switch(a[0]){case "BOTH":return b.replaceAll(new RegExp(`^${c}*|${c}*$`,"g"),"");case "LEADING":return b.replaceAll(new RegExp(`^${c}*`,"g"),"");case "TRAILING":return b.replaceAll(new RegExp(`${c}*$`,
"g"),"")}throw Error("Invalid Parameter for call to TRIM");}},abs:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.abs(a[0])},ceiling:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.ceil(a[0])},floor:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.floor(a[0])},log:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])},log10:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])*Math.LOG10E},sin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?
null:Math.sin(a[0])},cos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cos(a[0])},tan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tan(a[0])},asin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.asin(a[0])},acos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.acos(a[0])},atan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.atan(a[0])},sign:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:0<a[0]?1:0>a[1]?-1:0},power:{minParams:2,maxParams:2,
evaluate:a=>null==a[0]||null==a[1]?null:a[0]**a[1]},mod:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]%a[1]},round:{minParams:1,maxParams:2,evaluate:a=>{const b=a[0];a=2===a.length?10**a[1]:1;return null==b?null:Math.round(b*a)/a}},truncate:{minParams:1,maxParams:2,evaluate:a=>null==a[0]?null:1===a.length?parseInt(a[0].toFixed(0),10):parseFloat(a[0].toFixed(a[1]))},char_length:{minParams:1,maxParams:1,evaluate:a=>"string"===typeof a[0]||a[0]instanceof String?a[0].length:0},
concat:{minParams:1,maxParams:Infinity,evaluate:a=>{let b="";for(let c=0;c<a.length;c++){if(null==a[c])return null;b+=a[c].toString()}return b}},lower:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toLowerCase()},upper:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toUpperCase()},coalesce:{minParams:1,maxParams:Infinity,evaluate:a=>{for(const b of a)if(null!==b)return b;return null}},cosh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cosh(a[0])},
sinh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sinh(a[0])},tanh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tanh(a[0])},nullif:{minParams:2,maxParams:2,evaluate:a=>{const b=a[0];a=a[1];return(b instanceof Date?b.valueOf():b)===(a instanceof Date?a.valueOf():a)?null:b}},cast:{minParams:2,maxParams:2,evaluate:a=>{var b=a[0];a=a[1];if(null===b)return null;switch(a.type){case "integer":b=parseInt(b,10);if(isNaN(b))throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);return b;
case "smallint":b=parseInt(b,10);if(isNaN(b))throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);if(32767<b||-32767>b)throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);return b;case "float":case "real":b=parseFloat(b);if(isNaN(b))throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);return b;case "date":return l(b,!0);case "timestamp":return l(b,!1);case "varchar":b=b.toString();if(b.length>a.size)throw new e.SqlError(e.SqlErrorCodes.CannotCastValue);return b;default:throw new e.SqlError(e.SqlErrorCodes.InvalidDataType);
}}}};h.SqlInterval=r;h.evaluateFunction=function(a,b){const c=m[a.toLowerCase()];if(null==c)throw Error("Function Not Recognised");if(b.length<c.minParams||b.length>c.maxParams)throw Error(`Invalid Parameter count for call to ${a.toUpperCase()}`);return c.evaluate(b)};h.isStandardized=function(a,b){a=m[a.toLowerCase()];return null!=a&&b>=a.minParams&&b<=a.maxParams};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});