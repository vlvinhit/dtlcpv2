// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ./Graphic ./arcade/ArcadeDate ./arcade/ImmutableArray ./core/Error ./core/lang ./layers/FeatureLayer ./portal/Portal ./rest/support/FeatureSet ./support/arcadeOnDemand".split(" "),function(t,H,u,I,v,J,K,L,M,N){function O(b,a,c,e={}){a=a.elementType;const d="array"===a.type?[{name:"value",type:a.type,elementType:a.elementType}]:"dictionary"===a.type?[{name:"value",type:a.type,properties:a.properties}]:[{name:"value",type:a.type}];return new I(b.map(g=>{const h={};w(h,d,{value:g},c,
e);return h.value}))}function P(b,a,c={}){b=b instanceof M?new K({source:b.features,geometryType:b.geometryType,fields:b.fields,spatialReference:b.spatialReference}):b;return a.constructFeatureSet(b,c.spatialReference,null,!0,c.lruCache,c.interceptor)}function Q(b,a,c={}){const {spatialReference:e,interceptor:d,lruCache:g}=c;return"string"===typeof b?a.createFeatureSetCollectionFromService(b,e,g,d):a.createFeatureSetCollectionFromMap(b,e,g,d)}function R(b,a,c,e={}){const d={};w(d,a.properties,b,c,
e);return new p.Dictionary(d)}function w(b,a,c,e,d={}){const g={};for(const h of Object.keys(c))g[h.toLowerCase()]=c[h];for(const h of a)if(a=h.name.toLowerCase(),d.variablesPreProcessed)b[a]=g[a];else switch(h.type){case "array":c=g[a];b[a]=null==c?null:O(c,h,e,d);break;case "feature":c=g[a];b[a]=null==c?null:p.Feature.createFromGraphic(c,d?.timeReference);break;case "featureSet":c=g[a];b[a]=null==c?null:e?P(c,e,d):null;break;case "featureSetCollection":c=g[a];b[a]=null==c?null:e?Q(c,e,d):null;break;
case "dictionary":c=g[a];b[a]=null==c?null:R(c,h,e,d);break;case "date":c=g[a];b[a]=c?c instanceof u.ArcadeDate?c:d?.timeReference?.timeZone?u.ArcadeDate.dateJSAndZoneToArcadeDate(c,d?.timeReference?.timeZone):u.ArcadeDate.dateJSToArcadeDate(c):null;break;case "geometry":case "boolean":case "text":case "number":b[a]=g[a]}}function z(b,a){for(const c of b)a.push(c),"dictionary"===c.type&&z(c.properties,a);return a}function A(b,a,c,e,d){const {spatialReference:g,interceptor:h,lruCache:x,console:m,abortSignal:l,
timeReference:k,services:y={portal:L.getDefault()}}=c;d={vars:{},spatialReference:g,interceptor:h,timeReference:k,lrucache:x,useAsync:d,services:y,console:m,abortSignal:l};if(!a)return d;w(d.vars,b.variables,a,e,c);return d}function r(b,a){switch(a.getArcadeType(b)){case "date":return b.toJSDate();case "feature":var c="geometry"in b?b.geometry():null;b="readAttributes"in b?b.readAttributes():b.attributes;return new H({geometry:c,attributes:b});case "dictionary":c=b.attributes;const e={};for(const d of Object.keys(c))e[d]=
r(b.field(d),a);return e;case "array":return("toArray"in b?b.toArray():b).map(d=>r(d,a))}return b}let p=null;const B={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"}]},C={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},D=new Map([["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",
type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",
{variables:[{name:"$feature",type:"feature"}]}],["popup",B],["popup-element",B],["feature-reduction-popup",C],["feature-reduction-popup-element",C],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);t.createArcadeExecutor=async function(b,a,c={}){p||(p=await N.loadArcade());const {arcade:e,arcadeUtils:d}=p,{loadScriptDependencies:g,referencesMember:h,scriptIsAsync:x}=e;var m=z(a.variables,[]),l=m.filter(f=>
"featureSet"===f.type||"featureSetCollection"===f.type).map(f=>f.name.toLowerCase());const k=e.parseScript(b,l);if(!k)throw new v("arcade:invalid-script","Unable to create SyntaxTree");b=d.extractFieldNames(k);const y=e.scriptTouchesGeometry(k);m=m.map(f=>f.name.toLowerCase()).filter(f=>h(k,f));const n=x(k,l);await g(k,n,l);l={vars:{},spatialReference:null,useAsync:n};for(const f of m)l.vars[f]="any";const {lruCache:E}=c,F=e.compileScript(k,l),G=e.featureSetUtils(),{services:S}=c;return{execute:(f,
q={})=>{if(n)throw new v("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");f=F(A(a,f,{lruCache:E,...q},G,n));return q.rawOutput?f:r(f,d)},executeAsync:async(f,q={})=>{f=await F(A(a,f,{lruCache:E,services:S,...q},G,n));return q.rawOutput?f:r(f,d)},isAsync:n,variablesUsed:m,fieldsUsed:b,geometryUsed:y,syntaxTree:k}};t.createArcadeProfile=function(b){var a=D.get(b);if(!a)throw a=Array.from(D.keys()).map(c=>`'${c}'`).join(", "),new v("createArcadeProfile:invalid-profile-name",
`Invalid profile name '${b}'. You must specify one of the following values: ${a}`);return J.clone(a)};Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});