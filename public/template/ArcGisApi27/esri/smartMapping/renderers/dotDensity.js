// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Error ../../geometry/support/scaleUtils ../../renderers/support/AuthoringInfo ../heuristics/outline ./support/dotDensityUtils ./support/utils ../statistics/spatialStatistics ../statistics/summaryStatisticsForAttributes ../statistics/support/attributeDensity ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/dotDensity".split(" "),
function(r,M,N,w,O,P,Q,R,S,T,k,t,x,y,n,p,z,A,B,C,u,l,v){async function D(a){var b=a.view;if(!(a&&a.layer&&b&&a.attributes&&a.attributes.length))throw new k("dot-density-renderer:missing-parameters","'layer', 'view' and 'attributes' parameters are required");if(8<a.attributes.length)throw new k("dot-density-renderer:invalid-parameters","Dot density renderer does not support more than 8 attributes");a.forBinning&&C.verifyBinningParams(a,"dot-density-renderer");const c={...a,view:b,layer:a.layer,attributes:a.attributes};
var d=[l.LayerType.FeatureLayer,l.LayerType.OGCFeatureLayer,l.LayerType.GeoJSONLayer,l.LayerType.WFSLayer];d=a.forBinning?l.binningCapableLayerTypes:d;a=l.createLayerAdapter(c.layer,d,a.forBinning);if(!a)throw new k("dot-density-renderer:invalid-parameters","'layer' must be one of these types: "+l.getLayerTypeLabels(d).join(", "));c.layer=a;c.dotBlendingEnabled??(c.dotBlendingEnabled=!0);c.dotValueOptimizationEnabled??(c.dotValueOptimizationEnabled=!0);d=null!=c.signal?{signal:c.signal}:null;await Promise.all([b.when(),
a.load(d)]);if("polygon"!==a.geometryType)throw new k("dot-density-renderer:not-supported","Dot density renderer is supported for polygon layers only");b=[];d=c.attributes;for(var f of d)d=await u.getFieldsList({field:f.field,valueExpression:f.valueExpression}),b.push(...d);if(f=p.verifyBasicFieldValidity(a,b.filter(Boolean),"dot-density-renderer:invalid-parameters"))throw f;return c}async function E(a){let b=a.dotDensityScheme,c=null;var d=null;d=await p.getBasemapInfo(a.basemap,a.view);c=null!=
d.basemapId?d.basemapId:null;d=null!=d.basemapTheme?d.basemapTheme:null;if(b)return{scheme:v.cloneScheme(b),basemapId:c,basemapTheme:d};if(a=v.getSchemes({basemap:c,numColors:a.attributes.length,basemapTheme:d}))b=a.primaryScheme,c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}async function F(a){const {view:b,layer:c,attributes:d,signal:f}=a;a=await c.getSampleFeatures({view:b,sampleSize:500,returnGeometry:!0,signal:f});const [e,h]=await Promise.all([z({features:a,geometryType:c.geometryType}),
A({layer:c,attributes:d,includeZeros:!1,includeNegatives:!1,view:b,signal:f})]);a=null!=e&&"avgSize"in e&&e.avgSize;const g=h.avg;if(!a)throw new k("dot-density-renderer:insufficient-info","Average polygon size is invalid");if(!g)throw new k("dot-density-renderer:insufficient-info","Average attribute value is invalid");const q=t.getResolutionForScale(b.scale,b.spatialReference);return{dotValue:n.roundValue(g/(a*a/(q*q)*.1))||1,referenceScale:b.scale,minSliderValue:1,maxSliderValue:n.roundValue(g)}}
async function G(a){const {view:b,layer:c,attributes:d,signal:f}=a;a=[];for(var e of d){var h=await u.getFieldsList({field:e.field,valueExpression:e.valueExpression});a.push(...h)}e=await c.getSampleFeatures({view:b,sampleSize:500,requiredFields:a,returnGeometry:!0,signal:f});e=await B({features:e,attributes:d,includeZeros:!1,includeNegatives:!1,view:b});if(!e.avgDensity||!e.minDensity||!e.maxDensity)throw new k("dot-density-renderer:insufficient-info","Invalid density values");a=t.getResolutionForScale(b.scale,
b.spatialReference);const g=a*a;a=n.roundValue(e.minDensity*g);h=n.roundValue(e.maxDensity*g);e=n.roundValue(e.avgDensity*g*10)||1;e>h&&(e=h);return{dotValue:e,referenceScale:b.scale,minSliderValue:a,maxSliderValue:h}}r.createRenderer=async function(a){var b=await D(a),c=b.layer;const d=c.geometryType,f=(a=await E(b))&&a.scheme;if(!f)throw new k("dot-density-renderer:insufficient-info","Unable to find dot-density scheme");var e=b.view;c={layer:c,view:e,attributes:b.attributes,signal:b.signal};e={layer:b.layer,
view:e,signal:b.signal};const [h,g]=await Promise.all([b.trueDensity?G(c):F(c),b.outlineOptimizationEnabled?y(e).catch(p.errorCallback):null]),{dotValue:q,referenceScale:H,minSliderValue:I,maxSliderValue:J}=h,K=p.createColors(f.colors,b.attributes.length);e=b.attributes.map((m,L)=>({field:m.field,valueExpression:m.valueExpression,label:m.label,valueExpressionTitle:m.valueExpressionTitle,color:K[L]}));b=new w({attributes:e,dotBlendingEnabled:b.dotBlendingEnabled,outline:g?p.getSymbolOutlineFromScheme(f,
d,g.opacity):null,dotValue:q,referenceScale:b.dotValueOptimizationEnabled?H:null,legendOptions:b.legendOptions});g&&g.visualVariables&&g.visualVariables.length&&(b.visualVariables=g.visualVariables.map(m=>m.clone()));b.authoringInfo=new x({type:"dot-density",minSliderValue:I,maxSliderValue:J});return{renderer:b,dotDensityScheme:f,basemapId:a.basemapId,basemapTheme:a.basemapTheme}};Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});