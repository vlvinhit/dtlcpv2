// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../intl ../../core/Error ./support/utils ../support/binningUtils ../../intl/messages".split(" "),function(h,t,k,l,m,p){async function q(a){const {layer:b,renderer:c}=a;await b.load();if("binning"!==b.featureReduction?.type)throw new k("bins-label-schemes:invalid-parameters","featureReduction type of the layer is not valid");a=c||b.featureReduction.renderer;if(!a)throw new k("bins-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:b,renderer:a}}async function n(a,
b,c,f){a:{var d=b.featureReduction;if("fields"in d)for(const e of d.fields)if(e.name.toLowerCase()===a.toLowerCase()){d=e;break a}d=null}if(!d)return null;b=l.createLabelExpressionForAggregateField(b,c,d,f);b=l.createLabelClass(b,!0);return{name:`binning-${a}`,labelingInfo:[b],fieldName:a}}function r(a){let b=[];a=a.featureReduction;"fields"in a&&(b=a.fields.map(c=>c.name));return b}h.getLabelSchemes=async function(a){const [{renderer:b,layer:c},f]=await Promise.all([q(a),p.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]);
a=await n(m.aggregateCountField,c);const d=[];var e=r(c).filter(g=>g.toLowerCase()!==m.aggregateCountField.toLowerCase());for(const g of e)(e=await n(g,c,b,f.clusters.predominantNoneValue))&&d.push(e);return{primaryScheme:a,secondarySchemes:d}};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});