// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../Graphic ../request ../core/Error ../core/Loadable ../core/Logger ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geometry/Extent ../geometry/support/jsonUtils ../layers/mixins/EditBusLayer ../layers/support/arcgisLayerUrl ./support/TopologyValidationJobInfo ./support/utils ../rest/networks/support/QueryNamedTraceConfigurationsParameters ../geometry/SpatialReference".split(" "),
function(q,v,d,b,B,w,u,C,D,E,F,G,e,N,O,P,H,I,J,x,y,K,L,M,z){const A=t=>Object.freeze(Object.defineProperty({__proto__:null,default:t},Symbol.toStringTag,{value:"Module"}));b=function(t){function r(a){a=t.call(this,a)||this;a.id=null;a.title=null;a.layerUrl=null;a.dataElement=null;a.fullExtent=null;a.spatialReference=null;a.type=null;a.sourceJSON=null;return a}v._inherits(r,t);r.fromPortalItem=function(a){return L.networkFromPortalItem(a)};var n=r.prototype;n.initialize=function(){this.when().catch(a=>
{F.isAbortError(a)||D.getLogger(this).error("#load()",`Failed to load layer (title: '${this.title??"no title"}', id: '${this.id??"no id"}')`,{error:a})})};n.load=async function(a){this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),a));this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,a));return this};n.getLayerIdBySourceId=function(a){if(this.dataElement){const c=this.dataElement.domainNetworks;for(const k of c){for(const f of k.edgeSources??
[])if(f.sourceId===a)return f.layerId;for(const f of k.junctionSources??[])if(f.sourceId===a)return f.layerId}}return null};n.queryNamedTraceConfigurations=async function(a,c){const {queryNamedTraceConfigurations:k}=await new Promise((p,h)=>q(["../rest/networks/queryNamedTraceConfigurations"],p,h)),f=this.networkServiceUrl;a=new M({...a});return(await k(f,a,{...c}))?.namedTraceConfigurations??null};n.validateTopology=async function(a,c){if(!a.validateArea)throw new u("network:undefined-validateArea",
"the network must have validateArea defined in the validate network topology parameters.");const [{validateNetworkTopology:k},{default:f}]=await Promise.all([new Promise((l,g)=>q(["../rest/networks/validateNetworkTopology"],l,g)),new Promise((l,g)=>q(["../rest/networks/support/ValidateNetworkTopologyParameters"],m=>l(A(m)),g))]);var p=f.from(a),h=this.networkServiceUrl;a=x.emitApplyEditsEvent(this.featureServiceUrl,null,!0);c=await k(h,p,{...c});if(c?.serviceEdits){p=[];for(const l of c.serviceEdits){({editedFeatures:h}=
l);const g=h?.spatialReference?new z(h.spatialReference):null;p.push({layerId:l.layerId,editedFeatures:{adds:h?.adds?.map(m=>this._createEditedFeature(m,g))||[],updates:h?.updates?.map(m=>({original:this._createEditedFeature(m[0],g),current:this._createEditedFeature(m[1],g)}))||[],deletes:h?.deletes?.map(m=>this._createEditedFeature(m,g))||[],spatialReference:g}})}a.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],
editedFeatures:p,exceededTransferLimit:!1})}return c};n.submitTopologyValidationJob=async function(a,c){if(!a.validateArea)throw new u("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");if(!a.gdbVersion)throw new u("network:undefined-gdb-version","version must be defined");const [{submitValidateNetworkTopologyJob:k},{default:f}]=await Promise.all([new Promise((l,g)=>q(["../rest/networks/validateNetworkTopology"],l,g)),new Promise((l,
g)=>q(["../rest/networks/support/ValidateNetworkTopologyParameters"],m=>l(A(m)),g))]),p=f.from(a),h=this.networkServiceUrl;a=this.featureServiceUrl?x.emitApplyEditsEvent(this.featureServiceUrl,null,!0):void 0;c=await k(h,p,{...c});return new K({statusUrl:c,editsResolver:a})};n._createEditedFeature=function(a,c){return new B({attributes:a.attributes,geometry:J.fromJSON({...a.geometry,spatialReference:c})})};n._fetchLayerMetaData=async function(a,c){a=await w(a,{responseType:"json",query:{f:"json"},
...c});this.sourceJSON=a.data;this.read(a.data,{origin:"service"})};n._fetchDataElement=async function(a,c,k){this.dataElement||(a=await w(`${a}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([c]),f:"json"},...k}).then(f=>f.data.layerDataElements?.[0]))&&this.read(a,{origin:"service"})};v._createClass(r,[{key:"datasetName",get:function(){return this.dataElement?.name??null}},{key:"owner",get:function(){return this.dataElement?.userIdentity??null}},{key:"schemaGeneration",get:function(){return this.dataElement?.schemaGeneration??
null}},{key:"parsedUrl",get:function(){return G.urlToObject(this.layerUrl)}},{key:"featureServiceUrl",get:function(){return y.parse(this.parsedUrl?.path)?.url?.path??null}},{key:"networkServiceUrl",get:function(){return this.featureServiceUrl?this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer"):null}},{key:"layerId",get:function(){const a=this.parsedUrl&&y.parse(this.parsedUrl.path);return null!=a?a.sublayer:null}},{key:"networkSystemLayers",get:function(){return null}}]);return r}(E.MultiOriginJSONMixin(C));
d.__decorate([e.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:!0}},read:!1}})],b.prototype,"id",void 0);d.__decorate([e.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:{source:"name"}}},read:!1}})],b.prototype,"title",void 0);d.__decorate([e.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},write:{target:"url",isRequired:!0}}},read:!1}})],b.prototype,
"layerUrl",void 0);d.__decorate([e.property({type:Object,json:{origins:{service:{read:!0}},read:!1}})],b.prototype,"dataElement",void 0);d.__decorate([e.property({type:I,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],b.prototype,"fullExtent",void 0);d.__decorate([e.property({type:z,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],b.prototype,"spatialReference",void 0);d.__decorate([e.property({type:["utility","trace"],readOnly:!0,json:{read:!1,write:!1}})],
b.prototype,"type",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"datasetName",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"owner",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"schemaGeneration",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"parsedUrl",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"featureServiceUrl",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"networkServiceUrl",null);d.__decorate([e.property({readOnly:!0})],
b.prototype,"layerId",null);d.__decorate([e.property()],b.prototype,"sourceJSON",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"networkSystemLayers",null);return b=d.__decorate([H.subclass("esri.networks.Network")],b)});