// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../../core/arrayUtils","./spatialReferenceUtils"],function(l,y,z){function p(a,b){const c=b[0]-a[0],d=b[1]-a[1];return 2<a.length&&2<b.length?(a=a[2]-b[2],Math.sqrt(c*c+d*d+a*a)):Math.sqrt(c*c+d*d)}function q(a,b,c){const d=a[0]+c*(b[0]-a[0]),g=a[1]+c*(b[1]-a[1]);return 2<a.length&&2<b.length?[d,g,a[2]+c*(b[2]-a[2])]:[d,g]}function r(a,b,c,d,g,e){let f=g-c,h=e-d;if(0!==f||0!==h){const k=((a-c)*f+(b-d)*h)/(f*f+h*h);1<k?(c=g,d=e):0<k&&(c+=f*k,d+=h*k)}f=a-c;h=b-d;return f*f+h*h}function t(a,
b,c){const d=a.length;let g=0,e=0,f=0;for(let h=0;h<d;h++){const k=a[h],m=a[(h+1)%d];let n=2;g+=k[0]*m[1]-m[0]*k[1];2<k.length&&2<m.length&&c&&(e+=k[0]*m[2]-m[0]*k[2],n=3);k.length>n&&m.length>n&&b&&(f+=k[0]*m[n]-m[0]*k[n])}return 0>=g&&0>=e&&0>=f}function u(a){const b=a.length;return 2<b&&y.equals(a[0],a[b-1])}function v(a){if("rings"in a)for(const b of a.rings)u(b)||b.push(b[0].slice())}function w(a,b){var c=z.getInfo(b);if(c){b=c.valid[0];c=c.valid[1];var d=c-b;for(const g of a){a=Infinity;let e=
-Infinity;for(const f of g){const h=x(f[0],b,c);a=Math.min(a,h);e=Math.max(e,h);f[0]=h}a=e-a;d-a<a&&g.forEach(f=>{0>f[0]&&(f[0]+=d)})}}}function x(a,b,c){const d=c-b;return a<b?c-(b-a)%d:a>c?b+(a-b)%d:a}l.closeRings=v;l.closeRingsAndFixWinding=function(a){if("rings"in a&&(v(a),0<a.rings.length&&!t(a.rings[0],a.hasM??!1,a.hasZ??!1)))for(const b of a.rings)b.reverse()};l.distanceFromPointToPolygon=function(a,b,c){let d=!1,g=Infinity,e,f,h,k;for(c.reset();c.nextPath();)if(c.nextPoint())for(e=c.x,f=c.y;c.nextPoint();)h=
c.x,k=c.y,f>b!==k>b&&a<(h-e)*(b-f)/(k-f)+e&&(d=!d),g=Math.min(g,r(a,b,e,f,h,k)),e=h,f=k;return 0===g?0:(d?1:-1)*Math.sqrt(g)};l.distanceToSegmentSquared=r;l.geometryToCoordinates=function(a){if(!a)return null;if(Array.isArray(a))return a;const b=a.hasZ,c=a.hasM;if("point"===a.type)return c&&b?[a.x,a.y,a.z,a.m]:b?[a.x,a.y,a.z]:c?[a.x,a.y,a.m]:[a.x,a.y];if("polygon"===a.type)return a.rings.slice(0);if("polyline"===a.type)return a.paths.slice(0);if("multipoint"===a.type)return a.points.slice(0);if("extent"===
a.type){a=a.clone().normalize();if(!a)return null;let d=!1,g=!1;a.forEach(e=>{e.hasZ&&(d=!0);e.hasM&&(g=!0)});return a.map(e=>{const f=[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]];if(d&&e.hasZ){var h=.5*(e.zmax-e.zmin);for(let k=0;k<f.length;k++)f[k].push(h)}if(g&&e.hasM)for(e=.5*(e.mmax-e.mmin),h=0;h<f.length;h++)f[h].push(e);return f})}return null};l.getLength=p;l.getMidpoint=function(a,b){return q(a,b,.5)};l.getPathLength=function(a){const b=a.length;let c=
0;for(let d=0;d<b-1;++d)c+=p(a[d],a[d+1]);return c};l.getPointOnPath=function(a,b){if(0>=b)return a[0];const c=a.length;let d=0;for(let g=0;g<c-1;++g){const e=p(a[g],a[g+1]);if(b-d<e)return q(a[g],a[g+1],(b-d)/e);d+=e}return a[c-1]};l.getRingArea=function(a){if(!a||3>a.length)return 0;let b=0;const c=a.length-1;for(let d=0;d<c;d++)b+=(a[d][0]-a[d+1][0])*(a[d][1]+a[d+1][1]);b+=(a[c][0]-a[0][0])*(a[c][1]+a[0][1]);return-.5*b};l.getRingAreaCursor=function(a){if(!a||3>a.numPoints)return 0;let b=0,c,d;
a.seekPathStart();if(!a.nextPoint())return 0;c=a.x;d=a.y;const g=c,e=d;for(;a.nextPoint();)b+=(c-a.x)*(d+a.y),c=a.x,d=a.y;return-.5*(b+(c-g)*(d+e))};l.hasCompatibleTopology=function(a,b){if(a===b)return!0;if(a.type!==b.type)return!1;if("point"===a.type||"mesh"===a.type||"extent"===a.type)return!0;if("multipoint"===a.type)return a.points.length===b.points.length;const [c,d]="polyline"===a.type?[a.paths,b.paths]:[a.rings,b.rings];return c.length===d.length&&c.every((g,e)=>g.length===d[e].length)};l.isClockwise=
t;l.isClosed=u;l.projectPointOnLine=function(a,b,c,d){const [g,e]=b,[f,h]=c[d],[k,m]=c[d+1];b=k-f;c=m-h;d=Math.min(1,Math.max(0,((g-f)*b+(e-h)*c)/(b*b+c*c)));a[0]=f+b*d;a[1]=h+c*d;return a};l.unnormalizeGeometryOnDatelineCrossing=function(a){if("polygon"!==a.type&&"polyline"!==a.type)return a;w("polygon"===a.type?a.rings:a.paths,a.spatialReference);return a};l.unnormalizeVerticesOnDatelineCrossing=w;l.unnormalizedCoordinate=x;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});