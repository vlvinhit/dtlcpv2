/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import r from"../request.js";import o from"../core/Error.js";import s from"../core/Loadable.js";import{L as i}from"../chunks/Logger.js";import{M as a}from"../chunks/MultiOriginJSONSupport.js";import{isAbortError as n}from"../core/promiseUtils.js";import{urlToObject as p}from"../core/urlUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/typedArrayUtil.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import u from"../geometry/Extent.js";import{fromJSON as c}from"../geometry/support/jsonUtils.js";import{e as d}from"../chunks/EditBusLayer.js";import{p as y}from"../chunks/arcgisLayerUrl.js";import j from"./support/TopologyValidationJobInfo.js";import{q as h}from"../chunks/featureQueryAll.js";import f from"../portal/PortalItem.js";import b from"../rest/support/FeatureSet.js";import{JSONSupport as k}from"../core/JSONSupport.js";import g from"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../chunks/reader.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../core/lang.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../layers/support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/datetime.js";import"../chunks/number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils2.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils3.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../core/Promise.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../chunks/ValidateNetworkTopologyResult.js";import"../rest/support/Query.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/DataLayerSource.js";import"../layers/support/Field.js";import"../chunks/domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"../chunks/fieldType.js";import"../chunks/FullTextSearch.js";import"../chunks/QuantizationParameters.js";import"../rest/support/StatisticDefinition.js";import"../chunks/assets.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";function S(t,e){const r=[],o=new Map;for(const r of e){const e=t.getLayerIdBySourceId(r.networkSourceId);if(null==e)continue;let s=o.get(e);void 0===s&&(s=[]),s.push(r.objectId),o.set(e,s)}const s=t.featureServiceUrl;return o.forEach(((t,e)=>r.push({layerUrl:`${s}/${e}`,objectIds:t}))),r}async function w(t){const e=t.layers,r=t.layerInfos,o=t.returnGeometry||!1,s=t.outSpatialReference;return await Promise.all(e.map((t=>t.load()))),(await Promise.all(e.map((async t=>{const e=r.find((e=>e.layerUrl===t.parsedUrl?.path));if(!e||!e.objectIds?.length)return{layer:t,featureSet:void 0};const i=t.createQuery();i.returnGeometry=o,i.outFields=e.outFields||["*"],i.outSpatialReference=s,i.gdbVersion=t.gdbVersion,i.objectIds=e.objectIds;const a=b.fromJSON(await h(t,i));return{layer:t,featureSet:a}})))).filter((t=>void 0!==t.featureSet))}async function v(t,e){if("Utility Network Layer"===t){const{default:t}=await import("./UtilityNetwork.js");return new t({layerUrl:e})}return null}let I=class extends k{constructor(t){super(t),this.globalIds=[],this.creators=[],this.tags=[],this.names=[]}};t([l({type:[String],json:{write:!0}})],I.prototype,"globalIds",void 0),t([l({type:[String],json:{write:!0}})],I.prototype,"creators",void 0),t([l({type:[String],json:{write:!0}})],I.prototype,"tags",void 0),t([l({type:[String],json:{write:!0}})],I.prototype,"names",void 0),I=t([m("esri.rest.networks.support.QueryNamedTraceConfigurationsParameters")],I);const U=I;let D=class extends(a(s)){static fromPortalItem(t){return async function(t){let e="portalItem"in t?t:{portalItem:t};!e.portalItem||e.portalItem instanceof f||(e={...e,portalItem:new f(e.portalItem)});const s=e.portalItem;if(await s.load(),"Feature Service"!==s.type)throw new o("portal:unknown-item-type","Unknown item type '${type}'",{type:s.type});const i=s.url,a=await r(i,{responseType:"json",query:{f:"json"}}),n="Network Layer";if(a.data.type&&a.data.type.includes(n))return v(a.data.type,i);if(a.data.layers){const t=a.data.layers.find((t=>t.type.includes(n)));if(t){const e=`${i}/${t.id}`;return v(t.type,e)}}return null}(t)}constructor(t){super(t),this.id=null,this.title=null,this.layerUrl=null,this.dataElement=null,this.fullExtent=null,this.spatialReference=null,this.type=null,this.sourceJSON=null}initialize(){this.when().catch((t=>{n(t)||i.getLogger(this).error("#load()",`Failed to load layer (title: '${this.title??"no title"}', id: '${this.id??"no id"}')`,{error:t})}))}get datasetName(){return this.dataElement?.name??null}get owner(){return this.dataElement?.userIdentity??null}get schemaGeneration(){return this.dataElement?.schemaGeneration??null}get parsedUrl(){return p(this.layerUrl)}get featureServiceUrl(){const t=y(this.parsedUrl?.path);return t?.url?.path??null}get networkServiceUrl(){return this.featureServiceUrl?this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer"):null}get layerId(){const t=this.parsedUrl&&y(this.parsedUrl.path);return null!=t?t.sublayer:null}get networkSystemLayers(){return null}async load(t){return this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),t)),this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,t)),this}getLayerIdBySourceId(t){if(this.dataElement){const e=this.dataElement.domainNetworks;for(const r of e){for(const e of r.edgeSources??[])if(e.sourceId===t)return e.layerId;for(const e of r.junctionSources??[])if(e.sourceId===t)return e.layerId}return null}return null}async queryNamedTraceConfigurations(t,e){const{queryNamedTraceConfigurations:r}=await import("../chunks/queryNamedTraceConfigurations.js"),o=this.networkServiceUrl,s=new U({...t});return(await r(o,s,{...e}))?.namedTraceConfigurations??null}async validateTopology(t,e){if(!t.validateArea)throw new o("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");const[{validateNetworkTopology:r},{default:s}]=await Promise.all([import("../chunks/validateNetworkTopology.js"),import("../rest/networks/support/ValidateNetworkTopologyParameters.js")]),i=s.from(t),a=this.networkServiceUrl,n=this.featureServiceUrl,p=d(n,null,!0),l=await r(a,i,{...e});if(l?.serviceEdits){const t=[];for(const e of l.serviceEdits){const{editedFeatures:r}=e,o=r?.spatialReference?new g(r.spatialReference):null;t.push({layerId:e.layerId,editedFeatures:{adds:r?.adds?.map((t=>this._createEditedFeature(t,o)))||[],updates:r?.updates?.map((t=>({original:this._createEditedFeature(t[0],o),current:this._createEditedFeature(t[1],o)})))||[],deletes:r?.deletes?.map((t=>this._createEditedFeature(t,o)))||[],spatialReference:o}})}p.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],editedFeatures:t,exceededTransferLimit:!1})}return l}async submitTopologyValidationJob(t,e){if(!t.validateArea)throw new o("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");if(!t.gdbVersion)throw new o("network:undefined-gdb-version","version must be defined");const[{submitValidateNetworkTopologyJob:r},{default:s}]=await Promise.all([import("../chunks/validateNetworkTopology.js"),import("../rest/networks/support/ValidateNetworkTopologyParameters.js")]),i=s.from(t),a=this.networkServiceUrl,n=this.featureServiceUrl?d(this.featureServiceUrl,null,!0):void 0,p=await r(a,i,{...e});return new j({statusUrl:p,editsResolver:n})}_createEditedFeature(t,r){return new e({attributes:t.attributes,geometry:c({...t.geometry,spatialReference:r})})}async _fetchLayerMetaData(t,e){const o=await r(t,{responseType:"json",query:{f:"json"},...e});this.sourceJSON=o.data,this.read(o.data,{origin:"service"})}async _fetchDataElement(t,e,o){if(this.dataElement)return;const s=await r(`${t}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([e]),f:"json"},...o}).then((t=>t.data.layerDataElements?.[0]));s&&this.read(s,{origin:"service"})}};t([l({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:!0}},read:!1}})],D.prototype,"id",void 0),t([l({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:{source:"name"}}},read:!1}})],D.prototype,"title",void 0),t([l({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},write:{target:"url",isRequired:!0}}},read:!1}})],D.prototype,"layerUrl",void 0),t([l({type:Object,json:{origins:{service:{read:!0}},read:!1}})],D.prototype,"dataElement",void 0),t([l({type:u,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],D.prototype,"fullExtent",void 0),t([l({type:g,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],D.prototype,"spatialReference",void 0),t([l({type:["utility","trace"],readOnly:!0,json:{read:!1,write:!1}})],D.prototype,"type",void 0),t([l({readOnly:!0})],D.prototype,"datasetName",null),t([l({readOnly:!0})],D.prototype,"owner",null),t([l({readOnly:!0})],D.prototype,"schemaGeneration",null),t([l({readOnly:!0})],D.prototype,"parsedUrl",null),t([l({readOnly:!0})],D.prototype,"featureServiceUrl",null),t([l({readOnly:!0})],D.prototype,"networkServiceUrl",null),t([l({readOnly:!0})],D.prototype,"layerId",null),t([l()],D.prototype,"sourceJSON",void 0),t([l({readOnly:!0})],D.prototype,"networkSystemLayers",null),D=t([m("esri.networks.Network")],D);const L=D;export{w as a,L as default,S as g};
