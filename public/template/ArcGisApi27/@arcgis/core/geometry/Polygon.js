/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{l as n}from"../chunks/typedArrayUtil.js";import{clone as e}from"../core/lang.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{w as i}from"../chunks/writer.js";import o,{i as l,p as u}from"./Extent.js";import a from"./Geometry.js";import h from"./Point.js";import c from"./SpatialReference.js";import{h as f}from"../chunks/unitUtils.js";import{g as p}from"../chunks/extentUtils.js";import{project as m}from"./support/webMercatorUtils.js";import{u as g}from"../chunks/zmUtils.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/maybe.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/tracking.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../chunks/reader.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/jsonMap.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";function y(t){const n=[];for(t.reset();t.nextPath();){const e=[];for(;t.nextPoint();)e.push([t.x,t.y]);n.push(e)}return t.reset(),n}function x(t){const n=[];for(;t.nextPoint();)n.push([t.x,t.y]);return t.seekPathStart(),n}function I(t){if(!t)return null;if(Array.isArray(t))return t;const n=t.hasZ,e=t.hasM;if("point"===t.type)return e&&n?[t.x,t.y,t.z,t.m]:n?[t.x,t.y,t.z]:e?[t.x,t.y,t.m]:[t.x,t.y];if("polygon"===t.type)return t.rings.slice(0);if("polyline"===t.type)return t.paths.slice(0);if("multipoint"===t.type)return t.points.slice(0);if("extent"===t.type){const n=t.clone().normalize();if(!n)return null;let e=!1,r=!1;return n.forEach((t=>{t.hasZ&&(e=!0),t.hasM&&(r=!0)})),n.map((t=>{const n=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(e&&t.hasZ){const e=.5*(t.zmax-t.zmin);for(let t=0;t<n.length;t++)n[t].push(e)}if(r&&t.hasM){const e=.5*(t.mmax-t.mmin);for(let t=0;t<n.length;t++)n[t].push(e)}return n}))}return null}function j(t,n){const e=n[0]-t[0],r=n[1]-t[1];if(t.length>2&&n.length>2){const s=t[2]-n[2];return Math.sqrt(e*e+r*r+s*s)}return Math.sqrt(e*e+r*r)}function N(t,n,e){const r=t[0]+e*(n[0]-t[0]),s=t[1]+e*(n[1]-t[1]);return t.length>2&&n.length>2?[r,s,t[2]+e*(n[2]-t[2])]:[r,s]}function P(t,n,e,r){const[s,i]=n,[o,l]=e[r],[u,a]=e[r+1],h=u-o,c=a-l,f=h*h+c*c,p=(s-o)*h+(i-l)*c,m=Math.min(1,Math.max(0,p/f));return t[0]=o+h*m,t[1]=l+c*m,t}function d(t,n,e){let r,s,i,o,l=!1,u=1/0;for(e.reset();e.nextPath();)if(e.nextPoint())for(r=e.x,s=e.y;e.nextPoint();)i=e.x,o=e.y,s>n!=o>n&&t<(i-r)*(n-s)/(o-s)+r&&(l=!l),u=Math.min(u,k(t,n,r,s,i,o)),r=i,s=o;return 0===u?0:(l?1:-1)*Math.sqrt(u)}function k(t,n,e,r,s,i){let o=e,l=r,u=s-o,a=i-l;if(0!==u||0!==a){const e=((t-o)*u+(n-l)*a)/(u*u+a*a);e>1?(o=s,l=i):e>0&&(o+=u*e,l+=a*e)}return u=t-o,a=n-l,u*u+a*a}function R(t,n){return N(t,n,.5)}function v(t){const n=t.length;let e=0;for(let r=0;r<n-1;++r)e+=j(t[r],t[r+1]);return e}function M(t,n){if(n<=0)return t[0];const e=t.length;let r=0;for(let s=0;s<e-1;++s){const e=j(t[s],t[s+1]);if(n-r<e){const i=(n-r)/e;return N(t[s],t[s+1],i)}r+=e}return t[e-1]}function A(t,n,e){const r=t.length;let s=0,i=0,o=0;for(let l=0;l<r;l++){const u=t[l],a=t[(l+1)%r];let h=2;s+=u[0]*a[1]-a[0]*u[1],u.length>2&&a.length>2&&e&&(i+=u[0]*a[2]-a[0]*u[2],h=3),u.length>h&&a.length>h&&n&&(o+=u[0]*a[h]-a[0]*u[h])}return s<=0&&i<=0&&o<=0}function T(t){const e=t.length;return e>2&&n(t[0],t[e-1])}function Z(t){if("rings"in t&&(b(t),t.rings.length>0&&!A(t.rings[0],t.hasM??!1,t.hasZ??!1)))for(const n of t.rings)n.reverse()}function b(t){if("rings"in t)for(const n of t.rings)T(n)||n.push(n[0].slice())}function w(t){return"polygon"!==t.type&&"polyline"!==t.type||E("polygon"===t.type?t.rings:t.paths,t.spatialReference),t}function E(t,n){const e=f(n);if(!e)return;const r=e.valid[0],s=e.valid[1],i=s-r;for(const n of t){let t=1/0,e=-1/0;for(const i of n){const n=S(i[0],r,s);t=Math.min(t,n),e=Math.max(e,n),i[0]=n}const o=e-t;i-o<o&&n.forEach((t=>{t[0]<0&&(t[0]+=i)}))}}function S(t,n,e){const r=e-n;return t<n?e-(n-t)%r:t>e?n+(t-n)%r:t}function z(t){if(!t||t.length<3)return 0;let n=0;const e=t.length-1;for(let r=0;r<e;r++)n+=(t[r][0]-t[r+1][0])*(t[r][1]+t[r+1][1]);return n+=(t[e][0]-t[0][0])*(t[e][1]+t[0][1]),-.5*n}function _(t){if(!t||t.numPoints<3)return 0;let n,e,r=0;if(t.seekPathStart(),!t.nextPoint())return 0;n=t.x,e=t.y;const s=n,i=e;for(;t.nextPoint();)r+=(n-t.x)*(e+t.y),n=t.x,e=t.y;return r+=(n-s)*(e+i),-.5*r}function O(t,n){if(t===n)return!0;if(t.type!==n.type)return!1;if("point"===t.type||"mesh"===t.type||"extent"===t.type)return!0;if("multipoint"===t.type)return t.points.length===n.points.length;const[e,r]="polyline"===t.type?[t.paths,n.paths]:[t.rings,n.rings];return e.length===r.length&&e.every(((t,n)=>t.length===r[n].length))}function F(t){return t?t.hasZ?[t.xmax-t.xmin/2,t.ymax-t.ymin/2,t.zmax-t.zmin/2]:[t.xmax-t.xmin/2,t.ymax-t.ymin/2]:null}function V(t){return t?Y(t.rings,t.hasZ??!1):null}function Y(t,n){if(!t||!t.length)return null;const e=[],r=[],s=n?[1/0,-1/0,1/0,-1/0,1/0,-1/0]:[1/0,-1/0,1/0,-1/0];for(let e=0,i=t.length;e<i;e++){const i=q(t[e],n,s);i&&r.push(i)}if(r.sort(((t,e)=>{let r=t[2]-e[2];return 0===r&&n&&(r=t[4]-e[4]),r})),r.length&&(e[0]=r[0][0],e[1]=r[0][1],n&&(e[2]=r[0][3]),(e[0]<s[0]||e[0]>s[1]||e[1]<s[2]||e[1]>s[3]||n&&(e[2]<s[4]||e[2]>s[5]))&&(e.length=0)),!e.length){const r=t[0]&&t[0].length?function(t,n){const e=n?[0,0,0]:[0,0],r=n?[0,0,0]:[0,0];let s=0,i=0,o=0,l=0;for(let u=0,a=t.length;u<a-1;u++){const a=t[u],h=t[u+1];if(a&&h){e[0]=a[0],e[1]=a[1],r[0]=h[0],r[1]=h[1],n&&a.length>2&&h.length>2&&(e[2]=a[2],r[2]=h[2]);const t=j(e,r);if(t){s+=t;const e=R(a,h);i+=t*e[0],o+=t*e[1],n&&e.length>2&&(l+=t*e[2])}}}return s>0?n?[i/s,o/s,l/s]:[i/s,o/s]:t.length?t[0]:null}(t[0],n):null;if(!r)return null;e[0]=r[0],e[1]=r[1],n&&r.length>2&&(e[2]=r[2])}return e}function q(t,n,e){let r=0,s=0,i=0,o=0,l=0;const u=t.length?t[0][0]:0,a=t.length?t[0][1]:0,h=t.length&&n?t[0][2]:0;for(let c=0;c<t.length;c++){const f=t[c],p=t[(c+1)%t.length],[m,g,y]=f,x=m-u,I=g-a,[j,N,P]=p,d=j-u,k=N-a,R=x*k-d*I;if(o+=R,r+=(x+d)*R,s+=(I+k)*R,n&&f.length>2&&p.length>2){const t=y-h,n=P-h,e=x*n-d*t;i+=(t+n)*e,l+=e}m<e[0]&&(e[0]=m),m>e[1]&&(e[1]=m),g<e[2]&&(e[2]=g),g>e[3]&&(e[3]=g),n&&(y<e[4]&&(e[4]=y),y>e[5]&&(e[5]=y))}if(o>0&&(o*=-1),l>0&&(l*=-1),!o)return null;o*=.5,l*=.5;const c=[r/(6*o)+u,s/(6*o)+a,o];return n&&(e[4]===e[5]||0===l?(c[3]=(e[4]+e[5])/2,c[4]=0):(c[3]=i/(6*l)+h,c[4]=l)),c}function C(t){const{hasZ:n,numPaths:e}=t;if(0===e)return null;const r=[],s=[],i=n?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY];for(t.reset();t.nextPath();){const n=q(x(t),t.hasZ,i);n&&s.push(n)}if(s.sort(((t,e)=>{let r=t[2]-e[2];return 0===r&&n&&(r=t[4]-e[4]),r})),s.length&&(r[0]=s[0][0],r[1]=s[0][1],n&&(r[2]=s[0][3]),(r[0]<i[0]||r[0]>i[1]||r[1]<i[2]||r[1]>i[3]||n&&(r[2]<i[4]||r[2]>i[5]))&&(r.length=0)),!r.length){t.reset(),t.nextPath();const e=t.numPoints?function(t){const{hasZ:n}=t,e=n?[0,0,0]:[0,0],r=n?[0,0,0]:[0,0];let s=0,i=0,o=0,l=0;if(t.nextPoint()){let u=t.x,a=t.y,h=t.z;for(;t.nextPoint();){const c=t.x,f=t.y,p=t.z;e[0]=u,e[1]=a,r[0]=c,r[1]=f,n&&(e[2]=h,r[2]=p);const m=j(e,r);if(m){s+=m;const t=R(e,r);i+=m*t[0],o+=m*t[1],n&&t.length>2&&(l+=m*t[2])}u=c,a=f,h=p}}return s>0?n?[i/s,o/s,l/s]:[i/s,o/s]:t.numPoints?(t.seekPathStart(),t.nextPoint(),[t.x,t.y]):null}(t):null;if(!e)return null;r[0]=e[0],r[1]=e[1],n&&e.length>2&&(r[2]=e[2])}return r}function G(t){let n=0;for(t.reset();t.nextPath();)n+=_(t);if(n<1e-6){const n=C(t);return n?[n[0],n[1]]:null}const e=[0,0];if(t.reset(),!t.nextPath()||!t.nextPoint())return null;const r=[t.x,t.y];for(t.reset();t.nextPath();)J(e,r,t);return e[0]*=1/n,e[1]*=1/n,e[0]+=r[0],e[1]+=r[1],e}const U=1/3;function J(t,n,e){if(!t||!e||e.numPoints<3)return null;e.nextPoint();const r=e.x,s=e.y;e.nextPoint();let i,o=e.x-r,l=e.y-s,u=0,a=0;for(;e.nextPoint();)u=e.x-r,a=e.y-s,i=.5*U*(u*l-a*o),t[0]+=i*(o+u),t[1]+=i*(l+a),o=u,l=a;const h=_(e),c=[r,s];return c[0]-=n[0],c[1]-=n[1],c[0]*=h,c[1]*=h,t[0]+=c[0],t[1]+=c[1],t}var B;function D(t){return!Array.isArray(t[0])}let H=B=class extends a{static fromExtent(t){const n=t.clone().normalize(),e=t.spatialReference;let r=!1,s=!1;for(const t of n)t.hasZ&&(r=!0),t.hasM&&(s=!0);const i={rings:n.map((t=>{const n=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(r&&t.hasZ){const e=t.zmin+.5*(t.zmax-t.zmin);for(let t=0;t<n.length;t++)n[t].push(e)}if(s&&t.hasM){const e=t.mmin+.5*(t.mmax-t.mmin);for(let t=0;t<n.length;t++)n[t].push(e)}return n})),spatialReference:e};return r&&(i.hasZ=!0),s&&(i.hasM=!0),new B(i)}constructor(...t){super(...t),this.rings=[],this.type="polygon"}normalizeCtorArgs(t,n){let e,r,s=null,i=null;return t&&!Array.isArray(t)?(s=t.rings??null,n||(t.spatialReference?n=t.spatialReference:t.rings||(n=t)),e=t.hasZ,r=t.hasM):s=t,s=s||[],n=n||c.WGS84,s.length&&s[0]&&null!=s[0][0]&&"number"==typeof s[0][0]&&(s=[s]),i=s[0]&&s[0][0],i&&(void 0===e&&void 0===r?(e=i.length>2,r=i.length>3):void 0===e?e=r?i.length>3:i.length>2:void 0===r&&(r=e?i.length>3:i.length>2)),{rings:s,spatialReference:n,hasZ:e,hasM:r}}get cache(){return this.commitProperty("rings"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get centroid(){const t=V(this);if(!t||isNaN(t[0])||isNaN(t[1])||this.hasZ&&isNaN(t[2]))return null;const n=new h;return n.x=t[0],n.y=t[1],n.spatialReference=this.spatialReference,this.hasZ&&(n.z=t[2]),n}get extent(){const{spatialReference:t}=this,n=p(this);if(!n)return null;const e=new o(n);return e.spatialReference=t,e}get isSelfIntersecting(){return l(this.rings)}writeRings(t,n){n.rings=e(this.rings)}addRing(t){if(!t)return;const n=this.rings,e=n.length;if(D(t)){const r=[];for(let n=0,e=t.length;n<e;n++)r[n]=t[n].toArray();n[e]=r}else n[e]=t.concat();return this.notifyChange("rings"),this}clone(){const t=new B;return t.spatialReference=this.spatialReference,t.rings=e(this.rings),t.hasZ=this.hasZ,t.hasM=this.hasM,t}equals(t){if(this===t)return!0;if(null==t)return!1;const e=this.spatialReference,r=t.spatialReference;if(null!=e!=(null!=r))return!1;if(null!=e&&null!=r&&!e.equals(r))return!1;if(this.rings.length!==t.rings.length)return!1;const s=([t,n,e,r],[s,i,o,l])=>t===s&&n===i&&(null==e&&null==o||e===o)&&(null==r&&null==l||r===l);for(let e=0;e<this.rings.length;e++){const r=this.rings[e],i=t.rings[e];if(!n(r,i,s))return!1}return!0}contains(t){if(!t)return!1;const n=m(t,this.spatialReference);return u(this,null!=n?n:t)}isClockwise(t){let n;return n=D(t)?t.map((t=>this.hasZ?this.hasM?[t.x,t.y,t.z,t.m]:[t.x,t.y,t.z]:[t.x,t.y])):t,A(n,this.hasM,this.hasZ)}getPoint(t,n){if(!this._validateInputs(t,n))return null;const e=this.rings[t][n],r=this.hasZ,s=this.hasM;return r&&!s?new h(e[0],e[1],e[2],void 0,this.spatialReference):s&&!r?new h(e[0],e[1],void 0,e[2],this.spatialReference):r&&s?new h(e[0],e[1],e[2],e[3],this.spatialReference):new h(e[0],e[1],this.spatialReference)}insertPoint(t,n,e){return this._validateInputs(t,n,!0)?(g(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t].splice(n,0,e),this.notifyChange("rings"),this):this}removePoint(t,n){if(!this._validateInputs(t,n))return null;const e=new h(this.rings[t].splice(n,1)[0],this.spatialReference);return this.notifyChange("rings"),e}removeRing(t){if(!this._validateInputs(t,null))return null;const n=this.rings.splice(t,1)[0],e=this.spatialReference,r=n.map((t=>new h(t,e)));return this.notifyChange("rings"),r}setPoint(t,n,e){return this._validateInputs(t,n)?(g(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t][n]=e,this.notifyChange("rings"),this):this}_validateInputs(t,n,e=!1){if(null==t||t<0||t>=this.rings.length)return!1;if(null!=n){const r=this.rings[t];if(e&&(n<0||n>r.length))return!1;if(!e&&(n<0||n>=r.length))return!1}return!0}toJSON(t){return this.write({},t)}};t([r({readOnly:!0})],H.prototype,"cache",null),t([r({readOnly:!0})],H.prototype,"centroid",null),t([r({readOnly:!0})],H.prototype,"extent",null),t([r({readOnly:!0})],H.prototype,"isSelfIntersecting",null),t([r({type:[[[Number]]],json:{write:{isRequired:!0}}})],H.prototype,"rings",void 0),t([i("rings")],H.prototype,"writeRings",null),H=B=t([s("esri.geometry.Polygon")],H),H.prototype.toJSON.isDefaultToJSON=!0;const L=H;export{v as a,I as b,b as c,M as d,L as default,F as e,P as f,j as g,y as h,A as i,x as j,z as k,q as l,C as m,d as n,Z as o,V as p,w as q,Y as r,E as s,O as t,S as u,R as v,G as w};
