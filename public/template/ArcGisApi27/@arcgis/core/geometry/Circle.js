/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{z as s,D as r,A as t,E as o}from"../chunks/unitUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/typedArrayUtil.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import n from"./Point.js";import p from"./Polygon.js";import{directGeodeticSolver as a}from"./support/geodesicUtils.js";import{webMercatorToGeographic as u,geographicToWebMercator as m}from"./support/webMercatorUtils.js";import"../chunks/jsonMap.js";import"../chunks/object.js";import"../core/lang.js";import"../chunks/string.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/maybe.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/tracking.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/reader.js";import"../chunks/writer.js";import"./Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"./SpatialReference.js";import"./Extent.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../chunks/zmUtils.js";import"../geometry.js";import"./Multipoint.js";import"./Polyline.js";import"../chunks/typeUtils.js";import"./support/jsonUtils.js";import"../chunks/geodesicConstants.js";var h;let l=h=class extends p{constructor(...e){super(...e),this.center=null,this.geodesic=!1,this.numberOfPoints=60,this.radius=1e3,this.radiusUnit="meters"}normalizeCtorArgs(e,s){let r;if(e&&e.center)r=e;else{if(e&&e.rings)return super.normalizeCtorArgs(e,s);r={center:e}}return{...super.normalizeCtorArgs(),...r,...s}}initialize(){const e=this.center,i=this.numberOfPoints;if(this.hasZ=e?.hasZ??!1,0!==this.rings.length||!e)return;const c=s(this.radius,this.radiusUnit,"meters"),n=e.spatialReference;let p,a="geographic";if(n.isWebMercator?a="webMercator":(null!=(n.wkid&&r[n.wkid])||n.wkt&&0===n.wkt.indexOf("PROJCS"))&&(a="projected"),this.geodesic){let s;switch(a){case"webMercator":s=u(e);break;case"projected":console.error("Creating a geodesic circle requires the center to be specified in web mercator or geographic coordinate system");break;case"geographic":s=e}p=this._createGeodesicCircle(s,c,i),"webMercator"===a&&(p=m(p))}else{let s;"webMercator"===a||"projected"===a?s=c/this._convert2Meters(1,e.spatialReference):"geographic"===a&&(s=t(c,"meters",o(e.spatialReference).radius)),p=this._createPlanarCircle(e,s,i)}this.spatialReference=p.spatialReference,this.addRing(p.rings[0])}clone(){const{center:e,numberOfPoints:s,radius:r,radiusUnit:t,geodesic:o}=this;return new h({center:e?.clone(),numberOfPoints:s,radius:r,radiusUnit:t,geodesic:o})}_createGeodesicCircle(e,s,r){let t=0;const o=[];for(;t<360;){const i=[0,0],c=[e.x,e.y];a(i,c,t,s),this.hasZ&&i.push(e.z),o.push(i),t+=360/r}return o.push(o[0]),new p(o)}_createPlanarCircle(e,s,r){const t=[],o=2*Math.PI/r;for(let i=0;i<r;++i){const r=o*i,c=[e.x+Math.cos(-r)*s,e.y+Math.sin(-r)*s];this.hasZ&&c.push(e.z),t.push(c)}return t.push(t[0]),new p({spatialReference:e.spatialReference,rings:[t]})}_convert2Meters(e,s){let t;if(s.wkid&&null!=r[s.wkid])t=r.values[r[s.wkid]];else{const e=s.wkt,r=e.lastIndexOf(",")+1,o=e.lastIndexOf("]]");t=parseFloat(e.substring(r,o))}return e*t}};e([i({type:n})],l.prototype,"center",void 0),e([i()],l.prototype,"geodesic",void 0),e([i()],l.prototype,"numberOfPoints",void 0),e([i()],l.prototype,"radius",void 0),e([i()],l.prototype,"radiusUnit",void 0),l=h=e([c("esri.geometry.Circle")],l);const j=l;export{j as default};
