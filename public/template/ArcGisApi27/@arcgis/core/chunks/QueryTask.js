/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import r from"../core/Error.js";import{h as o}from"./typedArrayUtil.js";import{whenOrAbort as s}from"../core/promiseUtils.js";import{urlToObject as i}from"../core/urlUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{a as n,g as c}from"./infoFor3D.js";import{D as p}from"./DataLayerSource.js";import{p as l}from"./utils4.js";import{a as m,e as d}from"./executeForIds.js";import{e as f}from"./executeForExtent.js";import{a as y}from"./executeQueryJSON.js";import{e as h}from"./executeQueryPBF.js";import S from"../rest/support/FeatureSet.js";import F from"../rest/support/Query.js";let x=class extends e{constructor(t){super(t),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return i(this.url)}async execute(t,e){const r=await this.executeJSON(t,e);return this.featureSetFromJSON(t,r,e)}async executeJSON(t,e){const r=this._normalizeQuery(t),s=null!=t.outStatistics?.[0],i=o("featurelayer-pbf-statistics"),a=!s||i;let u;if(this.pbfSupported&&a)try{u=await h(this.url,r,e)}catch(t){if("query:parsing-pbf"!==t.name)throw t;this.pbfSupported=!1}return this.pbfSupported&&a||(u=await y(this.url,r,e)),this._normalizeFields(u.fields),u}async featureSetFromJSON(t,e,r){if(!this._queryIs3DObjectFormat(t)||null==this.infoFor3D||!e.features)return S.fromJSON(e);const{meshFeatureSetFromJSON:o}=await s(import("./meshFeatureSet.js"),r);return o(t,this.infoFor3D,e)}executeForCount(t,e){return m(this.url,this._normalizeQuery(t),e)}executeForExtent(t,e){return f(this.url,this._normalizeQuery(t),e)}executeForIds(t,e){return d(this.url,this._normalizeQuery(t),e)}async executeRelationshipQuery(t,e){const[{default:r},{executeRelationshipQuery:o}]=await s(Promise.all([import("../rest/support/RelationshipQuery.js"),import("./executeRelationshipQuery.js")]),e);return t=r.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),o(this.url,t,e)}async executeRelationshipQueryForCount(t,e){const[{default:r},{executeRelationshipQueryForCount:o}]=await s(Promise.all([import("../rest/support/RelationshipQuery.js"),import("./executeRelationshipQuery.js")]),e);return t=r.from(t),(this.gdbVersion||this.dynamicDataSource)&&((t=t.clone()).gdbVersion=t.gdbVersion||this.gdbVersion,t.dynamicDataSource=t.dynamicDataSource||this.dynamicDataSource),o(this.url,t,e)}async executeAttachmentQuery(t,e){const{executeAttachmentQuery:r,fetchAttachments:o,processAttachmentQueryResult:i}=await s(import("./queryAttachments.js"),e),a=l(this.url);return i(a,await(this.queryAttachmentsSupported?r(a,t,e):o(a,t,e)))}async executeTopFeaturesQuery(t,e){const{executeTopFeaturesQuery:r}=await s(import("./executeTopFeaturesQuery.js"),e);return r(this.parsedUrl,t,this.sourceSpatialReference,e)}async executeForTopIds(t,e){const{executeForTopIds:r}=await s(import("./executeForTopIds.js"),e);return r(this.parsedUrl,t,e)}async executeForTopExtents(t,e){const{executeForTopExtents:r}=await s(import("./executeForTopExtents.js"),e);return r(this.parsedUrl,t,e)}async executeForTopCount(t,e){const{executeForTopCount:r}=await s(import("./executeForTopCount.js"),e);return r(this.parsedUrl,t,e)}_normalizeQuery(t){let e=F.from(t);e.sourceSpatialReference=e.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(e=e===t?e.clone():e,e.gdbVersion=t.gdbVersion||this.gdbVersion,e.dynamicDataSource=t.dynamicDataSource?p.from(t.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:o}=this;if(null!=o&&this._queryIs3DObjectFormat(t)){e=e===t?e.clone():e,e.formatOf3DObjects=null;const{supportedFormats:s,queryFormats:i}=o,a=n("model/gltf-binary",s)??c("glb",s),u=n("model/gltf+json",s)??c("gtlf",s);for(const t of i){if(t===a){e.formatOf3DObjects=t;break}t!==u||e.formatOf3DObjects||(e.formatOf3DObjects=t)}if(!e.formatOf3DObjects)throw new r("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(null==e.outFields||!e.outFields.includes("*")){e=e===t?e.clone():e,null==e.outFields&&(e.outFields=[]);const{originX:r,originY:s,originZ:i,translationX:a,translationY:u,translationZ:n,scaleX:c,scaleY:p,scaleZ:l,rotationX:m,rotationY:d,rotationZ:f,rotationDeg:y}=o.transformFieldRoles;e.outFields.push(r,s,i,a,u,n,c,p,l,m,d,f,y)}}return e}_normalizeFields(t){if(null!=this.fieldsIndex&&null!=t)for(const e of t){const t=this.fieldsIndex.get(e.name);t&&Object.assign(e,t.toJSON())}}_queryIs3DObjectFormat(t){return null!=this.infoFor3D&&!0===t.returnGeometry&&"xyFootprint"!==t.multipatchOption&&!t.outStatistics}};t([a({type:p})],x.prototype,"dynamicDataSource",void 0),t([a()],x.prototype,"fieldsIndex",void 0),t([a()],x.prototype,"gdbVersion",void 0),t([a()],x.prototype,"infoFor3D",void 0),t([a({readOnly:!0})],x.prototype,"parsedUrl",null),t([a()],x.prototype,"pbfSupported",void 0),t([a()],x.prototype,"queryAttachmentsSupported",void 0),t([a()],x.prototype,"sourceSpatialReference",void 0),t([a({type:String})],x.prototype,"url",void 0),x=t([u("esri.tasks.QueryTask")],x);const j=x;export{j as Q};
