/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import"../geometry.js";import t from"../Ground.js";import{L as e}from"./Logger.js";import{eachAlways as o}from"../core/promiseUtils.js";import{g as r}from"./unitUtils.js";import s from"../geometry/Mesh.js";import{project as i}from"../geometry/projection.js";import{c as m}from"./Indices.js";import p,{M as a}from"../geometry/support/MeshComponent.js";import n from"../geometry/Point.js";import"./ensureType.js";import"./typedArrayUtil.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"./string.js";import"./object.js";import"../core/lang.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"./utils.js";import"./maybe.js";import"./metadata.js";import"../core/Error.js";import"../config.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./jsonMap.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../Color.js";import"./colorUtils.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./collectionUtils.js";import"./compilerUtils.js";import"../core/Loadable.js";import"../core/Promise.js";import"./loadAll.js";import"./asyncUtils.js";import"./enumeration.js";import"./opacityUtils.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"./axisAngleDegrees.js";import"./quat.js";import"./quatf64.js";import"../geometry/support/MeshGeoreferencedRelativeVertexSpace.js";import"../core/Clonable.js";import"../geometry/support/MeshGeoreferencedVertexSpace.js";import"../geometry/support/MeshLocalVertexSpace.js";import"../geometry/support/MeshTransform.js";import"./mat4.js";import"./mat4f64.js";import"./triangulationUtils.js";import"./earcut.js";import"./_commonjsHelpers.js";import"./DoubleArray.js";import"./deduplicate.js";import"./georeference.js";import"./mat3f64.js";import"./mat3.js";import"./spatialReferenceEllipsoidUtils.js";import"./vec32.js";import"./projection.js";import"./BufferView.js";import"./vec2.js";import"../core/urlUtils.js";import"./External.js";import"../request.js";import"../kernel.js";import"./infoFor3D.js";import"../geometry/support/MeshMaterial.js";import"../geometry/support/MeshTexture.js";import"./imageUtils.js";import"./persistableUrlUtils.js";import"../geometry/support/MeshTextureTransform.js";import"../geometry/support/MeshMaterialMetallicRoughness.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";async function j(r,s,i){let m;if(c(r)||r instanceof t){const t=await async function(t){return c(t)?t.load():(await t.load(),await o(t.layers.map((t=>t.load()))),t)}(r);return m=await t.createElevationSampler(s,{demResolution:i?.demResolution??"finest-contiguous"}),l(m,s,{material:i?.material})}return"string"==typeof i?.demResolution?(e.getLogger("esri.geometry.support.meshUtils.elevation").error("create()","demResolution must be a number when used directly with a sampler"),null):l(r,s,{material:i?.material,demResolution:i?.demResolution})}function l(t,e,o){const n=r(e.spatialReference),j=(o?.demResolution??t.demResolution.min)/n,l=Math.round(e.width/j),c=Math.round(e.height/j),g=l+1,y=c+1,f=new Float64Array(g*y*3),d=new Float32Array(g*y*2);let h=0,U=0;const R=new Uint32Array(l*c*2*3);let w=0,M=0;const b=!t.spatialReference.equals(e.spatialReference);u.spatialReference=e.spatialReference;const{xmin:v,ymin:x,height:A,width:S}=e;for(let e=0;e<y;e++){const o=x+A*(e/c);for(let r=0;r<g;r++){const s=v+S*(r/l);if(f[h++]=s,f[h++]=o,b){u.x=s,u.y=o;const e=i(u,t.spatialReference);f[h++]=t.elevationAt(e.x,e.y)??0}else f[h++]=t.elevationAt(s,o)??0;const m=r/l,p=e/c;d[U++]=m,d[U++]=p,e!==c&&r!==l&&(R[M++]=w+1,R[M++]=w+g+1,R[M++]=w+g,R[M++]=w,R[M++]=w+1,R[M++]=w+g),w++}}return new s({vertexAttributes:new a({position:f,uv:d}),components:[new p({faces:m(R),shading:"smooth",material:o?.material??null})],spatialReference:e.spatialReference})}function c(t){return"type"in t&&("elevation"===t.type||"base-elevation"===t.type)}const u=new n;export{j as create};
