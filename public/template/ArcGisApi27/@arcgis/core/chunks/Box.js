/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import i from"../core/Evented.js";import{d as s}from"./maybe.js";import{z as o}from"./quantityUtils.js";import{when as r,watch as a,syncAndInitial as p}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{c as l}from"./aaBoundingRect.js";import{e as c}from"./extentUtils.js";import m,{b as u}from"../geometry/Polygon.js";import y from"../geometry/Polyline.js";import d from"../geometry/Point.js";import g from"../geometry/Multipoint.js";import _ from"../symbols/SimpleFillSymbol.js";import j from"../symbols/SimpleLineSymbol.js";import f from"../symbols/SimpleMarkerSymbol.js";import{c as v,s as b,a as G,g as x}from"./drawUtils.js";import{H as S,G as w}from"./GraphicMover.js";import{a as k}from"./layerUtils3.js";import{s as M}from"./settings.js";import I from"../views/interactive/sketch/SketchTooltipOptions.js";import{E as C,a as R}from"./ExtentTooltipInfos.js";import{T as U,f as O}from"./automaticLengthMeasurementUtils.js";import{T as L}from"./TranslateTooltipInfos.js";import"../geometry/Extent.js";import"./string.js";import"./object.js";import"../core/lang.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"./metadata.js";import"./Logger.js";import"../config.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./writer.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"./zmUtils.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./datetime.js";import"./number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../layers/GraphicsLayer.js";import"./GraphicsCollection.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../layers/Layer.js";import"../layers/mixins/BlendLayer.js";import"./jsonUtils.js";import"./parser.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../layers/mixins/ScaleRangeLayer.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./layerViewUtils.js";import"./InputManager.js";import"./Queue.js";import"./PropertiesPool.js";import"../core/signal.js";import"./GraphicManipulator.js";import"./vec2.js";import"../geometry/projection.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./elevationInfoUtils.js";import"./defaults.js";import"./defaultsJSON.js";import"./drapedUtils.js";import"./screenUtils2.js";import"../intl.js";import"./messages.js";import"./quantityFormatUtils.js";import"./unitFormatUtils.js";import"./ByteSizeUnit.js";import"./Cyclical.js";import"./getDefaultUnitForView.js";import"../widgets/Widget.js";import"./domUtils.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./dom.js";import"./guid.js";import"./index.js";import"./jsxWidgetSupport.js";import"./messageBundle.js";import"./jsxFactory.js";import"./euclideanLengthMeasurementUtils.js";import"./measurementUtils2.js";import"./spatialReferenceEllipsoidUtils.js";import"../geometry/geometryEngine.js";import"./geometryEngineBase.js";import"./hydrated.js";import"../geometry/support/geodesicUtils.js";function T(t){let e=0,i=0;const s=t.length;let o,r=t[i];for(i=0;i<s-1;i++)o=t[i+1],e+=(o[0]-r[0])*(o[1]+r[1]),r=o;return e>=0}function H(t,e,i,s){const o=[];for(const r of t){const t=r.slice(0);o.push(t);const a=e*(r[0]-s.x)-i*(r[1]-s.y)+s.x,p=i*(r[0]-s.x)+e*(r[1]-s.y)+s.y;t[0]=a,t[1]=p}return o}function E(t,e,i){const{hasM:s,hasZ:o,spatialReference:r}=t,a=e*Math.PI/180,p=Math.cos(a),n=Math.sin(a);if("xmin"in t&&(i=i??t.center,t=new m({spatialReference:r,rings:[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]})),"paths"in t){i=i??t.extent.center;const e=[];for(const s of t.paths)e.push(H(s,p,n,i));return new y({hasM:s,hasZ:o,spatialReference:r,paths:e})}if("rings"in t){i=i??t.extent.center;const e=[];for(const s of t.rings){const t=T(s),o=H(s,p,n,i);T(o)!==t&&o.reverse(),e.push(o)}return new m({hasM:s,hasZ:o,spatialReference:r,rings:e})}if("x"in t){i=i??t;const e=new d({x:p*(t.x-i.x)-n*(t.y-i.y)+i.x,y:n*(t.x-i.x)+p*(t.y-i.y)+i.y,spatialReference:r});return null!=t.z&&(e.z=t.z),null!=t.m&&(e.m=t.m),e}return"points"in t?(i=i??t.extent.center,new g({hasM:s,hasZ:o,points:H(t.points,p,n,i),spatialReference:r})):null}class D{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class P{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class B{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class z{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate-start"}}class A{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate"}}class F{constructor(t,e,i){this.graphics=t,this.mover=e,this.angle=i,this.type="rotate-stop"}}class N{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale-start"}}class Y{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale"}}class V{constructor(t,e,i,s){this.graphics=t,this.mover=e,this.xScale=i,this.yScale=s,this.type="scale-stop"}}const X=M.transformGraphics,q={centerIndicator:new f({style:"cross",size:X.center.size,color:X.center.color}),fill:{default:new _({color:X.fill.color,outline:{color:X.fill.outlineColor,join:"round",width:1}}),active:new _({color:X.fill.stagedColor,outline:{color:X.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new f({style:"square",size:X.vertex.size,color:X.vertex.color,outline:{color:X.vertex.outlineColor,width:1}}),hover:new f({style:"square",size:X.vertex.hoverSize,color:X.vertex.hoverColor,outline:{color:X.vertex.hoverOutlineColor,width:1}})},rotator:{default:new f({style:"circle",size:X.vertex.size,color:X.vertex.color,outline:{color:X.vertex.outlineColor,width:1}}),hover:new f({style:"circle",size:X.vertex.hoverSize,color:X.vertex.hoverColor,outline:{color:X.vertex.hoverOutlineColor,width:1}})},rotatorLine:new j({color:X.line.color,width:1})};let W=class extends i.EventedAccessor{constructor(t){super(t),this._activeHandleGraphic=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._centerGraphic=null,this._backgroundGraphic=null,this._vertexGraphics=[],this._rotateHandleGraphic=null,this._rotateGraphicOffset=20,this._angleOfRotation=0,this._rotateLineGraphic=null,this._startInfo=null,this._tooltip=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this.type="box",this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}},this.enableMovement=!0,this.enableRotation=!0,this.enableScaling=!0,this.graphics=[],this.highlightsEnabled=!0,this.layer=null,this.preserveAspectRatio=!1,this.showCenterGraphic=!0,this.symbols=q,this.tooltipOptions=new I,this.view=null,this._getBounds=(()=>{const t=l();return(e,i)=>{e[0]=Number.POSITIVE_INFINITY,e[1]=Number.POSITIVE_INFINITY,e[2]=Number.NEGATIVE_INFINITY,e[3]=Number.NEGATIVE_INFINITY;for(const s of i){if(!s)continue;let i,o,r,a;if("point"===s.type)i=r=s.x,o=a=s.y;else if("multipoint"===s.type){const e=u(s);[i,o,r,a]=c(t,[e])}else if("extent"===s.type)[i,o,r,a]=[s.xmin,s.ymin,s.xmax,s.ymax];else{const e=u(s);[i,o,r,a]=c(t,e)}e[0]=Math.min(i,e[0]),e[1]=Math.min(o,e[1]),e[2]=Math.max(r,e[2]),e[3]=Math.max(a,e[3])}return e}})()}initialize(){const t=this.view;this._highlightHelper=new S({view:t}),this._tooltip=new U({view:t}),this._setup(),this.addHandles([r((()=>t?.ready),(()=>{const{layer:t,view:e}=this;k(e,t)}),{once:!0,initial:!0}),a((()=>this.preserveAspectRatio),(()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics(),this._updateTooltip(this._activeHandleGraphic))})),a((()=>t?.scale),(()=>{this._updateRotateGraphic(),this._updateRotateLineGraphic()})),a((()=>this.graphics),(()=>this.refresh())),a((()=>this.layer),((t,e)=>{e&&this._resetGraphics(e),this.refresh()})),a((()=>this.highlightsEnabled),(()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()})),a((()=>this.tooltipOptions.enabled),(t=>{this._tooltip=t?new U({view:this.view}):s(this._tooltip)}),p),this.on("move-start",(t=>this.callbacks?.onMoveStart?.(t))),this.on("move",(t=>this.callbacks?.onMove?.(t))),this.on("move-stop",(t=>this.callbacks?.onMoveStop?.(t))),this.on("rotate-start",(t=>this.callbacks?.onRotateStart?.(t))),this.on("rotate",(t=>this.callbacks?.onRotate?.(t))),this.on("rotate-stop",(t=>this.callbacks?.onRotateStop?.(t))),this.on("scale-start",(t=>this.callbacks?.onScaleStart?.(t))),this.on("scale",(t=>this.callbacks?.onScale?.(t))),this.on("scale-stop",(t=>this.callbacks?.onScaleStop?.(t)))])}destroy(){this._reset(),this._tooltip=s(this._tooltip)}get state(){const t=this.view?.ready??!1,e=this.graphics.length&&this.layer;return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){return this._vertexGraphics.includes(t)||t===this._backgroundGraphic||t===this._centerGraphic||t===this._rotateHandleGraphic||t===this._rotateLineGraphic}move(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,o=v(s,t,e,this.view);i.geometry=o}this.refresh(),this.emit("move-stop",new B(this.graphics,null,t,e))}}scale(t,e){if(this._mover&&this.graphics.length){for(const i of this.graphics){const s=i.geometry,o=b(s,t,e);i.geometry=o}this.refresh(),this.emit("scale-stop",new V(this.graphics,null,t,e))}}rotate(t,e){if(this._mover&&this.graphics.length){if(!e){const t=this._vertexGraphics[1].geometry.x,i=this._vertexGraphics[3].geometry.y;e=new d(t,i,this.view.spatialReference)}for(const i of this.graphics){const s=E(i.geometry,t,e);i.geometry=s}this.refresh(),this.emit("rotate-stop",new F(this.graphics,null,t))}}refresh(){this._reset(),this._setup()}reset(){this.graphics=[]}_setup(){"active"===this.state&&(this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){this._highlightHelper?.removeAll(),this._resetGraphicStateVars(),this._resetGraphics(),this._updateTooltip(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetGraphicStateVars(){this._startInfo=null,this._activeHandleGraphic=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this._angleOfRotation=0}_resetGraphics(t){(t=t||this.layer)&&(t.removeMany(this._vertexGraphics),t.remove(this._backgroundGraphic),t.remove(this._centerGraphic),t.remove(this._rotateHandleGraphic),t.remove(this._rotateLineGraphic)),this._vertexGraphics=[],this._backgroundGraphic=null,this._centerGraphic=null,this._rotateHandleGraphic=null,this._rotateLineGraphic=null}_setupMover(){let t=[];this.enableScaling&&(t=t.concat(this._vertexGraphics)),this.enableMovement&&(t=t.concat(this.graphics,this._backgroundGraphic)),this.enableRotation&&t.push(this._rotateHandleGraphic),this.showCenterGraphic&&t.push(this._centerGraphic),this._mover=new w({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,view:this.view,graphics:t,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_getStartInfo(t){const[e,i,s,o]=this._getBoxBounds(l()),r=Math.abs(s-e),a=Math.abs(o-i),p=(s+e)/2,n=(o+i)/2,{x:h,y:c}=t.geometry;return{width:r,height:a,centerX:p,centerY:n,startX:h,startY:c,graphicInfos:this._getGraphicInfos(),box:this._backgroundGraphic.geometry,rotate:this._rotateHandleGraphic.geometry}}_getGraphicInfos(){return this.graphics.map((t=>this._getGraphicInfo(t)))}_getGraphicInfo(t){const e=t.geometry,[i,s,o,r]=this._getBounds(l(),[e]);return{width:Math.abs(o-i),height:Math.abs(r-s),centerX:(o+i)/2,centerY:(r+s)/2,geometry:e}}_onGraphicClickCallback(t){t.viewEvent.stopPropagation(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t)}_onGraphicMoveStartCallback(t){const{_angleOfRotation:e,_xScale:i,_yScale:s,_backgroundGraphic:o,_vertexGraphics:r,_rotateHandleGraphic:a,symbols:p}=this,n=t.graphic;this._resetGraphicStateVars(),this._hideGraphicsBeforeUpdate(),o.symbol=p.fill.active,this._startInfo=this._getStartInfo(n),this._updateTooltip(n,t.viewEvent),n===a?(this.view.cursor="grabbing",this.emit("rotate-start",new z(this.graphics,n,e))):r.includes(n)?(this._activeHandleGraphic=n,this.emit("scale-start",new N(this.graphics,n,i,s))):this.emit("move-start",new D(this.graphics,n,t.dx,t.dy))}_onGraphicMoveCallback(t){const e=t.graphic;if(this._startInfo)if(this._vertexGraphics.includes(e))this._scaleGraphic(e),this._updateTooltip(e,t.viewEvent),this.emit("scale",new Y(this.graphics,e,this._xScale,this._yScale));else if(e===this._rotateHandleGraphic)this._rotateGraphic(e),this._updateTooltip(e,t.viewEvent),this.emit("rotate",new A(this.graphics,e,this._angleOfRotation));else{const{dx:i,dy:s}=t;this._totalDx+=i,this._totalDy+=s,this._moveGraphic(e,i,s),this._updateTooltip(e,t.viewEvent),this.emit("move",new P(this.graphics,e,i,s))}}_onGraphicMoveStopCallback(t){const e=t.graphic;if(!this._startInfo)return void this.refresh();const{_angleOfRotation:i,_totalDx:s,_totalDy:o,_xScale:r,_yScale:a,_vertexGraphics:p,_rotateHandleGraphic:n}=this;this.refresh(),e===n?(this.view.cursor="pointer",this.emit("rotate-stop",new F(this.graphics,e,i))):p.includes(e)?this.emit("scale-stop",new V(this.graphics,e,r,a)):this.emit("move-stop",new B(this.graphics,e,s,o))}_onGraphicPointerOverCallback(t){const{_backgroundGraphic:e,_vertexGraphics:i,graphics:s,_rotateHandleGraphic:o,symbols:r,view:a}=this,p=t.graphic;if(p===o)return o.symbol=r.rotator.hover,a.cursor="pointer",void this._updateTooltip(p);if(s.includes(p)||p===e)return void(a.cursor="move");if(!i.includes(p))return void(a.cursor="pointer");this._updateTooltip(p),t.graphic.symbol=r.handles.hover;const n=a.rotation;let h,l=t.index;switch(l<8&&(n>=0&&n<45?l%=8:l=n>=45&&n<90?(l+1)%8:n>=90&&n<135?(l+2)%8:n>=135&&n<180?(l+3)%8:n>=180&&n<225?(l+4)%8:n>=225&&n<270?(l+5)%8:n>=270&&n<315?(l+6)%8:(l+7)%8),l){case 0:case 4:h="nwse-resize";break;case 1:case 5:h="ns-resize";break;case 2:case 6:h="nesw-resize";break;case 3:case 7:h="ew-resize";break;default:h="pointer"}a.cursor=h}_onGraphicPointerOutCallback(t){const{_vertexGraphics:e,_rotateHandleGraphic:i,symbols:s,view:o}=this;t.graphic===i?i.symbol=s.rotator.default:e.includes(t.graphic)&&(t.graphic.symbol=s.handles.default),o.cursor="default",this._updateTooltip()}_scaleGraphic(t){const{_startInfo:e,_vertexGraphics:i,preserveAspectRatio:s,view:o}=this,{centerX:r,centerY:a,startX:p,startY:n}=e,{resolution:h,transform:l}=o.state,c=i.indexOf(t);1!==c&&5!==c||this._updateX(t,r),3!==c&&7!==c||this._updateY(t,a);const{x:m,y:u}=t.geometry,y=l[0]*m+l[2]*u+l[4],g=l[1]*m+l[3]*u+l[5],_=e.graphicInfos?.map((t=>t.geometry))??[];if(s){const t=l[0]*r+l[2]*a+l[4],e=l[1]*r+l[3]*a+l[5],i=l[0]*p+l[2]*n+l[4],s=l[1]*p+l[3]*n+l[5];this._xScale=this._yScale=G(t,e,i,s,y,g);for(const t of _){const e=_.indexOf(t);this.graphics[e].geometry=b(t,this._xScale,this._yScale,[r,a])}this._updateBackgroundGraphic()}else{const{width:t,height:i}=e;let s=m-p,l=n-u;if(1===c||5===c?s=0:3!==c&&7!==c||(l=0),0===s&&0===l)return;const y=t+(p>r?s:-1*s),g=i+(n<a?l:-1*l),j=r+s/2,f=a+l/2;this._xScale=y/t||1,this._yScale=g/i||1,1===c||5===c?this._xScale=1:3!==c&&7!==c||(this._yScale=1);const G=(j-r)/h,x=(f-a)/h,S=b(e.box,this._xScale,this._yScale);this._backgroundGraphic.geometry=v(S,G,x,o,!0);const{centerX:w,centerY:k}=this._getGraphicInfo(this._backgroundGraphic),M=(w-r)/h,I=-1*(k-a)/h;for(const t of _){const e=_.indexOf(t),i=b(t,this._xScale,this._yScale,[r,a]);this.graphics[e].geometry=v(i,M,I,o,!0)}this._centerGraphic.geometry=new d(w,k,o.spatialReference)}}_rotateGraphic(t){const{centerX:e,centerY:i,startX:s,startY:o,box:r,rotate:a}=this._startInfo,p=this.view.spatialReference,n=new d(s,o,p),h=new d(e,i,p),l=t.geometry;this._angleOfRotation=x(n,l,h);const c=this._startInfo.graphicInfos?.map((t=>t.geometry))??[];for(const t of c){const e=c.indexOf(t),i=E(t,this._angleOfRotation,h);this.graphics[e].geometry=i}this._backgroundGraphic.geometry=E(r,this._angleOfRotation,h),this._rotateHandleGraphic.geometry=E(a,this._angleOfRotation,h)}_moveGraphic(t,e,i){if(this.graphics.includes(t)){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=v(s,e,i,this.view);for(const s of this.graphics)s!==t&&(s.geometry=v(s.geometry,e,i,this.view))}else if(t===this._centerGraphic){const t=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=v(t,e,i,this.view)}if(t===this._backgroundGraphic||t===this._centerGraphic)for(const t of this.graphics)t.geometry=v(t.geometry,e,i,this.view)}_setUpHighlights(){this.highlightsEnabled&&this.graphics.length&&this._highlightHelper?.add(this.graphics)}_setupGraphics(){const{_graphicAttributes:t,symbols:i}=this;this._centerGraphic=new e(null,i.centerIndicator,t),this.showCenterGraphic&&this.layer.add(this._centerGraphic),this._backgroundGraphic=new e(null,i.fill.default,t),this.layer.add(this._backgroundGraphic),this._rotateLineGraphic=new e(null,i.rotatorLine,t),this._rotateHandleGraphic=new e(null,i.rotator.default,t),this.enableRotation&&!this._hasExtentGraphic()&&this.layer.addMany([this._rotateLineGraphic,this._rotateHandleGraphic]);for(let s=0;s<8;s++)this._vertexGraphics.push(new e(null,i.handles.default,t));this.enableScaling&&this.layer.addMany(this._vertexGraphics)}_updateGraphics(){this._updateBackgroundGraphic(),this._updateHandleGraphics(),this._updateCenterGraphic(),this._updateRotateGraphic(),this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this._centerGraphic.visible=!1,this._rotateHandleGraphic.visible=!1,this._rotateLineGraphic.visible=!1,this._vertexGraphics.forEach((t=>t.visible=!1))}_updateHandleGraphics(){const t=this._getCoordinates(!0);this._vertexGraphics.forEach(((e,i)=>{const[s,o]=t[i];this._updateXY(e,s,o)}))}_updateBackgroundGraphic(){const t=this._getCoordinates();this._backgroundGraphic.geometry=new m({rings:t,spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const[t,e,i,s]=this._getBoxBounds(l()),o=(i+t)/2,r=(s+e)/2;this._centerGraphic.geometry=new d(o,r,this.view.spatialReference)}_updateRotateGraphic(){if(!this._vertexGraphics.length)return;const{x:t,y:e}=this._vertexGraphics[1].geometry,i=e+this.view.state.resolution*this._rotateGraphicOffset;this._rotateHandleGraphic.geometry=new d(t,i,this.view.spatialReference)}_updateRotateLineGraphic(){if(!this._vertexGraphics.length||!this._rotateHandleGraphic||!this._rotateHandleGraphic.geometry)return;const t=this._vertexGraphics[1].geometry,e=this._rotateHandleGraphic.geometry;this._rotateLineGraphic.geometry=new y({paths:[[t.x,t.y],[e.x,e.y]],spatialReference:this.view.spatialReference})}_updateXY(t,e,i){t.geometry=new d(e,i,this.view.spatialReference)}_updateX(t,e){const i=t.geometry.y;t.geometry=new d(e,i,this.view.spatialReference)}_updateY(t,e){const i=t.geometry.x;t.geometry=new d(i,e,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some((t=>t&&null!=t.geometry&&"extent"===t.geometry.type))}_getBoxBounds(t){const e=this.graphics.map((t=>t.geometry));return this._getBounds(t,e)}_getCoordinates(t){const[e,i,s,o]=this._getBoxBounds(l());if(t){const t=(e+s)/2,r=(o+i)/2;return[[e,o],[t,o],[s,o],[s,r],[s,i],[t,i],[e,i],[e,r]]}return[[e,o],[s,o],[s,i],[e,i]]}_updateTooltip(t,e){if(null==this._tooltip)return;if(!t)return void this._tooltip.clear();const{_backgroundGraphic:i,graphics:s,_vertexGraphics:o,_rotateHandleGraphic:r}=this;t===r?this._updateRotateTooltip():o.includes(t)?this._updateScaleTooltip():(s.includes(t)||t===i)&&this._updateMoveTooltip(e)}_updateRotateTooltip(){null!=this._tooltip&&(this._tooltip.info=new C({tooltipOptions:this.tooltipOptions,angle:-this._angleOfRotation}))}_updateScaleTooltip(){const{_tooltip:t,_xScale:e,_yScale:i,tooltipOptions:s,view:o}=this;if(null==t)return;const r=o.spatialReference,a=this._getCoordinates(),p=new d(a[0][0],a[0][1],r),n=new d(a[1][0],a[1][1],r),h=new d(a[2][0],a[2][1],r),l=O(p,n),c=O(n,h);if(null==l||null==c)return;const m=Math.abs(e),u=Math.abs(i);t.info=new R({tooltipOptions:s,xScale:m,yScale:u,xSize:l,ySize:c})}_updateMoveTooltip(t){const{_tooltip:e,tooltipOptions:i,view:s}=this;if(null==e)return;const r=new L({tooltipOptions:i});if(t){const{x:e,y:i}=t.origin,a=s.toMap(t),p=s.toMap({x:e,y:i}),n=O(p,a);r.distance=null!=n?n:o}e.info=r}};t([n()],W.prototype,"_tooltip",void 0),t([n({readOnly:!0})],W.prototype,"type",void 0),t([n()],W.prototype,"callbacks",void 0),t([n()],W.prototype,"enableMovement",void 0),t([n()],W.prototype,"enableRotation",void 0),t([n()],W.prototype,"enableScaling",void 0),t([n()],W.prototype,"graphics",void 0),t([n()],W.prototype,"highlightsEnabled",void 0),t([n()],W.prototype,"layer",void 0),t([n()],W.prototype,"preserveAspectRatio",void 0),t([n()],W.prototype,"showCenterGraphic",void 0),t([n({readOnly:!0})],W.prototype,"state",null),t([n({value:q,cast(t){const{centerIndicator:e=q.centerIndicator,fill:i=q.fill,handles:s=q.handles,rotator:o=q.rotator,rotatorLine:r=q.rotatorLine}=t||{};return{centerIndicator:e,fill:i,handles:s,rotator:o,rotatorLine:r}}})],W.prototype,"symbols",void 0),t([n({type:I})],W.prototype,"tooltipOptions",void 0),t([n({constructOnly:!0})],W.prototype,"view",void 0),W=t([h("esri.views.draw.support.Box")],W);const Z=W;export{Z as default};
