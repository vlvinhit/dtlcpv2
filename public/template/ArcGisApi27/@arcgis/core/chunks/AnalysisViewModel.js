/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import e from"../core/Accessor.js";import{c as t}from"./asyncUtils.js";import{L as i}from"./Logger.js";import{c as n,b as a,r}from"./maybe.js";import{throwIfAborted as l,isAbortError as o,isAborted as h}from"../core/promiseUtils.js";import{watch as c,syncAndInitial as y,sync as p,whenOnce as w,when as u}from"../core/reactiveUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as _}from"../core/accessorSupport/decorators/subclass.js";var v;!function(s){s[s.PENDING=0]="PENDING",s[s.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",s[s.RUNNING=2]="RUNNING"}(v||(v={}));let V=class extends e{constructor(s={}){super(s),this.view=null,this.analysisView=null,this._reconnectViewTask=null,this._forceInteractiveHandle=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null,this.logger=i.getLogger(this);const e=s?.analysis;null!=e?this.analysis=e:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0)),s&&null!=s.visible&&(this.visible=s.visible)}normalizeCtorArgs(s){const{analysis:e,...t}=s;return t}initialize(){this.addHandles([c((()=>({readyAndNotSupported:null!=this.view&&this.view.ready&&!this.supported})),(({readyAndNotSupported:s})=>{s&&this.logger.errorOnce(this.unsupportedErrorMessage)}),y),c((()=>n(this.analysis,(({parent:s})=>s))),(s=>{this._parentChangeFromReconnect||s===this.view||this._set("isAnalysisOwner",!1);const e=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,e&&this._scheduleViewReconnect()}),p),c((()=>({view:this.view,ready:null!=this.view&&this.view.ready,supported:this.supported})),(({view:s},e)=>{const t=e?.view;s!==t&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()}),y)])}destroy(){this._reconnectViewTask=a(this._reconnectViewTask),this._startUserOperation=a(this._startUserOperation),null!=this.analysisView&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this._set("view",null),null!=this.analysis&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return null==this.view||this.view.type===this.supportedViewType}set visible(s){this._set("visible",s),null!=this.analysisView&&(this.analysisView.visible=s)}get active(){return null!=this.tool&&this.tool.active}get disabled(){return null==this.view||!this.view.ready||!this.supported}set analysis(s){s!==this._get("analysis")&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(s),this._scheduleViewReconnect())}get ready(){return null!=this.analysisView&&!this.connectingToView}get connectingToView(){return null!=this._reconnectViewTask}get isAnalysisOwner(){return this._get("isAnalysisOwner")}get tool(){return null!=this.analysisView?this.analysisView.tool:null}clear(){this._startUserOperation=a(this._startUserOperation),this._resetInteractiveCreationState(),null!=this.tool&&null!=this.view&&this.view.activeTool===this.tool&&(this.view.activeTool=null)}async start(){this.clear();const s={task:null,abort:null,state:v.PENDING},e=t((async e=>{if(s.state=v.WAIT_FOR_VIEW_READY,await w((()=>this.ready),e),s.state=v.RUNNING,null==this.analysisView||null==this.view)return;const t=this.analysisView.tool;null!=t&&(this.view.activeTool=t,u((()=>t.created),(()=>{t.active&&null!=this.view&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}));return s.task=e,s.abort=()=>e.abort(),this._startUserOperation=s,e.promise}onConnectToAnalysisView(s){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=a(this._reconnectViewTask);const s=t((async e=>{try{await this._reconnectView(e)}catch(s){if(l(e),!o(s))return void this.logger.warn("Failed to use analysis in view model",s);throw s}finally{s===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=s}async _reconnectView(s){const{view:e}=this,t=null!=e&&e.ready&&this.supported,i=this.analysis;if(this._startUserOperation=m(this._startUserOperation),this._disconnectFromView(e),t&&null!=e&&null!=i){if(this.isAnalysisOwner){if(null!=i.parent)return void this.logger.errorOnce("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,e.analyses.add(i)}this.analysisView=await e.whenAnalysisView(i),h(s)?this._startUserOperation=m(this._startUserOperation):(this.analysisView.visible=this.visible,this._forceInteractiveHandle=this.analysisView.forceInteractiveForViewModel(),this.addHandles(this._forceInteractiveHandle),this.onConnectToAnalysisView(this.analysisView))}}_disconnectFromView(s){null!=s&&this.isAnalysisOwner&&s.analyses.includes(this.analysis)&&(this._parentChangeFromReconnect=!0,this.analysis.clear(),s.analyses.remove(this.analysis)),this.onDisconnectFromAnalysisView(),this._forceInteractiveHandle=r(this._forceInteractiveHandle),this.analysisView=null}_setExternalAnalysis(s){null==this.analysisView||this.isAnalysisOwner||(this.analysisView.visible=void 0,this._forceInteractiveHandle=r(this._forceInteractiveHandle)),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",s),this._parentChangeFromReconnect=!1}_resetInteractiveCreationState(){this.analysis.clear(),null!=this.tool&&this.tool.resetCreated()}get testInfo(){return{analysisView:this.analysisView}}};function m(s){return null!=s&&s.state>=v.RUNNING?(s.abort(),null):s}s([d()],V.prototype,"supported",null),s([d()],V.prototype,"view",void 0),s([d({type:Boolean,value:!0})],V.prototype,"visible",null),s([d()],V.prototype,"active",null),s([d()],V.prototype,"disabled",null),s([d({nonNullable:!0})],V.prototype,"analysis",null),s([d()],V.prototype,"analysisView",void 0),s([d()],V.prototype,"ready",null),s([d()],V.prototype,"connectingToView",null),s([d({readOnly:!0})],V.prototype,"isAnalysisOwner",null),s([d()],V.prototype,"_reconnectViewTask",void 0),s([d()],V.prototype,"_forceInteractiveHandle",void 0),s([d()],V.prototype,"tool",null),V=s([_("esri.widgets.support.AnalysisViewModel")],V);export{V as A};
