/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{n as e}from"./mat4.js";import{c as t}from"./mat4f64.js";import{s as r}from"./vec3.js";import{f as s,Z as a,c as i}from"./vec3f64.js";import{c as o,o as n,a as c}from"./aaBoundingRect.js";import{V as d}from"./basicInterfaces.js";import{U as l,B as h}from"./ShaderBuilder.js";import{F as u}from"./Float3PassUniform.js";import{F as m}from"./FloatPassUniform.js";import{M as g}from"./Matrix4PassUniform.js";class T extends l{constructor(e,t){super(e,"vec3",h.Draw,((r,s,a,i)=>r.setUniform3fv(e,t(s,a,i))))}}var f,p,x,v,w,O;!function(e){e[e.INNER=0]="INNER",e[e.OUTER=1]="OUTER"}(f||(f={})),function(e){e[e.REGULAR=0]="REGULAR",e[e.HAS_NORTH_POLE=1]="HAS_NORTH_POLE",e[e.HAS_SOUTH_POLE=2]="HAS_SOUTH_POLE",e[e.HAS_BOTH_POLES=3]="HAS_BOTH_POLES"}(p||(p={})),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON"}(x||(x={})),function(e){e[e.Color=0]="Color",e[e.ColorNoRasterImage=1]="ColorNoRasterImage",e[e.Highlight=2]="Highlight",e[e.Water=3]="Water",e[e.Occluded=4]="Occluded",e[e.ObjectAndLayerIdColor=5]="ObjectAndLayerIdColor"}(v||(v={})),function(e){e[e.FADING=0]="FADING",e[e.IMMEDIATE=1]="IMMEDIATE",e[e.UNFADED=2]="UNFADED"}(w||(w={}));class I{constructor(e,t){this.vec3=e,this.id=t}}function R(e,t,r,a){return new I(s(e,t,r),a)}!function(e){e[e.None=0]="None",e[e.ColorAndWater=1]="ColorAndWater",e[e.Highlight=2]="Highlight",e[e.Occluded=3]="Occluded",e[e.ObjectAndLayerIdColor=4]="ObjectAndLayerIdColor"}(O||(O={}));const C=1.3;class A{get extent(){return this._extent}constructor(e,t){this.index=e,this.renderTargets=t,this._extent=o(),this.resolution=0,this.renderLocalOrigin=R(0,0,0,"O"),this.pixelRatio=1,this.mapUnitsPerPixel=1,this.canvasGeometries=new N,this.hasDrapedFeatureSource=!1,this.hasDrapedRasterSource=!1,this.hasTargetWithoutRasterImage=!1,this.index=e,this.validTargets=new Array(t.renderTargets.length).fill(!1)}getValidTexture(e){return this.validTargets[e]?this.renderTargets.getTarget(e).getTexture():null}get _needsColorWithoutRasterImage(){return this.hasDrapedRasterSource&&this.hasDrapedFeatureSource&&this.hasTargetWithoutRasterImage}getColorTexture(e){const t=e===O.ColorAndWater?this.renderTargets.getTarget(v.Color):e===O.Highlight?this.renderTargets.getTarget(v.Highlight):e===O.ObjectAndLayerIdColor?this.renderTargets.getTarget(v.ObjectAndLayerIdColor):this.renderTargets.getTarget(v.Occluded);return t?t.getTexture():null}getColorTextureNoRasterImage(){return this._needsColorWithoutRasterImage?this.getValidTexture(v.ColorNoRasterImage):this.hasDrapedFeatureSource?this.getValidTexture(v.Color):null}getNormalTexture(e){const t=e===O.ColorAndWater?this.renderTargets.getTarget(v.Water):null;return t?t.getTexture():null}draw(e,t){const r=this.computeRenderTargetValidityBitfield();for(const r of this.renderTargets.renderTargets)r.type!==v.ColorNoRasterImage||this._needsColorWithoutRasterImage?this.validTargets[r.type]=e.drawTarget(this,r,t):this.validTargets[r.type]=!1;return r^this.computeRenderTargetValidityBitfield()?d.CHANGED:d.UNCHANGED}computeRenderTargetValidityBitfield(){const e=this.validTargets;return+e[v.Color]|+e[v.ColorNoRasterImage]<<1|+e[v.Highlight]<<2|+e[v.Water]<<3|+e[v.Occluded]<<4}setupGeometryViewsCyclical(e){this.setupGeometryViewsDirect();const t=.001*e.range;if(this._extent[0]-t<=e.min){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];n(this._extent,e.range,0,t)}if(this._extent[2]+t>=e.max){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];n(this._extent,-e.range,0,t)}}setupGeometryViewsDirect(){this.canvasGeometries.numViews=1,c(this.canvasGeometries.extents[0],this._extent)}hasSomeSizedView(){for(let e=0;e<this.canvasGeometries.numViews;e++){const t=this.canvasGeometries.extents[e];if(t[0]!==t[2]&&t[1]!==t[3])return!0}return!1}applyViewport(e){e.setViewport(this.index===f.INNER?0:this.resolution,0,this.resolution,this.resolution)}}class N{constructor(){this.extents=[o(),o(),o()],this.numViews=0}}class _ extends l{constructor(e,t){super(e,"mat4",h.Draw,((r,s,a)=>r.setUniformMatrix4fv(e,t(s,a))))}}function D(e,t){t.instancedDoublePrecision?e.constants.add("cameraPosition","vec3",a):e.uniforms.add(new T("cameraPosition",((e,t)=>r(j,t.camera.viewInverseTransposeMatrix[3]-e.origin[0],t.camera.viewInverseTransposeMatrix[7]-e.origin[1],t.camera.viewInverseTransposeMatrix[11]-e.origin[2]))))}function E(t,s){if(!s.instancedDoublePrecision)return void t.uniforms.add(new g("proj",((e,t)=>t.camera.projectionMatrix)),new _("view",((t,r)=>e(H,r.camera.viewMatrix,t.origin))),new T("localOrigin",(e=>e.origin)));const a=e=>r(j,e.camera.viewInverseTransposeMatrix[3],e.camera.viewInverseTransposeMatrix[7],e.camera.viewInverseTransposeMatrix[11]);t.uniforms.add(new g("proj",((e,t)=>t.camera.projectionMatrix)),new g("view",((t,r)=>e(H,r.camera.viewMatrix,a(r)))),new u("localOrigin",((e,t)=>a(t))))}const H=t(),j=i();function M(e){e.uniforms.add(new g("viewNormal",((e,t)=>t.camera.viewInverseTransposeMatrix)))}function y(e,t){e.uniforms.add(new m("pixelRatio",((e,r)=>r.camera.pixelRatio/(t.draped?1.3:1))))}export{T as F,x as L,_ as M,f as O,p as P,v as R,w as T,E as a,y as b,D as c,A as d,C as e,R as f,M as g,O as h};
