/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{p as t,g as e}from"./typedArrayUtil.js";import{W as s}from"./WorkerHandle.js";import{u as a}from"./workerHelper.js";import{c as n}from"./edgeProcessing.js";class r extends s{constructor(t){super("EdgeProcessingWorker","extract",{extract:t=>[t.dataBuffer],extractComponentsEdgeLocations:t=>[t.dataBuffer],extractEdgeLocations:t=>[t.dataBuffer]},t)}async process(t,e,s){if(s)return n(t);const a=await this.invoke(new i(t),e);return this._unpackOutput(a)}async extractEdgeLocations(t,e){const s=await this.invokeMethod("extractEdgeLocations",new i(t),e);return a(s)}async extractComponentsEdgeLocations(t,e){const s=await this.invokeMethod("extractComponentsEdgeLocations",new i(t),e);return a(s)}_unpackOutput(t){return{regular:{instancesData:a(t.regular.instancesData),lodInfo:{lengths:new Float32Array(t.regular.lodInfo.lengths)}},silhouette:{instancesData:a(t.silhouette.instancesData),lodInfo:{lengths:new Float32Array(t.silhouette.lodInfo.lengths)}},averageEdgeLength:t.averageEdgeLength}}}class i{constructor(s){this.dataBuffer=s.data.buffer,this.writerSettings=s.writerSettings,this.skipDeduplicate=s.skipDeduplicate,this.indices=t(s.indices)?s.indices:s.indices.buffer,this.indicesType=t(s.indices)?"Array":e(s.indices)?"Uint32Array":"Uint16Array",this.indicesLength=s.indicesLength}}export{r as E};
