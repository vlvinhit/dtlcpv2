/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../request.js";import{c as t}from"./asyncUtils.js";import s from"../core/Error.js";import{L as i}from"./Logger.js";import{isAbortError as r}from"../core/promiseUtils.js";import{getJsonType as o}from"../geometry/support/jsonUtils.js";import{W as n,f as a}from"./unitUtils.js";import{c as p,i as l,n as m,o as u,p as d}from"./featureConversionUtils.js";import{F as c}from"./FeatureStore.js";import{c as y,p as h}from"./projectionSupport.js";import{Q as j}from"./QueryEngine.js";import{i as f,c as g,v as _}from"./geojson.js";import{a as F,d as I,b as E}from"./clientSideDefaults.js";import{l as b,m as w,c as T,a as S,s as x}from"./sourceUtils.js";import q from"../layers/support/FieldsIndex.js";import{k as R}from"./fieldType.js";import{getFieldDefaultValue as O}from"../layers/support/fieldUtils.js";import"../config.js";import"./typedArrayUtil.js";import"./object.js";import"../core/lang.js";import"../kernel.js";import"../core/urlUtils.js";import"./maybe.js";import"./string.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./tracking.js";import"./ensureType.js";import"./get.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./jsonMap.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./aaBoundingBox.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./OptimizedGeometry.js";import"../core/Evented.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./_commonjsHelpers.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./timeSupport.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"../geometry.js";import"./typeUtils.js";import"./utils4.js";import"./utils5.js";import"./json.js";import"./MemCache.js";import"./LRUCache.js";import"../core/sql/WhereClause.js";import"./executionError.js";import"./datetime.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils9.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./arcadeOnDemand.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"../core/reactiveUtils.js";import"../core/signal.js";import"./debugFlags.js";import"./defaultsJSON.js";const C={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class k{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let r=null;e.url&&(r=await this._fetch(t?.signal));const o=f(r,{geometryType:e.geometryType}),a=e.fields||o.fields||[],p=null!=e.hasZ?e.hasZ:o.hasZ,l=o.geometryType;let m=e.objectIdField||o.objectIdFieldName||"__OBJECTID";const u=e.spatialReference||n;let d=e.timeInfo;a===o.fields&&o.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:o.unknownFields}});let y=new q(a).get(m);y?("esriFieldTypeString"!==y.type&&(y.type="esriFieldTypeOID"),y.editable=!1,y.nullable=!1,m=y.name):(y={alias:m,name:m,type:"string"===o.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},a.unshift(y));const h={};for(const e of a){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new s("geojson-layer:invalid-field-name","field name is missing",{field:e});if(!R.jsonValues.includes(e.type))throw new s("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e});if(e.name!==y.name){const t=O(e);void 0!==t&&(h[e.name]=t)}}this._fieldsIndex=new q(a);const g=this._fieldsIndex.requiredFields.indexOf(y);if(g>-1&&this._fieldsIndex.requiredFields.splice(g,1),d){if(d.startTimeField){const e=this._fieldsIndex.get(d.startTimeField);e?(d.startTimeField=e.name,e.type="esriFieldTypeDate"):d.startTimeField=null}if(d.endTimeField){const e=this._fieldsIndex.get(d.endTimeField);e?(d.endTimeField=e.name,e.type="esriFieldTypeDate"):d.endTimeField=null}if(d.trackIdField){const e=this._fieldsIndex.get(d.trackIdField);e?d.trackIdField=e.name:(d.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:d}}))}d.startTimeField||d.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:d}}),d=null)}const _=l?F(l):void 0,b={warnings:i,featureErrors:[],layerDefinition:{...C,drawingInfo:_??void 0,templates:I(h),extent:void 0,geometryType:l,objectIdField:m,fields:a,hasZ:!!p,timeInfo:d}};this._queryEngine=new j({fields:a,geometryType:l,hasM:!1,hasZ:p,objectIdField:m,spatialReference:u,timeInfo:d,featureStore:new c({geometryType:l,hasM:!1,hasZ:p}),cacheSpatialQueries:!0}),this._createDefaultAttributes=E(h,m);const w=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const T=this._normalizeFeatures(w,b.warnings,b.featureErrors);this._queryEngine.featureStore.addMany(T);const{fullExtent:S,timeExtent:x}=await this._queryEngine.fetchRecomputedExtents();if(b.layerDefinition.extent=S,x){const{start:e,end:t}=x;b.layerDefinition.timeInfo.timeExtent=[e,t]}return b}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([b(t,s),y(e.adds,t),y(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=t(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),r(e)||i.getLogger("esri.layers.GeoJSONLayer").error(new s("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:o,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:o,timeExtent:n}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=g(e,{geometryType:t,hasZ:s,objectIdField:i});if(!a(this._queryEngine.spatialReference,n))for(const e of r)null!=e.geometry&&(e.geometry=p(h(l(e.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),n,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await e(s,{responseType:"json",query:{...i},signal:t})).data;return await _(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const o of e){const e=this._createDefaultAttributes(),n=w(this._fieldsIndex,e,o.attributes,!0,t);n?s?.push(n):(this._assignObjectId(e,o.attributes,!0),o.attributes=e,o.objectId=e[i],r.push(o))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push(T(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:o,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:o,timeExtent:n,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:n,objectIdField:a,spatialReference:p,featureStore:l}=this._queryEngine,u=[];for(const r of t){if(r.geometry&&i!==o(r.geometry)){s.push(S("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=w(this._fieldsIndex,t,r.attributes);if(n)s.push(n);else{if(this._assignObjectId(t,r.attributes),r.attributes=t,null!=r.uid){const t=r.attributes[a];e.uidToObjectId[r.uid]=t}if(null!=r.geometry){const e=r.geometry.spatialReference??p;r.geometry=h(x(r.geometry,e),e,p)}u.push(r),s.push(T(r.attributes[a]))}}l.addMany(m([],u,i,n,r,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:n,spatialReference:a,featureStore:p}=this._queryEngine;for(const l of t){const{attributes:t,geometry:m}=l,c=t&&t[n];if(null==c){e.push(S(`Identifier field ${n} missing`));continue}if(!p.has(c)){e.push(S(`Feature with object id ${c} missing`));continue}const y=u(p.getFeature(c),s,r,i);if(null!=m){if(s!==o(m)){e.push(S("Incorrect geometry type."));continue}const t=m.spatialReference??a;y.geometry=h(x(m,t),t,a)}if(t){const s=w(this._fieldsIndex,y.attributes,t);if(s){e.push(s);continue}}p.add(d(y,s,r,i,n)),e.push(T(c))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const e of t)e.objectId&&(i=Math.max(i,e.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await y(n,e)}catch{throw new s("geojson-layer","Projection not supported")}}}export{k as default};
