/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import{id as s}from"../kernel.js";import r from"../request.js";import o from"../TimeExtent.js";import{h as a,i}from"./typedArrayUtil.js";import n from"../core/Error.js";import{J as p}from"./jsonMap.js";import l from"../core/Loadable.js";import{L as u}from"./Logger.js";import{s as m}from"./object.js";import{debounce as c,after as d,throwIfAbortError as y}from"../core/promiseUtils.js";import{F as h}from"./unitUtils.js";import{join as j,parseData as f}from"../core/urlUtils.js";import{a as g}from"./uuid.js";import{property as b}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as S}from"../core/accessorSupport/decorators/subclass.js";import R from"../geometry/Extent.js";import{initializeProjection as F,project as E}from"../geometry/projection.js";import{fromJSON as I}from"../geometry/support/jsonUtils.js";import{f as O}from"./mat4.js";import{c as w}from"./mat4f64.js";import x from"../geometry/support/MeshGeoreferencedRelativeVertexSpace.js";import{t as A}from"./vec32.js";import{b as q}from"./External.js";import{isFeatureIdentifierArrayWithGlobalId as _,isFeatureIdentifierArrayWithObjectId as T}from"./editingSupport.js";import{a as D}from"./clientSideDefaults.js";import{Q as v}from"./QueryTask.js";import{i as M}from"./arcgisLayerUrl.js";import{b as U}from"./infoFor3D.js";import{e as C}from"./executeQueryJSON.js";import{u as L}from"./editsZScale.js";import P from"../rest/support/Query.js";import N from"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"./get.js";import"./utils.js";import"../core/lang.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../config.js";import"./string.js";import"./reader.js";import"./writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./datetime.js";import"./number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../core/Promise.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./timeUtils.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils4.js";import"./utils5.js";import"./EditBusLayer.js";import"./layerUtils.js";import"./QueryEngineCapabilities.js";import"./defaultsJSON.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./executeForIds.js";import"./query.js";import"./urlUtils2.js";import"./pbfQueryUtils.js";import"./pbf.js";import"./OptimizedGeometry.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./queryZScale.js";import"./executeForExtent.js";import"./executeQueryPBF.js";import"./featureConversionUtils.js";import"../rest/support/FeatureSet.js";import"./FullTextSearch.js";import"./QuantizationParameters.js";import"../rest/support/StatisticDefinition.js";function J(t){const{vertexSpace:e}=t;if(e.isRelative)return t.clone();const{anchor:s}=t,r=s.clone(),o=O(k,[-r.x,-r.y,-r.z]),a=new x({origin:[r.x,r.y,r.z]}),i=t.cloneWithVertexSpace(a),{position:n}=i.vertexAttributes;return i.vertexAttributes.position=A(new Float64Array(n.length),n,o),i.vertexAttributesChanged(),i}const k=w(),Q=new p({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),G=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),V=new p({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let z=class extends l{constructor(){super(...arguments),this.type="feature-layer",this.refresh=c((async()=>{await this.load();const t=this.sourceJSON.editingInfo?.lastEditDate;if(null==t)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}})),this._ongoingAssetUploads=new Map}load(t){const e=null!=t?t.signal:null,s=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(s,e)),Promise.resolve(this)}get queryTask(){const{capabilities:t,parsedUrl:e,dynamicDataSource:s,infoFor3D:r,gdbVersion:o,spatialReference:i,fieldsIndex:n}=this.layer,p=a("featurelayer-pbf")&&t?.query.supportsFormatPBF&&null==r,l=t?.operations?.supportsQueryAttachments??!1;return new v({url:e.path,pbfSupported:p,fieldsIndex:n,infoFor3D:r,dynamicDataSource:s,gdbVersion:o,sourceSpatialReference:i,queryAttachmentsSupported:l})}async addAttachment(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],o=this.layer.parsedUrl.path+"/"+s+"/addAttachment",a=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(e,a.query);try{const t=await r(o,{body:i});return this._createFeatureEditResult(t.data.addAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}async updateAttachment(t,e,s){await this.load();const o=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+o+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:e}}),n=this._getFormDataForAttachment(s,i.query);try{const t=await r(a,{body:n});return this._createFeatureEditResult(t.data.updateAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(o,t)}}async applyEdits(t,e){await this.load();const{layer:o}=this,a=o.infoFor3D,n=null!=a,p=n||(e?.globalIdUsed??!1),l=n?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,u=t.addFeatures?.map((t=>this._getFeatureJSON(t,a)))??[],m=(await Promise.all(u)).filter(i),c=t.updateFeatures?.map((t=>this._getFeatureJSON(t,a)))??[],d=(await Promise.all(c)).filter(i),y=this._getFeatureIds(t.deleteFeatures,p);L(m,d,o.spatialReference);const h=await this._getAttachmentEditsJSON(t),j=o.capabilities.editing.supportsAsyncApplyEdits&&n,f={gdbVersion:e?.gdbVersion||o.gdbVersion,rollbackOnFailure:e?.rollbackOnFailureEnabled,useGlobalIds:p,returnEditMoment:e?.returnEditMoment,usePreviousEditMoment:e?.usePreviousEditMoment,sessionId:e?.sessionId,async:j};e?.returnServiceEditsOption?(f.edits=JSON.stringify([{id:o.layerId,adds:m,updates:d,deletes:y,attachments:h,assetMaps:l}]),f.returnServiceEditsOption=Q.toJSON(e?.returnServiceEditsOption),f.returnServiceEditsInSourceSR=e?.returnServiceEditsInSourceSR):(f.adds=m.length?JSON.stringify(m):null,f.updates=d.length?JSON.stringify(d):null,f.deletes=y.length?p?JSON.stringify(y):y.join(","):null,f.attachments=h&&JSON.stringify(h),f.assetMaps=null!=l?JSON.stringify(l):void 0);const g=this._getLayerRequestOptions({method:"post",query:f}),b=e?.returnServiceEditsOption?o.url:o.parsedUrl.path,S=j?await this._asyncApplyEdits(b+"/applyEdits",g):await r(b+"/applyEdits",g);if(!o.capabilities.operations?.supportsEditing&&o.effectiveCapabilities?.operations?.supportsEditing){const t=s?.findCredential(o.url);await(t?.refreshToken())}return this._createEditsResult(S)}async deleteAttachments(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],o=this.layer.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await r(o,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then((async()=>{const e=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:a}=this.layer,{data:i}=await r(`${a}/${s}`,e),{id:n,extent:p,fullExtent:l,timeExtent:u}=i,m=p||l;return{id:n,fullExtent:m&&R.fromJSON(m),timeExtent:u&&o.fromJSON({start:u[0],end:u[1]})}}))}async queryAttachments(t,e={}){await this.load();const s=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,s)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!M(this.layer.url))return"unavailable";const t=j(this.layer.url,"status"),e=await r(t,{query:{f:"json"}});return V.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:s}=await import("./uploadAssets.js");return s(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const s=(await r(t,e)).data.statusUrl;for(;;){const t=(await r(s,{query:{f:"json"},responseType:"json"})).data;switch(t.status){case"Completed":return r(t.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new n("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new n("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await d($)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t?.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:s}=await r(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:a("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=s}this.sourceJSON=await this._patchServiceJSON(t,e);const s=t.type;if(!G.has(s))throw new n("feature-layer-source:unsupported-type",`Source type "${s}" is not supported`)}async _patchServiceJSON(t,e){if("Table"!==t.type&&t.geometryType&&!t?.drawingInfo?.renderer&&!t.defaultSymbol){const e=D(t.geometryType).renderer;m("drawingInfo.renderer",e,t)}if("esriGeometryMultiPatch"===t.geometryType&&t.infoFor3D&&(t.geometryType="mesh"),null==t.extent)try{const{data:s}=await r(this.layer.url,this._getLayerRequestOptions({signal:e}));s.spatialReference&&(t.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(t){y(t)}return t}async _getFeatureJSON(t,e){const{geometry:s}=t,r={...t.attributes};if(null!=e&&"mesh"===s?.type){const{transformFieldRoles:t}=e,{origin:o,spatialReference:a,transform:i}=s,n=this.layer.spatialReference;await F(a,n);const p=E(o,n);if(r[t.originX]=p.x,r[t.originY]=p.y,r[t.originZ]=p.z??0,null!=i){const{translation:e,scale:o,rotation:p}=i,{vertexSpace:l}=s,u=l.isGeoreferenced?1:h(a)/h(n);r[t.translationX]=e[0]*u,r[t.translationY]=-e[2]*u,r[t.translationZ]=e[1]*u,r[t.scaleX]=o[0],r[t.scaleY]=o[2],r[t.scaleZ]=o[1],r[t.rotationX]=p[0],r[t.rotationY]=p[2],r[t.rotationZ]=p[1],r[t.rotationDeg]=p[3]}return{geometry:null,attributes:r}}return null==s?{attributes:r}:"mesh"===s.type||"extent"===s.type?null:{geometry:s.toJSON(),attributes:r}}async _getAttachmentEditsJSON(t){const e=await Promise.all((t.addAttachments??[]).map((t=>this._getAttachmentEditJSON(t)))),s=await Promise.all((t.updateAttachments??[]).map((t=>this._getAttachmentEditJSON(t)))),r=t.deleteAttachments??[];return e.length||s.length||r.length?{adds:e,updates:s,deletes:[...r]}:null}async _getAttachmentEditJSON(t){const{feature:e,attachment:s}=t,{globalId:r,name:o,contentType:a,data:i,uploadId:n}=s,p={globalId:r,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(p.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),n)p.uploadId=n;else if(i){const t=await f(i);t&&(p.contentType=t.mediaType,p.data=t.data),i instanceof File&&(p.name=i.name)}return o&&(p.name=o),a&&(p.contentType=a),p}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!e?.length)return null;const s=await this._filterRedundantAssetMaps(e);if(!e?.length)return null;const r=new Array,o=new Map;for(const t of s){const{geometry:e}=t,{vertexSpace:s}=e;if(s.isRelative)r.push(e);else{const s=J(e);o.set(s,e),t.geometry=s,r.push(s)}}await this.uploadAssets(r);for(const[t,e]of o)e.addExternalSources(t.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(s),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,s=this.layer.globalIdField,r=this.layer.parsedUrl;for(const o of t){const t=o.geometry,{metadata:a}=t,i=a.getExternalSourcesOnService(r),n=o.getAttribute(s);if(0===i.length){u.getLogger(this).error(`Skipping feature ${n}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:p}=i.find(q)??i[0],{vertexSpace:l}=t,m=l.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const t of p)1===t.parts.length?e.push({globalId:g(),parentGlobalId:n,assetName:t.assetName,assetHash:t.parts[0].partHash,flags:m}):u.getLogger(this).error(`Skipping asset ${t.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_getFeatureIds(t,e){if(!t||0===t.length)return[];if(e&&_(t))return t.map((t=>t.globalId));if(T(t))return t.map((t=>t.objectId));const{layer:s}=this,r=e?s.globalIdField:s.objectIdField;return r?t.map((t=>t.getAttribute(r))):[]}_createEditsResult(t){const e=t.data,{layerId:s}=this.layer,r=[];let o=null;if(Array.isArray(e))for(const t of e)r.push({id:t.id,editedFeatures:t.editedFeatures}),t.id===s&&(o={addResults:t.addResults??[],updateResults:t.updateResults??[],deleteResults:t.deleteResults??[],attachments:t.attachments,editMoment:t.editMoment});else o=e;const a=o?.assetMaps;if(a){for(const t of a.addResults)t.success||u.getLogger(this).error(`Failed to map asset to feature with globalId ${t.globalId}.`);for(const t of a.updateResults)t.success||u.getLogger(this).error(`Failed to map asset to feature with globalId ${t.globalId}.`)}const i=o?.attachments,n={addFeatureResults:o?.addResults?.map(this._createFeatureEditResult,this)??[],updateFeatureResults:o?.updateResults?.map(this._createFeatureEditResult,this)??[],deleteFeatureResults:o?.deleteResults?.map(this._createFeatureEditResult,this)??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(o?.editMoment&&(n.editMoment=o.editMoment),r.length>0){n.editedFeatureResults=[];for(const t of r){const{editedFeatures:e}=t,s=e?.spatialReference?new N(e.spatialReference):null;n.editedFeatureResults.push({layerId:t.id,editedFeatures:{adds:e?.adds?.map((t=>this._createEditedFeature(t,s)))||[],updates:e?.updates?.map((t=>({original:this._createEditedFeature(t[0],s),current:this._createEditedFeature(t[1],s)})))||[],deletes:e?.deletes?.map((t=>this._createEditedFeature(t,s)))||[],spatialReference:s}})}}return n}_createEditedFeature(t,s){return new e({attributes:t.attributes,geometry:I({...t.geometry,spatialReference:s})})}_createFeatureEditResult(t){const e=!0===t.success?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new n("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const s=e.details.messages&&e.details.messages[0]||e.message,r=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new n("feature-layer-source:attachment-failure",s,{code:r})}}_getFormDataForAttachment(t,e){const s=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(s)for(const t in e){const r=e[t];null!=r&&(s.set?s.set(t,r):s.append(t,r))}return s}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:s,dynamicDataSource:r}=this.layer;return{...t,query:{gdbVersion:s,layer:r?JSON.stringify({source:r}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:s,infoFor3D:r,parsedUrl:o}=e;if(null==r||null==s)return t;const a=U(r);if(null==a)return t;const n=j(o.path,`../${a.id}`),p=new Array,l=new Array;for(const e of t)e.geometry.metadata.getExternalSourcesOnService(o).length>0?l.push(e):p.push(e);const u=l.map((t=>t.getAttribute(s))).filter(i);if(0===u.length)return t;const{assetMapFieldRoles:{parentGlobalId:m,assetHash:c}}=r,d=new P;d.where=`${m} IN (${u.map((t=>`'${t}'`))})`,d.outFields=[c,m],d.returnGeometry=!1;const y=await C(n,d),{features:h}=y;return 0===h.length?t:[...p,...l.filter((t=>{const e=t.getAttribute(s);if(!e)return!0;const{metadata:r}=t.geometry,a=h.filter((t=>t.getAttribute(m)===e));if(0===a.length)return!0;const i=a.map((t=>t.getAttribute(c)));return r.getExternalSourcesOnService(o).flatMap((({source:t})=>t.flatMap((t=>t.parts.map((t=>t.partHash)))))).some((t=>i.every((e=>t!==e))))}))]}};t([b()],z.prototype,"type",void 0),t([b({constructOnly:!0})],z.prototype,"layer",void 0),t([b({readOnly:!0})],z.prototype,"queryTask",null),z=t([S("esri.layers.graphics.sources.FeatureLayerSource")],z);const $=1e3,B=z;export{B as default};
