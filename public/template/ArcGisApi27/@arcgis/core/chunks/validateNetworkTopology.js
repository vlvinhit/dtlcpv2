/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import t from"../request.js";import o from"../core/Error.js";import{p as r,e as s,a as i}from"./utils4.js";import{V as e}from"./ValidateNetworkTopologyResult.js";import"../config.js";import"./typedArrayUtil.js";import"./object.js";import"../core/lang.js";import"../kernel.js";import"../core/urlUtils.js";import"./Logger.js";import"./string.js";import"./maybe.js";import"../core/promiseUtils.js";import"./tslib.es6.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./tracking.js";import"./ensureType.js";import"./get.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";async function a(o,a,p){const m=r(o),n=a.toJSON();a.validationSet&&(n.validationSet=JSON.stringify(a.validationSet));const c={...n,returnEdits:!0,f:"json"},j=s({...m.query,...c}),l=i(j,{...p,method:"post"}),d=`${m.path}/validateNetworkTopology`,{data:u}=await t(d,l),y=e.fromJSON(u);return y.serviceEdits=y.serviceEdits?.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures})))??[],y}async function p(e,a,p){if(!a.gdbVersion)throw new o("submit-validate-network-topology-job:missing-gdb-version","version is missing");const m=r(e),n=a.toJSON();a.validationSet&&(n.validationSet=JSON.stringify(a.validationSet));const c=i(m.query,{query:s({...n,returnEdits:!0,async:!0,f:"json"}),...p,method:"post"}),j=`${m.path}/validateNetworkTopology`,{data:l}=await t(j,c);return l?l.statusUrl:null}export{p as submitValidateNetworkTopologyJob,a as validateNetworkTopology};
