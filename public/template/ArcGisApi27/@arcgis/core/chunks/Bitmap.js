/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{c as t}from"./maybe.js";import{createResolver as e,onAbortOrThrow as i,throwIfNotAbortError as s}from"../core/promiseUtils.js";import{d as r,e as h,r as o,g as l,m as a}from"./mat3.js";import{c as u}from"./mat3f32.js";import{f as n}from"./vec2f32.js";import{D as c}from"./DisplayObject.js";import{C as d}from"./contextUtils.js";import{S as p,P as x,T as _}from"./enums3.js";import{T as m,a as g}from"./Texture.js";class f{constructor(t,e,i){this.pixelBlock=t,this.extent=e,this.originalPixelBlock=i}get width(){return null!=this.pixelBlock?this.pixelBlock.width:0}get height(){return null!=this.pixelBlock?this.pixelBlock.height:0}render(t){const e=this.pixelBlock;if(null==e)return;const i=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??e});if(null==i.pixelBlock)return;i.pixelBlock.maskIsAlpha&&(i.pixelBlock.premultiplyAlpha=!0);const s=i.pixelBlock.getAsRGBA(),r=t.createImageData(i.pixelBlock.width,i.pixelBlock.height);r.data.set(s),t.putImageData(r,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return null==t.pixelBlock?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function B(t){return t&&"render"in t}function w(t){const e=document.createElement("canvas");return e.width=t.width,e.height=t.height,t.render(e.getContext("2d")),e}class k extends c{constructor(t=null,e=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this._texture=null,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._width=void 0,this.x=0,this.y=0,this.immutable=e,this.source=t,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),null!=this._uploadStatus&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return void 0!==this._height?this._height:this._sourceHeight}set height(t){this._height=t}get source(){return this._source}set source(t){null==t&&null==this._source||(this._source=t,this.invalidateTexture(),this.requestRender())}get width(){return void 0!==this._width?this._width:this._sourceWidth}set width(t){this._width=t}beforeRender(t){super.beforeRender(t),this.updateTexture(t)}async setSourceAsync(t,s){null!=this._uploadStatus&&this._uploadStatus.controller.abort();const r=new AbortController,h=e();return i(s,(()=>r.abort())),i(r,(t=>h.reject(t))),this._uploadStatus={controller:r,resolver:h},this.source=t,h.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}updateTransitionProperties(t,e){t>=64&&(this.fadeTransitionEnabled=!1,this.inFadeTransition=!1),super.updateTransitionProperties(t,e)}setTransform(t){const e=r(this.transforms.dvs),[i,s]=t.toScreenNoRotation([0,0],[this.x,this.y]),u=this.resolution/this.pixelRatio/t.resolution,c=u*this.width,d=u*this.height,p=Math.PI*this.rotation/180;h(e,e,n(i,s)),h(e,e,n(c/2,d/2)),o(e,e,-p),h(e,e,n(-c/2,-d/2)),l(e,e,n(c,d)),a(this.transforms.dvs,t.displayViewMat3,e)}setSamplingProfile(t){this._texture&&(t.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(t.samplingMode))}bind(t,e){this._texture&&t.bindTexture(this._texture,e)}async updateTexture({context:e,painter:i}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(e)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const r=B(h=this.source)?h instanceof f?t(h.getRenderedRasterPixels(),(t=>t.renderedRasterPixels)):w(h):h;var h;try{if(null!=this._uploadStatus){const{controller:t,resolver:e}=this._uploadStatus,s={signal:t.signal},{width:h,height:o}=this,l=this._texture,a=i.textureUploadManager;await a.enqueueTextureUpdate({data:r,texture:l,width:h,height:o},s),e.resolve(),this._uploadStatus=null}else this._texture.setData(r);this.ready()}catch(t){s(t)}}onDetach(){this.destroy()}_createTransforms(){return{dvs:u()}}_createTexture(t){const e=this.immutable&&t.type===d.WEBGL2,i=new m;return i.internalFormat=e?p.RGBA8:x.RGBA,i.wrapMode=_.CLAMP_TO_EDGE,i.isImmutable=e,i.width=this._sourceWidth,i.height=this._sourceHeight,new g(t,i)}}export{k as B,f as I,B as i,w as r};
