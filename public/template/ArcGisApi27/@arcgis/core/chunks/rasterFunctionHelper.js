/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{c as t}from"./colorUtils2.js";import e from"../core/Error.js";import{clone as s}from"../core/lang.js";import{_ as n}from"./tslib.es6.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import"./Logger.js";import{JSONSupport as i}from"../core/JSONSupport.js";import{cast as a}from"../core/accessorSupport/decorators/cast.js";import u from"../layers/support/PixelBlock.js";import l from"../layers/support/RasterInfo.js";import{k as c,G as p,l as h,s as m}from"./RasterSymbolizer.js";import{e as d}from"./enumeration.js";import{J as f}from"./jsonMap.js";import{i as g,n as y,M as b,N as v,o as w,p as x,q as A,t as P,l as F,v as I,w as R}from"./vectorFieldUtils.js";import{r as T}from"./reader.js";import{d as N,r as j,e as B,c as _,f as k}from"./colorRampUtils.js";import{f as S,t as C}from"./colorRamps.js";import{w as M}from"./writer.js";import{convolutionKernel as D,localTrigonometricOperation as G,localLogicalOperation as E,localConditionalOperation as z,localOperators as O}from"../layers/support/rasterFunctionConstants.js";import{g as U}from"./pixelRangeUtils.js";import{N as V}from"./mathUtils.js";import{g as L,c as W,s as q,h as $}from"./stretchUtils.js";let H=class extends i{constructor(){super(...arguments),this.raster=void 0}};n([r({json:{write:!0}})],H.prototype,"raster",void 0),H=n([o("esri.layers.support.rasterFunctions.AspectFunctionArguments")],H);const J=H;var K;let X=K=class extends J{clone(){return new K({raster:this.raster})}};X=K=n([o("esri.layers.support.rasterFunctions.AspectFunctionArguments")],X);const Z=X,Q=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);let Y=class extends i{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>Q.has(t.toLowerCase())));return{functions:e,hasBranches:r,hasSurfaceFunction:o}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let s=0;s<n.length;s++){const o=n[s];if(null!=o&&this._isRasterFunctionValue(o)){const n=o.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;r=r&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith("u")||t?.startsWith("s"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t])).flat()}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const t=s[0];return null==t?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(null==e)return null;const{width:n,height:r,pixelType:o,mask:i}=e,a=i?new Uint8Array(i):null,l=new Float32Array(n*r);l.fill(t);const c=this.sourceRasterInfos[0].bandCount,p=new Array(c).fill(l);return new u({width:n,height:r,pixelType:o,pixels:p,mask:a})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,o=s.BandProperties;o&&o.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};n([r({json:{write:!0}})],Y.prototype,"functionName",void 0),n([r({json:{write:!0}})],Y.prototype,"functionArguments",void 0),n([r()],Y.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}}),a((t=>t?.toLowerCase()))],Y.prototype,"outputPixelType",void 0),n([r({json:{write:!0}})],Y.prototype,"mainPrimaryRasterId",void 0),n([r()],Y.prototype,"sourceRasters",void 0),n([r({type:[l],json:{write:!0}})],Y.prototype,"sourceRasterInfos",void 0),n([r({json:{write:!0}})],Y.prototype,"rasterInfo",void 0),n([r({json:{write:!0}})],Y.prototype,"readingBufferSize",void 0),n([r({json:{write:!0}})],Y.prototype,"id",void 0),n([r()],Y.prototype,"isNoopProcess",void 0),n([r()],Y.prototype,"supportsGPU",null),n([r()],Y.prototype,"rawInputBandIds",void 0),n([r()],Y.prototype,"isInputBandIdsSwizzled",void 0),n([r()],Y.prototype,"swizzledBandSelection",void 0),n([r()],Y.prototype,"isBranch",void 0),n([r()],Y.prototype,"flatWebGLFunctionChain",null),n([r()],Y.prototype,"_bindingResult",void 0),Y=n([o("esri.layers.support.rasterFunctions.BaseRasterFunction")],Y);const tt=Y;let et=class extends tt{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],o=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return c(e,{resolution:o})}};n([r({json:{write:!0,name:"rasterFunction"}})],et.prototype,"functionName",void 0),n([r({type:Z,json:{write:!0,name:"rasterFunctionArguments"}})],et.prototype,"functionArguments",void 0),n([r()],et.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],et.prototype,"isGCS",void 0),et=n([o("esri.layers.support.rasterFunctions.AspectFunction")],et);const st=et,nt=new Set(["+","-","*","/","(",")"]);function rt(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r,o,i;"number"==typeof s?(i=n,r=i.length,o=new Float32Array(r),o.fill(s)):(r=s.length,o=s,n.constructor===Number?(i=new Float32Array(r),i.fill(n)):i=n);const a=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]+i[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]-i[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(a[e]=o[e]*i[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&i[e]&&(a[e]=o[e]/i[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return a}function ot(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function it(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let e=0;e<r;e++)"("===t[e]&&o++;return{opIndex:r,numIndex:r-o}}const at=new f({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function ut(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function lt(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}var ct;let pt=ct=class extends J{constructor(){super(...arguments),this.method="custom"}clone(){return new ct({method:this.method,bandIndexes:this.bandIndexes,raster:s(this.raster)})}};n([r({json:{type:String,write:!0}})],pt.prototype,"bandIndexes",void 0),n([d(at)],pt.prototype,"method",void 0),pt=ct=n([o("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],pt);const ht=pt,mt=new Set(["vari","mtvi2","rtvi-core","evi"]);let dt=class extends tt{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=null,e.histograms=null,e.bandCount="sultan"===this.functionArguments.method?3:1,e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments;return function(t,e){if(!g(t))return t;const{equation:s,method:n}=e,r=e.bandIndexes.map((t=>t-1)),{pixels:o,mask:i}=t;let a;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":a=lt(i,o[r[0]],o[r[1]]);break;case"ndwi":a=lt(i,o[r[1]],o[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}(i,o[r[0]],o[r[1]]);break;case"ci-g":case"ci-re":a=function(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}(i,o[r[0]],o[r[1]]);break;case"savi":a=function(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}(i,o[r[0]],o[r[1]],r[2]+1);break;case"tsavi":a=function(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let o=0;o<i;o++)if(null==t||t[o]){const t=s[o],i=e[o],l=r*i+t+u;l&&(a[o]=n*(i-n*t-r)/l)}return[a]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];r[o]=.5*(2*(n+1)-Math.sqrt((2*n+1)**2-8*(n-t)))}return[r]}(i,o[r[0]],o[r[1]]);break;case"gemi":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(i,o[r[0]],o[r[1]]);break;case"pvi":a=function(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)/a}return[i]}(i,o[r[0]],o[r[1]],r[2]+1,r[3]+1);break;case"gvitm":a=function(t,e){const[s,n,r,o,i,a]=e,u=s.length,l=new Float32Array(u);for(let e=0;e<u;e++)(null==t||t[e])&&(l[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*o[e]+.084*i[e]-1.18*a[e]);return[l]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"sultan":a=function(t,e){const[s,,n,r,o,i]=e,a=s.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(u[e]=i[e]?o[e]/i[e]*100:0,l[e]=s[e]?o[e]/s[e]*100:0,c[e]=r[e]?n[e]/r[e]*(o[e]/r[e])*100:0);return[u,l,c]}(i,[o[r[0]],o[r[1]],o[r[2]],o[r[3]],o[r[4]],o[r[5]]]);break;case"vari":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=o+t-r[e];a&&(i[e]=(o-t)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"mtvi2":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e],u=Math.sqrt((2*t+1)**2-6*t-5*Math.sqrt(o)-.5);i[e]=1.5*(1.2*(t-a)-2.5*(o-a))*u}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"rtvi-core":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e];i[e]=100*(t-o)-10*(t-a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"evi":a=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=t+6*o-7.5*r[e]+1;a&&(i[e]=2.5*(t-o)/a)}return[i]}(i,[o[r[0]],o[r[1]],o[r[2]]]);break;case"wndwi":a=function(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=n[e],i=r[e],u=o[e],l=t+s*i+(1-s)*u;l&&(a[e]=(t-s*i-(1-s)*u)/l)}return[a]}(i,[o[r[0]],o[r[1]],o[r[2]]],r[3]?r[3]+1:.5);break;case"bai":a=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}(i,o[r[0]],o[r[1]]);break;case"custom":a=function(t,e,s){let n,{ops:r,nums:o}=function(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],r=[];let o="";for(let t=0;t<s.length;t++){const i=s[t];if(nt.has(i))""!==o&&r.push(parseFloat(o)),n.push(i),o="";else{if("b"===i.toLowerCase()){t++,o=i.concat(s[t]),r.push(e[parseInt(o[1],10)-1]),o="";continue}o=o.concat(i),t===s.length-1&&r.push(parseFloat(o))}}return{ops:n,nums:r}}(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=it(r);if(n=rt(t,r[s],o[e],o[e+1]),1===r.length)break;r=ot(r,s),o.splice(e,2,n)}return[n]}(i,o,s);break;default:return t}const l=null!=i?new Uint8Array(i.length):null;null!=i&&null!=l&&l.set(i);const c=new u({width:t.width,height:t.height,pixelType:"f32",pixels:a,mask:l});return c.updateStatistics(),c}(e,{method:s,bandIndexes:n.split(" ").map((t=>parseFloat(t))),equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=ut([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=ut([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=ut([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=ut([e[0],e[1],0]),n="ci";break;case"savi":s=ut([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=ut([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=ut([e[0],e[1],0]),n="msavi";break;case"gemi":s=ut([e[0],e[1],0]),n="gemi";break;case"pvi":s=ut([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=ut([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=ut([e[0],e[1],e[2]]),n="mtvi2";break;case"rtvi-core":s=ut([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=ut([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=ut([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=ut([e[1],e[0],0]),n="bai";break;default:s=ut([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=mt.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};n([r({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),n([r({type:ht,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),n([r()],dt.prototype,"rasterArgumentNames",void 0),dt=n([o("esri.layers.support.rasterFunctions.BandArithmeticFunction")],dt);const ft=dt;var gt;let yt=gt=class extends J{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return j.includes(e)?e:null}readColorRamp(t){return S(t)}readColorRampName(t,e){if(!t)return null;const s=N.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?N.fromJSON(s):null}clone(){return new gt({colormap:s(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};n([r({type:[[Number]],json:{write:!0}})],yt.prototype,"colormap",void 0),n([r({type:String,json:{write:!0}})],yt.prototype,"colormapName",void 0),n([a("colormapName")],yt.prototype,"castColormapName",null),n([r({types:C,json:{write:!0}})],yt.prototype,"colorRamp",void 0),n([T("colorRamp")],yt.prototype,"readColorRamp",null),n([r({type:N.apiValues,json:{type:N.jsonValues,write:N.write}})],yt.prototype,"colorRampName",void 0),n([T("colorRampName")],yt.prototype,"readColorRampName",null),yt=gt=n([o("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],yt);const bt=yt,vt=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],wt=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function xt(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return B({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}let At=class extends tt{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)e=_(n,{interpolateAlpha:!0});else if(r){const t=k(r);t&&(e=_(t))}else s&&(e=function(t){let e;switch(t){case"elevation":e=xt([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]]);break;case"gray":e=B({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=xt([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495]);break;case"ndvi":e=vt;break;case"ndvi2":e=function(){const t=xt([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=wt;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([r({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),n([r({type:bt,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),n([r()],At.prototype,"rasterArgumentNames",void 0),n([r()],At.prototype,"isNoopProcess",void 0),n([r({json:{write:!0}})],At.prototype,"indexedColormap",void 0),At=n([o("esri.layers.support.rasterFunctions.ColormapFunction")],At);const Pt=At;var Ft;let It=Ft=class extends J{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ft({rasters:s(this.rasters)})}};n([r({json:{write:!0}})],It.prototype,"rasters",void 0),n([M("rasters")],It.prototype,"writeRasters",null),It=Ft=n([o("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],It);const Rt=It;let Tt=class extends tt{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>null!=t&&t.length))){const e=[];t.forEach((({statistics:t})=>null!=t&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>null!=t&&t.length))){const e=[];t.forEach((({histograms:t})=>null!=t&&e.push(...t))),s.histograms=e}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every((t=>t.keyProperties.BandProperties?.length))?t.flatMap((t=>t.keyProperties.BandProperties)):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return null==s?null:y(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};n([r({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),n([r({type:Rt,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),n([r()],Tt.prototype,"rasterArgumentNames",void 0),Tt=n([o("esri.layers.support.rasterFunctions.CompositeBandFunction")],Tt);const Nt=Tt,jt=new Map;function Bt(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,l=i?0:n,c=i?n:0,p=i?1:e;for(let i=l;i<s-l;i++){const s=i*e;for(let i=c;i<e-c;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*p]*o[r];a[s+i]=e}}return a}function _t(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let c=u;c<s-u;c++){const s=c*e;for(let c=l;c<e-l;c++){if(o&&!o[s+c])continue;let p=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)p+=t[s+c+(o-u)*e+n-l]*i[o*r+n];a[s+c]=p}}return a}function kt(t,e,s,n,r){const o=Math.floor(n/2);for(let n=0;n<o;n++)for(let o=0;o<e;o++)t[n*e+o]=t[(r-1-n)*e+o],t[(s-1-n)*e+o]=t[(s-r+n)*e+o];const i=Math.floor(r/2);for(let n=0;n<s;n++){const s=n*e;for(let n=0;n<i;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}var St;jt.set(D.none,[0,0,0,0,1,0,0,0,0]),jt.set(D.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),jt.set(D.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),jt.set(D.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),jt.set(D.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),jt.set(D.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),jt.set(D.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),jt.set(D.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),jt.set(D.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),jt.set(D.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),jt.set(D.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),jt.set(D.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),jt.set(D.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),jt.set(D.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),jt.set(D.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),jt.set(D.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),jt.set(D.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),jt.set(D.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),jt.set(D.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),jt.set(D.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),jt.set(D.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),jt.set(D.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),jt.set(D.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Ct=St=class extends J{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=jt.get(t);if(!e||t===D.userDefined||t===D.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new St({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:s(this.raster)})}};n([r({json:{type:Number,write:!0}})],Ct.prototype,"rows",void 0),n([r({json:{type:Number,write:!0}})],Ct.prototype,"cols",void 0),n([r({json:{name:"type",type:Number,write:!0}})],Ct.prototype,"convolutionType",null),n([r({json:{type:[Number],write:!0}})],Ct.prototype,"kernel",void 0),Ct=St=n([o("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Ct);const Mt=Ct;let Dt=class extends tt{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(D).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==D.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[D.none,D.sharpen,D.sharpen2,D.sharpening3x3,D.sharpening5x5];return"u8"===this.outputPixelType||i.includes(t)||(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===D.none)return e;let{kernel:s,rows:n,cols:r}=this.functionArguments;const o=s.reduce(((t,e)=>t+e));return 0!==o&&1!==o&&(s=s.map((t=>t/o))),function(t,e){const s=function(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const o=t[n+s*e],i=t[n];if(null==r)if(0===i){if(o)return{separable:!1,row:null,col:null}}else r=o/i;else if(o/i!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?function(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:l}=t,c=r.length,p=[],h=e.length,m=s.length,d=Math.floor(h/2),f=Math.floor(m/2);for(let t=0;t<c;t++){let a=Bt(r[t],o,i,d,l,e,!0);a=Bt(a,o,i,f,l,s,!1),n&&kt(a,o,i,h,m),p.push(a)}return new u({width:o,height:i,pixelType:a,pixels:p,mask:l})}(t,s.row,s.col,n):function(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,l=n.length,c=[],{kernel:p,rows:h,cols:m}=e;for(let t=0;t<l;t++){const e=_t(n[t],r,o,h,m,a,p);s&&kt(e,r,o,h,m),c.push(e)}return new u({width:r,height:o,pixelType:i,pixels:c,mask:a})}(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}(e,{kernel:s,rows:n,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const e=t.reduce(((t,e)=>t+e));0!==e&&1!==e&&(t=t.map((t=>t/e)));const s=new Float32Array(25);return s.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:s,clampRange:U(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),n([r({type:Mt,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),n([r()],Dt.prototype,"rasterArgumentNames",void 0),Dt=n([o("esri.layers.support.rasterFunctions.ConvolutionFunction")],Dt);const Gt=Dt;var Et;const zt=new f({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Ot=Et=class extends J{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return zt.fromJSON(e.type??e.curvatureType??0)}clone(){return new Et({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};n([r({json:{write:{target:"type"}}}),d(zt)],Ot.prototype,"curvatureType",void 0),n([T("curvatureType",["type","curvatureType"])],Ot.prototype,"readCurvatureType",null),n([r({type:Number,json:{write:!0}})],Ot.prototype,"zFactor",void 0),Ot=Et=n([o("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Ot);const Ut=Ot;let Vt=class extends tt{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:o}=t,i=o?.[0],a=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*p:s;return h(e,{zFactor:u,curvatureType:n,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*p:t}}};n([r({json:{write:!0,name:"rasterFunction"}})],Vt.prototype,"functionName",void 0),n([r({type:Ut,json:{write:!0,name:"rasterFunctionArguments"}})],Vt.prototype,"functionArguments",void 0),n([r()],Vt.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Vt.prototype,"isGCS",void 0),Vt=n([o("esri.layers.support.rasterFunctions.CurvatureFunction")],Vt);const Lt=Vt;var Wt;let qt=Wt=class extends J{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=b.bestMatch}clone(){return new Wt({bandIds:[...this.bandIds],bandNames:[...this.bandNames],missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};n([r({json:{write:!0}})],qt.prototype,"bandIds",void 0),n([r({json:{write:!0}})],qt.prototype,"bandNames",void 0),n([r({json:{write:!0}})],qt.prototype,"bandWavelengths",void 0),n([d({0:"name",1:"wavelength",2:"id"})],qt.prototype,"method",void 0),n([r({json:{write:!0}})],qt.prototype,"missingBandAction",void 0),n([r({json:{write:!0}})],qt.prototype,"wavelengthMatchTolerance",void 0),qt=Wt=n([o("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],qt);const $t=qt;let Ht=class extends tt{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:o,bandIds:i,missingBandAction:a}=t,u=r?.length&&("name"===n||"id"!==n&&!i?.length),l=o?.length&&("wavelength"===n||"id"!==n&&!i?.length),c=a===b.fail,p=u?this._matchBandNames(s,r):l?this._matchBandWavelengths(s,o,c):this._matchBandIds(s,i,c);if(null==p)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const h=s.clone();h.pixelType=this.outputPixelType,h.bandCount=p.length;const{statistics:m,histograms:d}=h;null!=m&&m.length&&(h.statistics=p.map((t=>m[t]||m[m.length-1]))),null!=d&&d.length&&(h.histograms=p.map((t=>d[t]||d[d.length-1])));let f=h.keyProperties?.BandProperties;return f?.length&&(f=p.map((t=>t>=f.length?f[f.length-1]:f[t])),h.keyProperties={...h.keyProperties,BandProperties:f}),this.rasterInfo=h,{success:!0,supportsGPU:h.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:ut(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}_matchBandNames(t,e){const s=t.bandInfos.map((({name:t})=>t.toLowerCase())),n=[];for(let t=0;t<e.length;t++){const r=e[t].toLowerCase();let o=s.indexOf(r);if(-1===o&&"nearinfrared"===r&&(o=s.findIndex((t=>t.startsWith("nearinfrared_1"))),-1===o&&(o=s.findIndex((t=>t.startsWith("nearinfrared"))))),-1===o)return null;n.push(o)}return n}_matchBandIds(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some((t=>t<0||t>=n))?null:e}_matchBandWavelengths(t,e,s){const{bandInfos:n}=t,r=[];for(let t=0;t<n.length;t++){const{minWavelength:e,maxWavelength:s}=n[t];if(!e||!s)return null;r.push({minWavelength:e,maxWavelength:s})}const{wavelengthMatchTolerance:o}=this.functionArguments,i=[];for(let t=0;t<e.length;t++){const n=e[t];let a=!1,u=-1,l=Number.MAX_VALUE;for(let t=0;t<r.length;t++){const e=r[t],s=n>=e.minWavelength&&n<=e.maxWavelength,o=Math.abs(n-(e.minWavelength+e.maxWavelength)/2);s?o<l&&(a=!0,u=t,l=o):!a&&o<l&&(u=t,l=o)}if(!a&&o&&l<o&&(a=!0),!a&&s)return null;i.push(u)}return i}};n([r({json:{write:!0,name:"rasterFunction"}})],Ht.prototype,"functionName",void 0),n([r({type:$t,json:{write:!0,name:"rasterFunctionArguments"}})],Ht.prototype,"functionArguments",void 0),n([r()],Ht.prototype,"rasterArgumentNames",void 0),Ht=n([o("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ht);const Jt=Ht;var Kt;let Xt=Kt=class extends J{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Kt({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:s(this.rasters)})}};n([r({json:{write:!0}})],Xt.prototype,"operation",void 0),n([r({json:{write:!0}})],Xt.prototype,"rasters",void 0),n([M("rasters")],Xt.prototype,"writeRasters",null),n([r({json:{write:!0}})],Xt.prototype,"processAsMultiband",void 0),Xt=Kt=n([o("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Xt);const Zt=Xt,Qt=new Map;function Yt(t){return Qt.get(t)}Qt.set(G.acos,[0,Math.PI]),Qt.set(G.asin,[-Math.PI/2,Math.PI/2]),Qt.set(G.atan,[-Math.PI/2,Math.PI/2]),Qt.set(G.cos,[-1,1]),Qt.set(G.sin,[-1,1]),Qt.set(E.booleanAnd,[0,1]),Qt.set(E.booleanNot,[0,1]),Qt.set(E.booleanOr,[0,1]),Qt.set(E.booleanXOr,[0,1]),Qt.set(E.equalTo,[0,1]),Qt.set(E.notEqual,[0,1]),Qt.set(E.greaterThan,[0,1]),Qt.set(E.greaterThanEqual,[0,1]),Qt.set(E.lessThan,[0,1]),Qt.set(E.lessThanEqual,[0,1]),Qt.set(E.isNull,[0,1]);const te=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function ee(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]+r[t]);return i}function se(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand("f32",r);return o.set(n),o}function ne(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]-r[t]);return i}function re(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]*r[t]);return i}function oe(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return o}function ie(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]/r[t]);return i}function ae(t,e,s){return ie(t,e,"f32")}function ue(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=Math.floor(n[t]/r[t]));return i}function le(t,e,s,n){const r=t[0],o=r.length,i=u.createEmptyBand(s,o);if(n===G.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===G.asin?Math.asin:Math.acos;for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:i[t]=a(s)}return i}function ce(t,e,s,n){const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n(r[t]));return i}function pe(t,e,s,n){const[r,o]=t,i=r.length,a=u.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n(r[t],o[t]));return a}function he(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&r[t]);return i}function me(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<<r[t]);return i}function de(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=~n[t]);return o}function fe(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]|r[t]);return i}function ge(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>>r[t]);return i}function ye(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]^r[t]);return i}function be(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&&r[t]?1:0);return i}function ve(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]?0:1);return o}function we(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]||r[t]?1:0);return i}function xe(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=(n[t]?1:0)^(r[t]?1:0));return i}function Ae(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?1:0);return i}function Pe(t,e,s,n){const[r]=t,o=r.length,i=u.createEmptyBand(s,o),a=n===Math.E;for(let t=0;t<o;t++)e&&!e[t]||(i[t]=a?Math.exp(r[t]):n**r[t]);return i}function Fe(t,e,s){return Pe(t,e,s,10)}function Ie(t,e,s){return Pe(t,e,s,2)}function Re(t,e,s){return Pe(t,e,s,Math.E)}function Te(t,e,s,n){const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(r[t]<=0?e[t]=0:i[t]=n(r[t]));return i}function Ne(t,e,s){return Te(t,e,s,Math.log10)}function je(t,e,s){return Te(t,e,s,Math.log2)}function Be(t,e,s){return Te(t,e,s,Math.log)}function _e(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>r[t]?1:0);return i}function ke(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>=r[t]?1:0);return i}function Se(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?1:0);return i}function Ce(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<=r[t]?1:0);return i}function Me(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand(s,r);if(!e)return o;for(let t=0;t<r;t++)o[t]=e[t]?0:1;return o}function De(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]%r[t]);return i}function Ge(t,e,s){const[n]=t,r=n.length,o=u.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=-n[t]);return o}function Ee(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?0:1);return i}function ze(t,e,s){const[n,r]=t,o=n.length,i=u.createEmptyBand(s,o),a=new Uint8Array(o);for(let t=0;t<o;t++)null!=e&&!e[t]||0!==n[t]||(i[t]=r[t],a[t]=255);return{band:i,mask:a}}function Oe(t,e,s){const[n,r,o]=t,i=n.length,a=u.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n[t]?r[t]:o[t]);return a}function Ue(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}i[s]=e}return i}function Ve(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}i[s]=e}return i}function Le(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s],o=e;for(let r=1;r<n;r++){const n=t[r][s];o<n?o=n:e>n&&(e=n)}i[s]=o-e}return i}function We(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];i[s]=e/n}return i}function qe(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];i[s]+=n[s]}return i}function $e(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let o=0;o<n;o++){const n=t[o];r+=n[s],e[o]=n[s]}r/=n;let o=0;for(let t=0;t<n;t++)o+=(e[t]-r)**2;i[s]=Math.sqrt(o/n)}return i}function He(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=u.createEmptyBand(s,i),l=new Float32Array(n),c=n%2==1;for(let s=0;s<i;s++)if(!e||e[s]){for(let e=0;e<n;e++)l[e]=t[e][s];l.sort(),a[s]=c?l[r]:(l[r]+l[r-1])/2}return a}function Je(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=u.createEmptyBand(s,o);for(let t=0;t<o;t++)e[t]&&(n[t]===r[t]?i[t]=n[t]:e[t]=0);return i}function Ke(t,e,s){const n=t.length;if(n<=2)return Je(t,e,s);const r=t[0].length,o=u.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=0;for(const t of i.keys())r=i.get(t),r>a&&(a=r,e=t);o[s]=e}return o}function Xe(t,e,s){const n=t.length;if(n<=2)return Je(t,e,s);const r=t[0].length,o=u.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=t.length;for(const t of i.keys())r=i.get(t),r<a&&(a=r,e=t);o[s]=e}return o}function Ze(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=u.createEmptyBand(s,o),a=new Set;for(let s=0;s<o;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);i[s]=a.size}return i}const Qe=new Map,Ye=new Map,ts=new Map,es=new Map;function ss(t,e,s,n){let[r,o]=U(s);const i=s.startsWith("u")||s.startsWith("s");i&&(r-=1e-5,o+=1e-5);for(let s=0;s<e.length;s++)if(e[s]){const a=t[s];isNaN(a)||a<r||a>o?e[s]=0:n[s]=i?Math.round(a):a}}let ns=class extends tt{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=te[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType("f32");const a=e.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,a.bandCount=999!==i||n?s:1;const u=Yt(r);if(u){a.statistics=[];for(let t=0;t<a.bandCount;t++)a.statistics[t]={min:u[0],max:u[1],avg:(u[0]+u[1])/2,stddev:(u[0]+u[1])/10}}return this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:function(t,e,s={}){Qe.size||(Qe.set(4,Math.sqrt),Qe.set(6,Math.acos),Qe.set(7,Math.asin),Qe.set(8,Math.atan),Qe.set(9,Math.atanh),Qe.set(10,Math.abs),Qe.set(21,Math.cos),Qe.set(22,Math.cosh),Qe.set(48,Math.floor),Qe.set(49,Math.ceil),Qe.set(51,Math.sin),Qe.set(52,Math.sinh),Qe.set(56,Math.tan),Qe.set(57,Math.tanh),Qe.set(59,Math.acosh),Qe.set(60,Math.asinh),Qe.set(65,Math.floor),Ye.set(5,Math.pow),Ye.set(61,Math.atan2),ts.set(1,ee),ts.set(2,ne),ts.set(3,re),ts.set(11,he),ts.set(12,me),ts.set(12,me),ts.set(13,de),ts.set(14,fe),ts.set(15,ge),ts.set(16,ye),ts.set(17,be),ts.set(18,ve),ts.set(19,we),ts.set(20,xe),ts.set(23,ie),ts.set(24,Ae),ts.set(25,Re),ts.set(26,Fe),ts.set(27,Ie),ts.set(28,_e),ts.set(29,ke),ts.set(30,oe),ts.set(31,Me),ts.set(32,se),ts.set(33,Se),ts.set(34,Ce),ts.set(35,Be),ts.set(36,Ne),ts.set(37,je),ts.set(44,De),ts.set(45,Ge),ts.set(46,Ee),ts.set(64,ae),ts.set(65,ue),ts.set(76,Oe),ts.set(78,Oe),es.set(38,Ke),es.set(39,Ue),es.set(40,We),es.set(41,He),es.set(42,Ve),es.set(43,Xe),es.set(47,Le),es.set(54,$e),es.set(55,qe),es.set(58,Ze),es.set(66,Ke),es.set(67,Ue),es.set(68,We),es.set(69,He),es.set(70,Ve),es.set(71,Xe),es.set(72,Le),es.set(73,$e),es.set(74,qe),es.set(75,Ze));let n=function(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>null!=t)),r=t[0].pixels[0].length;if(0===n.length)return new Uint8Array(r).fill(255);const o=n[0],i=new Uint8Array(o);if(1===n.length)return i;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)i[t]&&(i[t]=e[t]?255:0)}return i}if(n.length!==s.length)return new Uint8Array(r).fill(255);for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<i.length;t++)0===i[t]&&(i[t]=e[t]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=s,o=!es.has(e)||s.processAsMultiband,i=o?t[0].pixels.length:1,a=[];for(let s=0;s<i;s++){const i=es.has(e)&&!o?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let l,c=!0;if(e===z.setNull){const t=ze(i,n,r);l=t.band,n=t.mask,c=!1}else ts.has(e)?l=ts.get(e)(i,n,"f64"):Qe.has(e)?l=e===G.asin||e===G.acos||e===G.atanh?le(i,n,"f64",e):ce(i,n,"f64",Qe.get(e)):Ye.has(e)?l=pe(i,n,"f64",Ye.get(e)):es.has(e)?l=es.get(e)(i,n,"f64"):(l=i[0],c=!1);if(c&&e!==E.isNull&&!Qt.has(e)){const t=u.createEmptyBand(r,l.length);n||(n=new Uint8Array(l.length).fill(255)),ss(l,n,r,t),l=t}a.push(l)}const l=t[0];return new u({width:l.width,height:l.height,pixelType:r,mask:e===E.isNull?null:n,pixels:a})}(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=te[t],s=Object.keys(O).find((e=>O[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,o]=U(n);const i=n.startsWith("u")||n.startsWith("s");return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:i}}};n([r({json:{write:!0,name:"rasterFunction"}})],ns.prototype,"functionName",void 0),n([r({type:Zt,json:{write:!0,name:"rasterFunctionArguments"}})],ns.prototype,"functionArguments",void 0),n([r()],ns.prototype,"rasterArgumentNames",void 0),ns=n([o("esri.layers.support.rasterFunctions.LocalFunction")],ns);const rs=ns;var os;let is=os=class extends J{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=v.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new os({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};n([r({json:{write:!0}})],is.prototype,"includedRanges",void 0),n([r({json:{write:!0}})],is.prototype,"noDataValues",void 0),n([r()],is.prototype,"normalizedNoDataValues",null),n([r({json:{write:!0}})],is.prototype,"noDataInterpretation",void 0),is=os=n([o("esri.layers.support.rasterFunctions.MaskFunctionArguments")],is);const as=is;let us=class extends tt{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const t=w(e,s?.slice(2*o,2*o+2),n?.[o]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*x)&&(!n||o&&n[0].length<=x)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:o,normalizedNoDataValues:i}=this.functionArguments,a=o===v.matchAll;return A(e,{includedRanges:r,noDataValues:i,outputPixelType:s,matchAll:a,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(x);s.fill(V),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(x);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-V,n[e+1]=t?.[e+1]??V;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};n([r({json:{write:!0,name:"rasterFunction"}})],us.prototype,"functionName",void 0),n([r({type:as,json:{write:!0,name:"rasterFunctionArguments"}})],us.prototype,"functionArguments",void 0),n([r()],us.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],us.prototype,"lookups",void 0),us=n([o("esri.layers.support.rasterFunctions.MaskFunction")],us);const ls=us;var cs;let ps=cs=class extends J{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new cs({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};n([r({json:{write:!0}})],ps.prototype,"visibleBandID",void 0),n([r({json:{write:!0}})],ps.prototype,"infraredBandID",void 0),n([r({json:{write:!0}})],ps.prototype,"scientificOutput",void 0),ps=cs=n([o("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],ps);const hs=ps;let ms=class extends tt{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const o=n.clone();o.pixelType=this.outputPixelType,o.colormap=null,o.histograms=null,o.bandCount=1,o.keyProperties={...o.keyProperties,BandProperties:void 0};const[i,a,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return o.statistics=[{min:i,max:a,avg:u,stddev:l}],this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return function(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,l=o[s],c=o[e],p=c.length,h=n?new Uint8Array(p):new Float32Array(p),m=n?100:1,d=n?100.5:0;for(let t=0;t<p;t++)if(null==r||r[t]){const e=l[t],s=c[t],n=e+s;n&&(h[t]=(e-s)/n*m+d)}const f=new u({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[h]});return f.updateStatistics(),f}(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:ut(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};n([r({json:{write:!0,name:"rasterFunction"}})],ms.prototype,"functionName",void 0),n([r({type:hs,json:{write:!0,name:"rasterFunctionArguments"}})],ms.prototype,"functionArguments",void 0),n([r()],ms.prototype,"rasterArgumentNames",void 0),ms=n([o("esri.layers.support.rasterFunctions.NDVIFunction")],ms);const ds=ms;var fs;let gs=fs=class extends J{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new fs({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};n([r({json:{write:!0}})],gs.prototype,"inputRanges",void 0),n([r({json:{write:!0}})],gs.prototype,"outputValues",void 0),n([r({json:{write:!0}})],gs.prototype,"noDataRanges",void 0),n([r({json:{write:!0}})],gs.prototype,"allowUnmatched",void 0),n([r({json:{write:!0}})],gs.prototype,"isLastInputRangeInclusive",void 0),gs=fs=n([o("esri.layers.support.rasterFunctions.RemapFunctionArguments")],gs);const ys=gs;let bs=class extends tt{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:r,inputRanges:o,noDataRanges:i,isLastInputRangeInclusive:a}=this.functionArguments;if(null!=s&&s.length&&r?.length)if(n){const e=Math.min.apply(null,[...r,s[0].min]),n=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=r[0],n=e;for(let t=0;t<r.length;t++)e=e>r[t]?r[t]:e,n=n>r[t]?n:r[t];t.statistics=[{...s[0],min:e,max:n}]}return this.rasterInfo=t,this.lookup=n?null:P({srcPixelType:e,inputRanges:o,outputValues:r,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:a,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=x)&&(!i||i.length<=x)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=F(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=t&&s.mask&&(t.mask=I(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:r,outputValues:o,noDataRanges:i,allowUnmatched:a,isLastInputRangeInclusive:u}=this.functionArguments;return R(e,{inputRanges:r,outputValues:o,noDataRanges:i,outputPixelType:n,allowUnmatched:a,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*x),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let t=0;t<x;t++)n[3*t]=o[2*t]??V-1,n[3*t+1]=o[2*t+1]??V,n[3*t+2]=i[t]??0,t<a&&(t>0&&(n[3*t]-=r),(t<a-1||!s)&&(n[3*t+1]-=r));const u=new Float32Array(2*x);return u.fill(V),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:U(this.outputPixelType)}}};n([r({json:{write:!0,name:"rasterFunction"}})],bs.prototype,"functionName",void 0),n([r({type:ys,json:{write:!0,name:"rasterFunctionArguments"}})],bs.prototype,"functionArguments",void 0),n([r()],bs.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],bs.prototype,"lookup",void 0),bs=n([o("esri.layers.support.rasterFunctions.RemapFunction")],bs);const vs=bs;var ws;const xs=new f({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let As=ws=class extends J{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new ws({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};n([d(xs)],As.prototype,"slopeType",void 0),n([r({type:Number,json:{write:!0}})],As.prototype,"zFactor",void 0),n([r({type:Number,json:{name:"psPower",write:!0}})],As.prototype,"pixelSizePower",void 0),n([r({type:Number,json:{name:"psZFactor",write:!0}})],As.prototype,"pixelSizeFactor",void 0),n([r({type:Boolean,json:{write:!0}})],As.prototype,"removeEdgeEffect",void 0),As=ws=n([o("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],As);const Ps=As;let Fs=class extends tt{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o}=this.functionArguments,{isGCS:i}=this,{extent:a,primaryPixelSizes:u}=t,l=u?.[0],c=l??(a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1});return m(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:o,isGCS:i,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*p:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};n([r({json:{write:!0,name:"rasterFunction"}})],Fs.prototype,"functionName",void 0),n([r({type:Ps,json:{write:!0,name:"rasterFunctionArguments"}})],Fs.prototype,"functionArguments",void 0),n([r()],Fs.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Fs.prototype,"isGCS",void 0),Fs=n([o("esri.layers.support.rasterFunctions.SlopeFunction")],Fs);const Is=Fs;var Rs;let Ts=Rs=class extends J{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new Rs({statistics:s(this.statistics),histograms:s(this.histograms)})}};n([r({json:{write:!0}})],Ts.prototype,"statistics",void 0),n([T("statistics")],Ts.prototype,"readStatistics",null),n([M("statistics")],Ts.prototype,"writeStatistics",null),n([r({json:{write:!0}})],Ts.prototype,"histograms",void 0),Ts=Rs=n([o("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Ts);const Ns=Ts;let js=class extends tt{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([r({json:{write:!0,name:"rasterFunction"}})],js.prototype,"functionName",void 0),n([r({type:Ns,json:{write:!0,name:"rasterFunctionArguments"}})],js.prototype,"functionArguments",void 0),n([r()],js.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],js.prototype,"indexedColormap",void 0),n([r()],js.prototype,"isNoopProcess",void 0),js=n([o("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],js);const Bs=js;var _s;const ks=new f({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let Ss=_s=class extends J{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new _s({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:s(this.statistics),gamma:s(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:s(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};n([r({type:Boolean,json:{write:!0}})],Ss.prototype,"computeGamma",void 0),n([r({type:Boolean,json:{name:"dra",write:!0}})],Ss.prototype,"dynamicRangeAdjustment",void 0),n([r({type:[Number],json:{write:!0}})],Ss.prototype,"gamma",void 0),n([r()],Ss.prototype,"histograms",void 0),n([r({type:Number,json:{write:!0}})],Ss.prototype,"maxPercent",void 0),n([r({type:Number,json:{write:!0}})],Ss.prototype,"minPercent",void 0),n([r({type:Number,json:{write:!0}})],Ss.prototype,"numberOfStandardDeviations",void 0),n([r({type:Number,json:{name:"max",write:!0}})],Ss.prototype,"outputMax",void 0),n([r({type:Number,json:{name:"min",write:!0}})],Ss.prototype,"outputMin",void 0),n([r({type:Number,json:{write:!0}})],Ss.prototype,"sigmoidStrengthLevel",void 0),n([r({json:{type:[[Number]],write:!0}})],Ss.prototype,"statistics",void 0),n([M("statistics")],Ss.prototype,"writeStatistics",null),n([d(ks)],Ss.prototype,"stretchType",void 0),n([r({type:Boolean,json:{write:!0}})],Ss.prototype,"useGamma",void 0),Ss=_s=n([o("esri.layers.support.rasterFunctions.StretchFunctionArguments")],Ss);const Cs=Ss;let Ms=class extends tt{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=L(s.toJSON(),{rasterInfo:t}),i=this._isOutputRoundingNeeded()?"round":"float";this.lookup=W({pixelType:e,...n,gamma:o?r:null,rounding:i}),this.cutOffs=n}else n||(this.cutOffs=L(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();return i.pixelType=this.outputPixelType,i.statistics=null,i.histograms=null,i.colormap=null,i.attributeTable=null,"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed"),this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return F(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||L(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),o=n.useGamma?n.gamma:null;return q(e,{...r,gamma:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&s&&s.length?$(r,s):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(a[l]-i[l]);const c=this._isOutputRoundingNeeded();return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&o?o:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};n([r({json:{write:!0,name:"rasterFunction"}})],Ms.prototype,"functionName",void 0),n([r({type:Cs,json:{write:!0,name:"rasterFunctionArguments"}})],Ms.prototype,"functionArguments",void 0),n([r()],Ms.prototype,"rasterArgumentNames",void 0),n([r({json:{write:!0}})],Ms.prototype,"lookup",void 0),n([r({json:{write:!0}})],Ms.prototype,"cutOffs",void 0),Ms=n([o("esri.layers.support.rasterFunctions.StretchFunction")],Ms);const Ds=Ms;var Gs;let Es=Gs=class extends J{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Gs({attributeTableAsRecordSet:s(this.attributeTableAsRecordSet)})}};n([r({json:{write:!0}})],Es.prototype,"attributeTableAsRecordSet",void 0),Es=Gs=n([o("esri.layers.support.rasterFunctions.TableFunctionArguments")],Es);const zs=Es;let Os=class extends tt{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([r({json:{write:!0,name:"rasterFunction"}})],Os.prototype,"functionName",void 0),n([r({type:zs,json:{write:!0,name:"rasterFunctionArguments"}})],Os.prototype,"functionArguments",void 0),n([r()],Os.prototype,"rasterArgumentNames",void 0),n([r()],Os.prototype,"isNoopProcess",void 0),Os=n([o("esri.layers.support.rasterFunctions.TableFunction")],Os);const Us=Os,Vs=new Map;function Ls(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&Ls(t,e))}))}function Ws(t,n){if(n=n??{},"function"in(t=s(t))&&"arguments"in t&&t.arguments){const s=Zs(t,new Map,n);if(Ys(s),!s.renderingRule)throw new e("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return Hs(t=$s(t),n);throw new e("raster-function-helper","unsupported raster function json.")}function qs(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function $s(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>qs(t)?$s(t):t));else switch(qs(e)&&(e=$s(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function Hs(t,s){const{rasterFunction:n,rasterFunctionArguments:r}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!Vs.has(n))throw new e("raster-function-helper",`unsupported raster function: ${n}`);const i=Vs.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(r,u),p="rasters"===u[0],h=[];for(let t=0;t<c.length;t++){const e=c[t];let n;null==e||"string"==typeof e&&e.startsWith("$")?l.push(s?.raster):"string"==typeof e?s[e]&&l.push(s[e]):"number"!=typeof e&&"rasterFunction"in e&&(n=Hs(e,s),p||(a.functionArguments[u[t]]=n),l.push(n)),p&&h.push(n??e)}if(p&&(a.functionArguments.rasters=h),s){a.sourceRasters=l;const t=s.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function Js(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?Js(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function Ks(t,s){if(!t||"object"!=typeof t)return t;const{value:n}=t;if(!n||"object"!=typeof n)return t.isDataset?"$$":n;if(Array.isArray(n))return 0===n.length?[]:n.map((t=>"object"==typeof t&&"RasterFunctionVariable"===t.type?Ks(t,s):t));if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&"Scalar"!==n.type)return"$$";if(!("type"in n))return n;let r=n;switch(n.type){case"Scalar":r=n.value;break;case"AlgorithmicColorRamp":r=Xs(n);break;case"MultiPartColorRamp":r={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(Xs)};break;case"ArgumentArray":if(n.elements?.length&&"RasterStatistics"!==n.elements[0].type){const t=[];for(let r=0;r<n.elements.length;r++){const o=n.elements[r],{type:i}=o;if(i)if("RasterFunctionTemplate"===i){const{renderingRule:e}=Zs(o,s);t.push(e),null!=o._object_id&&s.set(o._object_id,e)}else{if("RasterFunctionVariable"!==i)throw new e("raster-function-helper","unsupported raster function json.");{const e=Ks(o,s);t.push(e),null!=o._object_id&&s.set(o._object_id,e)}}else t.push(o)}r=t}else r=n.elements}return null!=n._object_id&&s.set(n._object_id,r),r}function Xs(e){const s=e.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=e;if(!Array.isArray(n)){const{r:e,g:s,b:r}=t({h:n.Hue,s:n.Saturation,v:n.Value});n=[e,s,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:e,g:s,b:n}=t({h:r.Hue,s:r.Saturation,v:r.Value});r=[e,s,n,r.AlphaValue]}return{type:"algorithmic",algorithm:s,fromColor:n,toColor:r}}function Zs(t,e,s){s&&Js(t,s);const n={renderingRule:{},templates:e};return Qs(t,n),n}function Qs(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:r,arguments:o,_object_id:i}=t;if(!r||!o)return;null!=i&&n.set(i,s),s.rasterFunction=r.type.replace("Function",""),s.outputPixelType=r.pixelType;const a={};s.rasterFunctionArguments=a;for(const t in o){if("type"===t||"object_id"===t||"_object_ref_id"===t)continue;const e=o[t];e&&"object"==typeof e&&"type"in e&&("RasterFunctionTemplate"===e.type||"RasterFunctionVariable"===e.type)?("RasterFunctionVariable"===e.type?a[t]=Ks(e,n):(s.rasterFunctionArguments[t]={},Qs(e,{renderingRule:s.rasterFunctionArguments[t],templates:n})),null!=e._object_id&&n.set(e._object_id,a[t])):a[t]=e}switch(a.DEM&&!a.Raster&&(a.Raster=a.DEM,delete a.DEM),s.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(a);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(a);break;case"Convolution":null!=(u=a).ConvolutionType&&(u.Type=u.ConvolutionType,delete u.ConvolutionType);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(a)}var u}function Ys(t){const{renderingRule:s,templates:n}=t;if("object"!=typeof s||!s?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:r}=s;for(const t in r){const s=r[t],o="_object_ref_id"===t?s:s&&"object"==typeof s&&"_object_ref_id"in s?s._object_ref_id:null;if(null==o)s&&"object"==typeof s&&(s.rasterFunctionArguments&&Ys({renderingRule:s,templates:n}),Array.isArray(s)&&s.forEach(((t,r)=>{if("object"==typeof t)if(null!=t._object_ref_id){if(!n.has(t._object_ref_id))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${s} does not exist`);const i=n.get(o);i&&"object"==typeof i?Object.assign(t,i):s[r]=i}else Ys({renderingRule:t,templates:n})})));else{if(!n.has(o))throw new e("raster-function-helper",`unsupported raster function json. _object_ref_id: ${o} does not exist`);const s=n.get(o);"_object_ref_id"!==t?r[t]=s:s&&"object"==typeof s&&Object.assign(r,s)}}}Vs.set("Aspect",{desc:"Aspect Function",ctor:st,rasterArgumentNames:["raster"]}),Vs.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:ft,rasterArgumentNames:["raster"]}),Vs.set("Colormap",{desc:"Colormap Function",ctor:Pt,rasterArgumentNames:["raster"]}),Vs.set("CompositeBand",{desc:"CompositeBand Function",ctor:Nt,rasterArgumentNames:["rasters"]}),Vs.set("Convolution",{desc:"Convolution Function",ctor:Gt,rasterArgumentNames:["raster"]}),Vs.set("ExtractBand",{desc:"ExtractBand Function",ctor:Jt,rasterArgumentNames:["raster"]}),Vs.set("Curvature",{desc:"Curvature Function",ctor:Lt,rasterArgumentNames:["raster"]}),Vs.set("Local",{desc:"Local Function",ctor:rs,rasterArgumentNames:["rasters"]}),Vs.set("Mask",{desc:"Mask Function",ctor:ls,rasterArgumentNames:["raster"]}),Vs.set("NDVI",{desc:"NDVI Function",ctor:ds,rasterArgumentNames:["raster"]}),Vs.set("Remap",{desc:"Remap Function",ctor:vs,rasterArgumentNames:["raster"]}),Vs.set("Slope",{desc:"Slope Function",ctor:Is,rasterArgumentNames:["raster"]}),Vs.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Bs,rasterArgumentNames:["raster"]}),Vs.set("Stretch",{desc:"Stretch Function",ctor:Ds,rasterArgumentNames:["raster"]}),Vs.set("Table",{desc:"Attribute Table Function",ctor:Us,rasterArgumentNames:["raster"]});export{Ws as c,Ls as g};
