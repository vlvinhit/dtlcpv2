/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{getJsonType as t,isPoint as i}from"../geometry/support/jsonUtils.js";import{W as s}from"./unitUtils.js";import{n as r,o,p as n}from"./featureConversionUtils.js";import{i as a,f as p}from"./objectIdUtils.js";import{F as l}from"./FeatureStore.js";import{c as m,p as u}from"./projectionSupport.js";import{Q as d}from"./QueryEngine.js";import{b as c,a as y,d as f}from"./clientSideDefaults.js";import{l as j,a as g,m as h,c as b,s as I}from"./sourceUtils.js";import F from"../layers/support/FieldsIndex.js";import{k as E}from"./fieldType.js";import{getFieldDefaultValue as _}from"../layers/support/fieldUtils.js";import"../core/lang.js";import"./typedArrayUtil.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./get.js";import"./utils.js";import"./maybe.js";import"./metadata.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./jsonMap.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./aaBoundingBox.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./OptimizedGeometry.js";import"../core/Evented.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./_commonjsHelpers.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./timeSupport.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"../geometry.js";import"./typeUtils.js";import"./utils4.js";import"./utils5.js";import"./json.js";import"./MemCache.js";import"./LRUCache.js";import"../core/sql/WhereClause.js";import"./executionError.js";import"./datetime.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils9.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./arcadeOnDemand.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"../core/reactiveUtils.js";import"../core/signal.js";import"./debugFlags.js";import"./defaultsJSON.js";const x=s,T={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:s},R={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function S(e){return i(e)?null!=e.z:!!e.hasZ}function q(e){return i(e)?null!=e.m:!!e.hasM}class O{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(t){const i=[],{features:s}=t,r=this._inferLayerProperties(s,t.fields),o=t.fields||[],n=null!=t.hasM?t.hasM:!!r.hasM,u=null!=t.hasZ?t.hasZ:!!r.hasZ,j=!t.spatialReference&&!r.spatialReference,g=j?x:t.spatialReference||r.spatialReference,h=j?T:null,b=t.geometryType||r.geometryType,I=!b;let S=t.objectIdField||r.objectIdField,q=t.timeInfo;if(!I&&(j&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!b))throw new e("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!S)throw new e("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(r.objectIdField&&S!==r.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${S}" doesn't match the field name "${r.objectIdField}", found in the provided fields`}),S=r.objectIdField),S&&!r.objectIdField){let e=null;o.some((t=>t.name===S&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):o.unshift({alias:S,name:S,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of o){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("feature-layer:invalid-field-name","field name is missing",{field:t});if(t.name===S&&(t.type="esriFieldTypeOID"),!E.jsonValues.includes(t.type))throw new e("feature-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const O={};for(const e of o)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){const t=_(e);void 0!==t&&(O[e.name]=t)}if(this._fieldsIndex=new F(o),this._createDefaultAttributes=c(O,S),q){if(q.startTimeField){const e=this._fieldsIndex.get(q.startTimeField);e?(q.startTimeField=e.name,e.type="esriFieldTypeDate"):q.startTimeField=null}if(q.endTimeField){const e=this._fieldsIndex.get(q.endTimeField);e?(q.endTimeField=e.name,e.type="esriFieldTypeDate"):q.endTimeField=null}if(q.trackIdField){const e=this._fieldsIndex.get(q.trackIdField);e?q.trackIdField=e.name:(q.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:q}}))}q.startTimeField||q.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:q}}),q=null)}const v={warnings:i,featureErrors:[],layerDefinition:{...R,drawingInfo:y(b),templates:f(O),extent:h,geometryType:b,objectIdField:S,fields:o,hasZ:u,hasM:n,timeInfo:q},assignedObjectIds:{}};if(this._queryEngine=new d({fields:o,geometryType:b,hasM:n,hasZ:u,objectIdField:S,spatialReference:g,featureStore:new l({geometryType:b,hasM:n,hasZ:u}),timeInfo:q,cacheSpatialQueries:!0}),!s||!s.length)return this._nextObjectId=a,v;const w=p(S,s);return this._nextObjectId=w+1,await m(s,g),this._loadInitialFeatures(v,s)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([j(t,i),m(e.adds,t),m(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,i){let s,r,o=null,n=null,a=null;for(const i of e){const e=i.geometry;if(null!=e&&(o||(o=t(e)),n||(n=e.spatialReference),null==s&&(s=S(e)),null==r&&(r=q(e)),o&&n&&null!=s&&null!=r))break}if(i&&i.length){let e=null;i.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(a=e.name)}return{geometryType:o,spatialReference:n,objectIdField:a,hasM:r,hasZ:s}}async _loadInitialFeatures(e,i){const{geometryType:s,hasM:o,hasZ:n,objectIdField:a,spatialReference:p,featureStore:l}=this._queryEngine,m=[];for(const r of i){if(null!=r.uid&&(e.assignedObjectIds[r.uid]=-1),r.geometry&&s!==t(r.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),o=h(this._fieldsIndex,i,r.attributes,!0,e.warnings);o?e.featureErrors.push(o):(this._assignObjectId(i,r.attributes,!0),r.attributes=i,null!=r.uid&&(e.assignedObjectIds[r.uid]=r.attributes[a]),null!=r.geometry&&(r.geometry=u(r.geometry,r.geometry.spatialReference,p)),m.push(r))}l.addMany(r([],m,s,n,o,a));const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=d,c){const{start:t,end:i}=c;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}async _applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(b(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:o,timeExtent:n}=await this._queryEngine.fetchRecomputedExtents();return{extent:o,timeExtent:n,featureEditResults:r}}_applyAddEdits(e,i){const{addResults:s}=e,{geometryType:o,hasM:n,hasZ:a,objectIdField:p,spatialReference:l,featureStore:m}=this._queryEngine,d=[];for(const r of i){if(r.geometry&&o!==t(r.geometry)){s.push(g("Incorrect geometry type."));continue}const i=this._createDefaultAttributes(),n=h(this._fieldsIndex,i,r.attributes);if(n)s.push(n);else{if(this._assignObjectId(i,r.attributes),r.attributes=i,null!=r.uid){const t=r.attributes[p];e.uidToObjectId[r.uid]=t}if(null!=r.geometry){const e=r.geometry.spatialReference??l;r.geometry=u(I(r.geometry,e),e,l)}d.push(r),s.push(b(r.attributes[p]))}}m.addMany(r([],d,o,a,n,p))}_applyUpdateEdits({updateResults:e},i){const{geometryType:s,hasM:r,hasZ:a,objectIdField:p,spatialReference:l,featureStore:m}=this._queryEngine;for(const d of i){const{attributes:i,geometry:c}=d,y=i&&i[p];if(null==y){e.push(g(`Identifier field ${p} missing`));continue}if(!m.has(y)){e.push(g(`Feature with object id ${y} missing`));continue}const f=o(m.getFeature(y),s,a,r);if(null!=c){if(s!==t(c)){e.push(g("Incorrect geometry type."));continue}const i=c.spatialReference??l;f.geometry=u(I(c,i),i,l)}if(i){const t=h(this._fieldsIndex,f.attributes,i);if(t){e.push(t);continue}}m.add(n(f,s,a,r,p)),e.push(b(y))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}export{O as default};
