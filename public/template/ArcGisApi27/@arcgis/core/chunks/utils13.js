/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{i as e}from"./typedArrayUtil.js";import{throwIfAborted as t,eachAlways as n}from"../core/promiseUtils.js";import l from"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import i from"../layers/support/Field.js";import{isStringField as a}from"../layers/support/fieldUtils.js";import o from"../rest/support/StatisticDefinition.js";import{noDominantCategoryField as r}from"../smartMapping/statistics/support/predominanceUtils.js";import{a as s,g as u,m as c}from"./utils11.js";import{i as m,a as f,c as p}from"./utils12.js";import{l as d,i as g,p as y,s as v}from"./utils9.js";const x=/_value$/i,h=Math.LOG10E,F=10;function w(e){return e.map((e=>e.toJSON()))}function E(e,t){const n=[],l=e.layer,i="featureReduction"in l?l.featureReduction:null,a="binning"===i?.type,o=null!=i&&"fields"in i?i.fields?.map((e=>e.name?.toLowerCase())).filter(Boolean):[];if(!a||!t)return n;for(const e of t)o.includes(e.toLowerCase())||n.push(e);return n}function V(e,t,n){const l=[];if(t)for(const i of t){const t=e.getField(i);t&&n&&"availableFields"in n&&!n.availableFields?.includes(t.name)&&l.push(t.name)}return l}function z(e,t){const n=e&&e.features;if(0===n?.length)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const l=n?.[0]?.attributes,i={};for(const e in l)i[e.replace(x,"").toLowerCase()]=l[e];return null!=i.totalcount&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&null!=i.min&&null==i.stddev&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach((e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))})),i.min===i.max&&null!=i.min&&(i.avg=i.min,i.stddev=i.variance=0)),i}function S(e){const t=[],n=e.classBreaks,l=n[0].minValue,i=n[n.length-1].maxValue;n.forEach((e=>{t.push([e.minValue,e.maxValue])}));const a={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:l,max:i,intervals:t,sqlExpr:T(a),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function T(e){const{field:t,normalizationType:n,normalizationField:l,normalizationTotal:i,layer:a}=e,o=m(a,t);let r=t;return"percent-of-total"===n?r=`((${o?p(t):t} / ${i}) * 100)`:"log"===n?r=`(log(${t}) * ${h})`:"field"===n?r=`(${o?p(t):t} / ${l})`:"natural-log"===n?r=`(log(${o?p(t):t}))`:"square-root"===n&&(r=`(power(${o?p(t):t}, 0.5))`),r}function q(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()!==t){n=e[l];break}return n}function b(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()===t){n=e[l];break}return n}function $(e,t,n,l,i){const a={},o="countOFExpr";e&&e.features&&e.features.forEach((e=>{const t=e.attributes,n=q(t,o),l=b(t,o);null!=n&&null!=l&&0!==n&&(a[n]=l)}));const r=[];return d(t,n,l).forEach(((e,t)=>{const n=(t+1).toString();r.push({minValue:e[0],maxValue:e[1],count:a.hasOwnProperty(n)?a[n]:0})})),{bins:r,minValue:t,maxValue:n,normalizationTotal:i}}function j(e,n){const l=e&&e.features,{field:i,field2:a,field3:o,fieldDelimiter:r,layer:s,view:u,signal:c,labels:m}=n,f=`countOF${i&&a?"Expr":i||"Expr"}`,p={};let d=!1;if(l.forEach((e=>{const t=e.attributes,n=b(t,f);let l=i?b(t,i):q(t,f),s=a?b(t,a):null,u=o?b(t,o):null;null===l&&0===n&&(d=!0),(null==l||"string"==typeof l&&""===l.trim())&&(l=null),a&&(null==s||"string"==typeof s&&""===s.trim())&&(s=null),o&&(null==u||"string"==typeof u&&""===u.trim())&&(u=null);let c=l;a&&(c=`${y(c)}${r}${y(s)}`,o&&(c=`${c}${r}${y(u)}`)),null==p[c]?p[c]={count:n,data:c}:p[c].count=p[c].count+n})),i&&d){const e=i+" is NULL";return s.queryFeatureCount({whereClause:e,view:u,signal:c}).then((e=>(e=e||0,p.null.count=p.null.count+e,C(p,m)))).catch((()=>(t(c),C(p,m))))}return Promise.resolve(C(p,m))}function C(e,t){if(t)for(const n in e)e[n].label=t[n];return{count:e}}async function L(e,t,n){const i=e?n.getField(e):null,a=i?n.getFieldDomain(i.name):null;if(a)return a;const{uniqueValueInfos:o}=await n.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),r=o.map((e=>({code:e.value})));return new l({codedValues:r})}async function D(e,t){if(!e.returnAllCodedValues)return[];const{field:n,field2:l,field3:i}=e;if(n&&!l){const e=n?t.getField(n):null,l=e?t.getFieldDomain(e.name):null;return l?[l]:[]}const a=[];return n&&(a.push(L(n,e,t)),l&&(a.push(L(l,e,t)),i&&a.push(L(i,e,t)))),Promise.all(a)}function O(e,t){return f(e,new Date(0),t,"milliseconds").sqlExpression}function R(e){return{viewingMode:"2d"===e.type?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function I(e,t){const n=e.map((e=>e.value)),l=t.filter((e=>!n.includes(e)));for(const t of l)e.push({value:t,count:0});e.sort(((e,n)=>t.indexOf(e.value)-t.indexOf(n.value)));for(const t of e)t.value===r&&(t.value=null);return{predominantCategoryInfos:e}}function B(t){const n="featureReduction"in t?t.featureReduction:null;return((null!=n&&"fields"in n?n.fields:null)??[]).map((e=>{const n=function(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?"string":"double":null;default:return null}}(e,t.fieldsIndex);return n?new i({type:n,name:e.name,alias:e.alias}):null})).filter(e)}function M(e,t,n){const{field:l,normalizationType:i,normalizationField:r,normalizationTotal:m,minValue:f,maxValue:p,filter:d}=t,y=e.supportsSQLExpression&&n?O(e,l):t.sqlExpression,x=T({field:l,normalizationType:i,normalizationField:r,normalizationTotal:m,layer:e}),h=y||x,F=h?s(h,f,p):null,w=u({field:l,normalizationField:r,normalizationType:i}),E=c(t.sqlWhere,w),V=c(E,F),z=g({normalizationField:r,normalizationType:i,sqlExpression:y,supportsSQLExpression:e.supportsSQLExpression,minValue:f,maxValue:p}),S=a(e.getField(l??void 0)),q=v.filter((e=>"nullcount"===e?z:!S||"count"===e)),b=e.createQuery();return b.where=c(b.where,V),b.sqlFormat=y?"standard":null,b.outStatistics=q.map((t=>{const n=new o;let l=null,i=null,a=`${t}_value`;return"variance"===t?(l="var",i=h):"nullcount"===t?(l="count",i=e.objectIdField,a="totalcount_value"):"median"===t?(l="percentile-continuous",i=h,n.statisticParameters={value:.5}):(l=t,i=h),n.statisticType=l,n.onStatisticField=i,n.outStatisticFieldName=a,n})),N(b,d),b}function N(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function Q(e,t){const{field:n,field2:l,field3:i,sqlExpression:a}=t,o=!(!n||!l),r=e.createQuery();return r.where=c(r.where,t.sqlWhere),r.sqlFormat=a?"standard":null,r.outStatistics=[U(o?null:n,o?"1":a)].filter(Boolean),r.groupByFieldsForStatistics=[n||a,l,i].filter(Boolean),N(r,t.filter),r}function U(e,t){const n="countOF"+(e||"Expr"),l=new o;return l.statisticType="count",l.onStatisticField=t?"1":e,l.outStatisticFieldName=n,l}function k(e,t,l,i=10,a,o,r){const{min:s,max:u,normTotal:m,excludeZerosExpr:f}=t,p=t.intervals||d(s,u,i),g=t.sqlExpr||l;return function(e,t,l,i,a,o,r){const s=[],u=t.length;for(let e=0;e<u;e++){const n=c(i,c(l+" >= "+t[e][0],null!==t[e][1]?l+(e===u-1?" <= ":" < ")+t[e][1]:""));s.push(n)}return n(s.map((t=>e.queryFeatureCount({whereClause:t,view:a,filter:o,signal:r}))))}(e,p,g,f,a,o,r).then((e=>({bins:e.map(((e,t)=>({minValue:p[t][0],maxValue:p[t][1],count:e.value}))),minValue:s,maxValue:u,normalizationTotal:m})))}export{z as a,R as b,V as c,Q as d,w as e,j as f,M as g,k as h,D as i,I as j,T as k,F as l,O as m,$ as n,S as o,E as p,B as q,N as u};
