/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var t,i;!function(t){t[t.Unknown=0]="Unknown",t[t.Point=1]="Point",t[t.LineString=2]="LineString",t[t.Polygon=3]="Polygon"}(t||(t={}));class s{constructor(t,i){this.x=t,this.y=i}clone(){return new s(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){this.x=t,this.y=i}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);this.x/=s,this.y/=s}rightPerpendicular(){const t=this.x;this.x=this.y,this.y=-t}move(t,i){this.x+=t,this.y+=i}assign(t){this.x=t.x,this.y=t.y}assignAdd(t,i){this.x=t.x+i.x,this.y=t.y+i.y}assignSub(t,i){this.x=t.x-i.x,this.y=t.y-i.y}rotate(t,i){const s=this.x,h=this.y;this.x=s*t-h*i,this.y=s*i+h*t}scale(t){this.x*=t,this.y*=t}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new s(t.x+i.x,t.y+i.y)}static sub(t,i){return new s(t.x-i.x,t.y-i.y)}}class h{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}class n{constructor(t,i,s,h=8,n=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=n,this._tileSize=512*h,this._dz=t,this._yPos=i,this._xPos=s}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new s(t,i),this._firstPt=new s(t,i),this._dist=0}lineTo(t,i){const n=this._isIn(t,i),e=new s(t,i),_=s.distance(this._prevPt,e);let l,x,a,y,o,r,m,u;if(n)this._prevIsIn?this._lineTo(t,i,!0):(l=this._prevPt,x=e,a=this._intersect(x,l),this._start=this._dist+_*(1-this._r),this._lineTo(a.x,a.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=e,a=this._intersect(x,l),this._lineTo(a.x,a.y,!0),this._lineTo(l.x,l.y,!1);else{const t=this._prevPt,i=e;if(t.x<=this._xmin&&i.x<=this._xmin||t.x>=this._xmax&&i.x>=this._xmax||t.y<=this._ymin&&i.y<=this._ymin||t.y>=this._ymax&&i.y>=this._ymax)this._lineTo(i.x,i.y,!1);else{const s=[];if((t.x<this._xmin&&i.x>this._xmin||t.x>this._xmin&&i.x<this._xmin)&&(y=(this._xmin-t.x)/(i.x-t.x),u=t.y+y*(i.y-t.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new h(y,this._xmin,u))),(t.x<this._xmax&&i.x>this._xmax||t.x>this._xmax&&i.x<this._xmax)&&(y=(this._xmax-t.x)/(i.x-t.x),u=t.y+y*(i.y-t.y),u<=this._ymin?r=!1:u>=this._ymax?r=!0:s.push(new h(y,this._xmax,u))),(t.y<this._ymin&&i.y>this._ymin||t.y>this._ymin&&i.y<this._ymin)&&(y=(this._ymin-t.y)/(i.y-t.y),m=t.x+y*(i.x-t.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new h(y,m,this._ymin))),(t.y<this._ymax&&i.y>this._ymax||t.y>this._ymax&&i.y<this._ymax)&&(y=(this._ymax-t.y)/(i.y-t.y),m=t.x+y*(i.x-t.x),m<=this._xmin?o=!1:m>=this._xmax?o=!0:s.push(new h(y,m,this._ymax))),0===s.length)o?r?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):r?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let t=0;t<s.length;t++)this._lineTo(s[t].x,s[t].y,!0)}this._lineTo(i.x,i.y,!1)}}this._dist+=_,this._prevIsIn=n,this._prevPt=e}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this._lines.length?null:(this._type===t.Polygon&&i&&_.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==t.LineString)throw new Error("Only valid for lines");this._pushLine();const i=this._lines,s=i.length;if(0===s)return null;const h=[];for(let t=0;t<s;t++)h.push({line:i[t],start:this._starts[t]||0});return h}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let h,n,e;if(i.x>=this._xmin&&i.x<=this._xmax)n=i.y<=this._ymin?this._ymin:this._ymax,e=(n-t.y)/(i.y-t.y),h=t.x+e*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)h=i.x<=this._xmin?this._xmin:this._xmax,e=(h-t.x)/(i.x-t.x),n=t.y+e*(i.y-t.y);else{n=i.y<=this._ymin?this._ymin:this._ymax,h=i.x<=this._xmin?this._xmin:this._xmax;const s=(h-t.x)/(i.x-t.x),_=(n-t.y)/(i.y-t.y);s<_?(e=s,n=t.y+s*(i.y-t.y)):(e=_,h=t.x+_*(i.x-t.x))}return this._r=e,new s(h,n)}_pushLine(){this._line&&(this._type===t.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,h,n){this._type!==t.Polygon?n&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),h=Math.round((h-(this._ymin+this._margin))*this._finalRatio),this._line.push(new s(i,h))):(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),h<this._ymin&&(h=this._ymin),h>this._ymax&&(h=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),h=Math.round((h-(this._ymin+this._margin))*this._finalRatio),this._line.push(new s(i,h)),this._isH=!1,this._isV=!1)}_lineTo(i,h,n){let e,_;if(this._type!==t.Polygon)if(n){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),h=Math.round((h-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(e=this._line[this._line.length-1],e.equals(i,h)))return;this._line.push(new s(i,h))}else this._line&&this._line.length>0&&this._pushLine();else if(n||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),h<this._ymin&&(h=this._ymin),h>this._ymax&&(h=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),h=Math.round((h-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){e=this._line[this._line.length-1];const t=e.x===i,n=e.y===h;if(t&&n)return;this._isH&&t||this._isV&&n?(e.x=i,e.y=h,_=this._line[this._line.length-2],_.x===i&&_.y===h?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===i,this._isV=_.y===h)):(this._isH=_.x===i,this._isV=_.y===h)):(this._line.push(new s(i,h)),this._isH=t,this._isV=n)}else this._line.push(new s(i,h))}}class e{setExtent(t){this._ratio=4096===t?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const h=this._ratio;this._line.push(new s(t*h,i*h))}lineTo(t,i){const h=this._ratio;this._line.push(new s(t*h,i*h))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}}!function(t){t[t.sideLeft=0]="sideLeft",t[t.sideRight=1]="sideRight",t[t.sideTop=2]="sideTop",t[t.sideBottom=3]="sideBottom"}(i||(i={}));class _{static simplify(t,s,h){if(!h)return;const n=-s,e=t+s,l=-s,x=t+s,a=[],y=[],o=h.length;for(let t=0;t<o;++t){const s=h[t];if(!s||s.length<2)continue;let _,o=s[0];const r=s.length;for(let h=1;h<r;++h)_=s[h],o.x===_.x&&(o.x<=n&&(o.y>_.y?(a.push(t),a.push(h),a.push(i.sideLeft),a.push(-1)):(y.push(t),y.push(h),y.push(i.sideLeft),y.push(-1))),o.x>=e&&(o.y<_.y?(a.push(t),a.push(h),a.push(i.sideRight),a.push(-1)):(y.push(t),y.push(h),y.push(i.sideRight),y.push(-1)))),o.y===_.y&&(o.y<=l&&(o.x<_.x?(a.push(t),a.push(h),a.push(i.sideTop),a.push(-1)):(y.push(t),y.push(h),y.push(i.sideTop),y.push(-1))),o.y>=x&&(o.x>_.x?(a.push(t),a.push(h),a.push(i.sideBottom),a.push(-1)):(y.push(t),y.push(h),y.push(i.sideBottom),y.push(-1)))),o=_}if(0===a.length||0===y.length)return;_.fillParent(h,y,a),_.fillParent(h,a,y);const r=[];_.calcDeltas(r,y,a),_.calcDeltas(r,a,y),_.addDeltas(r,h)}static fillParent(t,s,h){const n=h.length,e=s.length;for(let _=0;_<e;_+=4){const e=s[_],x=s[_+1],a=s[_+2],y=t[e][x-1],o=t[e][x];let r=8092,m=-1;for(let s=0;s<n;s+=4){if(h[s+2]!==a)continue;const n=h[s],e=h[s+1],_=t[n][e-1],x=t[n][e];switch(a){case i.sideLeft:case i.sideRight:if(l(y.y,_.y,x.y)&&l(o.y,_.y,x.y)){const t=Math.abs(x.y-_.y);t<r&&(r=t,m=s)}break;case i.sideTop:case i.sideBottom:if(l(y.x,_.x,x.x)&&l(o.x,_.x,x.x)){const t=Math.abs(x.x-_.x);t<r&&(r=t,m=s)}}}s[_+3]=m}}static calcDeltas(t,i,s){const h=i.length;for(let n=0;n<h;n+=4){const h=[],e=_.calcDelta(n,i,s,h);t.push(i[n]),t.push(i[n+1]),t.push(i[n+2]),t.push(e)}}static calcDelta(t,i,s,h){const n=i[t+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),_.calcDelta(n,s,i,h)+1)}static addDeltas(t,s){const h=t.length;let n=0;for(let i=0;i<h;i+=4){const s=t[i+3];s>n&&(n=s)}for(let e=0;e<h;e+=4){const h=s[t[e]],_=t[e+1],l=n-t[e+3];switch(t[e+2]){case i.sideLeft:h[_-1].x-=l,h[_].x-=l,1===_&&(h[h.length-1].x-=l),_===h.length-1&&(h[0].x-=l);break;case i.sideRight:h[_-1].x+=l,h[_].x+=l,1===_&&(h[h.length-1].x+=l),_===h.length-1&&(h[0].x+=l);break;case i.sideTop:h[_-1].y-=l,h[_].y-=l,1===_&&(h[h.length-1].y-=l),_===h.length-1&&(h[0].y-=l);break;case i.sideBottom:h[_-1].y+=l,h[_].y+=l,1===_&&(h[h.length-1].y+=l),_===h.length-1&&(h[0].y+=l)}}}}const l=(t,i,s)=>t>=i&&t<=s||t>=s&&t<=i,x=Number.POSITIVE_INFINITY,a=Math.PI,y=2*a,o=128/a,r=a/180,m=1/Math.LN2;function u(t,i){return(t%=i)>=0?t:t+i}function p(t){return u(t*o,256)}function c(t){return Math.log(t)*m}function g(t,i,s){return t*(1-s)+i*s}export{r as C,t as G,s as P,e as S,n as T,a,x as b,y as c,g as i,c as l,u as p,p as r};
