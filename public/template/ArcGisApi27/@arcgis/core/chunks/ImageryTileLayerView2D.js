/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{L as s}from"./Logger.js";import{debounce as r,isAbortError as i,eachAlways as o}from"../core/promiseUtils.js";import{watch as a,syncAndInitial as n,sync as l,initial as u}from"../core/reactiveUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{h as p}from"./multidimensionalUtils.js";import{R as h,B as d,F as f}from"./RasterVFDisplayObject.js";import{L as g}from"./LayerView2D.js";import{c as y}from"./aaBoundingRect.js";import{m as _}from"../views/2d/ViewState.js";import{h as b}from"./maybe.js";import{d as x,e as j,r as T,g as v,m as w,s as P}from"./mat3.js";import{c as S}from"./mat3f32.js";import{f as U}from"./vec2f32.js";import{D as I}from"./DisplayObject.js";import{c as R,S as C,P as F,b as M,T as z,f as L,g as V}from"./enums3.js";import{c as D,e as B,f as G,s as k,h as O,a as E,d as A,b as q,g as W,i as Q,j as N}from"./rasterUtils.js";import{C as H}from"./contextUtils.js";import{Z as J}from"./vec2f64.js";import{T as K,a as Y}from"./Texture.js";import{k as X}from"./definitions.js";import{V as Z}from"./WGLContainer.js";import{W as $}from"./WGLBrushVTLSymbol.js";import{F as ee}from"./FramebufferObject.js";import{T as te}from"./TiledDisplayObject.js";import{W as se}from"./enums4.js";import{T as re}from"./TileContainer.js";import"../geometry.js";import{HandleOwner as ie}from"../core/HandleOwner.js";import oe from"../geometry/Point.js";import ae from"../layers/support/PixelBlock.js";import ne from"../layers/support/TileInfo.js";import{u as le,c as ue,r as ce,g as me}from"./RawBlockCache.js";import{g as pe,i as he}from"./rasterProjectionHelper.js";import{b as de}from"./rasterRendererChecks.js";import{a as fe,T as ge}from"./TileStrategy.js";import{T as ye}from"./TileInfoView.js";import"./TileKey2.js";import{g as _e}from"./capabilities2.js";import be from"../geometry/Extent.js";import{c as xe}from"./util.js";import{C as je}from"./vectorFieldUtils.js";import{I as Te}from"./ImageryTileLayerView.js";import ve from"../views/layers/LayerView.js";import{R as we}from"./RefreshableLayerView.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"../core/lang.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/Error.js";import"./object.js";import"../config.js";import"./string.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./datetime.js";import"./number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../layers/support/DimensionalDefinition.js";import"./VertexArrayObject.js";import"./VertexElementDescriptor.js";import"./dataUtils.js";import"./color.js";import"./enums.js";import"./number2.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./mat4.js";import"./_commonjsHelpers.js";import"./HighlightOptions.js";import"./ClipRect.js";import"../Viewpoint.js";import"../Camera.js";import"./Cyclical.js";import"./mat2d.js";import"./mat2df32.js";import"./mat2df64.js";import"./vec2.js";import"../geometry/projection.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./vec4f32.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"./heatmapUtils.js";import"./vec4f64.js";import"./heatmapTextureUtils.js";import"./isWebGL2Context.js";import"./earcut.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./OptimizedGeometry.js";import"./StyleDefinition.js";import"./config.js";import"./GeometryUtils2.js";import"./WatchUpdatingTracking.js";import"./pixelRangeUtils.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./QueueProcessor.js";import"./Queue.js";import"./commonProperties2.js";import"../TimeExtent.js";import"./timeUtils.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./popupUtils.js";const Pe={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class Se extends I{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e)}get processed(){return this._processed}set processed(e){this._processed=e,e||(b(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Pe}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdschanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e||"nearest")?R.LINEAR:R.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid=e,this._transformGridTexture=b(this._transformGridTexture)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:S()}}setTransform(e){const t=x(this.transforms.dvs),[s,r]=e.toScreenNoRotation([0,0],[this.x,this.y]),i=this.resolution/this.pixelRatio/e.resolution,o=i*this.width,a=i*this.height,n=Math.PI*this.rotation/180;j(t,t,U(s,r)),j(t,t,U(o/2,a/2)),T(t,t,-n),j(t,t,U(-o/2,-a/2)),v(t,t,U(o,a)),w(this.transforms.dvs,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,r=[],i=[];return s?t?(i.push(s),r.push("u_image"),this._colormapTexture&&(i.push(this._colormapTexture),r.push("u_colormap")),{names:r,textures:i}):(this._transformGridTexture&&(i.push(this._transformGridTexture),r.push("u_transformGrid")),i.push(s),r.push("u_image"),this._colormapTexture&&!e&&(i.push(this._colormapTexture),r.push("u_colormap")),{names:r,textures:i}):{names:r,textures:i}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=D(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;0!==e.length&&(this.processedTexture=e.shift(),e.forEach((e=>e?.dispose())),e.length=0)}_createOrDestroyRasterTexture(e){const t=this.source?.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloat?.textureFloatLinear;const r=this._getTextureSamplingMethod(this.interpolation),i=this.isRendereredSource||!e.capabilities.textureFloat?.textureFloat;this._rasterTexture=B(e,t,r,i),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){return null!=e&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:t,colormap:s}=this.symbolizerParameters,r="lut"===t||"stretch"===t&&null!=s;return!this._supportsBilinearTexture||r||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some(((e,s)=>e!==t[s]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=G(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=G(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function Ue(e){const t=[];return e&&(t.push("applyProjection"),1===e.spacing[0]&&t.push("lookupProjection")),t}function Ie(e,t,s){const r=!s.capabilities.textureFloat?.textureFloatLinear,i=[];return"cubic"===e?i.push("bicubic"):"bilinear"===e&&(t?(i.push("bilinear"),i.push("nnedge")):r&&i.push("bilinear")),i}const Re={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ce={createProgram:function(e,t,s){const r=s?[]:Ue(t.transformGrid);return{defines:r,program:e.painter.materialManager.getProgram(Re,r)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:o,textures:a}=s.getTextures({useProcessedTexture:i});k(e.context,t,o,a),O(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.dvs);const{colormap:n,colormapOffset:l}=s.symbolizerParameters,u=E(n,l);O(t,r,u)}},Fe={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])},Me={createProgram:function(e,t,s){const{colormap:r}=t.symbolizerParameters,i=[...s?[]:Ue(t.transformGrid),...Ie(t.interpolation,null!=r,e.context)];return null!=r&&i.push("applyColormap"),{defines:i,program:e.painter.materialManager.getProgram(Fe,i)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:o,textures:a}=s.getTextures({useProcessedTexture:i});k(e.context,t,o,a),O(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.dvs);const n=s.symbolizerParameters,{colormap:l,colormapOffset:u}=n;if(null!=l){const e=E(l,u);O(t,r,e)}const c=A(n);O(t,r,c)}},ze={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},Le={createProgram:function(e,t,s){const{colormap:r}=t.symbolizerParameters,i=[...s?[]:Ue(t.transformGrid),...Ie(t.interpolation,null!=r,e.context)];return t.isRendereredSource&&!s?i.push("noop"):null!=r&&i.push("applyColormap"),{defines:i,program:e.painter.materialManager.getProgram(ze,i)}},bindTextureAndUniforms:function(e,t,s,r,i=!1){const{names:o,textures:a}=s.getTextures({useProcessedTexture:i});k(e.context,t,o,a),O(t,r,s.commonUniforms),t.setUniformMatrix3fv("u_dvsMat3",s.transforms.dvs);const n=s.symbolizerParameters,{colormap:l,colormapOffset:u}=n;if(null!=l){const e=E(l,u);O(t,r,e)}const c=q(n);O(t,r,c)}},Ve=new Map;Ve.set("lut",Ce),Ve.set("hillshade",Me),Ve.set("stretch",Le);const De=[1,1],Be=[2,0,0,0,2,0,-1,-1,0];function Ge(e,t,s){const{context:r,rasterFunction:i,hasBranches:o}=e,{raster:a}=i.parameters,n=o?a?.id??-1:0,l=s.functionTextures[n]??s.rasterTexture;k(r,t,["u_image"],[l])}function ke(e,t,s){const{rasters:r}=e.rasterFunction.parameters;if(!r)return;if(r.length<2)return Ge(e,t,s);const i=r.filter((e=>"Constant"!==e.name)).map((e=>null!=e.id&&"Identity"!==e.name?s.functionTextures[e.id]:s.rasterTexture));if(k(e.context,t,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==r.length)if(2===r.length){const e=r.findIndex((e=>"Constant"===e.name)),s=0===e?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:i}=r[e].parameters;t.setUniform1f("u_image1Const",i),t.setUniformMatrix3fv("u_imageSwap",s)}else if(3===r.length){const e=[];if(r.forEach(((t,s)=>"Constant"===t.name&&e.push(s))),1===e.length){const{value:s}=r[e[0]].parameters;t.setUniform1f("u_image1Const",s);const i=0===e[0]?[0,1,0,0,0,1,1,0,0]:1===e[0]?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];t.setUniformMatrix3fv("u_imageSwap",i)}else if(2===e.length){const{value:s}=r[e[0]].parameters;t.setUniform1f("u_image1Const",s);const{value:i}=r[e[1]].parameters;t.setUniform1f("u_image2Const",i);const o=r.findIndex((e=>"Constant"!==e.name)),a=0===o?[1,0,0,0,1,0,0,0,1]:1===o?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];t.setUniformMatrix3fv("u_imageSwap",a)}}}function Oe(e){e.setUniform2fv("u_coordScale",De),e.setUniformMatrix3fv("u_dvsMat3",Be)}const Ee={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ae={createProgram:function(e,t){return e.painter.materialManager.getProgram(Ee,[])},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{width:r,height:i,resolution:o}=s;t.setUniform2fv("u_srcImageSize",[r,i]),t.setUniform2fv("u_cellSize",[o,o])}},qe={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])},We={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{indexType:i}=r.parameters;return s.materialManager.getProgram(qe,[i])},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},Qe={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ne={createProgram:function(e,t){return e.painter.materialManager.getProgram(Qe,[])},bindTextureAndUniforms:function(e,t,s){ke(e,t,s),Oe(t)}},He={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])},Je={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{kernelRows:i,kernelCols:o}=r.parameters,a=[{name:"rows",value:i},{name:"cols",value:o}];return s.materialManager.getProgram(He,a)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t),t.setUniform2fv("u_srcImageSize",[s.width,s.height]);const{kernel:r,clampRange:i}=e.rasterFunction.parameters;t.setUniform1fv("u_kernel",r),t.setUniform2fv("u_clampRange",i)}},Ke={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ye={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{curvatureType:i}=r.parameters,o=[i];return s.materialManager.getProgram(Ke,o)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{width:r,height:i,resolution:o}=s,{zFactor:a}=e.rasterFunction.parameters;t.setUniform2fv("u_srcImageSize",[r,i]),t.setUniform1f("u_zlFactor",200*a/o/o)}},Xe={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])},Ze={createProgram:function(e,t){return e.painter.materialManager.getProgram(Xe,[])},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},$e={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])},et=new Set(["sinh","cosh","tanh","asinh","acosh","atanh"]),tt={createProgram:function(e){const{painter:t,rasterFunction:s}=e,{imageCount:r,operationName:i,rasters:o,isOutputRounded:a}=s.parameters;let n=i.toLowerCase();e.context.type===H.WEBGL1&&et.has(n)&&(n=`polyfill${n}`);const l=[n];2===r&&l.push("twoImages");const u=o.filter((e=>"Constant"===e.name));return u.length&&(l.push("oneConstant"),2===u.length&&l.push("twoConstant")),a&&l.push("roundOutput"),t.materialManager.getProgram($e,l)},bindTextureAndUniforms:function(e,t,s){ke(e,t,s),Oe(t);const{domainRange:r}=e.rasterFunction.parameters;t.setUniform2fv("u_domainRange",r)}},st={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])},rt={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,i=r.parameters.bandCount>1?["multiBand"]:[];return s.materialManager.getProgram(st,i)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{includedRanges:r,noDataValues:i}=e.rasterFunction.parameters;t.setUniform1fv("u_includedRanges",r),t.setUniform1fv("u_noDataValues",i)}},it={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])},ot={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,i=r.parameters.scaled?["scaled"]:[];return s.materialManager.getProgram(it,i)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{bandIndexMat3:r}=e.rasterFunction.parameters;t.setUniformMatrix3fv("u_bandIndexMat3",r)}},at={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])},nt={createProgram:function(e,t){return e.painter.materialManager.getProgram(at,[])},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{noDataRanges:r,rangeMaps:i,allowUnmatched:o,clampRange:a}=e.rasterFunction.parameters;t.setUniform1fv("u_noDataRanges",r),t.setUniform1fv("u_rangeMaps",i),t.setUniform1f("u_unmatchMask",o?1:0),t.setUniform2fv("u_clampRange",a)}},lt={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])},ut={createProgram:function(e,t){const{painter:s}=e,r=[],{interpolation:i,transformGrid:o}=t,a=!!e.rasterFunction?.parameters?.requireBilinear,n="bilinear"===i?!e.context.capabilities.textureFloat?.textureFloatLinear:a;return"cubic"===i?r.push("bicubic"):n&&r.push("bilinear"),o&&(r.push("applyProjection"),1===o.spacing[0]&&r.push("lookupProjection")),s.materialManager.getProgram(lt,r)},bindTextureAndUniforms:function(e,t,s){const{names:r,textures:i}=s.getTextures({forProcessing:!0});k(e.context,t,r,i),t.setUniform1f("u_scale",1),t.setUniform2fv("u_offset",[0,0]),t.setUniform2fv("u_coordScale",[1,1]),t.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),t.setUniform1i("u_flipY",0),t.setUniform1f("u_opacity",1);const{width:o,height:a,source:n,transformGrid:l}=s;t.setUniform2fv("u_srcImageSize",[n.width,n.height]),t.setUniform2fv("u_targetImageSize",[o,a]),t.setUniform2fv("u_transformSpacing",l?l.spacing:J),t.setUniform2fv("u_transformGridSize",l?l.size:J)}},ct={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])},mt={createProgram:function(e,t){const{painter:s,rasterFunction:r}=e,{slopeType:i}=r.parameters,o="percent-rise"===i?["percentRise"]:[];return s.materialManager.getProgram(ct,o)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{width:r,height:i,resolution:o}=s,{zFactor:a,slopeType:n,pixelSizePower:l,pixelSizeFactor:u}=e.rasterFunction.parameters;t.setUniform2fv("u_srcImageSize",[r,i]),t.setUniform2fv("u_cellSize",[o,o]),t.setUniform1f("u_zFactor",a),t.setUniform1f("u_pixelSizePower","adjusted"===n?l:0),t.setUniform1f("u_pixelSizeFactor","adjusted"===n?u:0)}},pt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},ht={createProgram:function(e,t){const{useGamma:s,bandCount:r,isOutputRounded:i}=e.rasterFunction.parameters,o=[];return s&&o.push("useGamma"),r>1&&o.push("multiBand"),i&&o.push("roundOutput"),e.painter.materialManager.getProgram(pt,o)},bindTextureAndUniforms:function(e,t,s){Ge(e,t,s),Oe(t);const{width:r,height:i}=s,o=e.rasterFunction.parameters;t.setUniform2fv("u_srcImageSize",[r,i]),t.setUniform1f("u_minOutput",o.outMin),t.setUniform1f("u_maxOutput",o.outMax),t.setUniform1fv("u_factor",o.factor),t.setUniform1fv("u_minCutOff",o.minCutOff),t.setUniform1fv("u_maxCutOff",o.maxCutOff),t.setUniform1fv("u_gamma",o.gamma),t.setUniform1fv("u_gammaCorrection",o.gammaCorrection)}},dt=new Map;function ft(e,t,s){const r=new K;return r.width=t,r.height=s,r.internalFormat=e.type===H.WEBGL2?C.RGBA32F:F.RGBA,r.samplingMode=R.NEAREST,r.dataType=M.FLOAT,r.isImmutable=e.type===H.WEBGL2,r.wrapMode=z.CLAMP_TO_EDGE,r}dt.set("aspect",Ae),dt.set("bandarithmetic",We),dt.set("compositeband",Ne),dt.set("convolution",Je),dt.set("curvature",Ye),dt.set("extractband",Ze),dt.set("local",tt),dt.set("mask",rt),dt.set("ndvi",ot),dt.set("remap",nt),dt.set("slope",mt),dt.set("stretch",ht);class gt extends ${constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){b(this._quad),b(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,r="raster"===s;t.setBlendingEnabled(!r),t.setBlendFunctionSeparate(L.ONE,L.ONE_MINUS_SRC_ALPHA,L.ONE,L.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!r)}draw(e,t){if(null==t.source||t.suspended)return;const{renderPass:s}=e;if("raster-bitmap"!==s)return"raster"===s?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:s}=e,r="Reproject"===s.name;if(!(r?!t.rasterTexture||!t.projected:!t.processed))return;const{timeline:i,context:o}=e;i.begin(this.name);const a=o.getBoundFramebufferObject(),n=o.getViewport();r||(t.processedTexture=b(t.processedTexture)),o.setStencilFunction(V.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(o);const{isStandardRasterTileSize:l,fbo:u}=this._getRasterFBO(o,t.width,t.height);(function(e,t,s,r){const i=e.rasterFunction.name.toLowerCase(),o="reproject"===i?ut:function(e){return dt.get(e.toLowerCase())}(i);if(null==o)return;const a=function(e,t,s,r){const{context:i,requestRender:o,allowDelayedRender:a}=e,n=r.createProgram(e,s);if(a&&null!=o&&!n.compiled)return o(),null;const{width:l,height:u}=s;return i.bindFramebuffer(t),i.setViewport(0,0,l,u),i.useProgram(n),n}(e,s,r,o);if(!a)return;o.bindTextureAndUniforms(e,a,r),t.draw();const{width:n,height:l}=r,u=ft(e.context,n,l),c=new Y(e.context,u);if(s.copyToTexture(0,0,n,l,0,0,c),"reproject"===i)r.rasterTexture=c,r.projected=!0;else{const t=e.hasBranches?e.rasterFunction.id:0;r.functionTextures[t]=c}})(e,this._quad,u,t),l||u.dispose(),o.bindFramebuffer(a),o.setViewport(n.x,n.y,n.width,n.height),i.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:r,context:i}=e;if(r.begin(this.name),i.setStencilFunction(V.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void r.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const o=t.symbolizerParameters.type,a=function(e){return Ve.get(e)}(o),{requestRender:n,allowDelayedRender:l}=e,{defines:u,program:c}=a.createProgram(e,t,s);if(l&&null!=n&&!c.compiled)return void n();i.useProgram(c);const m=this._getUniformInfos(o,i,c,u);this._quad||(this._quad=new Z(i,[0,0,1,0,0,1,1,1])),a.bindTextureAndUniforms(e,c,t,m,s),this._quad.draw(),r.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=N(1,[0,0]),{transformGrid:s,width:r,height:i}=e,o=W(s,[r,i],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...o,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const r=t===X||s===X;return r?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:r,fbo:this._fbo}):{isStandardRasterTileSize:r,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const r=ft(e,t,s);return new ee(e,r)}_initQuad(e){this._quad||(this._quad=new Z(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,r){const i=r.length>0?e+"-"+r.join("-"):e;if(this._rendererUniformInfos.has(i))return this._rendererUniformInfos.get(i);const o=Q(t,s);return this._rendererUniformInfos.set(i,o),o}}class yt extends te{constructor(e,t,s,r,i,o,a=null){super(e,t,s,r,i,o),this.bitmap=null,this.bitmap=new Se(a,null,null),this.bitmap.coordScale=[i,o],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:S(),tileMat3:S()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class _t extends re{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,r]=this._tileInfoView.tileInfo.size,i=this._tileInfoView.getTileResolution(e.level);return new yt(e,i,t[0],t[3],s,r)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (tile)",brushes:[gt],target:()=>this.children.map((e=>e.bitmap)),drawPhase:se.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){if(!this.visible||e.drawPhase!==se.MAP)return;const{rasterFunctionChain:t}=this;if(!t)return e.renderPass="raster-bitmap",void super.doRender(e);const[s,r]=this._tileInfoView.tileInfo.size;if(e.renderPass="raster",e.rasterFunction={name:"Reproject",parameters:{targetImageSize:[s,r],requireBilinear:t.hasSurfaceFunction},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(e),t?.functions.length){const{functions:s,hasBranches:r}=t;for(let t=0;t<s.length;t++){const i=s[t];"Constant"!==i.name&&"Identity"!==i.name&&(e.renderPass="raster",e.rasterFunction=i,e.hasBranches=r,super.doRender(e))}}e.rasterFunction=null,e.renderPass="bitmap",super.doRender(e)}_getTileBounds(e){const t=this._tileInfoView.getTileBounds(y(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this._tileInfoView,r=_(s.spatialReference);if(r){const i=s.lodAt(e.level);if(!i)return t;const{resolution:o}=i,a=r/o%s.size[0],n=a?(s.size[0]-a)*o:0;t[0]-=n*e.world,t[2]-=n*e.world}}return t}}const bt=[0,0];let xt=class extends ie{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=r((async(e={})=>{if(!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState;e.reprocess&&(await this.updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters());const s=this._rasterFunctionState,{type:r}=this;return e.refetch||"raster"!==r&&e.reprocess||"cpu"===s||"cpu"===t?this.updatingHandles.addPromise(this.doRefresh()):this.updatingHandles.addPromise(this._redrawImage(e.signal))}))}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new fe({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:s,scale:r}=e.state,i=this._tileInfoView.getClosestInfoForScale(r);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[i.level],r=t.toJSON?t:be.fromJSON(t);le(this._blockCacheRegistryUrl,this._blockCacheRegistryId,r,s,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._fetchQueue?.updating||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){const e=_e("2d");this._maxIndexedColormapSize=4*(e.maxTextureSize||4096),e.supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new ye(this.layerView.tileInfo,this.layerView.fullExtent);const t=this._computeFetchConcurrency();this._fetchQueue=new ge({tileInfoView:this._tileInfoView,concurrency:t,process:(e,t)=>this._fetchTile1(e,t)});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new fe({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,ue(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",(()=>{e.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&null!=this._emptyTilePixelBlock)return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[s,r]=e,i=new ae({width:s,height:r,pixels:[new Uint8Array(s*r)],mask:new Uint8Array(s*r),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:e,raster:t}=this.layer,s="rasterFunction"in t?t.rasterFunction.rawInputBandIds:null;return e?.length&&s?.length&&1!==t.rasterInfo.bandCount?e.map((e=>s[Math.min(e,s.length-1)])):e||s}updateRasterFunctionParameters(){}_fetchTile1(e,t){const s=null!=t?t.signal:null,r=this.canUseWebGLForProcessing(),{layerView:i}=this,{tileInfo:o}=i,a=!o.isWrappable&&null!=pe(i.view.spatialReference),n=r&&this.layer.raster.hasUniqueSourceStorageInfo,l={allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:r?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:"raster"===this.type&&null!=this.container.rasterFunctionChain,signal:s,srcResolution:this._srcResolutions[e.level],timeExtent:i.timeExtent,tileInfo:o,disableWrapAround:a};return this.fetchTile(e,l)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const{layerView:e}=this,t=e.view.spatialReference;if(this._canUseLayerLODs()){const{origin:s,lods:r}=this.layer.tileInfo,i=r.map((({scale:e})=>e)),o=ne.create({spatialReference:t,size:X,scales:i,origin:s});return e.set("tileInfo",o),void(this._srcResolutions=r.map((({resolution:e})=>({x:e,y:e}))))}const s=de(this.layer.rasterInfo),{scales:r,srcResolutions:i,isCustomTilingScheme:o}=he(this.layer.rasterInfo,t,{tileSize:X,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:s}),a=ne.create({spatialReference:t,size:X,scales:r}),n=new oe({x:e.fullExtent.xmin,y:e.fullExtent.ymax,spatialReference:t});(0===a.origin.x||a.origin.x>n.x)&&(a.origin=n),this._isCustomTilingScheme=o,e.set("tileInfo",a),this._srcResolutions=i??[]}_canUseLayerLODs(){const{layer:e,layerView:t}=this;if("Map"!==e.raster.tileType)return!1;const{lods:s}=e.tileInfo,r=t.view.constraints?.effectiveLODs;return r?.length===s.length&&r.every((({scale:e},t)=>Math.abs(e-s[t].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){this.updatingHandles.addPromise(this._enqueueTileFetch1(e,t))}async _enqueueTileFetch1(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),r=this._getBandIds();let o=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){o=!1;try{await this._redrawImage(this._abortController?.signal)}catch(e){i(e)&&s.getLogger(this).error(e)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&"rasterVF"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(bt,e.key),n=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:o,bandIds:r,coords:a,resolution:n}),e.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(e)}catch(e){i(e)||s.getLogger(this).error(e)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map((async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await o(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!s||!s.pixelBlock)return;const{resolution:r}=this.previousLOD,i=this._getBandIds(),o=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:i});!this.canUseWebGLForProcessing()&&o&&"stretch"===o.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(o.factor=o.factor.map((e=>255*e)),o.outMin=Math.round(255*o.outMin),o.outMax=Math.round(255*o.outMax)),this._globalSymbolizerParams=o}_updateSymbolizerParams(){const{resolution:e}=this.previousLOD,t=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:t})}_updateBlockCacheRegistry(e=!1){const{layer:t,layerView:s}=this,{url:r,raster:i}=t,{multidimensionalDefinition:o}=t.normalizeRasterFetchOptions({multidimensionalDefinition:t.multidimensionalDefinition,timeExtent:s.timeExtent}),a=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(o):null,n=me(r,a);if(n!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&ue(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=ce(n,i.rasterInfo),e){const{view:e}=s,t=this._tileInfoView.getClosestInfoForScale(e.scale),r=this._srcResolutions[t.level];le(n,this._blockCacheRegistryId,e.extent,e.resolution,r,i.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((t=>e.push(this._enqueueTileFetch(t)))),await o(e)}};e([c()],xt.prototype,"_fetchQueue",void 0),e([c()],xt.prototype,"_globalUpdateRequested",void 0),e([c()],xt.prototype,"attached",void 0),e([c()],xt.prototype,"container",void 0),e([c()],xt.prototype,"layer",void 0),e([c()],xt.prototype,"layerView",void 0),e([c()],xt.prototype,"type",void 0),e([c()],xt.prototype,"useWebGLForProcessing",null),e([c()],xt.prototype,"useProgressiveUpdate",null),e([c()],xt.prototype,"timeExtent",void 0),e([c()],xt.prototype,"updating",null),xt=e([m("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],xt);let jt=class extends xt{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new _t(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:e}=this.layer,t=e.lookup?.colormapLut?.indexedColormap,s=t&&t.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&e.canRenderInWebGL&&!s&&!("majority"===this.layer.interpolation&&xe(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{raster:e,type:t}=this.layer,{container:s}=this;if("Function"!==e.datasetFormat||"wcs"===t)return s.rasterFunctionChain=null,s.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!0,t.processed=!1,t.projected&&(t.invalidateTexture(),t.rasterTexture=null))})),void(this._rasterFunctionState="na");const r=this._rasterFunctionState,{rasterFunction:i,primaryRasters:o}=e,a=i.supportsGPU&&(!o||o.rasters.length<=1),n=a?i.flatWebGLFunctionChain:null,{renderer:l}=this.layer,u=!a||!n?.functions.length||"raster-stretch"===l?.type&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();s.rasterFunctionChain=u?null:n;const c=null==i?"na":s.rasterFunctionChain?"gpu":"cpu";s.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=r!==c,t.processed=!1,t.processedTexture=null)})),this._rasterFunctionState=c}async updateTileSource(e,t){const s=this._getBandIds(),r=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:o,globalSymbolizerParams:a,suspended:n,coords:l,resolution:u}=t,c=this.layerView.hasTilingEffects?a:t.symbolizerParams,{bitmap:m}=e;if([m.x,m.y]=l,m.resolution=u,o&&null!=o&&null!=o.pixelBlock){const e={extent:o.extent,pixelBlock:o.pixelBlock};if(m.rawPixelData=e,i)m.source=o.pixelBlock,m.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===a?.type?a:void 0);m.source=t,m.isRendereredSource=!0}m.symbolizerParameters=i?c:null,i?m.transformGrid||(m.transformGrid=o.transformGrid):m.transformGrid=null}else{const e=this.createEmptyTilePixelBlock();m.source=e,m.symbolizerParameters=i?c:null,m.transformGrid=null}m.bandIds=i?s:null,m.width=this._tileInfoView.tileInfo.size[0],m.height=this._tileInfoView.tileInfo.size[1],m.interpolation=r,m.suspended=n,m.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:r}=t,i=this._getBandIds(),o=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{bitmap:n}=e,{rawPixelData:l}=n;a||null==l?(n.isRendereredSource&&null!=l&&(n.source=l.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(l,"stretch"===r?.type?r:void 0),n.isRendereredSource=!0),n.symbolizerParameters=a?this.layerView.hasTilingEffects?r:s:null,n.bandIds=a?i:null,n.interpolation=o,n.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const s=t.type;return"raster-colormap"===s||"unique-value"===s||"class-breaks"===s?"nearest":"raster-stretch"===t.type&&null!=t.colorRamp?"bilinear"===e||"cubic"===e?"bilinear":"nearest":e}};e([c()],jt.prototype,"container",void 0),e([c()],jt.prototype,"layer",void 0),e([c()],jt.prototype,"type",void 0),jt=e([m("esri.views.2d.layers.imagery.ImageryTileView2D")],jt);const Tt=jt;class vt extends te{constructor(e,t,s,r,i,o,a=null){super(e,t,s,r,i,o),this.tileData=new h(a),this.tileData.coordScale=[i,o],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:S(),tileMat3:S()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[r,i]=this.tileData.offset,o=[this.x+r*this.resolution,this.y-i*this.resolution],[a,n]=e.toScreenNoRotation([0,0],o),{symbolTileSize:l}=this.tileData.symbolizerParameters,u=Math.round((this.width-this.tileData.offset[0])/l)*l,c=Math.round((this.height-this.tileData.offset[1])/l)*l,m=u/this.rangeX*t,p=c/this.rangeY*t;P(s,m,0,0,0,p,0,a,n,1),w(this.transforms.dvs,e.displayViewMat3,s),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class wt extends re{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this._tileInfoView.getTileBounds(y(),e),[s,r]=this._tileInfoView.tileInfo.size,i=this._tileInfoView.getTileResolution(e.level);return new vt(e,i,t[0],t[3],s,r)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[d],target:()=>this.children.map((e=>e.tileData)),drawPhase:se.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===se.MAP&&this.symbolTypes.forEach((t=>{e.renderPass=t,super.doRender(e)}))}}let Pt=class extends xt{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.rasterInfo.dataType&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,t)),s}updateTileSource(e,t){const s=t.symbolizerParams,{tileData:r}=e;r.key=e.key,r.width=this._tileInfoView.tileInfo.size[0],r.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=s,{source:o}=t;if(r.offset=this._getTileSymbolOffset(r.key,i),null!=o&&null!=o.pixelBlock){const e={extent:o.extent,pixelBlock:o.pixelBlock};r.rawPixelData=e,r.symbolizerParameters=s,r.source=this._sampleVectorFieldData(o.pixelBlock,s,r.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo.size[0]-r.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-r.offset[1])/i)],t=this.createEmptyTilePixelBlock(e);r.source=t,r.symbolizerParameters=s}return r.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(e,t){const s=t.local,{symbolTileSize:r}=s,{tileData:i}=e;i.offset=this._getTileSymbolOffset(i.key,r);const o=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=s;const a=i.rawPixelData?.pixelBlock;return null!=a&&o!==r&&(i.source=this._sampleVectorFieldData(a,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new wt(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=a((()=>this.layer.renderer),(e=>this._updateSymbolType(e)))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(e,t){const s=e.col*this._tileInfoView.tileInfo.size[0]%t,r=e.row*this._tileInfoView.tileInfo.size[1]%t;return[s>t/2?t-s:-s,r>t/2?t-r:-r]}_sampleVectorFieldData(e,t,s){const{symbolTileSize:r}=t;return je(e,"vector-uv",r,s)}_updateSymbolType(e){"vector-field"===e.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};e([c()],Pt.prototype,"container",void 0),e([c()],Pt.prototype,"layer",void 0),e([c()],Pt.prototype,"type",void 0),Pt=e([m("esri.views.2d.layers.imagery.VectorFieldTileView2D")],Pt);const St=Pt;let Ut=class extends(Te(we(g(ve)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}get displayParameters(){const{layer:e}=this,t=this._get("displayParameters");return e.renderer?{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition,rasterFunction:"imagery-tile"===e.type?e.rasterFunction:null}:t}update(e){this.subview?.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([a((()=>this.displayParameters),((e,t)=>{const r=e.interpolation!==t?.interpolation&&("majority"===e.interpolation||"majority"===t?.interpolation)&&xe(this.layer),o=e.renderer!==t?.renderer&&t?.renderer?.type!==e.renderer?.type;o&&this._updateSubview();const a=e.multidimensionalDefinition!==t?.multidimensionalDefinition,n=e.rasterFunction!==t?.rasterFunction,l=n&&!this._useWebGLForProcessing,u=a||r||o||l;this.subview.redrawOrRefetch({refetch:u,reprocess:n}).catch((e=>{i(e)||s.getLogger(this).error(e)})),this.notifyChange("updating")})),a((()=>this.layer.blendMode??"normal"),(e=>{this.subview.container.blendMode=e}),n),a((()=>this.layer.effect??null),(e=>{this.subview.container.effect=e}),n),a((()=>this.layer.multidimensionalSubset??null),((e,t)=>{const{multidimensionalDefinition:r}=this.layer;null!=r&&p(r,e)!==p(r,t)&&(this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{i(e)||s.getLogger(this).error(e)})),this.notifyChange("updating"))}),l),a((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{i(e)||s.getLogger(this).error(e)}))}),u)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,s){return[{type:"graphic",layer:this.layer,mapPoint:e,graphic:new t({attributes:{},geometry:e.clone()})}]}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const e=this.layer.renderer?.type;if(!e)return;const t="vector-field"===e?"rasterVF":"flow"===e?"flow":"raster";if(this.subview){if(this.subview.type===t)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let r;if(r="rasterVF"===t?new St({layer:s,layerView:this}):"flow"===t?new f({layer:s,layerView:this}):new Tt({layer:s,layerView:this}),"useWebGLForProcessing"in r&&(r.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in r&&(r.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in r){const{subview:e}=this;r.previousLOD=e&&"previousLOD"in e?e.previousLOD:null}this._attachSubview(r),this.subview=r,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e?.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};e([c()],Ut.prototype,"subview",void 0),e([c()],Ut.prototype,"useWebGLForProcessing",null),e([c()],Ut.prototype,"useProgressiveUpdate",null),e([c({readOnly:!0})],Ut.prototype,"displayParameters",null),Ut=e([m("esri.views.2d.layers.ImageryTileLayerView2D")],Ut);const It=Ut;export{It as default};
