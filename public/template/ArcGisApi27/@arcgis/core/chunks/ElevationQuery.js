/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{r as e}from"./asyncUtils.js";import t from"../core/Error.js";import{g as i}from"./maybe.js";import{whenOrAbort as s,throwIfAbortError as o,eachAlways as n}from"../core/promiseUtils.js";import{g as l}from"./unitUtils.js";import a from"../geometry/Multipoint.js";import r from"../geometry/Point.js";import c from"../geometry/Polyline.js";import{initializeProjection as p,project as u}from"../geometry/projection.js";import{h as m,c as h,k as f}from"./aaBoundingRect.js";import{MultiTileElevationSampler as d}from"../layers/support/ElevationSampler.js";import{E as y}from"./ElevationSamplerData.js";import{T}from"./TileKey.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./typedArrayUtil.js";import"./metadata.js";import"../core/lang.js";import"./utils.js";import"./tracking.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./ensureType.js";import"./get.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./jsonMap.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./zmUtils.js";import"./extentUtils.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"./SimpleObservable.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Polygon.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";class g{constructor(e,t=null){if(this.tile=e,null!=t&&null!=e){const i=e.extent;this._samplerData=new y(t,i)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}sample(e,t){if(null==this._samplerData)return;const{safeWidth:i,data:s,dx:o,dy:n,y1:l,x0:a}=this._samplerData,{width:r,values:c,noDataValue:p}=s,u=v(n*(l-t),0,i),m=v(o*(e-a),0,i),h=Math.floor(u),f=Math.floor(m),d=h*r+f,y=d+r,T=c[d],g=c[y],w=c[d+1],x=c[y+1];if(T!==p&&g!==p&&w!==p&&x!==p){const e=m-f,t=T+(w-T)*e;return t+(g+(x-g)*e-t)*(u-h)}}}function v(e,t,i){return e<t?t:e>i?i:e}class w{async queryAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const o=x.fromGeometry(i);let n=!1;s&&s.returnSampleInfo||(n=!0);const l={...A,...s,returnSampleInfo:!0},a=await this.query(e[e.length-1],o,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),n&&delete r.sampleInfo,r}async query(e,i,s){if(!e)throw new t("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!i||!(i instanceof x)&&"point"!==i.type&&"multipoint"!==i.type&&"polyline"!==i.type)throw new t("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const o={...A,...s},n=new E(e,i.spatialReference,o),l=o.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(n,i,l),await this._selectTiles(n,l),await this._populateElevationTiles(n,l),this._sampleGeometryWithElevation(n),this._createQueryResult(n,l)}async createSampler(e,i,s){if(!e)throw new t("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new t("elevation-query:invalid-extent","Invalid or undefined extent");const o={...A,...s};return this._createSampler(e,i,o)}async createSamplerAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new t("elevation-query:invalid-extent","Invalid or undefined extent");const o={...A,...s,returnSampleInfo:!0},n=await this._createSampler(e[e.length-1],i,o);return this._createSamplerAllContinue(e,i,n,o)}async _createSampler(e,t,i,s){const o=i.signal;await e.load({signal:o});const n=t.spatialReference,l=e.tileInfo.spatialReference;n.equals(l)||(await p([{source:n,dest:l}],{signal:o}),t=u(t,l));const a=new R(e,t,i,s);return await this._selectTiles(a,o),await this._populateElevationTiles(a,o),new d(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const o=i.samplers.map((e=>m(e.extent))),n=await this._createSampler(e[e.length-1],t,s,o);if(0===n.samplers.length)return i;const l=i.samplers.concat(n.samplers),a=new d(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,s){const o=e.pop(),n=t.geometry.coordinates,l=t.sampleInfo;i(l);const a=[],r=[];for(let t=0;t<n.length;t++){const i=l[t];i.demResolution>=0?i.source||(i.source=o):e.length&&(a.push(n[t]),r.push(t))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),p=await this.query(e[e.length-1],c,s),u=p.sampleInfo;if(!u)throw new Error("no sampleInfo");return r.forEach(((e,t)=>{n[e].z=p.geometry.coordinates[t].z,l[e].demResolution=u[t].demResolution})),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);i(s);const o={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(o.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),o}async _createGeometryDescriptor(e,i,s){let o;const n=e.layer.tileInfo.spatialReference;if(i instanceof x?o=await i.project(n,s):(await p([{source:i.spatialReference,dest:n}],{signal:s}),o=u(i,n)),!o)throw new t("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);e.geometry=x.fromGeometry(o)}async _selectTiles(e,i){"geometry"===e.type&&this._preselectOutsideLayerExtent(e);const s=e.options.demResolution;if("number"==typeof s)this._selectTilesClosestResolution(e,s);else if("finest-contiguous"===s)await this._selectTilesFinestContiguous(e,i);else{if("auto"!==s)throw new t("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new g(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,o=e.y;(s<i.xmin||s>i.xmax||o<i.ymin||o>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:s}=e.layer,o=t/l(i.spatialReference),n=I(i,s);let a=n[0],r=0;for(let e=1;e<n.length;e++){const t=n[e];Math.abs(t.resolution-o)<Math.abs(a.resolution-o)&&(a=t,r=e)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:s}=e.layer,o=q(i,s,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,o,t)}async _selectTilesFinestContiguousAt(e,i,n){const l=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=l.tilemapCache,r=e.getTilesToFetch();try{if(a&&!D(a))await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:n})))),n);else if(await this._populateElevationTiles(e,n),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t("elevation-query:has-unavailable-tiles")}catch(t){o(t),await this._selectTilesFinestContiguousAt(e,i-1,n)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),o={},l=e.options.cache,a=e.options.noDataValue,r=i.map((async i=>{if(null==i.id)return;const s=`${e.layer.uid}:${i.id}:${a}`,n=null!=l?l.get(s):null,r=null!=n?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:a,signal:t});null!=l&&l.put(s,r),o[i.id]=new g(i,r)}));await s(n(r),t),e.populateElevationTiles(o)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const n=t.layer.tilemapCache;if(!n||D(n))return this._selectTilesAutoPrefetchUpsample(t,i);const l=t.getTilesToFetch(),a={},r=l.map((async t=>{const s=new T(null,0,0,0,h()),l=await e(n.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1!==l.ok?null!=t.id&&(a[t.id]=s):o(l.error)}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},o=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++))},n=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(o,n);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(n(s),t.upsampleTile(s)&&(l=!0),o(s))}),n),l););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,s=q(t,i,e.options.minDemResolution);e.selectTilesAtLOD(s,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t()})),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=l(t.spatialReference);return e.geometry.coordinates.map((s=>{let o=-1;return s.elevationTile&&s.elevationTile!==e.outsideExtentTile&&(o=t.lodAt(s.elevationTile.tile.level).resolution*i),{demResolution:o}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await p([{source:this.spatialReference,dest:e}],{signal:t});const i=new a({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=u(i,e);if(!s)return null;const o=this.coordinates.map(((e,t)=>{const i=e.clone(),o=s.points[t];return i.x=o[0],i.y=o[1],i})),n=this.clone(o);return n.spatialReference=e,n}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case"point":{const i=e,{hasZ:s,hasM:o}=i;t.coordinates=s&&o?[new _(i.x,i.y,i.z,i.m)]:s?[new _(i.x,i.y,i.z)]:o?[new _(i.x,i.y,null,i.m)]:[new _(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new r(t[0].x,t[0].y,t[0].z,t[0].m,i):new r(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:s,hasM:o}=i;t.coordinates=s&&o?i.points.map((e=>new _(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new _(e[0],e[1],e[2]))):o?i.points.map((e=>new _(e[0],e[1],null,e[2]))):i.points.map((e=>new _(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new a({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new a(t.map((e=>[e.x,e.y,e.z])),i);break}case"polyline":{const i=e,s=[],o=[],{hasZ:n,hasM:l}=e;let a=0;for(const e of i.paths)if(o.push([a,a+e.length]),a+=e.length,n&&l)for(const t of e)s.push(new _(t[0],t[1],t[2],t[3]));else if(n)for(const t of e)s.push(new _(t[0],t[1],t[2]));else if(l)for(const t of e)s.push(new _(t[0],t[1],null,t[2]));else for(const t of e)s.push(new _(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),n=o.map((e=>s.slice(e[0],e[1])));return new c({paths:n,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class _{constructor(e,t,i=null,s=null,o=null,n=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=o,this.elevationTile=n}clone(){return new _(this.x,this.y,this.z,this.m)}}class j{constructor(e,t){this.layer=e,this.options=t}}class E extends j{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,s=I(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(s,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const o=i.tile?.id;i.elevationTile||!o||e[o]||(e[o]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class R extends j{constructor(e,t,i,s){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,s=I(t,i);if(!e)return s.length-1;const o=this.extent;if(null==o)return-1;for(let i=s.length-1;i>=0;i--){const n=s[i],l=n.resolution*t.size[0],a=n.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/a)<=e)return i}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const o of e){const e=o.id;e&&!i[e]?(i[e]=o,s.push(o)):t&&t(o)}const o=s.sort(((e,t)=>e.level-t.level));return o.filter(((e,i)=>{for(let s=0;s<i;s++){const i=o[s].extent;if(i&&e.extent&&f(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:s}=this.layer,o=I(i,s)[e],n=i.tileAt(o.level,t.xmin,t.ymin),l=n.extent;if(null==l)return;const a=o.resolution*i.size[0],r=o.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),p=Math.ceil((t.ymax-l[1])/r);for(let e=0;e<p;e++)for(let t=0;t<c;t++){const s=new T(null,n.level,n.row-e,n.col+t);i.updateTileInfo(s),this._tileIsMasked(s)||this._candidateTiles.push(s)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&f(t,e.extent)))}}function q(e,t,i=0){const s=I(e,t);let o=s.length-1;if(i>0){const t=i/l(e.spatialReference),n=s.findIndex((e=>e.resolution<t));0===n?o=0:n>0&&(o=n-1)}return o}const A={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};function I(e,t){const i=e.lods;if(D(t)){const{effectiveMinLOD:e,effectiveMaxLOD:s}=t;return i.filter((t=>t.level>=e&&t.level<=s))}return i}function D(e){return null!=e?.tileInfo}export{w as ElevationQuery,x as GeometryDescriptor,q as getFinestLodIndex};
