/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{t}from"./typedArrayUtil.js";import{d as e,e as s,r,j as i}from"./mat3.js";import{c as a}from"./mat3f32.js";import{B as n}from"./enums2.js";import{h as o}from"./maybe.js";import{B as h,V as l}from"./VertexArrayObject.js";import{U as c}from"./enums3.js";import{F as y}from"./config.js";import{T as u}from"./TiledDisplayObject.js";class f{constructor(t){this.xTile=0,this.yTile=0,this.hash=0,this.priority=1,this.colliders=[],this.textVertexRanges=[],this.iconVertexRanges=[],this.tile=t}}class d{constructor(){this.tileSymbols=[],this.parts=[{startTime:0,startOpacity:0,targetOpacity:0,show:!1},{startTime:0,startOpacity:0,targetOpacity:0,show:!1}],this.show=!1}}function m(t,e,s,r,i,a){const n=s-i;if(n>=0)return(e>>n)+(r-(a<<n))*(t>>n);const o=-n;return e-(a-(r<<o))*(t>>o)<<o}class p{constructor(t,e,s){this._rows=Math.ceil(e/s),this._columns=Math.ceil(t/s),this._cellSize=s,this.cells=new Array(this._rows);for(let t=0;t<this._rows;t++){this.cells[t]=new Array(this._columns);for(let e=0;e<this._columns;e++)this.cells[t][e]=[]}}getCell(t,e){const s=Math.min(Math.max(Math.floor(e/this._cellSize),0),this._rows-1),r=Math.min(Math.max(Math.floor(t/this._cellSize),0),this._columns-1);return this.cells[s]&&this.cells[s][r]||null}getCellSpan(t,e,s,r){return[Math.min(Math.max(Math.floor(t/this._cellSize),0),this.columns-1),Math.min(Math.max(Math.floor(e/this._cellSize),0),this.rows-1),Math.min(Math.max(Math.floor(s/this._cellSize),0),this.columns-1),Math.min(Math.max(Math.floor(r/this._cellSize),0),this.rows-1)]}get cellSize(){return this._cellSize}get columns(){return this._columns}get rows(){return this._rows}}function g(t,e,s){for(const[r,i]of t.symbols)x(t,e,s,i,r)}function x(t,e,s,r,i){const a=t.layerData.get(i);if(a.type===n.SYMBOL){for(const e of r){const r=e.unique;let i;if(e.selectedForRendering){const e=r.parts[0],a=e.startOpacity,n=e.targetOpacity;t.allSymbolsFadingOut=t.allSymbolsFadingOut&&0===n;const o=s?Math.floor(127*a)|n<<7:n?255:0;i=o<<24|o<<16|o<<8|o}else i=0;for(const[t,s]of e.iconVertexRanges)for(let e=t;e<t+s;e+=4)a.iconOpacity[e/4]=i;if(e.selectedForRendering){const e=r.parts[1],a=e.startOpacity,n=e.targetOpacity;t.allSymbolsFadingOut=t.allSymbolsFadingOut&&0===n;const o=s?Math.floor(127*a)|n<<7:n?255:0;i=o<<24|o<<16|o<<8|o}else i=0;for(const[t,s]of e.textVertexRanges)for(let e=t;e<t+s;e+=4)a.textOpacity[e/4]=i}a.lastOpacityUpdate=e,a.opacityChanged=!0}}class A{constructor(t,e){this.layerUIDs=[],this.isDestroyed=!1,this._data=t;let s=1;const r=new Uint32Array(t);this.layerUIDs=[];const i=r[s++];for(let t=0;t<i;t++)this.layerUIDs[t]=r[s++];this.bufferDataOffset=s,e&&(this.layer=e.getStyleLayerByUID(this.layerUIDs[0]))}get isPreparedForRendering(){return null==this._data}get offset(){return this.bufferDataOffset}get data(){return this._data}destroy(){this.isDestroyed||(this.doDestroy(),this.isDestroyed=!0)}prepareForRendering(t){null!=this._data&&(this.doPrepareForRendering(t,this._data,this.bufferDataOffset),this._data=null)}}class I extends A{constructor(t,e){super(t,e),this.type=n.LINE,this.lineIndexStart=0,this.lineIndexCount=0;const s=new Uint32Array(t);let r=this.bufferDataOffset;this.lineIndexStart=s[r++],this.lineIndexCount=s[r++];const i=s[r++];if(i>0){this.patternMap=new Map;for(let t=0;t<i;t++){const t=s[r++],e=s[r++],i=s[r++];this.patternMap.set(t,[e,i])}}this.bufferDataOffset=r}get memoryUsed(){return(this.data?.byteLength??0)+(this.vao?.memoryEstimate??0)}hasData(){return this.lineIndexCount>0}triangleCount(){return this.lineIndexCount/3}doDestroy(){this.vao=o(this.vao)}doPrepareForRendering(t,e,s){const r=new Uint32Array(e),i=new Int32Array(r.buffer),a=r[s++],n=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,a));s+=a;const o=r[s++],y=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,o));s+=o;const u=this.layer.lineMaterial;this.vao=new l(t,u.getAttributeLocations(),u.getLayoutInfo(),{geometry:n},y)}}class b extends A{constructor(t,e){super(t,e),this.type=n.FILL,this.fillIndexStart=0,this.fillIndexCount=0,this.outlineIndexStart=0,this.outlineIndexCount=0;const s=new Uint32Array(t);let r=this.bufferDataOffset;this.fillIndexStart=s[r++],this.fillIndexCount=s[r++],this.outlineIndexStart=s[r++],this.outlineIndexCount=s[r++];const i=s[r++];if(i>0){this.patternMap=new Map;for(let t=0;t<i;t++){const t=s[r++],e=s[r++],i=s[r++];this.patternMap.set(t,[e,i])}}this.bufferDataOffset=r}get memoryUsed(){return(this.data?.byteLength??0)+(this.fillVAO?.memoryEstimate??0)+(this.outlineVAO?.memoryEstimate??0)}hasData(){return this.fillIndexCount>0||this.outlineIndexCount>0}triangleCount(){return(this.fillIndexCount+this.outlineIndexCount)/3}doDestroy(){this.fillVAO=o(this.fillVAO),this.outlineVAO=o(this.outlineVAO)}doPrepareForRendering(t,e,s){const r=new Uint32Array(e),i=new Int32Array(r.buffer),a=r[s++],n=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,a));s+=a;const o=r[s++],y=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,o));s+=o;const u=r[s++],f=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,u));s+=u;const d=r[s++],m=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,d));s+=d;const p=this.layer,g=p.fillMaterial,x=p.outlineMaterial;this.fillVAO=new l(t,g.getAttributeLocations(),g.getLayoutInfo(),{geometry:n},y),this.outlineVAO=new l(t,x.getAttributeLocations(),x.getLayoutInfo(),{geometry:f},m)}}class D extends A{constructor(t,e,s){super(t,e),this.type=n.SYMBOL,this.iconPerPageElementsMap=new Map,this.glyphPerPageElementsMap=new Map,this.symbolInstances=[],this.isIconSDF=!1,this.opacityChanged=!1,this.lastOpacityUpdate=0,this.symbols=[];const r=new Uint32Array(t),i=new Int32Array(t),a=new Float32Array(t);let o=this.bufferDataOffset;this.isIconSDF=!!r[o++];const h=r[o++];for(let t=0;t<h;t++){const t=r[o++],e=r[o++],s=r[o++];this.iconPerPageElementsMap.set(t,[e,s])}const l=r[o++];for(let t=0;t<l;t++){const t=r[o++],e=r[o++],s=r[o++];this.glyphPerPageElementsMap.set(t,[e,s])}const c=r[o++],y=r[o++];this.iconOpacity=new Int32Array(c),this.textOpacity=new Int32Array(y),o=function(t,e,s,r,i,a){const n=e[r++];for(let o=0;o<n;o++){const n=new f(a);n.xTile=e[r++],n.yTile=e[r++],n.hash=e[r++],n.priority=e[r++];const o=e[r++];for(let t=0;t<o;t++){const t=e[r++],i=e[r++],a=e[r++],o=e[r++],h=!!e[r++],l=e[r++],c=s[r++],y=s[r++],u=e[r++],f=e[r++];n.colliders.push({xTile:t,yTile:i,dxPixels:a,dyPixels:o,hard:h,partIndex:l,width:u,height:f,minLod:c,maxLod:y})}const h=t[r++];for(let e=0;e<h;e++)n.textVertexRanges.push([t[r++],t[r++]]);const l=t[r++];for(let e=0;e<l;e++)n.iconVertexRanges.push([t[r++],t[r++]]);i.push(n)}return r}(r,i,a,o,this.symbols,s),this.bufferDataOffset=o}get memoryUsed(){return(this.data?.byteLength??0)+(this.iconVAO?.memoryEstimate??0)+(this.textVAO?.memoryEstimate??0)+t(this.iconOpacity)+t(this.textOpacity)}hasData(){return this.iconPerPageElementsMap.size>0||this.glyphPerPageElementsMap.size>0}triangleCount(){let t=0;for(const[e,s]of this.iconPerPageElementsMap)t+=s[1];for(const[e,s]of this.glyphPerPageElementsMap)t+=s[1];return t/3}doDestroy(){this.iconVAO=o(this.iconVAO),this.textVAO=o(this.textVAO)}updateOpacityInfo(){if(!this.opacityChanged)return;this.opacityChanged=!1;const t=this.iconOpacity,e=this.iconVAO.vertexBuffers.opacity;t.length>0&&t.byteLength===e.byteLength&&e.setSubData(t,0,0,t.length);const s=this.textOpacity,r=this.textVAO.vertexBuffers.opacity;s.length>0&&s.byteLength===r.byteLength&&r.setSubData(s,0,0,s.length)}doPrepareForRendering(t,e,s){const r=new Uint32Array(e),i=new Int32Array(r.buffer),a=r[s++],n=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,a));s+=a;const o=r[s++],y=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,o));s+=o;const u=r[s++],f=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,u));s+=u;const d=r[s++],m=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,d));s+=d;const p=h.createVertex(t,c.STATIC_DRAW,this.iconOpacity.buffer),g=h.createVertex(t,c.STATIC_DRAW,this.textOpacity.buffer),x=this.layer,A=x.iconMaterial,I=x.textMaterial;this.iconVAO=new l(t,A.getAttributeLocations(),A.getLayoutInfo(),{geometry:n,opacity:p},y),this.textVAO=new l(t,I.getAttributeLocations(),I.getLayoutInfo(),{geometry:f,opacity:g},m)}}class w extends A{constructor(t,e){super(t,e),this.type=n.CIRCLE,this.circleIndexStart=0,this.circleIndexCount=0;const s=new Uint32Array(t);let r=this.bufferDataOffset;this.circleIndexStart=s[r++],this.circleIndexCount=s[r++],this.bufferDataOffset=r}get memoryUsed(){return(this.data?.byteLength??0)+(this.vao?.memoryEstimate??0)}hasData(){return this.circleIndexCount>0}triangleCount(){return this.circleIndexCount/3}doDestroy(){this.vao=o(this.vao)}doPrepareForRendering(t,e,s){const r=new Uint32Array(e),i=new Int32Array(r.buffer),a=r[s++],n=h.createVertex(t,c.STATIC_DRAW,new Int32Array(i.buffer,4*s,a));s+=a;const o=r[s++],y=h.createIndex(t,c.STATIC_DRAW,new Uint32Array(r.buffer,4*s,o));s+=o;const u=this.layer.circleMaterial;this.vao=new l(t,u.getAttributeLocations(),u.getLayoutInfo(),{geometry:n},y)}}class _ extends u{constructor(t,e,s,r,i,a,n,o=null){super(t,e,s,r,i,a,4096,4096),this.styleRepository=n,this._memCache=o,this.type="vector-tile",this._referenced=0,this._hasSymbolBuckets=!1,this._memoryUsedByLayerData=0,this.layerData=new Map,this.layerCount=0,this.status="loading",this.allSymbolsFadingOut=!1,this.lastOpacityUpdate=0,this.symbols=new Map,this.isCoverage=!1,this.neededForCoverage=!1,this.decluttered=!1,this.invalidating=!1,this.parentTile=null,this.childrenTiles=new Set,this._processed=!1,this._referenced=1,this.id=t.id}get hasSymbolBuckets(){return this._hasSymbolBuckets}get isFading(){return this._hasSymbolBuckets&&performance.now()-this.lastOpacityUpdate<y}get isHoldingForFade(){return this._hasSymbolBuckets&&(!this.allSymbolsFadingOut||performance.now()-this.lastOpacityUpdate<y)}get wasRequested(){return"errored"===this.status||"loaded"===this.status||"reloading"===this.status}setData(t){this.changeDataImpl(t),this.requestRender(),this.ready(),this.invalidating=!1,this._processed=!0}deleteLayerData(t){let e=!1;for(const s of t)if(this.layerData.has(s)){const t=this.layerData.get(s);this._memoryUsedByLayerData-=t.memoryUsed,t.type===n.SYMBOL&&this.symbols.has(s)&&(this.symbols.delete(s),e=!0),t.destroy(),this.layerData.delete(s),this.layerCount--}this._memCache?.updateSize(this.key.id,this,this._memoryUsedByLayerData),e&&this.emit("symbols-changed"),this.requestRender()}processed(){return this._processed}hasData(){return this.layerCount>0}dispose(){"unloaded"!==this.status&&(O.delete(this),_._destroyRenderBuckets(this.layerData),this.layerData=null,this.layerCount=0,this._memoryUsedByLayerData=0,this.destroy(),this.status="unloaded")}release(){return 0==--this._referenced&&(this.dispose(),this.stage=null,!0)}retain(){++this._referenced}get referenced(){return this._referenced}get memoryUsed(){return this._memoryUsedByLayerData+256}changeDataImpl(t){let e=!1;if(t){const{bucketsWithData:s,emptyBuckets:r}=t,i=this._createRenderBuckets(s);if(r&&r.byteLength>0){const t=new Uint32Array(r);for(const e of t)this._deleteLayerData(e)}for(const[t,s]of i)this._deleteLayerData(t),s.type===n.SYMBOL&&(this.symbols.set(t,s.symbols),e=!0),this._memoryUsedByLayerData+=s.memoryUsed,this.layerData.set(t,s),this.layerCount++;this._memCache?.updateSize(this.key.id,this,this.memoryUsed)}this._hasSymbolBuckets=!1;for(const[t,e]of this.layerData)e.type===n.SYMBOL&&(this._hasSymbolBuckets=!0);e&&this.emit("symbols-changed")}attachWithContext(t){this.stage={context:t,trashDisplayObject(t){t.processDetach()},untrashDisplayObject:()=>!1}}setTransform(t){super.setTransform(t);const a=this.resolution/(t.resolution*t.pixelRatio),n=this.width/this.rangeX*a,o=this.height/this.rangeY*a,h=[0,0];t.toScreen(h,[this.x,this.y]);const l=this.transforms.tileUnitsToPixels;e(l),s(l,l,h),r(l,l,Math.PI*t.rotation/180),i(l,l,[n,o,1])}_createTransforms(){return{dvs:a(),tileMat3:a(),tileUnitsToPixels:a()}}static _destroyRenderBuckets(t){if(!t)return;const e=new Set;t.forEach((t=>{e.has(t)||(t.destroy(),e.add(t))})),t.clear()}_createRenderBuckets(t){const e=new Map,s=new Map;for(const r of t){const t=this._deserializeBucket(r,s);for(const s of t.layerUIDs)e.set(s,t)}return e}_deserializeBucket(t,e){let s=e.get(t);if(s)return s;switch(new Uint32Array(t)[0]){case n.FILL:s=new b(t,this.styleRepository);break;case n.LINE:s=new I(t,this.styleRepository);break;case n.SYMBOL:s=new D(t,this.styleRepository,this);break;case n.CIRCLE:s=new w(t,this.styleRepository)}return e.set(t,s),s}_deleteLayerData(t){if(!this.layerData.has(t))return;const e=this.layerData.get(t);this._memoryUsedByLayerData-=e.memoryUsed,e.destroy(),this.layerData.delete(t),this.layerCount--}}const O=new Map;function S(){O.forEach(((t,e)=>{console.log(`\n${e.key}:`),t[0].forEach((t=>console.log(t))),console.log("========"),t[1].forEach((t=>console.log(t)))}))}export{p as G,_ as V,d as a,S as p,m as t,g as w};
