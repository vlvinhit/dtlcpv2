/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{h as s}from"./typedArrayUtil.js";import{L as r}from"./Logger.js";import{c as i}from"./MD5.js";import t from"../layers/support/AggregateField.js";import a from"../layers/support/ExpressionInfo.js";import n from"../renderers/support/AuthoringInfo.js";import l from"../renderers/visualVariables/SizeVariable.js";import o from"../renderers/visualVariables/support/SizeStop.js";import{_ as u}from"./tslib.es6.js";import{clone as p}from"../core/lang.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{w as m}from"./writer.js";import{i as f}from"./visualVariableUtils.js";var v;let x=v=class extends l{writeLevels(e,s,r){for(const r in e){const e=this.levels[r];return void(s.stops=e)}}clone(){return new v({axis:this.axis,field:this.field,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,maxDataValue:this.maxDataValue,maxSize:f(this.maxSize)?this.maxSize.clone():this.maxSize,minDataValue:this.minDataValue,minSize:f(this.minSize)?this.minSize.clone():this.minSize,normalizationField:this.normalizationField,stops:this.stops&&this.stops.map((e=>e.clone())),target:this.target,useSymbolValue:this.useSymbolValue,valueRepresentation:this.valueRepresentation,valueUnit:this.valueUnit,legendOptions:this.legendOptions&&this.legendOptions.clone(),levels:p(this.levels)})}};u([c()],x.prototype,"levels",void 0),u([m("levels")],x.prototype,"writeLevels",null),x=v=u([d("esri.views.2d.engine.LevelDependentSizeVariable")],x);const b=r.getLogger("esri.views.2d.layers.support.clusterUtils");s.add("esri-cluster-arcade-enabled",!0);const h=s("esri-cluster-arcade-enabled"),g=(e,s,r,i,t)=>{const a=s.clone();if(!_(a))return a;if(a.authoringInfo||(a.authoringInfo=new n),a.authoringInfo.isAutoGenerated=!0,"visualVariables"in a){const s=(a.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression)),n=E(s);s.forEach((s=>{"rotation"===s.type?s.field?s.field=V(e,s.field,"avg_angle","number"):s.valueExpression&&(s.field=S(e,s.valueExpression,"avg_angle","number"),s.valueExpression=null):s.normalizationField?(s.field=V(e,s.field,"avg_norm","number",s.normalizationField),s.normalizationField=null):s.field?s.field=V(e,s.field,"avg","number"):s.valueExpression&&(s.field=S(e,s.valueExpression,"avg","number"),s.valueExpression=null)})),null==n&&!y(s)&&t&&(s.push(z(r,i)),a.dynamicClusterSize=!0),a.visualVariables=s}switch(a.type){case"simple":break;case"pie-chart":for(const s of a.attributes)s.field?s.field=V(e,s.field,"sum","number"):s.valueExpression&&(s.field=S(e,s.valueExpression,"sum","number"),s.valueExpression=null);break;case"unique-value":a.field?a.field=V(e,a.field,"mode","string"):a.valueExpression&&(a.field=S(e,a.valueExpression,"mode","string"),a.valueExpression=null);break;case"class-breaks":a.normalizationField?(a.field=V(e,a.field,"avg_norm","number",a.normalizationField),a.normalizationField=null):a.field?a.field=V(e,a.field,"avg","number"):a.valueExpression&&(a.field=S(e,a.valueExpression,"avg","number"),a.valueExpression=null)}return a},E=e=>{for(const s of e)if("size"===s.type)return s;return null};function w(e,s,r){const i=e.clone();let t=!1;if("visualVariables"in i){const e=(i.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression));null==E(e)&&(i.visualVariables||(i.visualVariables=[]),i.visualVariables.push(z(s,r)),i.dynamicClusterSize=!0,t=!0)}return{renderer:i,didInject:t}}const y=e=>{for(const s of e)if("cluster_count"===s.field)return!0;return!1},z=(e,s)=>{const r=[new o({value:0,size:0}),new o({value:1})];if(null==s)return new l({field:"cluster_count",stops:[...r,new o({value:2,size:0})]});const i=Object.keys(s).reduce(((i,t)=>({...i,[t]:[...r,new o({value:Math.max(2,s[t].minValue),size:e.clusterMinSize}),new o({value:Math.max(3,s[t].maxValue),size:e.clusterMaxSize})]})),{});return new x({field:"cluster_count",levels:i})},_=s=>{const r=r=>b.error(new e("Unsupported-renderer",r,{renderer:s}));if(!s)return!1;switch(s.type){case"unique-value":if(s.field2||s.field3)return r("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(s.normalizationField){const e=s.normalizationType;if("field"!==e)return r(`FeatureReductionCluster does not support a normalizationType of ${e}`),!1}break;case"simple":case"pie-chart":break;default:return r(`FeatureReductionCluster does not support renderers of type ${s.type}`),!1}if(!h){if("valueExpression"in s&&s.valueExpression)return r("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in s&&s.visualVariables||[]).some((e=>!(!("valueExpression"in e)||!e.valueExpression))))return r("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function S(e,s,r,n){const l=i(s),o="mode"===r?`cluster_type_${l}`:"sum"===r?`cluster_sum_${l}`:`cluster_avg_${l}`;return e.some((e=>e.name===o))||e.push(new t({name:o,isAutoGenerated:!0,onStatisticExpression:new a({expression:s,returnType:n}),statisticType:r})),o}function V(e,s,r,n,l){if("cluster_count"===s||e.some((e=>e.name===s)))return s;const o=function(e,s,r){switch(e){case"sum":return`cluster_sum_${s}`;case"avg":case"avg_angle":return`cluster_avg_${s}`;case"mode":return`cluster_type_${s}`;case"avg_norm":{const e=r,t="field",a=s.toLowerCase()+",norm:"+t+","+e.toLowerCase();return"cluster_avg_"+i(a)}}}(r,s,l);return e.some((e=>e.name===o))||("avg_norm"===r?e.push(new t({name:o,isAutoGenerated:!0,onStatisticExpression:new a({expression:`$feature.${s} / $feature.${l}`,returnType:n}),statisticType:"avg"})):e.push(new t({name:o,isAutoGenerated:!0,onStatisticField:s,statisticType:r}))),o}export{w as a,z as b,g as c,E as f,_ as i};
