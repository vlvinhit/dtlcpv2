/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import"../core/lang.js";import"./typedArrayUtil.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";let t;function r(r,s){let a=s.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",s.responseType=a;const o=s.signal;return delete s.signal,globalThis.invokeStaticMessage("request",{url:r,options:s},{signal:o}).then((async n=>{let i,l,u,p,c;if(n.data)if(n.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(i=new Blob([n.data]),"json"!==a&&"text"!==a||(t||(t=new FileReaderSync),p=t.readAsText(i),"json"!==a)))){try{l=JSON.parse(p||null)}catch(t){const a={...t,url:r,requestOptions:s};throw new e("request:server",t.message,a)}if(l.error){const t={...l.error,url:r,requestOptions:s};throw new e("request:server",l.error.message,t)}}}else"native"===a&&(n.data.signal=o,u=await fetch(n.data.url,n.data),n.httpStatus=u.status);switch(a){case"blob":c=i;break;case"json":c=l;break;case"native":c=u;break;case"text":c=p;break;default:c=n.data}return{data:c,httpStatus:n.httpStatus,requestOptions:s,ssl:n.ssl,url:r}}))}export{r as execute};
