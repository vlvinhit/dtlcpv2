"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9595],{54179:(e,t,i)=>{i.d(t,{M:()=>h,a:()=>f});var r=i(29768),o=i(21972),s=i(71252),a=i(12047),n=i(76506),l=i(66396),u=i(17533);class p{constructor(){this._propertyOriginMap=new Map,this._originStores=new Array(o.a),this._values=new Map,this.multipleOriginsSupported=!0}clone(e){const t=new p,i=this._originStores[o.O.DEFAULTS];i&&i.forEach(((e,i)=>{t.set(i,(0,n.d9)(e),o.O.DEFAULTS)}));for(let i=o.O.SERVICE;i<o.a;i++){const r=this._originStores[i];r&&r.forEach(((r,o)=>{e&&e.has(o)||t.set(o,(0,n.d9)(r),i)}))}return t}get(e,t){const i=void 0===t?this._values:this._originStores[t];return i?i.get(e):void 0}keys(e){const t=null==e?this._values:this._originStores[e];return t?[...t.keys()]:[]}set(e,t,i=o.O.USER){let r=this._originStores[i];if(r||(r=new Map,this._originStores[i]=r),r.set(e,t),!this._values.has(e)||(0,s.a)(this._propertyOriginMap.get(e))<=i){const r=this._values.get(e);return this._values.set(e,t),this._propertyOriginMap.set(e,i),r!==t}return!1}delete(e,t=o.O.USER){const i=this._originStores[t];if(!i)return;const r=i.get(e);if(i.delete(e),this._values.has(e)&&this._propertyOriginMap.get(e)===t){this._values.delete(e);for(let i=t-1;i>=0;i--){const t=this._originStores[i];if(t&&t.has(e)){this._values.set(e,t.get(e)),this._propertyOriginMap.set(e,i);break}}}return r}has(e,t){const i=void 0===t?this._values:this._originStores[t];return!!i&&i.has(e)}revert(e,t){for(;t>0&&!this.has(e,t);)--t;const i=this._originStores[t],r=i&&i.get(e),o=this._values.get(e);return this._values.set(e,r),this._propertyOriginMap.set(e,t),o!==r}originOf(e){return this._propertyOriginMap.get(e)||o.O.DEFAULTS}forEach(e){this._values.forEach(e)}}const d=e=>{let t=class extends e{constructor(...e){super(...e);const t=(0,s.a)((0,l.g)(this)),i=t.store,r=new p;t.store=r,(0,a.s)(t,i,r)}read(e,t){(0,a.r)(this,e,t)}getAtOrigin(e,t){const i=c(this),r=(0,o.n)(t);if("string"==typeof e)return i.get(e,r);const s={};return e.forEach((e=>{s[e]=i.get(e,r)})),s}originOf(e){return(0,o.b)(this.originIdOf(e))}originIdOf(e){return c(this).originOf(e)}revert(e,t){const i=c(this),r=(0,o.n)(t),s=(0,l.g)(this);let a;a="string"==typeof e?"*"===e?i.keys(r):[e]:e,a.forEach((e=>{s.invalidate(e),i.revert(e,r),s.commit(e)}))}};return t=(0,r._)([(0,u.j)("esri.core.ReadOnlyMultiOriginJSONSupport")],t),t};function c(e){return(0,l.g)(e).store}let m=class extends(d(o.Z)){};m=(0,r._)([(0,u.j)("esri.core.ReadOnlyMultiOriginJSONSupport")],m);const y=e=>{let t=class extends e{constructor(...e){super(...e)}clear(e,t="user"){return b(this).delete(e,(0,o.n)(t))}write(e,t){return(0,a.w)(this,e=e||{},t),e}setAtOrigin(e,t,i){(0,l.g)(this).setAtOrigin(e,t,(0,o.n)(i))}removeOrigin(e){const t=b(this),i=(0,o.n)(e),r=t.keys(i);for(const e of r)t.originOf(e)===i&&t.set(e,t.get(e,i),o.O.USER)}updateOrigin(e,t){const i=b(this),r=(0,o.n)(t),s=this.get(e);for(let t=r+1;t<o.a;++t)i.delete(e,t);i.set(e,s,r)}toJSON(e){return this.write({},e)}};return t=(0,r._)([(0,u.j)("esri.core.WriteableMultiOriginJSONSupport")],t),t.prototype.toJSON.isDefaultToJSON=!0,t};function b(e){return(0,l.g)(e).store}const h=e=>{let t=class extends(y(d(e))){constructor(...e){super(...e)}};return t=(0,r._)([(0,u.j)("esri.core.MultiOriginJSONSupport")],t),t};let f=class extends(h(o.Z)){};f=(0,r._)([(0,u.j)("esri.core.MultiOriginJSONSupport")],f)},89440:(e,t,i)=>{i.d(t,{O:()=>b});var r=i(29768),o=i(60991),s=i(32101),a=i(34250),n=(i(91306),i(48578),i(17533)),l=i(2906),u=i(12047),p=i(43022);const d={ArcGISAnnotationLayer:!0,ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BingMapsAerial:!0,BingMapsHybrid:!0,BingMapsRoad:!0,CSV:!0,GeoRSS:!0,GeoJSON:!0,GroupLayer:!0,KML:!0,MediaLayer:!0,OGCFeatureLayer:!0,OrientedImageryLayer:!0,SubtypeGroupLayer:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,WebTiledLayer:!0},c={ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,WMS:!0,WebTiledLayer:!0,BingMapsAerial:!0,BingMapsRoad:!0,BingMapsHybrid:!0},m={ArcGISFeatureLayer:!0},y={"web-scene/operational-layers":{ArcGISDimensionLayer:!0,ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledElevationServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BuildingSceneLayer:!0,GroupLayer:!0,IntegratedMeshLayer:!0,OGCFeatureLayer:!0,PointCloudLayer:!0,WebTiledLayer:!0,CSV:!0,GeoJSON:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,KML:!0,RasterDataLayer:!0,Voxel:!0,LineOfSightLayer:!0},"web-scene/basemap":{ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,WebTiledLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,ArcGISImageServiceLayer:!0,WMS:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0},"web-scene/ground":{ArcGISTiledElevationServiceLayer:!0,RasterDataElevationLayer:!0},"web-map/operational-layers":d,"web-map/basemap":c,"web-map/tables":m,"link-chart/operational-layers":{...d,LinkChartLayer:!0},"link-chart/basemap":c,"link-chart/tables":m,"portal-item/operational-layers":{ArcGISFeatureLayer:!0,ArcGISSceneServiceLayer:!0,PointCloudLayer:!0,BuildingSceneLayer:!0,IntegratedMeshLayer:!0,OrientedImageryLayer:!0}},b=e=>{let t=class extends e{constructor(){super(...arguments),this.title=null}writeListMode(e,t,i,r){(r&&"ground"===r.layerContainerType||e&&(0,u.a)(this,i,{},r))&&(t[i]=e)}writeOperationalLayerType(e,t,i,r){!e||r&&"tables"===r.layerContainerType||(t.layerType=e)}writeTitle(e,t){t.title=e??"Layer"}read(e,t){t&&(t.layer=this),(0,u.b)(this,e,(t=>super.read(e,t)),t)}write(e,t){if(t?.origin){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`,i=y[e];let r=!!i?.[this.operationalLayerType];if("ArcGISTiledElevationServiceLayer"===this.operationalLayerType&&"web-scene/operational-layers"===e&&(r=!1),"ArcGISDimensionLayer"===this.operationalLayerType&&"web-map/operational-layers"===e&&(r=!1),!r)return t.messages?.push(new o.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this})),null}const i=super.write(e,{...t,layer:this}),r=!!t&&!!t.messages&&!!t.messages.filter((e=>e instanceof o.Z&&"web-document-write:property-required"===e.name)).length;return(0,s.jc)(i?.url)?(t?.messages?.push(new o.Z("layer:invalid-url",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Blob URL cannot be written to web scenes and web maps`,{layer:this})),null):!this.url&&r?null:i}beforeSave(){}};return(0,r._)([(0,a.Cb)({type:String,json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0}},"portal-item":{write:!1}}}})],t.prototype,"id",void 0),(0,r._)([(0,a.Cb)(p.b)],t.prototype,"listMode",void 0),(0,r._)([(0,l.w)("listMode")],t.prototype,"writeListMode",null),(0,r._)([(0,a.Cb)({type:String,readOnly:!0,json:{read:!1,write:{target:"layerType",ignoreOrigin:!0},origins:{"portal-item":{write:!1}}}})],t.prototype,"operationalLayerType",void 0),(0,r._)([(0,l.w)("operationalLayerType")],t.prototype,"writeOperationalLayerType",null),(0,r._)([(0,a.Cb)(p.d)],t.prototype,"opacity",void 0),(0,r._)([(0,a.Cb)({type:String,json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}},"portal-item":{write:!1}}},value:"Layer"})],t.prototype,"title",void 0),(0,r._)([(0,l.w)("title"),(0,l.w)(["web-scene"],"title")],t.prototype,"writeTitle",null),(0,r._)([(0,a.Cb)({type:Boolean,json:{name:"visibility"}})],t.prototype,"visible",void 0),t=(0,r._)([(0,n.j)("esri.layers.mixins.OperationalLayer")],t),t}},23771:(e,t,i)=>{i.d(t,{W:()=>d});var r=i(29768),o=i(21972),s=i(82933),a=i(66396),n=i(58085),l=i(6906),u=i(34250),p=i(17533);let d=class extends o.Z{constructor(){super(...arguments),this.updating=!1,this._handleId=0,this._handles=new s.Z,this._scheduleHandleId=0,this._pendingPromises=new Set}destroy(){this.removeAll(),this._handles.destroy()}add(e,t,i={}){return this._installWatch(e,t,i,n.YP)}addWhen(e,t,i={}){return this._installWatch(e,t,i,n.gx)}addOnCollectionChange(e,t,{initial:i=!1,final:r=!1}={}){const o=++this._handleId;return this._handles.add([(0,n.on)(e,"after-changes",this._createSyncUpdatingCallback(),n.Z_),(0,n.on)(e,"change",t,{onListenerAdd:i?e=>t({added:e.toArray(),removed:[]}):void 0,onListenerRemove:r?e=>t({added:[],removed:e.toArray()}):void 0})],o),(0,a.b)((()=>this._handles.remove(o)))}addPromise(e){if(null==e)return e;const t=++this._handleId;this._handles.add({remove:()=>{this._pendingPromises.delete(e)&&(0!==this._pendingPromises.size||this._handles.has(c)||this._set("updating",!1))}},t),this._pendingPromises.add(e),this._set("updating",!0);const i=()=>this._handles.remove(t);return e.then(i,i),e}removeAll(){this._pendingPromises.clear(),this._handles.removeAll(),this._set("updating",!1)}_installWatch(e,t,i={},r){const o=++this._handleId;i.sync||this._installSyncUpdatingWatch(e,o);const s=r(e,t,i);return this._handles.add(s,o),(0,a.b)((()=>this._handles.remove(o)))}_installSyncUpdatingWatch(e,t){const i=this._createSyncUpdatingCallback(),r=(0,n.YP)(e,i,{sync:!0,equals:()=>!1});return this._handles.add(r,t),r}_createSyncUpdatingCallback(){return()=>{this._handles.remove(c),++this._scheduleHandleId;const e=this._scheduleHandleId;this._get("updating")||this._set("updating",!0),this._handles.add((0,l.Os)((()=>{e===this._scheduleHandleId&&(this._set("updating",this._pendingPromises.size>0),this._handles.remove(c))})),c)}}};(0,r._)([(0,u.Cb)({readOnly:!0})],d.prototype,"updating",void 0),d=(0,r._)([(0,p.j)("esri.core.support.WatchUpdatingTracking")],d);const c=-42},25368:(e,t,i)=>{function r(e){return e&&"getAtOrigin"in e&&"originOf"in e}i.d(t,{i:()=>r})},94751:(e,t,i)=>{i.d(t,{c:()=>a,g:()=>u,o:()=>n,u:()=>l});var r=i(92896),o=i(60947),s=i(32422);const a={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new r.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:o.Z.WebMercator}),minus180Line:new r.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:o.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new r.Z({paths:[[[180,-180],[180,180]]],spatialReference:o.Z.WGS84}),minus180Line:new r.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:o.Z.WGS84})}};function n(e,t){return Math.ceil((e-t)/(2*t))}function l(e,t){const i=u(e);for(const e of i)for(const i of e)i[0]+=t;return e}function u(e){return(0,s.oU)(e)?e.rings:e.paths}},87217:(e,t,i)=>{i.d(t,{u:()=>o});var r=i(25368);function o(e){e&&e.writtenProperties&&e.writtenProperties.forEach((({target:e,propName:t,newOrigin:i})=>{(0,r.i)(e)&&i&&e.originOf(t)!==i&&e.updateOrigin(t,i)}))}},95307:(e,t,i)=>{i.d(t,{c:()=>l,s:()=>u}),i(74569);var r=i(82058),o=i(32422),s=i(94216),a=i(32101),n=i(81731);async function l(e,t,i,a){const n=(0,s.p)(e),l=t[0].spatialReference,u={...a,query:{...n.query,f:"json",sr:JSON.stringify(l),target:JSON.stringify({geometryType:(0,o.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(i)}},p=await(0,r.default)(n.path+"/cut",u),{cutIndexes:d,geometries:c=[]}=p.data;return{cutIndexes:d,geometries:c.map((e=>{const t=(0,o.im)(e);return t.spatialReference=l,t}))}}async function u(e,t,i){const s="string"==typeof e?(0,a.mN)(e):e,l=t[0].spatialReference,u=(0,o.Ji)(t[0]),p={...i,query:{...s.query,f:"json",sr:l.wkid??JSON.stringify(l),geometries:JSON.stringify((0,n.e)(t))}},{data:d}=await(0,r.default)(s.path+"/simplify",p);return(0,n.d)(d.geometries,u,l)}},94216:(e,t,i)=>{i.d(t,{a:()=>s,e:()=>n,p:()=>a}),i(31450),i(88762);var r=i(76506),o=i(32101);function s(e,t){return t?{...t,query:{...e??{},...t.query}}:{query:e}}function a(e){return"string"==typeof e?(0,o.mN)(e):(0,r.d9)(e)}function n(e,t,i){const r={};for(const o in e){if("declaredClass"===o)continue;const s=e[o];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){r[o]=[];for(let e=0;e<s.length;e++)r[o][e]=n(s[e])}else if("object"==typeof s)if(s.toJSON){const e=s.toJSON(i&&i[o]);r[o]=t?e:JSON.stringify(e)}else r[o]=t?s:JSON.stringify(s);else r[o]=s}return r}i(82058)},81731:(e,t,i)=>{i.d(t,{d:()=>s,e:()=>o});var r=i(32422);function o(e){return{geometryType:(0,r.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function s(e,t,i){const o=(0,r.q9)(t);return e.map((e=>{const t=o.fromJSON(e);return t.spatialReference=i,t}))}},95873:(e,t,i)=>{i.d(t,{p:()=>u,r:()=>p});var r=i(29768),o=i(21972),s=i(82933),a=i(34250),n=i(17533),l=i(23771);i(60474),i(66396),i(76506),i(48578),i(86656),i(92143),i(31450),i(71552),i(40642),i(379),i(62062),i(6540),i(19657),i(91055),i(6906),i(79456),i(50406),i(60991),i(91306),i(58085);const u=e=>{let t=class extends e{constructor(){super(...arguments),this._handles=new s.Z,this._updatingHandles=new l.W}destroy(){this.destroyed||(this._handles.destroy(),this._updatingHandles.destroy())}get handles(){return this._handles}get updatingHandles(){return this._updatingHandles}};return(0,r._)([(0,a.Cb)({readOnly:!0})],t.prototype,"handles",null),(0,r._)([(0,a.Cb)({readOnly:!0})],t.prototype,"updatingHandles",null),t=(0,r._)([(0,n.j)("esri.core.HandleOwner")],t),t};let p=class extends(u(o.Z)){};p=(0,r._)([(0,n.j)("esri.core.HandleOwner")],p)},95533:(e,t,i)=>{i.d(t,{aX:()=>b});var r=i(31450),o=i(60991),s=i(92143),a=i(44567),n=i(92896),l=i(94751),u=i(53785),p=i(35132),d=i(95307);i(48578),i(71552),i(76506),i(40642),i(34250),i(91306),i(60474),i(66396),i(86656),i(17533),i(6540),i(2906),i(21801),i(73796),i(12047),i(21972),i(379),i(62062),i(19657),i(91055),i(6906),i(79456),i(50406),i(97714),i(60947),i(57251),i(91597),i(86787),i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(7200),i(32422),i(84069),i(74569),i(22781),i(82058),i(88762),i(32101),i(94216),i(81731);const c=s.L.getLogger("esri.geometry.support.normalizeUtils");function m(e,t,i){if(t){const t=function(e,t){if(!(e instanceof n.Z||e instanceof a.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw c.error(e),new o.Z(e)}const i=(0,l.g)(e),r=[];for(const e of i){const i=[];r.push(i),i.push([e[0][0],e[0][1]]);for(let r=0;r<e.length-1;r++){const o=e[r][0],s=e[r][1],a=e[r+1][0],n=e[r+1][1],l=Math.sqrt((a-o)*(a-o)+(n-s)*(n-s)),u=(n-s)/l,p=(a-o)/l,d=l/t;if(d>1){for(let e=1;e<=d-1;e++){const r=e*t,a=p*r+o,n=u*r+s;i.push([a,n])}const e=(l+Math.floor(d-1)*t)/2,r=p*e+o,a=u*e+s;i.push([r,a])}i.push([a,n])}}return function(e){return"polygon"===e.type}(e)?new a.Z({rings:r,spatialReference:e.spatialReference}):new n.Z({paths:r,spatialReference:e.spatialReference})}(e,1e6);e=(0,p.Sx)(t,!0)}return i&&(e=(0,l.u)(e,i)),e}function y(e,t,i){if(Array.isArray(e)){const r=e[0];if(r>t){const i=(0,l.o)(r,t);e[0]=r+i*(-2*t)}else if(r<i){const t=(0,l.o)(r,i);e[0]=r+t*(-2*i)}}else{const r=e.x;if(r>t){const i=(0,l.o)(r,t);e=e.clone().offset(i*(-2*t),0)}else if(r<i){const t=(0,l.o)(r,i);e=e.clone().offset(t*(-2*i),0)}}return e}async function b(e,t,i){if(!Array.isArray(e))return b([e],t);t&&"string"!=typeof t&&c.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const o="string"==typeof t?t:t?.url??r.default.geometryServiceUrl;let s,h,f,v,g,T,S,w,C=0;const _=[],N=[];for(const t of e)if(null!=t)if(s||(s=t.spatialReference,h=(0,u.h)(s),f=s.isWebMercator,T=f?102100:4326,v=l.c[T].maxX,g=l.c[T].minX,S=l.c[T].plus180Line,w=l.c[T].minus180Line),h)if("mesh"===t.type)N.push(t);else if("point"===t.type)N.push(y(t.clone(),v,g));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((e=>y(e,v,g))),N.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,h);N.push(e.rings?new a.Z(e):e)}else if(t.extent){const e=t.extent,i=(0,l.o)(e.xmin,g)*(2*v);let r=0===i?t.clone():(0,l.u)(t.clone(),i);e.offset(i,0),e.intersects(S)&&e.xmax!==v?(C=e.xmax>C?e.xmax:C,r=m(r,f),_.push(r),N.push("cut")):e.intersects(w)&&e.xmin!==g?(C=e.xmax*(2*v)>C?e.xmax*(2*v):C,r=m(r,f,360),_.push(r),N.push("cut")):N.push(r)}else N.push(t.clone());else N.push(t);else N.push(t);let O=(0,l.o)(C,v),A=-90;const I=O,D=new n.Z;for(;O>0;){const e=360*O-180;D.addPath([[e,A],[e,-1*A]]),A*=-1,O--}if(_.length>0&&I>0){const t=function(e,t){let i=-1;for(let r=0;r<t.cutIndexes.length;r++){const o=t.cutIndexes[r],s=t.geometries[r],a=(0,l.g)(s);for(let e=0;e<a.length;e++){const t=a[e];t.some((i=>{if(i[0]<180)return!0;{let i=0;for(let e=0;e<t.length;e++){const r=t[e][0];i=r>i?r:i}i=Number(i.toFixed(9));const r=-360*(0,l.o)(i,180);for(let i=0;i<t.length;i++){const t=s.getPoint(e,i);s.setPoint(e,i,t.clone().offset(r,0))}return!0}}))}if(o===i){if("polygon"===e[0].type)for(const t of(0,l.g)(s))e[o]=e[o].addRing(t);else if("polyline"===e[0].type)for(const t of(0,l.g)(s))e[o]=e[o].addPath(t)}else i=o,e[o]=s}return e}(_,await(0,d.c)(o,_,D,i)),r=[],s=[];for(let i=0;i<N.length;i++){const o=N[i];if("cut"!==o)s.push(o);else{const o=t.shift(),a=e[i];null!=a&&"polygon"===a.type&&a.rings&&a.rings.length>1&&o.rings.length>=a.rings.length?(r.push(o),s.push("simplify")):s.push(f?(0,p.$)(o):o)}}if(!r.length)return s;const a=await(0,d.s)(o,r,i),n=[];for(let e=0;e<s.length;e++){const t=s[e];"simplify"!==t?n.push(t):n.push(f?(0,p.$)(a.shift()):a.shift())}return n}const x=[];for(let e=0;e<N.length;e++){const t=N[e];if("cut"!==t)x.push(t);else{const e=_.shift();x.push(!0===f?(0,p.$)(e):e)}}return x}},39595:(e,t,i)=>{i.r(t),i.d(t,{default:()=>li});var r=i(29768),o=i(31450),s=i(74569),a=i(23761),n=i(86748),l=(i(55306),i(71206),i(51979),i(60698),i(53321),i(65684),i(86758),i(95310),i(20208)),u=i(15324),p=i(60991),d=i(95873),c=i(92143),m=i(54179),y=i(71552),b=i(50406),h=i(58085),f=i(53785),v=i(32101),g=i(34250),T=i(91306),S=i(48578),w=i(97714),C=i(17533),_=i(2906),N=i(87217),O=i(21801),A=i(1623),I=i(41617),D=i(80462),x=i(89440),L=i(39241),F=i(6416),j=i(21132),M=i(96467),B=i(12047),E=i(60669),P=(i(63571),i(76506),i(40642),i(59465)),R=i(57251),U=(i(14249),i(60217),i(73796),i(60947)),k=(i(21972),i(60474),i(66396),i(86656),i(379),i(62062),i(6540),i(19657),i(91055),i(6906),i(79456),i(91597)),J=(i(86787),i(35132),i(84069)),Z=i(44567),W=(i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(7200),i(92896)),G=(i(22781),i(32422)),V=(i(30776),i(48027),i(54174),i(63130),i(25696),i(98402),i(42775),i(95834),i(34394),i(57150),i(76726),i(20444),i(76393),i(78548)),q=(i(2497),i(49906),i(46527),i(11799),i(48649),i(59877),i(9960),i(30823),i(53326),i(5853),i(39141),i(38742),i(48243),i(75067),i(89914),i(34635),i(10401),i(49900)),z=(i(88762),i(82058)),H=(i(81184),i(33101),i(3482),i(67477),i(78533),i(74653),i(91091),i(58943),i(70737),i(36834),i(66122)),K=(i(8487),i(17817),i(90814),i(15459),i(97189),i(61847),i(28212),i(16955),i(22401),i(48699),i(77894),i(55187),i(8586),i(44509),i(69814),i(11305),i(62259),i(44790),i(5909));i(48208),i(51589);let $=class extends B.wq{constructor(e){super(e),this.break=new E.Z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new E.Z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new E.Z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new E.Z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new E.Z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new E.Z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"break",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"first",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"unlocated",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"last",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"middle",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],$.prototype,"waypoint",void 0),$=(0,r._)([(0,C.j)("esri.layers.support.RouteStopSymbols")],$);const X=$;let Y=class extends B.wq{constructor(e){super(e),this.directionLines=new V.Z({color:[0,122,194],width:6}),this.directionPoints=new E.Z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new E.Z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new K.Z({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new V.Z({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new V.Z({width:8,color:[20,89,127]}),this.stops=new X}};(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"directionLines",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"directionPoints",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"pointBarriers",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"polygonBarriers",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"polylineBarriers",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Y.prototype,"routeInfo",void 0),(0,r._)([(0,g.Cb)({type:X})],Y.prototype,"stops",void 0),Y=(0,r._)([(0,C.j)("esri.layers.support.RouteSymbols")],Y);const Q=Y;var ee=i(56420),te=i(60111),ie=i(94216);const re=(0,R.s)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),oe=(0,R.s)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"});(0,R.s)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"});const se=(0,R.s)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),ae=(0,R.s)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),ne=(0,R.s)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),le=((0,R.s)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,R.s)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),ue=((0,R.s)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,R.s)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,R.s)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),pe=(0,R.s)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),de=(0,R.s)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),ce=(0,R.s)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),me=(0,R.s)()({1:"right",2:"left"},{useNumericKeys:!0}),ye=(0,R.s)()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),be=(0,R.s)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),he=(0,R.s)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),fe=(0,R.s)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),ve=(0,R.s)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),ge=(0,R.s)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),Te=(0,R.s)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),Se=(0,R.s)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),we=(0,R.s)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),Ce=(0,R.s)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),_e=(0,R.s)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Ne=(0,R.s)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),Oe=(0,R.s)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});let Ae=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(e,t){return t.id??t.itemId??null}readRestrictionAttributes(e,t){const{restrictionAttributeNames:i}=t;return null==i?null:i.map((e=>we.fromJSON(e)))}writeRestrictionAttributes(e,t,i){null!=e&&(t[i]=e.map((e=>we.toJSON(e))))}};(0,r._)([(0,g.Cb)({type:[Object],json:{write:!0}})],Ae.prototype,"attributeParameterValues",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Ae.prototype,"description",void 0),(0,r._)([(0,P.e)(ge,{ignoreUnknown:!1})],Ae.prototype,"distanceAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Ae.prototype,"id",void 0),(0,r._)([(0,w.r)("id",["id","itemId"])],Ae.prototype,"readId",null),(0,r._)([(0,P.e)(Se,{ignoreUnknown:!1})],Ae.prototype,"impedanceAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Ae.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[String],json:{write:!0}})],Ae.prototype,"restrictionAttributeNames",void 0),(0,r._)([(0,w.r)("restrictionAttributeNames")],Ae.prototype,"readRestrictionAttributes",null),(0,r._)([(0,_.w)("restrictionAttributeNames")],Ae.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,g.Cb)({type:Number,json:{write:{allowNull:!0}}})],Ae.prototype,"simplificationTolerance",void 0),(0,r._)([(0,P.e)(re)],Ae.prototype,"simplificationToleranceUnits",void 0),(0,r._)([(0,P.e)(Te,{ignoreUnknown:!1})],Ae.prototype,"timeAttributeName",void 0),(0,r._)([(0,P.e)(ue)],Ae.prototype,"type",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Ae.prototype,"useHierarchy",void 0),(0,r._)([(0,P.e)(le)],Ae.prototype,"uturnAtJunctions",void 0),Ae=(0,r._)([(0,C.j)("esri.rest.support.TravelMode")],Ae);const Ie=Ae;let De=class extends B.wq{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};(0,r._)([(0,g.Cb)({type:String})],De.prototype,"dataType",void 0),(0,r._)([(0,P.e)(Se,{ignoreUnknown:!1})],De.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[String]})],De.prototype,"parameterNames",void 0),(0,r._)([(0,g.Cb)({type:String})],De.prototype,"restrictionUsageParameterName",void 0),(0,r._)([(0,P.e)(Te,{ignoreUnknown:!1})],De.prototype,"timeNeutralAttributeName",void 0),(0,r._)([(0,g.Cb)({type:String})],De.prototype,"trafficSupport",void 0),(0,r._)([(0,P.e)(se)],De.prototype,"units",void 0),(0,r._)([(0,P.e)(Ne)],De.prototype,"usageType",void 0),De=(0,r._)([(0,C.j)("esri.rest.support.NetworkAttribute")],De);const xe=De;let Le=class extends B.wq{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};(0,r._)([(0,g.Cb)({type:Number})],Le.prototype,"buildTime",void 0),(0,r._)([(0,g.Cb)({type:String})],Le.prototype,"name",void 0),(0,r._)([(0,g.Cb)({type:[xe]})],Le.prototype,"networkAttributes",void 0),(0,r._)([(0,g.Cb)()],Le.prototype,"networkSources",void 0),(0,r._)([(0,g.Cb)({type:String})],Le.prototype,"state",void 0),Le=(0,r._)([(0,C.j)("esri.rest.support.NetworkDataset")],Le);const Fe=Le;let je=class extends B.wq{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>Se.fromJSON(e)))}writeAccumulateAttributes(e,t,i){null!=e&&e.length&&(t[i]=e.map((e=>Se.toJSON(e))))}readDefaultTravelMode(e,t){const i=t.supportedTravelModes?.find((({id:e})=>e===t.defaultTravelMode))??t.supportedTravelModes?.find((({itemId:e})=>e===t.defaultTravelMode));return i?Ie.fromJSON(i):null}};(0,r._)([(0,g.Cb)()],je.prototype,"accumulateAttributeNames",void 0),(0,r._)([(0,w.r)("accumulateAttributeNames")],je.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributeNames")],je.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)()],je.prototype,"attributeParameterValues",void 0),(0,r._)([(0,g.Cb)()],je.prototype,"currentVersion",void 0),(0,r._)([(0,g.Cb)()],je.prototype,"defaultTravelMode",void 0),(0,r._)([(0,w.r)("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],je.prototype,"readDefaultTravelMode",null),(0,r._)([(0,g.Cb)()],je.prototype,"directionsLanguage",void 0),(0,r._)([(0,P.e)(oe)],je.prototype,"directionsLengthUnits",void 0),(0,r._)([(0,g.Cb)()],je.prototype,"directionsSupportedLanguages",void 0),(0,r._)([(0,P.e)(Te,{ignoreUnknown:!1})],je.prototype,"directionsTimeAttribute",void 0),(0,r._)([(0,g.Cb)()],je.prototype,"hasZ",void 0),(0,r._)([(0,P.e)(Se,{ignoreUnknown:!1})],je.prototype,"impedance",void 0),(0,r._)([(0,g.Cb)({type:Fe})],je.prototype,"networkDataset",void 0),(0,r._)([(0,g.Cb)({type:[Ie]})],je.prototype,"supportedTravelModes",void 0),je=(0,r._)([(0,C.j)("esri.rest.support.NetworkServiceDescription")],je);const Me=je,Be=c.L.getLogger("esri.rest.networkService");function Ee(e,t,i,r){r[i]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}async function Pe(e,t,i){if(!e)throw new p.Z("network-service:missing-url","Url to Network service is missing");const r=(0,ie.a)({f:"json",token:t},i),{data:o}=await(0,z.default)(e,r),s=o.currentVersion>=10.4?async function(e,t,i){try{const r=(0,ie.a)({f:"json",token:t},i),o=(0,v.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:s,defaultTravelMode:a}}=await(0,z.default)(o,r);return{supportedTravelModes:s,defaultTravelMode:a}}catch(e){throw new p.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,i):async function(e,t){const i=(0,ie.a)({f:"json"},t),{data:r}=await(0,z.default)(e.replace(/\/rest\/.*$/i,"/info"),i);if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:o}=r,s=(0,v.Qj)(o)+"/sharing/rest/portals/self",{data:a}=await(0,z.default)(s,i),n=(0,y.g)("helperServices.routingUtilities.url",a);if(!n)return{supportedTravelModes:[],defaultTravelMode:null};const l=(0,ie.p)(o),u=/\/solve$/i.test(l.path)?"Route":/\/solveclosestfacility$/i.test(l.path)?"ClosestFacility":"ServiceAreas",p=(0,ie.a)({f:"json",serviceName:u},t),d=(0,v.Qj)(n)+"/GetTravelModes/execute",c=await(0,z.default)(d,p),m=[];let b=null;if(c?.data?.results?.length){const e=c.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);m.push(t)}}else"defaultTravelMode"===t.paramName&&(b=t.value)}return{supportedTravelModes:m,defaultTravelMode:b}}(e,i),{defaultTravelMode:a,supportedTravelModes:n}=await s;return o.defaultTravelMode=a,o.supportedTravelModes=n,Me.fromJSON(o)}var Re=i(95533);function Ue(e,t){if(null==e)return null;const i={},r=new RegExp(`^${t}`,"i");for(const o of Object.keys(e))if(r.test(o)){const r=o.substring(t.length);i[Se.fromJSON(r)]=e[o]}return i}function ke(e,t,i){if(null!=e){t.attributes||(t.attributes={});for(const r in e){const o=Se.toJSON(r);t.attributes[`${i}${o}`]=e[r]}}}function Je(e){const t={};for(const i of Object.keys(e)){const r=i;t[Se.fromJSON(r)]=e[i]}return t}function Ze(e){const t={};for(const i of Object.keys(e)){const r=i;t[Se.toJSON(r)]=e[i]}return t}function We(e,t){return null==e||null==t?null:Math.round((e-t)/6e4)}function Ge(e){const t=e.toJSON(),i=t;return i.accumulateAttributeNames&&=t.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(t.attributeParameterValues),i.barriers&&=JSON.stringify(t.barriers),i.outSR&&=t.outSR?.wkid,i.overrides&&=JSON.stringify(t.overrides),i.polygonBarriers&&=JSON.stringify(t.polygonBarriers),i.polylineBarriers&&=JSON.stringify(t.polylineBarriers),i.restrictionAttributeNames&&=t.restrictionAttributeNames?.join(),i.stops&&=JSON.stringify(t.stops),i.travelMode&&=JSON.stringify(t.travelMode),i}var Ve=i(87258);const qe=new R.J({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let ze=class extends B.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],ze.prototype,"description",void 0),(0,r._)([(0,g.Cb)({type:String,json:{read:qe.read,write:qe.write}})],ze.prototype,"type",void 0),ze=(0,r._)([(0,C.j)("esri.rest.support.GPMessage")],ze);const He=ze,Ke=new R.J({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let $e=class extends He{constructor(e){super(e),this.type=null}};(0,r._)([(0,g.Cb)({type:String,json:{read:Ke.read,write:Ke.write}})],$e.prototype,"type",void 0),$e=(0,r._)([(0,C.j)("esri.rest.support.NAMessage")],$e);const Xe=$e;let Ye=class extends B.wq{constructor(e){super(e)}};(0,r._)([(0,g.Cb)({json:{read:{source:"string"}}})],Ye.prototype,"text",void 0),(0,r._)([(0,P.e)(Oe,{name:"stringType"})],Ye.prototype,"type",void 0),Ye=(0,r._)([(0,C.j)("esri.rest.support.DirectionsString")],Ye);const Qe=Ye;let et=class extends B.wq{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,t){return We(t.ETA,t.arriveTimeUTC)}readGeometry(e,t){return k.Z.fromJSON(t.point)}};(0,r._)([(0,g.Cb)({type:Date,json:{read:{source:"arriveTimeUTC"}}})],et.prototype,"arriveTime",void 0),(0,r._)([(0,g.Cb)()],et.prototype,"arriveTimeOffset",void 0),(0,r._)([(0,w.r)("arriveTimeOffset",["arriveTimeUTC","ETA"])],et.prototype,"readArriveTimeOffset",null),(0,r._)([(0,g.Cb)({type:k.Z})],et.prototype,"geometry",void 0),(0,r._)([(0,w.r)("geometry",["point"])],et.prototype,"readGeometry",null),(0,r._)([(0,g.Cb)({type:[Qe]})],et.prototype,"strings",void 0),et=(0,r._)([(0,C.j)("esri.rest.support.DirectionsEvent")],et);const tt=et;i(29107),i(30574),i(2157),i(25977),i(58076),i(98242),i(7471),i(54414),i(1648),i(8925),i(36097),i(33921),i(45154),i(16769),i(93603),i(15438),i(593),i(85699),i(55531),i(96055),i(47776),i(18033),i(6331),i(62048),i(56890),i(30493),i(4292),i(75626),i(72652),i(29641),i(70821),i(3296),i(34229),i(37029);let it=class extends a.Z{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,t){const i=function(e){if(null==e||""===e)return null;let t=0,i=0,r=0,o=0;const s=[];let a,n,l,u,p,d,c,m,y=0,b=0,h=0;if(p=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),p||(p=[]),0===parseInt(p[y],32)){y=2;const e=parseInt(p[y],32);y++,d=parseInt(p[y],32),y++,1&e&&(b=p.indexOf("|")+1,c=parseInt(p[b],32),b++),2&e&&(h=p.indexOf("|",b)+1,m=parseInt(p[h],32),h++)}else d=parseInt(p[y],32),y++;for(;y<p.length&&"|"!==p[y];){a=parseInt(p[y],32)+t,y++,t=a,n=parseInt(p[y],32)+i,y++,i=n;const e=[a/d,n/d];b&&(u=parseInt(p[b],32)+r,b++,r=u,e.push(u/c)),h&&(l=parseInt(p[h],32)+o,h++,o=l,e.push(l/m)),s.push(e)}return{paths:[s],hasZ:b>0,hasM:h>0}}(t.compressedGeometry);return null!=i?W.Z.fromJSON(i):null}};(0,r._)([(0,g.Cb)({type:[tt]})],it.prototype,"events",void 0),(0,r._)([(0,w.r)("geometry",["compressedGeometry"])],it.prototype,"readGeometry",null),(0,r._)([(0,g.Cb)({type:[Qe]})],it.prototype,"strings",void 0),it=(0,r._)([(0,C.j)("esri.rest.support.DirectionsFeature")],it);const rt=it;i(97546),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);let ot=class extends Ve.Z{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){if(!e)return[];const i=t.summary.envelope.spatialReference??t.spatialReference,r=i&&U.Z.fromJSON(i);return e.map((e=>{const t=rt.fromJSON(e);if(null!=t.geometry&&(t.geometry.spatialReference=r),null!=t.events)for(const e of t.events)null!=e.geometry&&(e.geometry.spatialReference=r);return t}))}get mergedGeometry(){return this.features?function(e,t){if(0===e.length)return new W.Z({spatialReference:t});const i=[];for(const t of e)for(const e of t.paths)i.push(...e);const r=[];i.forEach(((e,t)=>{0!==t&&e[0]===i[t-1][0]&&e[1]===i[t-1][1]||r.push(e)}));const{hasM:o,hasZ:s}=e[0];return new W.Z({hasM:o,hasZ:s,paths:[r],spatialReference:t})}(this.features.map((({geometry:e})=>e)),this.extent.spatialReference):null}get strings(){return this.features.map((({strings:e})=>e)).flat().filter(S.i)}};(0,r._)([(0,g.Cb)({type:O.Z,json:{read:{source:"summary.envelope"}}})],ot.prototype,"extent",void 0),(0,r._)([(0,g.Cb)({nonNullable:!0})],ot.prototype,"features",void 0),(0,r._)([(0,w.r)("features")],ot.prototype,"readFeatures",null),(0,r._)([(0,g.Cb)()],ot.prototype,"geometryType",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],ot.prototype,"mergedGeometry",null),(0,r._)([(0,g.Cb)()],ot.prototype,"routeId",void 0),(0,r._)([(0,g.Cb)()],ot.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)({value:null,readOnly:!0})],ot.prototype,"strings",null),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],ot.prototype,"totalDriveTime",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalLength"}}})],ot.prototype,"totalLength",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"summary.totalTime"}}})],ot.prototype,"totalTime",void 0),ot=(0,r._)([(0,C.j)("esri.rest.support.DirectionsFeatureSet")],ot);const st=ot;let at=class extends B.wq{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};(0,r._)([(0,g.Cb)({type:Ve.Z,json:{write:!0}})],at.prototype,"directionLines",void 0),(0,r._)([(0,g.Cb)({type:Ve.Z,json:{write:!0}})],at.prototype,"directionPoints",void 0),(0,r._)([(0,g.Cb)({type:st,json:{write:!0}})],at.prototype,"directions",void 0),(0,r._)([(0,g.Cb)({type:a.Z,json:{write:!0}})],at.prototype,"route",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],at.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)({type:[a.Z],json:{write:!0}})],at.prototype,"stops",void 0),(0,r._)([(0,g.Cb)({type:Ve.Z,json:{write:!0}})],at.prototype,"traversedEdges",void 0),(0,r._)([(0,g.Cb)({type:Ve.Z,json:{write:!0}})],at.prototype,"traversedJunctions",void 0),(0,r._)([(0,g.Cb)({type:Ve.Z,json:{write:!0}})],at.prototype,"traversedTurns",void 0),at=(0,r._)([(0,C.j)("esri.rest.support.RouteResult")],at);const nt=at;function lt(e){return e?Ve.Z.fromJSON(e).features.filter(S.i):[]}let ut=class extends B.wq{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return lt(t.barriers)}readPolylineBarriers(e){return lt(e)}readPolygonBarriers(e){return lt(e)}};(0,r._)([(0,g.Cb)({type:[Xe]})],ut.prototype,"messages",void 0),(0,r._)([(0,g.Cb)({type:[a.Z]})],ut.prototype,"pointBarriers",void 0),(0,r._)([(0,w.r)("pointBarriers",["barriers"])],ut.prototype,"readPointBarriers",null),(0,r._)([(0,g.Cb)({type:[a.Z]})],ut.prototype,"polylineBarriers",void 0),(0,r._)([(0,w.r)("polylineBarriers")],ut.prototype,"readPolylineBarriers",null),(0,r._)([(0,g.Cb)({type:[a.Z]})],ut.prototype,"polygonBarriers",void 0),(0,r._)([(0,w.r)("polygonBarriers")],ut.prototype,"readPolygonBarriers",null),(0,r._)([(0,g.Cb)({type:[nt]})],ut.prototype,"routeResults",void 0),ut=(0,r._)([(0,C.j)("esri.rest.support.RouteSolveResult")],ut);const pt=ut;var dt;function ct(e){return e instanceof Ve.Z}i(94751),i(95307),i(81731);let mt=dt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){return new dt({directionLineType:fe.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?fe.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(e.FromLevel=this.fromLevel),null!=this.toLevel&&(e.ToLevel=this.toLevel),new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};mt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],mt.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:fe.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:fe.read}}})],mt.prototype,"directionLineType",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DirectionPointID"}}})],mt.prototype,"directionPointId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Meters"}}})],mt.prototype,"distance",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Minutes"}}})],mt.prototype,"duration",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.FromLevel"}}})],mt.prototype,"fromLevel",void 0),(0,r._)([(0,g.Cb)({type:W.Z})],mt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],mt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],mt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],mt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ToLevel"}}})],mt.prototype,"toLevel",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],mt.prototype,"type",void 0),mt=dt=(0,r._)([(0,C.j)("esri.rest.support.DirectionLine")],mt);const yt=mt;var bt;let ht=bt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,t){return null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new bt({alternateName:e.attributes.AlternateName??null,arrivalTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:he.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?he.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(e.AlternateName=this.alternateName),null!=this.arrivalTime&&(e.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(e.Azimuth=this.azimuth),null!=this.branchName&&(e.BranchName=this.branchName),null!=this.displayText&&(e.DisplayText=this.displayText),null!=this.exitName&&(e.ExitName=this.exitName),null!=this.intersectingName&&(e.IntersectingName=this.intersectingName),null!=this.level&&(e.Level=this.level),null!=this.name&&(e.Name=this.name),null!=this.shortVoiceInstruction&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(e.TowardName=this.towardName),null!=this.voiceInstruction&&(e.VoiceInstruction=this.voiceInstruction),new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};ht.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],ht.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)()],ht.prototype,"alternateName",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"arrivalTime",void 0),(0,r._)([(0,w.r)("arrivalTime",["attributes.ArrivalTime"])],ht.prototype,"readArrivalTime",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],ht.prototype,"arrivalTimeOffset",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Azimuth"}}})],ht.prototype,"azimuth",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.BranchName"}}})],ht.prototype,"branchName",void 0),(0,r._)([(0,g.Cb)({type:he.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:he.read}}})],ht.prototype,"directionPointType",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DisplayText"}}})],ht.prototype,"displayText",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ExitName"}}})],ht.prototype,"exitName",void 0),(0,r._)([(0,g.Cb)({type:k.Z})],ht.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"intersectingName",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"level",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Name"}}})],ht.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],ht.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],ht.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Sequence"}}})],ht.prototype,"sequence",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"shortVoiceInstruction",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.StopID"}}})],ht.prototype,"stopId",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],ht.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.TowardName"}}})],ht.prototype,"towardName",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],ht.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],ht.prototype,"voiceInstruction",void 0),ht=bt=(0,r._)([(0,C.j)("esri.rest.support.DirectionPoint")],ht);const ft=ht;var vt;let gt=vt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,t){return Ue(t.attributes,"Attr_")}writeCosts(e,t){ke(e,t,"Attr_")}static fromGraphic(e){return new vt({addedCost:e.attributes.AddedCost??null,barrierType:null!=e.attributes.BarrierType?ye.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?Je(JSON.parse(e.attributes.Costs)):null,curbApproach:null!=e.attributes.CurbApproach?pe.fromJSON(e.attributes.CurbApproach):null,fullEdge:null!=e.attributes.FullEdge?be.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:null!=e.attributes.Status?ce.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?ye.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(Ze(this.costs)):null,CurbApproach:null!=this.curbApproach?pe.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?be.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?ce.toJSON(this.status):null};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};gt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],gt.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)()],gt.prototype,"addedCost",void 0),(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{name:"attributes.BarrierType",read:{reader:ye.read},write:{writer:ye.write}}})],gt.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],gt.prototype,"costs",void 0),(0,r._)([(0,w.r)("costs",["attributes"])],gt.prototype,"readCosts",null),(0,r._)([(0,_.w)("costs")],gt.prototype,"writeCosts",null),(0,r._)([(0,g.Cb)({type:pe.apiValues,json:{read:{source:"attributes.CurbApproach",reader:pe.read}}})],gt.prototype,"curbApproach",void 0),(0,r._)([(0,g.Cb)({type:be.apiValues,json:{name:"attributes.FullEdge",read:{reader:be.read},write:{writer:be.write}}})],gt.prototype,"fullEdge",void 0),(0,r._)([(0,g.Cb)({type:k.Z,json:{write:!0}})],gt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],gt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],gt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],gt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({type:me.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:me.read}}})],gt.prototype,"sideOfEdge",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceID"}}})],gt.prototype,"sourceId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceOID"}}})],gt.prototype,"sourceOid",void 0),(0,r._)([(0,g.Cb)({type:ce.apiValues,json:{read:{source:"attributes.Status",reader:ce.read}}})],gt.prototype,"status",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],gt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],gt.prototype,"type",void 0),gt=vt=(0,r._)([(0,C.j)("esri.rest.support.PointBarrier")],gt);const Tt=gt;var St;let wt=St=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,t){return Ue(t.attributes,"Attr_")}writeCosts(e,t){ke(e,t,"Attr_")}static fromGraphic(e){return new St({barrierType:null!=e.attributes.BarrierType?ye.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?Je(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?ye.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(Ze(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};wt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],wt.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{name:"attributes.BarrierType",read:{reader:ye.read},write:{writer:ye.write}}})],wt.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],wt.prototype,"costs",void 0),(0,r._)([(0,w.r)("costs",["attributes"])],wt.prototype,"readCosts",null),(0,r._)([(0,_.w)("costs")],wt.prototype,"writeCosts",null),(0,r._)([(0,g.Cb)({type:Z.Z,json:{write:!0}})],wt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],wt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],wt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],wt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)()],wt.prototype,"scaleFactor",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],wt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],wt.prototype,"type",void 0),wt=St=(0,r._)([(0,C.j)("esri.rest.support.PolygonBarrier")],wt);const Ct=wt;var _t;let Nt=_t=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return Ue(t.attributes,"Attr_")}static fromGraphic(e){return new _t({barrierType:null!=e.attributes.BarrierType?ye.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?Je(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?ye.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(Ze(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Nt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],Nt.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:ye.apiValues,json:{read:{source:"attributes.BarrierType",reader:ye.read}}})],Nt.prototype,"barrierType",void 0),(0,r._)([(0,g.Cb)()],Nt.prototype,"costs",void 0),(0,r._)([(0,w.r)("costs",["attributes"])],Nt.prototype,"readCosts",null),(0,r._)([(0,g.Cb)({type:W.Z,json:{write:!0}})],Nt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],Nt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],Nt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],Nt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)()],Nt.prototype,"scaleFactor",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Nt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],Nt.prototype,"type",void 0),Nt=_t=(0,r._)([(0,C.j)("esri.rest.support.PolylineBarrier")],Nt);const Ot=Nt;let At=class extends B.wq{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>Se.fromJSON(e)))}writeAccumulateAttributes(e,t,i){null!=e&&e.length&&(t[i]=e.map((e=>Se.toJSON(e))))}};(0,r._)([(0,g.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],At.prototype,"accumulateAttributes",void 0),(0,r._)([(0,w.r)("accumulateAttributes")],At.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributes")],At.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],At.prototype,"directionsLanguage",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"findBestSequence",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"preserveFirstStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"preserveLastStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,g.Cb)({type:Ie,json:{write:!0}})],At.prototype,"travelMode",void 0),At=(0,r._)([(0,C.j)("esri.layers.support.RouteSettings")],At);const It=At;var Dt;let xt=Dt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,t){return null!=t.attributes.EndTimeUTC?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return We(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return null!=t.attributes.StartTimeUTC?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return We(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return Ue(t.attributes,"Total_")}readTotalViolations(e,t){return Ue(t.attributes,"TotalViolation_")}readTotalWait(e,t){return Ue(t.attributes,"TotalWait_")}static fromGraphic(e){return new Dt({analysisSettings:null!=e.attributes.AnalysisSettings?It.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:null!=e.attributes.EndTime?new Date(e.attributes.EndTime):null,endTimeOffset:e.attributes.EndUTCOffset??null,geometry:e.geometry,messages:null!=e.attributes.Messages?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:null!=e.attributes.StartTime?new Date(e.attributes.StartTime):null,startTimeOffset:e.attributes.StartUTCOffset??null,symbol:e.symbol,totalCosts:null!=e.attributes.TotalCosts?Je(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:e.attributes.TotalMeters??null,totalDuration:e.attributes.TotalMinutes??null,totalLateDuration:e.attributes.TotalLateMinutes??null,totalWaitDuration:e.attributes.TotalWaitMinutes??null,version:e.attributes.Version})}toGraphic(){const e={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify(Ze(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};xt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],xt.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)()],xt.prototype,"analysisSettings",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"endTime",void 0),(0,r._)([(0,w.r)("endTime",["attributes.EndTimeUTC"])],xt.prototype,"readEndTime",null),(0,r._)([(0,g.Cb)()],xt.prototype,"endTimeOffset",void 0),(0,r._)([(0,w.r)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],xt.prototype,"readEndTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.FirstStopID"}}})],xt.prototype,"firstStopId",void 0),(0,r._)([(0,g.Cb)({type:W.Z})],xt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.LastStopID"}}})],xt.prototype,"lastStopId",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"messages",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.Name"}}})],xt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.ObjectID"}}})],xt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],xt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"startTime",void 0),(0,r._)([(0,w.r)("startTime",["attributes.StartTimeUTC"])],xt.prototype,"readStartTime",null),(0,r._)([(0,g.Cb)()],xt.prototype,"startTimeOffset",void 0),(0,r._)([(0,w.r)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],xt.prototype,"readStartTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.StopCount"}}})],xt.prototype,"stopCount",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],xt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"totalCosts",void 0),(0,r._)([(0,w.r)("totalCosts",["attributes"])],xt.prototype,"readTotalCosts",null),(0,r._)([(0,g.Cb)()],xt.prototype,"totalDistance",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"totalDuration",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"totalLateDuration",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"totalViolations",void 0),(0,r._)([(0,w.r)("totalViolations",["attributes"])],xt.prototype,"readTotalViolations",null),(0,r._)([(0,g.Cb)()],xt.prototype,"totalWait",void 0),(0,r._)([(0,w.r)("totalWait",["attributes"])],xt.prototype,"readTotalWait",null),(0,r._)([(0,g.Cb)()],xt.prototype,"totalWaitDuration",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],xt.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],xt.prototype,"version",void 0),xt=Dt=(0,r._)([(0,C.j)("esri.rest.support.RouteInfo")],xt);const Lt=xt,Ft={type:String,json:{read:{source:"token"},write:{target:"token"}}};let jt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],jt.prototype,"doNotLocateOnRestrictedElements",void 0),(0,r._)([(0,g.Cb)({types:s.qM,json:{read:G.im,write:!0}})],jt.prototype,"geometry",void 0),(0,r._)([(0,P.e)(_e)],jt.prototype,"geometryType",void 0),(0,r._)([(0,g.Cb)({type:String,json:{name:"layerName",write:!0}})],jt.prototype,"name",void 0),(0,r._)([(0,P.e)(Ce,{name:"spatialRel"})],jt.prototype,"spatialRelationship",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],jt.prototype,"type",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],jt.prototype,"where",void 0),jt=(0,r._)([(0,C.j)("esri.rest.support.DataLayer")],jt);const Mt=jt;var Bt;let Et=Bt=class extends Ve.Z{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Bt({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Et.prototype,"doNotLocateOnRestrictedElements",void 0),Et=Bt=(0,r._)([(0,C.j)("esri.rest.support.NetworkFeatureSet")],Et);const Pt=Et;let Rt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Rt.prototype,"doNotLocateOnRestrictedElements",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Rt.prototype,"url",void 0),Rt=(0,r._)([(0,C.j)("esri.rest.support.NetworkUrl")],Rt);const Ut=Rt;var kt;let Jt=kt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return(0,T.m)(kt,e)}readAccumulateAttributes(e){return null==e?null:e.map((e=>Se.fromJSON(e)))}writeAccumulateAttributes(e,t,i){null!=e&&e.length&&(t[i]=e.map((e=>Se.toJSON(e))))}writePointBarriers(e,t,i){Wt(e,t,i)}writePolygonBarrier(e,t,i){Wt(e,t,i)}writePolylineBarrier(e,t,i){Wt(e,t,i)}readRestrictionAttributes(e){return null==e?null:e.map((e=>we.fromJSON(e)))}writeRestrictionAttributes(e,t,i){null!=e&&e.length&&(t[i]=e.map((e=>we.toJSON(e))))}readStartTime(e,t){const{startTime:i}=t;return null==i?null:"now"===i?"now":new Date(i)}writeStartTime(e,t){null!=e&&(t.startTime="now"===e?"now":e.getTime())}readStops(e,t){return function(e){return e&&"type"in e}(i=t.stops)?Mt.fromJSON(i):function(e){return e&&"url"in e}(i)?Ut.fromJSON(i):function(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}(i)?Pt.fromJSON(i):function(e){return e&&"features"in e}(i)?Ve.Z.fromJSON(i):null;var i}writeStops(e,t,i){Wt(e,t,i)}};(0,r._)([(0,g.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],Jt.prototype,"accumulateAttributes",void 0),(0,r._)([(0,w.r)("accumulateAttributes")],Jt.prototype,"readAccumulateAttributes",null),(0,r._)([(0,_.w)("accumulateAttributes")],Jt.prototype,"writeAccumulateAttributes",null),(0,r._)([(0,g.Cb)(Ft)],Jt.prototype,"apiKey",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Jt.prototype,"attributeParameterValues",void 0),(0,r._)([(0,g.Cb)({type:String,json:{write:!0}})],Jt.prototype,"directionsLanguage",void 0),(0,r._)([(0,P.e)(oe)],Jt.prototype,"directionsLengthUnits",void 0),(0,r._)([(0,P.e)(ae)],Jt.prototype,"directionsOutputType",void 0),(0,r._)([(0,P.e)(ve)],Jt.prototype,"directionsStyleName",void 0),(0,r._)([(0,P.e)(Te,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],Jt.prototype,"directionsTimeAttribute",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"findBestSequence",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Jt.prototype,"geometryPrecision",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Jt.prototype,"geometryPrecisionM",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Jt.prototype,"geometryPrecisionZ",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"ignoreInvalidLocations",void 0),(0,r._)([(0,P.e)(Se,{name:"impedanceAttributeName",ignoreUnknown:!1})],Jt.prototype,"impedanceAttribute",void 0),(0,r._)([(0,g.Cb)({type:Number,json:{write:!0}})],Jt.prototype,"outputGeometryPrecision",void 0),(0,r._)([(0,P.e)(re)],Jt.prototype,"outputGeometryPrecisionUnits",void 0),(0,r._)([(0,P.e)(ne)],Jt.prototype,"outputLines",void 0),(0,r._)([(0,g.Cb)({type:U.Z,json:{name:"outSR",write:!0}})],Jt.prototype,"outSpatialReference",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Jt.prototype,"overrides",void 0),(0,r._)([(0,g.Cb)({json:{name:"barriers",write:!0}})],Jt.prototype,"pointBarriers",void 0),(0,r._)([(0,_.w)("pointBarriers")],Jt.prototype,"writePointBarriers",null),(0,r._)([(0,g.Cb)({json:{write:!0}})],Jt.prototype,"polygonBarriers",void 0),(0,r._)([(0,_.w)("polygonBarriers")],Jt.prototype,"writePolygonBarrier",null),(0,r._)([(0,g.Cb)({json:{write:!0}})],Jt.prototype,"polylineBarriers",void 0),(0,r._)([(0,_.w)("polylineBarriers")],Jt.prototype,"writePolylineBarrier",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"preserveFirstStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"preserveLastStop",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"preserveObjectID",void 0),(0,r._)([(0,g.Cb)({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],Jt.prototype,"restrictionAttributes",void 0),(0,r._)([(0,w.r)("restrictionAttributes")],Jt.prototype,"readRestrictionAttributes",null),(0,r._)([(0,_.w)("restrictionAttributes")],Jt.prototype,"writeRestrictionAttributes",null),(0,r._)([(0,P.e)(le)],Jt.prototype,"restrictUTurns",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnDirections",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnPolygonBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnPolylineBarriers",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnRoutes",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnStops",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnTraversedEdges",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnTraversedJunctions",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnTraversedTurns",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"returnZ",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{type:Number,write:!0}})],Jt.prototype,"startTime",void 0),(0,r._)([(0,w.r)("startTime")],Jt.prototype,"readStartTime",null),(0,r._)([(0,_.w)("startTime")],Jt.prototype,"writeStartTime",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"startTimeIsUTC",void 0),(0,r._)([(0,g.Cb)({json:{write:!0}})],Jt.prototype,"stops",void 0),(0,r._)([(0,w.r)("stops")],Jt.prototype,"readStops",null),(0,r._)([(0,_.w)("stops")],Jt.prototype,"writeStops",null),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"timeWindowsAreUTC",void 0),(0,r._)([(0,g.Cb)({type:Ie,json:{write:!0}})],Jt.prototype,"travelMode",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"useHierarchy",void 0),(0,r._)([(0,g.Cb)({type:Boolean,json:{write:!0}})],Jt.prototype,"useTimeWindows",void 0),Jt=kt=(0,r._)([(0,C.j)("esri.rest.support.RouteParameters")],Jt);const Zt=Jt;function Wt(e,t,i){null!=e&&(t[i]=u.Z.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}var Gt;let Vt=Gt=class extends((0,H.J)(B.wq)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return We(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return Ue(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return We(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return Ue(t.attributes,"Attr_")}writeServiceCosts(e,t){ke(e,t,"Attr_")}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return Ue(t.attributes,"Violation_")}readWait(e,t){return Ue(t.attributes,"Wait_")}static fromGraphic(e){return new Gt({arriveCurbApproach:null!=e.attributes.ArrivalCurbApproach?pe.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e.attributes.CumulativeCosts?Je(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:null!=e.attributes.CurbApproach?pe.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:null!=e.attributes.DepartureCurbApproach?pe.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:null!=e.attributes.DepartureTime?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:null!=e.attributes.LocationType?de.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:null!=e.attributes.ServiceCosts?Je(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:null!=e.attributes.Status?ce.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:null!=e.attributes.TimeWindowEnd?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=e.attributes.TimeWindowStart?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?pe.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify(Ze(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?pe.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?pe.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?de.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify(Ze(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?ce.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new a.Z({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Vt.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],Vt.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,r._)([(0,g.Cb)({type:pe.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:pe.read}}})],Vt.prototype,"arriveCurbApproach",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],Vt.prototype,"arriveTime",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"arriveTimeOffset",void 0),(0,r._)([(0,w.r)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],Vt.prototype,"readArriveTimeOffset",null),(0,r._)([(0,g.Cb)({json:{name:"attributes.Bearing",read:!1,write:!0}})],Vt.prototype,"bearing",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],Vt.prototype,"bearingTol",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"cumulativeCosts",void 0),(0,r._)([(0,w.r)("cumulativeCosts",["attributes"])],Vt.prototype,"readCumulativeCosts",null),(0,r._)([(0,g.Cb)()],Vt.prototype,"cumulativeDistance",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"cumulativeDuration",void 0),(0,r._)([(0,g.Cb)({type:pe.apiValues,json:{name:"attributes.CurbApproach",read:{reader:pe.read},write:{writer:pe.write}}})],Vt.prototype,"curbApproach",void 0),(0,r._)([(0,g.Cb)({type:pe.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:pe.read}}})],Vt.prototype,"departCurbApproach",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],Vt.prototype,"departTime",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"departTimeOffset",void 0),(0,r._)([(0,w.r)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],Vt.prototype,"readDepartTimeOffset",null),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],Vt.prototype,"distanceToNetworkInMeters",void 0),(0,r._)([(0,g.Cb)({type:k.Z,json:{write:!0}})],Vt.prototype,"geometry",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"lateDuration",void 0),(0,r._)([(0,g.Cb)({type:de.apiValues,json:{name:"attributes.LocationType",read:{reader:de.read},write:{writer:de.write}}})],Vt.prototype,"locationType",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Name"}})],Vt.prototype,"name",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],Vt.prototype,"navLatency",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.ObjectID"}})],Vt.prototype,"objectId",void 0),(0,r._)([(0,g.Cb)({type:n.Z})],Vt.prototype,"popupTemplate",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.PosAlong"}}})],Vt.prototype,"posAlong",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.RouteName"}})],Vt.prototype,"routeName",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"serviceCosts",void 0),(0,r._)([(0,w.r)("serviceCosts",["attributes"])],Vt.prototype,"readServiceCosts",null),(0,r._)([(0,_.w)("serviceCosts")],Vt.prototype,"writeServiceCosts",null),(0,r._)([(0,g.Cb)()],Vt.prototype,"serviceDistance",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"serviceDuration",void 0),(0,r._)([(0,g.Cb)({json:{name:"attributes.Sequence"}})],Vt.prototype,"sequence",void 0),(0,r._)([(0,g.Cb)({type:me.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:me.read}}})],Vt.prototype,"sideOfEdge",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapX"}}})],Vt.prototype,"snapX",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapY"}}})],Vt.prototype,"snapY",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SnapZ"}}})],Vt.prototype,"snapZ",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceID"}}})],Vt.prototype,"sourceId",void 0),(0,r._)([(0,g.Cb)({json:{read:{source:"attributes.SourceOID"}}})],Vt.prototype,"sourceOid",void 0),(0,r._)([(0,g.Cb)({type:ce.apiValues,json:{read:{source:"attributes.Status",reader:ce.read}}})],Vt.prototype,"status",void 0),(0,r._)([(0,g.Cb)({types:M.LB})],Vt.prototype,"symbol",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],Vt.prototype,"timeWindowEnd",void 0),(0,r._)([(0,_.w)("timeWindowEnd")],Vt.prototype,"writeTimeWindowEnd",null),(0,r._)([(0,g.Cb)()],Vt.prototype,"timeWindowEndOffset",void 0),(0,r._)([(0,g.Cb)({type:Date,json:{name:"attributes.TimeWindowStart"}})],Vt.prototype,"timeWindowStart",void 0),(0,r._)([(0,_.w)("timeWindowStart")],Vt.prototype,"writeTimeWindowStart",null),(0,r._)([(0,g.Cb)()],Vt.prototype,"timeWindowStartOffset",void 0),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],Vt.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"violations",void 0),(0,r._)([(0,w.r)("violations",["attributes"])],Vt.prototype,"readViolations",null),(0,r._)([(0,g.Cb)()],Vt.prototype,"waitDuration",void 0),(0,r._)([(0,g.Cb)()],Vt.prototype,"wait",void 0),(0,r._)([(0,w.r)("wait",["attributes"])],Vt.prototype,"readWait",null),Vt=Gt=(0,r._)([(0,C.j)("esri.rest.support.Stop")],Vt);const qt=Vt;function zt(e){return e.length?e:null}function Ht(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Ht("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Ht("esriGeometryPolyline")}}}function Kt(e){return"layers"in e}async function $t(e){const t=U.Z.WGS84;return await(0,A.initializeProjection)(e.spatialReference,t),(0,A.iV)(e,t)}function Xt(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Yt(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:(0,f.z)(e,t,"meters")}i(26822),i(51723),i(23243),i(51669),i(6090),i(3977),i(36741),i(11253),i(90319),i(38822),i(74057),i(48190),i(85557),i(94070),i(67541),i(16218),i(51899),i(12158),i(74864),i(63683),i(94479),i(45702),i(51127),i(9352),i(89241),i(91700),i(10738),i(1709),i(32037),i(23639),i(90811),i(60045),i(68681),i(93939),i(62407),i(90033),i(97807),i(238),i(71831),i(1693),i(23771),i(65775),i(12381),i(73173),i(92624),i(92847),i(92200),i(65949),i(5777),i(43022),i(93314),i(35197),i(1557),i(47842),i(17298),i(41864),i(74742),i(28239);const Qt=u.Z.ofType(yt),ei=u.Z.ofType(ft),ti=u.Z.ofType(Tt),ii=u.Z.ofType(Ct),ri=u.Z.ofType(Ot),oi=u.Z.ofType(qt),si="esri.layers.RouteLayer",ai=c.L.getLogger(si);let ni=class extends((0,D.h)((0,F.M)((0,x.O)((0,L.I)((0,m.M)((0,d.p)(I.Z))))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new Q,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new ti,this.polygonBarriers=new ii,this.polylineBarriers=new ri,this.routeInfo=null,this.spatialReference=U.Z.WGS84,this.stops=new oi,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles((0,h.on)((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,i,r){const o=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),s=o.map(((e,t)=>t)),a="web-map"===r.origin?"featureCollection.layers":"layers";(0,y.s)(a,o,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>yt.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>ft.fromGraphic(e)))}get fullExtent(){const e=new O.Z({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:U.Z.WGS84});if(null!=this.routeInfo&&null!=this.routeInfo.geometry)return this.routeInfo.geometry.extent??e;if(null==this.stops)return e;const t=this.stops.filter((e=>null!=e.geometry));if(t.length<2)return e;const{spatialReference:i}=t.at(0).geometry;if(null==i)return e;const r=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new J.Z({points:r,spatialReference:i}).extent}readMaxScale(e,t){const i=Kt(t)?t.layers:t.featureCollection?.layers,r=i?.find((e=>null!=e.layerDefinition.maxScale));return r?.layerDefinition.maxScale??0}readMinScale(e,t){const i=Kt(t)?t.layers:t.featureCollection?.layers,r=i?.find((e=>null!=e.layerDefinition.minScale));return r?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>Tt.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>Ct.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>Ot.fromGraphic(e)))}readRouteInfo(e,t){const i=this._getNetworkFeatures(t,"RouteInfo",(e=>Lt.fromGraphic(e)));return i.length>0?i.at(0):null}readSpatialReference(e,t){const i=Kt(t)?t.layers:t.featureCollection?.layers;if(!i?.length)return U.Z.WGS84;const{layerDefinition:r,featureSet:o}=i[0],s=o.features[0],a=s?.geometry?.spatialReference??o.spatialReference??r.spatialReference??r.extent.spatialReference??f.W;return U.Z.fromJSON(a)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>qt.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return null!=this.routeInfo&&null!=this.routeInfo.name?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return o.default.routeServiceUrl}set url(e){null!=e?this._set("url",(0,j.s)(e,ai)):this._set("url",o.default.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new p.Z("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new p.Z("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new p.Z("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new p.Z("routelayer:route-unsolved","save() requires a solved route");const{portal:i}=t;await i.signIn(),i.user||await t.reload();const{itemUrl:r,itemControl:o}=t;if("admin"!==o&&"update"!==o)throw new p.Z("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const s={messages:[],origin:"portal-item",portal:i,url:r?(0,v.mN)(r):void 0,writtenProperties:[]},a=this.write(void 0,s);return t.extent=await $t(e),t.title=this.title,await t.update({data:a}),t}async saveAs(e,t={}){if(await this.load(),null==this.routeInfo)throw new p.Z("routelayer:route-unsolved","saveAs() requires a solved route");const i=ee.default.from(e).clone();i.extent??=await $t(this.fullExtent),i.id=null,i.portal??=q.Z.getDefault(),i.title??=this.title,i.type="Feature Collection",i.typeKeywords=["Data","Feature Collection",te.T.MULTI_LAYER,"Route Layer"];const{portal:r}=i,o={messages:[],origin:"portal-item",portal:r,url:null,writtenProperties:[]};await r.signIn();const s=t?.folder,a=this.write(void 0,o);return await(r.user?.addItem({item:i,folder:s,data:a})),this.portalItem=i,(0,N.u)(o),o.portalItem=i,i}async solve(e,t){const i=e?.stops??this.stops,r=e?.pointBarriers??zt(this.pointBarriers),o=e?.polylineBarriers??zt(this.polylineBarriers),s=e?.polygonBarriers??zt(this.polygonBarriers);if(null==i)throw new p.Z("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===i.declaredClass||"esri.rest.support.NetworkFeatureSet"===i.declaredClass)&&i.features.length<2||u.Z.isCollection(i)&&i.length<2)throw new p.Z("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(u.Z.isCollection(i))for(const e of i)e.routeName=null;const a=e?.apiKey,n=this.url,l=await this._getServiceDescription(n,a,t),d=e?.travelMode??l.defaultTravelMode,c=e?.accumulateAttributes??[];null!=d&&(c.push(d.distanceAttributeName),d.timeAttributeName&&c.push(d.timeAttributeName));const m={startTime:new Date},y={accumulateAttributes:c,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:r,polylineBarriers:o,polygonBarriers:s,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!r,returnDirections:!0,returnPolygonBarriers:!!s,returnPolylineBarriers:!!o,returnRoutes:!0,returnStops:!0,stops:i},h=e?Zt.from(e):new Zt;for(const e in m)null==h[e]&&(h[e]=m[e]);let f;h.set(y);try{f=await async function(e,t,i){const r=[],o=[],s={},a={},n=(0,ie.p)(e),{path:l}=n;ct(t.stops)&&Ee(t.stops.features,o,"stops.features",s),ct(t.pointBarriers)&&Ee(t.pointBarriers.features,o,"pointBarriers.features",s),ct(t.polylineBarriers)&&Ee(t.polylineBarriers.features,o,"polylineBarriers.features",s),ct(t.polygonBarriers)&&Ee(t.polygonBarriers.features,o,"polygonBarriers.features",s);const u=await(0,Re.aX)(o);for(const e in s){const t=s[e];r.push(e),a[e]=u.slice(t[0],t[1])}if(function(e,t){for(let i=0;i<t.length;i++){const r=e[t[i]];if(r&&r.length)for(const e of r)if(null!=e&&e.hasZ)return!0}return!1}(a,r)){let e=null;try{e=await Pe(l,t.apiKey,i)}catch{}e&&!e.hasZ&&function(e,t){for(let i=0;i<t.length;i++){const r=e[t[i]];if(r&&r.length)for(const e of r)e.z=void 0}Be.warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}(a,r)}for(const e in a)a[e].forEach(((i,r)=>{t.get(e)[r].geometry=i}));const p={...i,query:{...n.query,...Ge(t),f:"json"}},d=l.endsWith("/solve")?l:`${l}/solve`,{data:c}=await(0,z.default)(d,p);return function(e){const{barriers:t,directionLines:i,directionPoints:r,directions:o,messages:s,polygonBarriers:a,polylineBarriers:n,routes:l,stops:u,traversedEdges:p,traversedJunctions:d,traversedTurns:c}=e,m=e=>{const t=b.find((t=>t.routeName===e));if(null!=t)return t;const i={routeId:b.length+1,routeName:e};return b.push(i),i},y=e=>{const t=b.find((t=>t.routeId===e));if(null!=t)return t;const i={routeId:e,routeName:null};return b.push(i),i},b=[];l?.features.forEach(((e,t)=>{e.geometry.spatialReference=l.spatialReference??void 0;const i=e.attributes.Name,r=t+1;b.push({routeId:r,routeName:i,route:e})})),o?.forEach((e=>{const{routeName:t}=e;m(t).directions=e}));const h=u?.features.every((e=>null==e.attributes.RouteName))&&b.length>0?b[0].routeName:null;return u?.features.forEach((e=>{e.geometry&&(e.geometry.spatialReference??=u.spatialReference??void 0);const t=h??e.attributes.RouteName,i=m(t);i.stops??=[],i.stops.push(e)})),i?.features.forEach((e=>{const t=e.attributes.RouteID,r=y(t),{geometryType:o,spatialReference:s}=i;r.directionLines??={features:[],geometryType:o,spatialReference:s},r.directionLines.features.push(e)})),r?.features.forEach((e=>{const t=e.attributes.RouteID,i=y(t),{geometryType:o,spatialReference:s}=r;i.directionPoints??={features:[],geometryType:o,spatialReference:s},i.directionPoints.features.push(e)})),p?.features.forEach((e=>{const t=e.attributes.RouteID,i=y(t),{geometryType:r,spatialReference:o}=p;i.traversedEdges??={features:[],geometryType:r,spatialReference:o},i.traversedEdges.features.push(e)})),d?.features.forEach((e=>{const t=e.attributes.RouteID,i=y(t),{geometryType:r,spatialReference:o}=d;i.traversedJunctions??={features:[],geometryType:r,spatialReference:o},i.traversedJunctions.features.push(e)})),c?.features.forEach((e=>{const t=e.attributes.RouteID,i=y(t);i.traversedTurns??={features:[]},i.traversedTurns.features.push(e)})),pt.fromJSON({routeResults:b,barriers:t,polygonBarriers:a,polylineBarriers:n,messages:s})}(c)}(n,h,t)}catch(e){throw(0,b.D_)(e)?e:new p.Z("routelayer:failed-route-request","the routing request failed",{error:e})}const v=this._toRouteLayerSolution(f);return this._isOverridden("title")||(this.title=v.routeInfo.name??"Route"),function(e,t,i){const r=t.networkDataset?.networkAttributes,o=r?.filter((({usageType:e})=>"cost"===e))??[],s=i.travelMode??t.defaultTravelMode;if(null==s)return void ai.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:a,distanceAttributeName:n}=s,l=o.find((({name:e})=>e===a)),u=o.find((({name:e})=>e===n)),d=i.travelMode?.impedanceAttributeName??i.impedanceAttribute??t.impedance,c=l?.units,m=u?.units;if(!c||!m)throw new p.Z("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const y=i.directionsLanguage??t.directionsLanguage,b=i.accumulateAttributes??t.accumulateAttributeNames??[],h=new Set(o.filter((({name:e})=>e===a||e===n||e===d||null!=e&&b.includes(e))).map((({name:e})=>e))),f=e=>{for(const t in e)h.has(t)||delete e[t]};for(const t of e.pointBarriers)null!=t.costs&&(t.addedCost=t.costs[d]??0,f(t.costs));for(const t of e.polygonBarriers)null!=t.costs&&(t.scaleFactor=t.costs[d]??1,f(t.costs));for(const t of e.polylineBarriers)null!=t.costs&&(t.scaleFactor=t.costs[d]??1,f(t.costs));const{routeInfo:v}=e,{findBestSequence:g,preserveFirstStop:T,preserveLastStop:S,startTimeIsUTC:w,timeWindowsAreUTC:C}=i;v.analysisSettings=new It({accumulateAttributes:b,directionsLanguage:y,findBestSequence:g,preserveFirstStop:T,preserveLastStop:S,startTimeIsUTC:w,timeWindowsAreUTC:C,travelMode:s}),v.totalDuration=Xt(v.totalCosts?.[a]??0,c),v.totalDistance=Yt(v.totalCosts?.[n]??0,m),v.totalLateDuration=Xt(v.totalViolations?.[a]??0,c),v.totalWaitDuration=Xt(v.totalWait?.[a]??0,c),null!=v.totalCosts&&f(v.totalCosts),null!=v.totalViolations&&f(v.totalViolations),null!=v.totalWait&&f(v.totalWait);for(const t of e.stops)null!=t.serviceCosts&&(t.serviceDuration=Xt(t.serviceCosts[a]??0,c),t.serviceDistance=Yt(t.serviceCosts[n]??0,m),f(t.serviceCosts)),null!=t.cumulativeCosts&&(t.cumulativeDuration=Xt(t.cumulativeCosts[a]??0,c),t.cumulativeDistance=Yt(t.cumulativeCosts[n]??0,m),f(t.cumulativeCosts)),null!=t.violations&&(t.lateDuration=Xt(t.violations[a]??0,c),f(t.violations)),null!=t.wait&&(t.waitDuration=Xt(t.wait[a]??0,c),f(t.wait))}(v,l,h),v}update(e){const{stops:t,directionLines:i,directionPoints:r,pointBarriers:o,polylineBarriers:s,polygonBarriers:a,routeInfo:n}=e;this.set({stops:t,pointBarriers:o,polylineBarriers:s,polygonBarriers:a}),this._set("directionLines",i),this._set("directionPoints",r),this._set("routeInfo",n),null!=n.geometry&&(this.spatialReference=n.geometry.spatialReference)}_getNetworkFeatures(e,t,i,r){const o=Kt(e)?e.layers:e.featureCollection?.layers,s=o?.find((e=>e.layerDefinition.name===t));if(null==s)return new u.Z;const{layerDefinition:p,popupInfo:d,featureSet:c}=s,m=p.drawingInfo.renderer,{features:y}=c,b=c.spatialReference??p.spatialReference??p.extent.spatialReference??f.W,h=m&&(0,l.a)(m),v=U.Z.fromJSON(b),g=y.map((e=>{const r=a.Z.fromJSON(e);null!=r.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(r.geometry.spatialReference=v);const o=i(r);return o.symbol??=h?.getSymbol(r)??this._getNetworkSymbol(t),o.popupTemplate??=d&&n.Z.fromJSON(d),o}));return r&&g.some((e=>!e.symbol))&&r(g),new u.Z(g)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,i){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const r=await Pe(e,t,i);return this._cachedServiceDescription={serviceDescription:r,url:e},r}_setStopSymbol(e){if(!e||0===e.length)return;if(null==this.defaultSymbols.stops)return;if(e.every((({symbol:e})=>null!=e)))return;const{first:t,last:i,middle:r,unlocated:o,waypoint:s,break:a}=this.defaultSymbols.stops;if(null==this.routeInfo||1===e.length)return void e.forEach(((o,s)=>{switch(s){case 0:o.symbol=t;break;case e.length-1:o.symbol=i;break;default:o.symbol=r}}));const n=e.map((({sequence:e})=>e)).filter((e=>null!=e)),l=Math.min(...n),u=Math.max(...n);for(const n of e)n.sequence!==l?n.sequence!==u?"ok"===n.status||"not-located-on-closest"===n.status?"waypoint"!==n.locationType?"break"!==n.locationType?n.symbol=r:n.symbol=a:n.symbol=s:n.symbol=o:n.symbol=i:n.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops?.map((e=>qt.fromJSON(e.toJSON())));this._setStopSymbol(t);const i=new oi(t),r=new ii(e.polygonBarriers?.map((e=>{const t=Ct.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),o=new ri(e.polylineBarriers?.map((e=>{const t=Ot.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),s=new ti(e.pointBarriers?.map((e=>{const t=Tt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),a=e.routeResults[0].route?.toJSON(),n=Lt.fromJSON(a);n.symbol=this.defaultSymbols.routeInfo;const l=new ei(e.routeResults[0].directionPoints?.features.map((e=>{const t=ft.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new Qt(e.routeResults[0].directionLines?.features.map((e=>{const t=yt.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:l,pointBarriers:s,polygonBarriers:r,polylineBarriers:o,routeInfo:n,stops:i}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",yt.fields,yt.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",ft.fields,ft.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,i,r,o,s,a){if(null==e||!e.length)return null;const n=this.spatialReference.toJSON(),{fullExtent:l,maxScale:u,minScale:p}=this;return{featureSet:{features:e.toArray().map((e=>function(e){const{attributes:t,geometry:i,popupTemplate:r,symbol:o}=e.toGraphic().toJSON();return{attributes:t,geometry:i,popupInfo:r,symbol:o}}(e))),geometryType:i,spatialReference:n},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():Ht(i)}},extent:l.toJSON(),fields:r,geometryType:i,hasM:!1,hasZ:!1,maxScale:u,minScale:p,name:s,objectIdField:"ObjectID",spatialReference:n,title:a,type:"Feature Layer",typeIdField:""},popupInfo:o}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",Tt.fields,Tt.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",Ct.fields,Ct.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",Ot.fields,Ot.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new u.Z([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Lt.fields,Lt.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",qt.fields,qt.popupInfo,"Stops","Stops");if(null==e)return null;const{stops:t}=this.defaultSymbols,i=null!=t&&null!=t.first&&t.first.toJSON(),r=null!=t&&null!=t.middle&&t.middle.toJSON(),o=null!=t&&null!=t.last&&t.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:r,uniqueValueInfos:[{value:"1",symbol:i,label:"First Stop"},{value:`${this.stops.length}`,symbol:o,label:"Last Stop"}]},e}};(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],ni.prototype,"_featureCollection",void 0),(0,r._)([(0,_.w)(["web-map","portal-item"],"_featureCollection")],ni.prototype,"writeFeatureCollectionWebmap",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],ni.prototype,"_type",void 0),(0,r._)([(0,g.Cb)({nonNullable:!0,type:Q})],ni.prototype,"defaultSymbols",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],ni.prototype,"directionLines",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],ni.prototype,"readDirectionLines",null),(0,r._)([(0,g.Cb)({readOnly:!0})],ni.prototype,"directionPoints",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],ni.prototype,"readDirectionPoints",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],ni.prototype,"featureCollectionType",void 0),(0,r._)([(0,g.Cb)({readOnly:!0})],ni.prototype,"fullExtent",null),(0,r._)([(0,g.Cb)({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],ni.prototype,"legendEnabled",void 0),(0,r._)([(0,g.Cb)({type:["show","hide"]})],ni.prototype,"listMode",void 0),(0,r._)([(0,g.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],ni.prototype,"maxScale",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],ni.prototype,"readMaxScale",null),(0,r._)([(0,g.Cb)({type:Number,nonNullable:!0,json:{write:!1}})],ni.prototype,"minScale",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],ni.prototype,"readMinScale",null),(0,r._)([(0,g.Cb)({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],ni.prototype,"operationalLayerType",void 0),(0,r._)([(0,g.Cb)({nonNullable:!0,type:u.Z.ofType(Tt)})],ni.prototype,"pointBarriers",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],ni.prototype,"readPointBarriers",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:u.Z.ofType(Ct)})],ni.prototype,"polygonBarriers",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],ni.prototype,"readPolygonBarriers",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:u.Z.ofType(Ot)})],ni.prototype,"polylineBarriers",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],ni.prototype,"readPolylineBarriers",null),(0,r._)([(0,g.Cb)({readOnly:!0})],ni.prototype,"routeInfo",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],ni.prototype,"readRouteInfo",null),(0,r._)([(0,g.Cb)({type:U.Z})],ni.prototype,"spatialReference",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],ni.prototype,"readSpatialReference",null),(0,r._)([(0,g.Cb)({nonNullable:!0,type:u.Z.ofType(qt)})],ni.prototype,"stops",void 0),(0,r._)([(0,w.r)(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],ni.prototype,"readStops",null),(0,r._)([(0,g.Cb)()],ni.prototype,"title",null),(0,r._)([(0,g.Cb)({readOnly:!0,json:{read:!1}})],ni.prototype,"type",void 0),(0,r._)([(0,g.Cb)()],ni.prototype,"url",null),ni=(0,r._)([(0,C.j)(si)],ni);const li=ni},39241:(e,t,i)=>{i.d(t,{I:()=>w});var r=i(29768),o=i(31450),s=i(88762),a=i(82058),n=i(41864),l=i(60991),u=i(92143),p=i(71252),d=i(50406),c=i(32101),m=i(34250),y=(i(91306),i(48578),i(97714)),b=i(17533),h=i(2906),f=i(51899),v=i(49900),g=i(56420),T=i(74653),S=i(60111);i(71552),i(76506),i(40642),i(21972),i(60474),i(66396),i(86656),i(379),i(62062),i(6540),i(19657),i(91055),i(6906),i(79456),i(12047),i(81184),i(33101),i(21801),i(73796),i(60947),i(53785),i(57251),i(91597),i(86787),i(35132),i(3482),i(67477),i(78533),i(91091),i(58943),i(73173),i(74742),i(28239),i(1623),i(82426),i(72836),i(66106),i(29794),i(7200),i(89914),i(65775),i(84069),i(12381),i(44567),i(98380),i(92482),i(92896),i(92624),i(92847);const w=e=>{let t=class extends e{constructor(){super(...arguments),this.resourceReferences={portalItem:null,paths:[]},this.userHasEditingPrivileges=!0,this.userHasFullEditingPrivileges=!1,this.userHasUpdateItemPrivileges=!1}destroy(){this.portalItem=(0,p.d)(this.portalItem),this.resourceReferences.portalItem=null,this.resourceReferences.paths.length=0}set portalItem(e){e!==this._get("portalItem")&&(this.removeOrigin("portal-item"),this._set("portalItem",e))}readPortalItem(e,t,i){if(t.itemId)return new g.default({id:t.itemId,portal:i&&i.portal})}writePortalItem(e,t){e&&e.id&&(t.itemId=e.id)}async loadFromPortal(e,t){if(this.portalItem&&this.portalItem.id)try{const{load:r}=await i.e(8642).then(i.bind(i,8642));return(0,d.k_)(t),await r({instance:this,supportedTypes:e.supportedTypes,validateItem:e.validateItem,supportsData:e.supportsData,layerModuleTypeMap:e.layerModuleTypeMap},t)}catch(e){throw(0,d.D_)(e)||u.L.getLogger(this).warn(`Failed to load layer (${this.title}, ${this.id}) portal item (${this.portalItem.id})\n  ${e}`),e}}async finishLoadEditablePortalLayer(e){this._set("userHasEditingPrivileges",await this._fetchUserHasEditingPrivileges(e).catch((e=>((0,d.r9)(e),!0))))}async _setUserPrivileges(e,t){if(!o.default.userPrivilegesApplied)return this.finishLoadEditablePortalLayer(t);if(this.url)try{const{features:{edit:i,fullEdit:r},content:{updateItem:o}}=await this._fetchUserPrivileges(e,t);this._set("userHasEditingPrivileges",i),this._set("userHasFullEditingPrivileges",r),this._set("userHasUpdateItemPrivileges",o)}catch(e){(0,d.r9)(e)}}async _fetchUserPrivileges(e,t){let i=this.portalItem;if(!e||!i||!i.loaded||i.sourceUrl)return this._fetchFallbackUserPrivileges(t);const r=e===i.id;if(r&&i.portal.user)return(0,S.g)(i);let o,a;if(r)o=i.portal.url;else try{o=await(0,f.g)(this.url,t)}catch(e){(0,d.r9)(e)}if(!o||!(0,c.Zo)(o,i.portal.url))return this._fetchFallbackUserPrivileges(t);try{const e=null!=t?t.signal:null;a=await(s.id?.getCredential(`${o}/sharing`,{prompt:!1,signal:e}))}catch(e){(0,d.r9)(e)}if(!a)return{features:{edit:!0,fullEdit:!1},content:{updateItem:!1}};try{if(r?await i.reload():(i=new g.default({id:e,portal:{url:o}}),await i.load(t)),i.portal.user)return(0,S.g)(i)}catch(e){(0,d.r9)(e)}return{features:{edit:!0,fullEdit:!1},content:{updateItem:!1}}}async _fetchFallbackUserPrivileges(e){let t=!0;try{t=await this._fetchUserHasEditingPrivileges(e)}catch(e){(0,d.r9)(e)}return{features:{edit:t,fullEdit:!1},content:{updateItem:!1}}}async _fetchUserHasEditingPrivileges(e){const t=this.url?s.id?.findCredential(this.url):null;if(!t)return!0;const i=C.credential===t?C.user:await this._fetchEditingUser(e);return C.credential=t,C.user=i,null==i||null==i.privileges||i.privileges.includes("features:user:edit")}async _fetchEditingUser(e){const t=this.portalItem?.portal?.user;if(t)return t;const i=s.id.findServerInfo(this.url??"");if(!i?.owningSystemUrl)return null;const r=`${i.owningSystemUrl}/sharing/rest`,o=v.Z.getDefault();if(o&&o.loaded&&(0,c.Fv)(o.restUrl)===(0,c.Fv)(r))return o.user;const l=`${r}/community/self`,u=null!=e?e.signal:null,p=await(0,n.r)((0,a.default)(l,{authMode:"no-prompt",query:{f:"json"},signal:u}));return p.ok?T.default.fromJSON(p.value.data):null}read(e,t){t&&(t.layer=this),super.read(e,t)}write(e,t){const i=t&&t.portal,r=this.portalItem&&this.portalItem.id&&(this.portalItem.portal||v.Z.getDefault());return i&&r&&!(0,c.tm)(r.restUrl,i.restUrl)?(t.messages&&t.messages.push(new l.Z("layer:cross-portal",`The layer '${this.title} (${this.id})' cannot be persisted because it refers to an item on a different portal than the one being saved to. To save, set layer.portalItem to null or save to the same portal as the item associated with the layer`,{layer:this})),null):super.write(e,{...t,layer:this})}};return(0,r._)([(0,m.Cb)({type:g.default})],t.prototype,"portalItem",null),(0,r._)([(0,y.r)("web-document","portalItem",["itemId"])],t.prototype,"readPortalItem",null),(0,r._)([(0,h.w)("web-document","portalItem",{itemId:{type:String}})],t.prototype,"writePortalItem",null),(0,r._)([(0,m.Cb)({clonable:!1})],t.prototype,"resourceReferences",void 0),(0,r._)([(0,m.Cb)({type:Boolean,readOnly:!0})],t.prototype,"userHasEditingPrivileges",void 0),(0,r._)([(0,m.Cb)({type:Boolean,readOnly:!0})],t.prototype,"userHasFullEditingPrivileges",void 0),(0,r._)([(0,m.Cb)({type:Boolean,readOnly:!0})],t.prototype,"userHasUpdateItemPrivileges",void 0),t=(0,r._)([(0,b.j)("esri.layers.mixins.PortalLayer")],t),t},C={credential:null,user:null}},87258:(e,t,i)=>{i.d(t,{Z:()=>g});var r,o=i(29768),s=i(74569),a=i(23761),n=i(57251),l=i(12047),u=i(76506),p=i(34250),d=(i(91306),i(97714)),c=i(17533),m=i(2906),y=i(60947),b=i(32422),h=i(97546);i(21801),i(40642),i(71552),i(48578),i(73796),i(91597),i(92143),i(31450),i(86787),i(86656),i(66396),i(53785),i(35132),i(84069),i(44567),i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(7200),i(92896),i(22781),i(86748),i(66122),i(21972),i(60474),i(379),i(62062),i(6540),i(19657),i(91055),i(6906),i(79456),i(50406),i(60991),i(15324),i(75067),i(89914),i(14249),i(60217),i(29107),i(30574),i(2157),i(25977),i(58076),i(98242),i(7471),i(54414),i(59465),i(1648),i(8925),i(3482),i(36097),i(33921),i(45154),i(16769),i(93603),i(15438),i(593),i(85699),i(55531),i(96055),i(47776),i(18033),i(6331),i(62048),i(56890),i(30493),i(4292),i(75626),i(72652),i(29641),i(70821),i(3296),i(34229),i(37029),i(96467),i(63571),i(30776),i(48027),i(54174),i(63130),i(25696),i(98402),i(42775),i(95834),i(34394),i(57150),i(76726),i(20444),i(76393),i(78548),i(2497),i(49906),i(46527),i(11799),i(48649),i(59877),i(9960),i(30823),i(53326),i(5853),i(39141),i(32101),i(38742),i(48243),i(34635),i(10401),i(49900),i(88762),i(82058),i(81184),i(33101),i(67477),i(78533),i(74653),i(91091),i(58943),i(70737),i(36834),i(8487),i(17817),i(90814),i(15459),i(97189),i(61847),i(28212),i(16955),i(22401),i(48699),i(77894),i(55187),i(8586),i(44509),i(69814),i(11305),i(62259),i(44790),i(5909),i(60669),i(48208),i(51589),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);const f=new n.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let v=r=class extends l.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const i=y.Z.fromJSON(t.spatialReference),r=[];for(let t=0;t<e.length;t++){const o=e[t],s=a.Z.fromJSON(o),n=o.geometry&&o.geometry.spatialReference;null==s.geometry||n||(s.geometry.spatialReference=i);const l=o.aggregateGeometries,u=s.aggregateGeometries;if(l&&null!=u)for(const e in u){const t=u[e],r=l[e],o=r?.spatialReference;null==t||o||(t.spatialReference=i)}r.push(s)}return r}writeGeometryType(e,t,i,r){if(e)return void f.write(e,t,i,r);const{features:o}=this;if(o)for(const e of o)if(e&&null!=e.geometry)return void f.write(e.geometry.type,t,i,r)}readQueryGeometry(e,t){if(!e)return null;const i=!!e.spatialReference,r=(0,b.im)(e);return r&&!i&&t.spatialReference&&(r.spatialReference=y.Z.fromJSON(t.spatialReference)),r}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:i}=this;if(i)for(const e of i)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new r(this.cloneProperties())}cloneProperties(){return(0,u.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let i=0;i<t.features.length;i++){const r=t.features[i];if(r.geometry){const t=e&&e[i];r.geometry=t&&t.toJSON()||r.geometry}}return t}quantize(e){const{scale:[t,i],translate:[r,o]}=e,s=this.features,a=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-r)/t)),(e=>Math.round((o-e)/i)));for(let e=0,t=s.length;e<t;e++)a?.(s[e].geometry)||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:i}=this;if(!i)return this;const{translate:[r,o],scale:[s,a]}=i;let n=null,l=null;if(this.hasZ&&null!=i?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=i;n=i=>i*t+e}if(this.hasM&&null!=i?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=i;l=i=>null==i?i:i*t+e}const u=this._getHydrationFunction(e,(e=>e*s+r),(e=>o-e*a),n,l);for(const{geometry:e}of t)null!=e&&u&&u(e);return this.transform=null,this}_quantizePoints(e,t,i){let r,o;const s=[];for(let a=0,n=e.length;a<n;a++){const n=e[a];if(a>0){const e=t(n[0]),a=i(n[1]);e===r&&a===o||(s.push([e-r,a-o]),r=e,o=a)}else r=t(n[0]),o=i(n[1]),s.push([r,o])}return s.length>0?s:null}_getQuantizationFunction(e,t,i){return"point"===e?e=>(e.x=t(e.x),e.y=i(e.y),e):"polyline"===e||"polygon"===e?e=>{const r=(0,b.oU)(e)?e.rings:e.paths,o=[];for(let e=0,s=r.length;e<s;e++){const s=r[e],a=this._quantizePoints(s,t,i);a&&o.push(a)}return o.length>0?((0,b.oU)(e)?e.rings=o:e.paths=o,e):null}:"multipoint"===e?e=>{const r=this._quantizePoints(e.points,t,i);return r&&r.length>0?(e.points=r,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,i,r,o){return"point"===e?e=>{e.x=t(e.x),e.y=i(e.y),r&&(e.z=r(e.z))}:"polyline"===e||"polygon"===e?e=>{const s=(0,b.oU)(e)?e.rings:e.paths;let a,n;for(let e=0,r=s.length;e<r;e++){const r=s[e];for(let e=0,o=r.length;e<o;e++){const o=r[e];e>0?(a+=o[0],n+=o[1]):(a=o[0],n=o[1]),o[0]=t(a),o[1]=i(n)}}if(r&&o)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,i=t.length;e<i;e++){const i=t[e];i[2]=r(i[2]),i[3]=o(i[3])}}else if(r)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,i=t.length;e<i;e++){const i=t[e];i[2]=r(i[2])}}else if(o)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,i=t.length;e<i;e++){const i=t[e];i[2]=o(i[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=i(e.ymin),e.xmax=t(e.xmax),e.ymax=i(e.ymax),r&&null!=e.zmax&&null!=e.zmin&&(e.zmax=r(e.zmax),e.zmin=r(e.zmin)),o&&null!=e.mmax&&null!=e.mmin&&(e.mmax=o(e.mmax),e.mmin=o(e.mmin))}:"multipoint"===e?e=>{const s=e.points;let a,n;for(let e=0,r=s.length;e<r;e++){const r=s[e];e>0?(a+=r[0],n+=r[1]):(a=r[0],n=r[1]),r[0]=t(a),r[1]=i(n)}if(r&&o)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=r(t[2]),t[3]=o(t[3])}else if(r)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=r(t[2])}else if(o)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=o(t[2])}}:null}};(0,o._)([(0,p.Cb)({type:String,json:{write:!0}})],v.prototype,"displayFieldName",void 0),(0,o._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"exceededTransferLimit",void 0),(0,o._)([(0,p.Cb)({type:[a.Z],json:{write:!0}})],v.prototype,"features",void 0),(0,o._)([(0,d.r)("features")],v.prototype,"readFeatures",null),(0,o._)([(0,p.Cb)({type:[h.Z],json:{write:!0}})],v.prototype,"fields",void 0),(0,o._)([(0,p.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:f.read}}})],v.prototype,"geometryType",void 0),(0,o._)([(0,m.w)("geometryType")],v.prototype,"writeGeometryType",null),(0,o._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasM",void 0),(0,o._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasZ",void 0),(0,o._)([(0,p.Cb)({types:s.qM,json:{write:!0}})],v.prototype,"queryGeometry",void 0),(0,o._)([(0,d.r)("queryGeometry")],v.prototype,"readQueryGeometry",null),(0,o._)([(0,p.Cb)({type:y.Z,json:{write:!0}})],v.prototype,"spatialReference",void 0),(0,o._)([(0,m.w)("spatialReference")],v.prototype,"writeSpatialReference",null),(0,o._)([(0,p.Cb)({json:{write:!0}})],v.prototype,"transform",void 0),v=r=(0,o._)([(0,c.j)("esri.rest.support.FeatureSet")],v),v.prototype.toJSON.isDefaultToJSON=!0;const g=v}}]);