"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[3958],{89219:(e,t,r)=>{r.d(t,{q:()=>o});const o={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!1,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!1,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},4571:(e,t,r)=>{r.d(t,{a:()=>a,b:()=>u,c:()=>d,d:()=>c});var o=r(48578),n=r(76506),s=r(89219),i=r(6941);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?i.d:"esriGeometryPolyline"===e?i.a:i.b}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let p=1;function u(e,t){if((0,o.h)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let r=`this.${t} = null;`;for(const t in e)r+=`this${l.test(t)?`.${t}`:`["${t}"]`} = ${JSON.stringify(e[t])};`;const o=new Function(`\n      return class AttributesClass$${p++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new o}catch(r){return()=>({[t]:null,...e})}}function c(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,n.d9)(e)}}]}function d(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:s.q,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}},6941:(e,t,r)=>{r.d(t,{a:()=>s,b:()=>i,c:()=>a,d:()=>n,e:()=>l,f:()=>p,g:()=>u});const o=[252,146,31,255],n={type:"esriSMS",style:"esriSMSCircle",size:6,color:o,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},s={type:"esriSLS",style:"esriSLSSolid",width:.75,color:o},i={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},a={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},l={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},p={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},u={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}},90995:(e,t,r)=>{r.d(t,{c:()=>F,g:()=>l,i:()=>C,v:()=>v});var o=r(60991),n=r(85674),s=r(16204),i=r(14249);const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function l(e){return a[e]}function*p(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*u(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function c(e){for(const t of e)if(t.length>2)return!0;return!1}function d(e){let t=0;for(let r=0;r<e.length;r++){const o=e[r],n=e[(r+1)%e.length];t+=o[0]*n[1]-n[0]*o[1]}return t<=0}function y(e){const t=e[0],r=e[e.length-1];return t[0]===r[0]&&t[1]===r[1]&&t[2]===r[2]||e.push(t),e}function f(e,t,r){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,r){return g(e,t.coordinates,r),e}(e,t,r);case"MultiLineString":return function(e,t,r){for(const o of t.coordinates)g(e,o,r);return e}(e,t,r);case"MultiPolygon":return function(e,t,r){for(const o of t.coordinates){m(e,o[0],r);for(let t=1;t<o.length;t++)h(e,o[t],r)}return e}(e,t,r);case"Point":return function(e,t,r){return w(e,t.coordinates,r),e}(e,t,r);case"Polygon":return function(e,t,r){const o=t.coordinates;m(e,o[0],r);for(let t=1;t<o.length;t++)h(e,o[t],r);return e}(e,t,r)}}function m(e,t,r){const o=y(t);d(o)?g(e,o,r):b(e,o,r)}function h(e,t,r){const o=y(t);d(o)?b(e,o,r):g(e,o,r)}function g(e,t,r){for(const o of t)w(e,o,r);e.lengths.push(t.length)}function b(e,t,r){for(let o=t.length-1;o>=0;o--)w(e,t[o],r);e.lengths.push(t.length)}function w(e,t,r){const[o,n,s]=t;e.coords.push(o,n),r.hasZ&&e.coords.push(s||0)}function S(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function v(e){if(!e)throw new o.Z("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new o.Z("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const r="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,n=new RegExp(".*(CRS84H?|4326)$","i");if(!r||!n.test(r))throw new o.Z("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function C(e,t={}){const r=[],o=new Set,n=new Set;let s,a=!1,d=null,y=!1,{geometryType:f=null}=t,m=!1;for(const t of p(e)){const{geometry:e,properties:p,id:h}=t;if((!e||(f||(f=l(e.type)),l(e.type)===f))&&(a||(a=c(u(e))),y||(y=null!=h,y&&(s=typeof h,p&&(d=Object.keys(p).filter((e=>p[e]===h))))),p&&d&&y&&null!=h&&(d.length>1?d=d.filter((e=>p[e]===h)):1===d.length&&(d=p[d[0]]===h?d:[])),!m&&p)){let e=!0;for(const t in p){if(o.has(t))continue;const s=p[t];if(null==s){e=!1,n.add(t);continue}const a=S(s);if("unknown"===a){n.add(t);continue}n.delete(t),o.add(t);const l=(0,i.q6)(t);l&&r.push({name:l,alias:t,type:a})}m=e}}const h=(0,i.q6)(1===d?.length&&d[0]||null)??void 0;if(h)for(const e of r)if(e.name===h&&(0,i.H7)(e)){e.type="esriFieldTypeOID";break}return{fields:r,geometryType:f,hasZ:a,objectIdFieldName:h,objectIdFieldType:s,unknownFields:Array.from(n)}}function F(e,t){return Array.from(function*(e,t={}){const{geometryType:r,objectIdField:o}=t;for(const i of e){const{geometry:e,properties:a,id:p}=i;if(e&&l(e.type)!==r)continue;const u=a||{};let c;o&&(c=u[o],null==p||c||(u[o]=c=p));const d=new n.O(e?f(new s.O,e,t):null,u,null,c??void 0);yield d}}(p(e),t))}},51637:(e,t,r)=>{r.d(t,{a:()=>v,b:()=>S,c:()=>g,d:()=>w,e:()=>C,f:()=>b,g:()=>F,h:()=>h,i:()=>_,q:()=>x}),r(74569);var o=r(82058),n=r(60991),s=r(92143),i=r(53785),a=r(35132),l=r(40267),p=r(9006),u=r(90995),c=r(4571),d=r(1709),y=r(54732),f=r(60947);const m=s.L.getLogger("esri.layers.graphics.sources.ogcfeature"),h="http://www.opengis.net/def/crs/",g=`${h}OGC/1.3/CRS84`;async function b(e,t,r={},s=5){const{links:i}=e,a=I(i,"items","application/geo+json")||I(i,"http://www.opengis.net/def/rel/ogc/1.0/items","application/geo+json");if(null==a)throw new n.Z("ogc-feature-layer:missing-items-page","Missing items url");const{data:l}=await(0,o.default)(a.href,{signal:r.signal,query:{limit:s,...r.customParameters,token:r.apiKey},headers:{accept:"application/geo+json"}});await(0,u.v)(l);const p=(0,u.i)(l,{geometryType:t.geometryType}),h=t.fields||p.fields||[],g=null!=t.hasZ?t.hasZ:p.hasZ,b=p.geometryType,w=t.objectIdField||p.objectIdFieldName||"OBJECTID";let S=t.timeInfo;const v=h.find((({name:e})=>e===w));if(v)v.editable=!1,v.nullable=!1;else{if(!p.objectIdFieldType)throw new n.Z("ogc-feature-layer:missing-feature-id","Collection geojson require a feature id as a unique identifier");h.unshift({name:w,alias:w,type:"number"===p.objectIdFieldType?"esriFieldTypeOID":"esriFieldTypeString",editable:!1,nullable:!1})}if(w!==p.objectIdFieldName){const e=h.find((({name:e})=>e===p.objectIdFieldName));e&&(e.type="esriFieldTypeInteger")}h===p.fields&&p.unknownFields.length>0&&m.warn({name:"ogc-feature-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:p.unknownFields}});for(const e of h){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),"esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type&&(e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable),!e.name)throw new n.Z("ogc-feature-layer:invalid-field-name","field name is missing",{field:e});if(!y.k.jsonValues.includes(e.type))throw new n.Z("ogc-feature-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e})}if(S){const e=new d.Z(h);if(S.startTimeField){const t=e.get(S.startTimeField);t?(S.startTimeField=t.name,t.type="esriFieldTypeDate"):S.startTimeField=null}if(S.endTimeField){const t=e.get(S.endTimeField);t?(S.endTimeField=t.name,t.type="esriFieldTypeDate"):S.endTimeField=null}if(S.trackIdField){const t=e.get(S.trackIdField);t?S.trackIdField=t.name:(S.trackIdField=null,m.warn({name:"ogc-feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:S}}))}S.startTimeField||S.endTimeField||(m.warn({name:"ogc-feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:S}}),S=null)}const C=b?(0,c.a)(b):null,F=function(e){const t=e.extent?.spatial;if(!t)return null;const r=t.bbox[0],o=4===r.length,n=r[0],s=r[1],i=o?void 0:r[2];return{xmin:n,ymin:s,xmax:o?r[2]:r[3],ymax:o?r[3]:r[4],zmin:i,zmax:o?void 0:r[5],spatialReference:f.Z.WGS84.toJSON()}}(e);return{drawingInfo:C,extent:F,geometryType:b,fields:h,hasZ:!!g,objectIdField:w,timeInfo:S}}async function w(e,t={}){const{links:r}=e,s=I(r,"data","application/json")||I(r,"http://www.opengis.net/def/rel/ogc/1.0/data","application/json");if(null==s)throw new n.Z("ogc-feature-layer:missing-collections-page","Missing collections url");const{apiKey:i,customParameters:a,signal:l}=t,{data:p}=await(0,o.default)(s.href,{signal:l,headers:{accept:"application/json"},query:{...a,token:i}});return p}async function S(e,t={}){const{links:r}=e,s=I(r,"conformance","application/json")||I(r,"http://www.opengis.net/def/rel/ogc/1.0/conformance","application/json");if(null==s)throw new n.Z("ogc-feature-layer:missing-conformance-page","Missing conformance url");const{apiKey:i,customParameters:a,signal:l}=t,{data:p}=await(0,o.default)(s.href,{signal:l,headers:{accept:"application/json"},query:{...a,token:i}});return p}async function v(e,t={}){const{apiKey:r,customParameters:n,signal:s}=t,{data:i}=await(0,o.default)(e,{signal:s,headers:{accept:"application/json"},query:{...n,token:r}});return i}async function C(e,t={}){const r="application/vnd.oai.openapi+json;version=3.0",n=I(e.links,"service-desc",r);if(null==n)return m.warn("ogc-feature-layer:missing-openapi-page","The OGC API-Features server does not have an OpenAPI page."),null;const{apiKey:s,customParameters:i,signal:a}=t,{data:l}=await(0,o.default)(n.href,{signal:a,headers:{accept:r},query:{...i,token:s}});return l}function F(e){const t=/^http:\/\/www\.opengis.net\/def\/crs\/(?<authority>.*)\/(?<version>.*)\/(?<code>.*)$/i.exec(e),r=t?.groups;if(!r)return null;const{authority:o,code:n}=r;switch(o.toLowerCase()){case"ogc":switch(n.toLowerCase()){case"crs27":return f.Z.GCS_NAD_1927.wkid;case"crs83":return 4269;case"crs84":case"crs84h":return f.Z.WGS84.wkid;default:return null}case"esri":case"epsg":{const e=Number.parseInt(n,10);return Number.isNaN(e)?null:e}default:return null}}async function x(e,t,r){const o=await _(e,t,r);return(0,l.j)(o)}async function _(e,t,r){const{collection:s,layerDefinition:c,maxRecordCount:d,queryParameters:{apiKey:y,customParameters:m},spatialReference:h,supportedCrs:g}=e,{links:b}=s,w=I(b,"items","application/geo+json")||I(b,"http://www.opengis.net/def/rel/ogc/1.0/items","application/geo+json");if(null==w)throw new n.Z("ogc-feature-layer:missing-items-page","Missing items url");const{geometry:S,num:v,start:C,timeExtent:F,where:x}=t;if(t.objectIds)throw new n.Z("ogc-feature-layer:query-by-objectids-not-supported","Queries with objectids are not supported");const _=f.Z.fromJSON(h),R=t.outSpatialReference??_,O=R.isWGS84?null:j(R,g),P=function(e,t){if(!function(e){return null!=e&&"extent"===e.type}(e))return null;const{spatialReference:r}=e;if(!r||r.isWGS84)return{bbox:T(e)};const o=j(r,t);return null!=o?{bbox:T(e),"bbox-crs":o}:r.isWebMercator?{bbox:T((0,a.iV)(e,f.Z.WGS84))}:null}(S,g),Z=function(e){if(null==e)return null;const{start:t,end:r}=e;return`${null!=t?t.toISOString():".."}/${null!=r?r.toISOString():".."}`}(F),G=null!=(q=x)&&q&&"1=1"!==q?q:null,M=v??(null!=C&&void 0!==C?10:d),{data:D}=await(0,o.default)(w.href,{...r,query:{...m,...P,crs:O,datetime:Z,query:G,limit:M,startindex:C,token:y},headers:{accept:"application/geo+json"}});var q;let k=!1;D.links&&(k=!!D.links.find((e=>"next"===e.rel))),!k&&Number.isInteger(D.numberMatched)&&Number.isInteger(D.numberReturned)&&(k=D.numberReturned<D.numberMatched);const{fields:N,geometryType:A,hasZ:E,objectIdField:L}=c,z=(0,u.c)(D,{geometryType:A,hasZ:E,objectIdField:L});if(!O&&R.isWebMercator)for(const e of z)if(null!=e.geometry&&null!=A){const t=(0,l.i)(e.geometry,A,E,!1);t.spatialReference=f.Z.WGS84,e.geometry=(0,l.c)((0,a.iV)(t,R))}for(const e of z)e.objectId=e.attributes[L];const J=O||!O&&R.isWebMercator?R.toJSON():i.W,Q=new p.O;return Q.exceededTransferLimit=k,Q.features=z,Q.fields=N,Q.geometryType=A,Q.hasZ=E,Q.objectIdFieldName=L,Q.spatialReference=J,Q}function j(e,t){const{isWebMercator:r,wkid:o}=e;if(!o)return null;const n=r?t[3857]??t[102100]??t[102113]??t[900913]:t[e.wkid];return n?`${h}${n}`:null}function T(e){if(null==e)return"";const{xmin:t,ymin:r,xmax:o,ymax:n}=e;return`${t},${r},${o},${n}`}function I(e,t,r){return e.find((e=>e.rel===t&&e.type===r))||e.find((e=>e.rel===t&&!e.type))}},63958:(e,t,r)=>{r.r(t),r.d(t,{default:()=>E});var o=r(29768),n=(r(74569),r(86748)),s=(r(55306),r(71206),r(51979),r(60698),r(53321),r(65684),r(86758),r(95310),r(20208)),i=r(54179),a=r(34250),l=(r(91306),r(48578),r(17533)),p=r(22781),u=r(41617),c=r(60991),d=r(81184),y=r(51637),f=r(87258),m=r(60947),h=r(96994),g=r(80462),b=r(21471),w=r(9641),S=r(39275),v=r(89440),C=r(86861),F=r(39241),x=r(68219),_=r(6416),j=r(82377),T=r(43022),I=r(78303),R=r(97546),O=r(47346),P=r(14249),Z=r(77807),G=r(68653),M=r(31292),D=r(78893),q=r(21801);r(73796),r(12047),r(21972),r(60474),r(66396),r(76506),r(86656),r(92143),r(31450),r(71552),r(40642),r(379),r(62062),r(6540),r(19657),r(91055),r(6906),r(79456),r(50406),r(97714),r(53785),r(57251),r(2906),r(84069),r(91597),r(86787),r(35132),r(44567),r(98380),r(92482),r(82426),r(72836),r(66106),r(29794),r(7200),r(92896),r(32422),r(66122),r(15324),r(75067),r(89914),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(8925),r(3482),r(36097),r(33921),r(45154),r(16769),r(93603),r(15438),r(593),r(85699),r(55531),r(96055),r(47776),r(18033),r(6331),r(62048),r(56890),r(30493),r(4292),r(75626),r(72652),r(29641),r(70821),r(3296),r(34229),r(37029),r(60217),r(96467),r(63571),r(30776),r(48027),r(54174),r(63130),r(25696),r(98402),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(59877),r(9960),r(30823),r(53326),r(5853),r(39141),r(32101),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(82058),r(67477),r(78533),r(74653),r(91091),r(58943),r(33101),r(70737),r(36834),r(8487),r(17817),r(90814),r(15459),r(97189),r(61847),r(28212),r(16955),r(22401),r(48699),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(26822),r(51723),r(23243),r(51669),r(6090),r(3977),r(36741),r(11253),r(90319),r(38822),r(74057),r(23761),r(48190),r(85557),r(94070),r(67541),r(16218),r(51899),r(12158),r(74864),r(63683),r(94479),r(45702),r(51127),r(9352),r(89241),r(91700),r(10738),r(1709),r(32037),r(23639),r(90811),r(60045),r(68681),r(58085),r(93939),r(62407),r(90033),r(97807),r(238),r(71831),r(1693),r(40267),r(90995),r(4571),r(89219),r(6941),r(54732),r(9801),r(53523),r(42911),r(46826),r(45433),r(92200),r(65949),r(65775),r(5777),r(6210),r(36231),r(93314),r(35197),r(69218),r(32925),r(50619),r(27207),r(70846),r(67961),r(29395),r(94303),r(62670),r(34446),r(46646),r(1557),r(47842),r(17298),r(50203),r(30439),r(14460),r(13322),r(13201),r(81317),r(41864),r(56420),r(73173),r(74742),r(28239),r(60111),r(1623),r(12381),r(92624),r(92847),r(59765),r(77361),r(99983),r(46495);let k=class extends d.Z{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getSource(){const{featureDefinition:{collection:e,layerDefinition:t,spatialReference:r,supportedCrs:o},layer:{apiKey:n,customParameters:s,effectiveMaxRecordCount:i}}=this;return{type:"ogc-source",collection:e,layerDefinition:t,maxRecordCount:i,queryParameters:{apiKey:n,customParameters:s},spatialReference:r,supportedCrs:o}}queryExtent(e,t={}){return null}queryFeatureCount(e,t={}){return null}queryFeatures(e,t={}){return this.queryFeaturesJSON(e,t).then((e=>f.Z.fromJSON(e)))}queryFeaturesJSON(e,t={}){const r=this.getSource();return this.load(t).then((()=>(0,y.q)(r,e,t)))}queryObjectIds(e,t={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator&&!this.featureDefinition.supportedCrs[e.wkid])}_conformsToType(e,t){const r=new RegExp(`^${t}$`,"i");return e.conformsTo.some((e=>r.test(e)))??!1}_getCapabilities(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:t,maxRecordCountFactor:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1}}}_getMaxRecordCount(e){const t=e?.components?.parameters;return t?.limit?.schema?.maximum??t?.limitFeatures?.schema?.maximum}_getStorageSpatialReference(e){const t=e.storageCrs??y.c,r=(0,y.g)(t);return null==r?m.Z.WGS84:new m.Z({wkid:r})}_getSupportedSpatialReferences(e,t){const r="#/crs",o=e.crs??[y.c],n=o.includes(r)?o.filter((e=>e!==r)).concat(t.crs??[]):o,s=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return n.filter((e=>!s.test(e)))}async _loadOGCServices(e,t){const r=null!=t?t.signal:null,{apiKey:o,collectionId:n,customParameters:s,fields:i,geometryType:a,hasZ:l,objectIdField:u,timeInfo:d,url:f}=e,m={fields:i?.map((e=>e.toJSON())),geometryType:p.t.toJSON(a),hasZ:l??!1,objectIdField:u,timeInfo:d?.toJSON()},h={apiKey:o,customParameters:s,signal:r},g=await(0,y.a)(f,h),[b,w]=await Promise.all([(0,y.b)(g,h),(0,y.d)(g,h)]);if(!this._conformsToType(b,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new c.Z("ogc-feature-layer:no-geojson-support","Server does not support geojson");const S=w.collections.find((e=>e.id===n));if(!S)throw new c.Z("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const v=this._conformsToType(b,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await(0,y.e)(g,h):null,C=await(0,y.f)(S,m,h),F=this._getMaxRecordCount(v),x=this._getCapabilities(C.hasZ,F),_=this._getStorageSpatialReference(S).toJSON(),j=this._getSupportedSpatialReferences(S,w),T=new RegExp(`^${y.h}`,"i"),I={};for(const e of j){const t=(0,y.g)(e);null!=t&&(I[t]||(I[t]=e.replace(T,"")))}this.featureDefinition={capabilities:x,collection:S,layerDefinition:C,spatialReference:_,supportedCrs:I}}};(0,o._)([(0,a.Cb)()],k.prototype,"featureDefinition",void 0),(0,o._)([(0,a.Cb)({constructOnly:!0})],k.prototype,"layer",void 0),(0,o._)([(0,a.Cb)()],k.prototype,"type",void 0),k=(0,o._)([(0,l.j)("esri.layers.graphics.sources.OGCFeatureSource")],k);const N=(0,O.d)();let A=class extends((0,h.V)((0,b.N)((0,S.M)((0,w.b)((0,g.h)((0,C.c)((0,j.n)((0,_.M)((0,v.O)((0,F.I)((0,x.Q)((0,i.M)(u.Z))))))))))))){constructor(e){super(e),this.capabilities=null,this.collectionId=null,this.copyright=null,this.definitionExpression=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.maxRecordCount=null,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new k({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then((()=>this._fetchService(e)))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get effectiveMaxRecordCount(){return this.maxRecordCount??this.capabilities?.query.maxRecordCount??5e3}get isTable(){return this.loaded&&null==this.geometryType}set renderer(e){(0,P.YN)(e,this.fieldsIndex),this._set("renderer",e)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return(0,D.eZ)(this,e)}createQuery(){return new M.Z}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){let r,o=!1;const n=t?.feature?.attributes,s=this.typeIdField&&n?.[this.typeIdField];return null!=s&&this.types&&(o=this.types.some((t=>t.id==s&&(r=t.domains?.[e],"inherited"===r?.type&&(r=this._getLayerDomain(e)),!0)))),o||r||(r=this._getLayerDomain(e)),r}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(M.Z.from(e)||this.createQuery(),t))).then((e=>(e?.features?.forEach((e=>{e.layer=e.sourceLayer=this})),e)))}serviceSupportsSpatialReference(e){return this.source?.serviceSupportsSpatialReference(e)??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),(0,P.YN)(this.renderer,this.fieldsIndex),(0,P.UF)(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const t of this.fields)if(t.name===e&&t.domain)return t.domain;return null}};(0,o._)([(0,a.Cb)({readOnly:!0,json:{origins:{service:{read:!0}}}})],A.prototype,"capabilities",void 0),(0,o._)([(0,a.Cb)({type:String,json:{write:!0}})],A.prototype,"collectionId",void 0),(0,o._)([(0,a.Cb)({type:String})],A.prototype,"copyright",void 0),(0,o._)([(0,a.Cb)({readOnly:!0})],A.prototype,"defaultPopupTemplate",null),(0,o._)([(0,a.Cb)({type:String})],A.prototype,"definitionExpression",void 0),(0,o._)([(0,a.Cb)({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],A.prototype,"description",void 0),(0,o._)([(0,a.Cb)({type:String})],A.prototype,"displayField",void 0),(0,o._)([(0,a.Cb)({type:Number})],A.prototype,"effectiveMaxRecordCount",null),(0,o._)([(0,a.Cb)(T.e)],A.prototype,"elevationInfo",void 0),(0,o._)([(0,a.Cb)({type:[R.Z],json:{origins:{service:{name:"layerDefinition.fields"}}}})],A.prototype,"fields",void 0),(0,o._)([(0,a.Cb)(N.fieldsIndex)],A.prototype,"fieldsIndex",void 0),(0,o._)([(0,a.Cb)({readOnly:!0,type:q.Z,json:{origins:{service:{name:"layerDefinition.extent"}}}})],A.prototype,"fullExtent",void 0),(0,o._)([(0,a.Cb)({type:p.f.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:p.f.read}}}}})],A.prototype,"geometryType",void 0),(0,o._)([(0,a.Cb)({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],A.prototype,"hasZ",void 0),(0,o._)([(0,a.Cb)({type:Boolean,readOnly:!0})],A.prototype,"isTable",null),(0,o._)([(0,a.Cb)({type:[Z.Z],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:G.r},write:!0}}}})],A.prototype,"labelingInfo",void 0),(0,o._)([(0,a.Cb)(T.l)],A.prototype,"labelsVisible",void 0),(0,o._)([(0,a.Cb)(T.a)],A.prototype,"legendEnabled",void 0),(0,o._)([(0,a.Cb)({type:Number})],A.prototype,"maxRecordCount",void 0),(0,o._)([(0,a.Cb)({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],A.prototype,"objectIdField",void 0),(0,o._)([(0,a.Cb)({type:["OGCFeatureLayer"]})],A.prototype,"operationalLayerType",void 0),(0,o._)([(0,a.Cb)(T.p)],A.prototype,"popupEnabled",void 0),(0,o._)([(0,a.Cb)({type:n.Z,json:{name:"popupInfo",write:!0}})],A.prototype,"popupTemplate",void 0),(0,o._)([(0,a.Cb)({types:s.r,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:s.w,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],A.prototype,"renderer",null),(0,o._)([(0,a.Cb)(T.s)],A.prototype,"screenSizePerspectiveEnabled",void 0),(0,o._)([(0,a.Cb)({readOnly:!0})],A.prototype,"source",void 0),(0,o._)([(0,a.Cb)({readOnly:!0,type:m.Z,json:{origins:{service:{read:!0}}}})],A.prototype,"spatialReference",void 0),(0,o._)([(0,a.Cb)({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],A.prototype,"title",void 0),(0,o._)([(0,a.Cb)({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),(0,o._)([(0,a.Cb)({type:String,readOnly:!0})],A.prototype,"typeIdField",void 0),(0,o._)([(0,a.Cb)({type:[I.Z]})],A.prototype,"types",void 0),(0,o._)([(0,a.Cb)(T.u)],A.prototype,"url",void 0),A=(0,o._)([(0,l.j)("esri.layers.OGCFeatureLayer")],A);const E=A},96994:(e,t,r)=>{r.d(t,{V:()=>i});var o=r(29768),n=r(34250),s=(r(91306),r(48578),r(17533));r(92143),r(31450),r(71552),r(76506),r(40642),r(60474),r(66396),r(86656),r(60991),r(6540);const i=e=>{let t=class extends e{get apiKey(){return this._isOverridden("apiKey")?this._get("apiKey"):"portalItem"in this?this.portalItem?.apiKey:null}set apiKey(e){null!=e?this._override("apiKey",e):(this._clearOverride("apiKey"),this.clear("apiKey","user"))}};return(0,o._)([(0,n.Cb)({type:String})],t.prototype,"apiKey",null),t=(0,o._)([(0,s.j)("esri.layers.mixins.APIKeyMixin")],t),t}},86861:(e,t,r)=>{r.d(t,{c:()=>m});var o,n=r(29768),s=r(71552),i=r(34250),a=(r(91306),r(48578),r(17533)),l=r(57251),p=r(12047);r(76506),r(92143),r(31450),r(40642),r(60474),r(66396),r(86656),r(60991),r(6540),r(21972),r(379),r(62062),r(19657),r(91055),r(6906),r(79456),r(50406);const u=new l.J({asc:"ascending",desc:"descending"});let c=o=class extends p.wq{constructor(e){super(e),this.field=null,this.valueExpression=null,this.order="ascending"}clone(){return new o({field:this.field,valueExpression:this.valueExpression,order:this.order})}};(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],c.prototype,"field",void 0),(0,n._)([(0,i.Cb)({type:String,json:{write:!0}})],c.prototype,"valueExpression",void 0),(0,n._)([(0,i.Cb)({type:u.apiValues,json:{read:u.read,write:u.write}})],c.prototype,"order",void 0),c=o=(0,n._)([(0,a.j)("esri.layers.support.OrderByInfo")],c);const d=c;function y(e,t,r){if(!e)return null;const o=e.find((e=>!!e.field));if(!o)return null;const n=new d;return n.read(o,r),[n]}function f(e,t,r,o){const n=e.find((e=>!!e.field));n&&(0,s.s)(r,[n.toJSON()],t)}const m=e=>{let t=class extends e{constructor(){super(...arguments),this.orderBy=null}};return(0,n._)([(0,i.Cb)({type:[d],json:{origins:{"web-scene":{write:!1,read:!1}},read:{source:"layerDefinition.orderBy",reader:y},write:{target:"layerDefinition.orderBy",writer:f}}})],t.prototype,"orderBy",void 0),t=(0,n._)([(0,a.j)("esri.layers.mixins.OrderedLayer")],t),t}},78303:(e,t,r)=>{r.d(t,{Z:()=>y});var o=r(29768),n=r(66122),s=r(12047),i=r(34250),a=(r(91306),r(48578),r(97714)),l=r(17533),p=r(2906),u=r(9801),c=r(46495);r(21972),r(60474),r(66396),r(76506),r(86656),r(92143),r(31450),r(71552),r(40642),r(379),r(62062),r(6540),r(19657),r(91055),r(6906),r(79456),r(50406),r(60991),r(53523),r(59465),r(57251),r(42911),r(46826),r(45433);let d=class extends((0,n.J)(s.wq)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const r of Object.keys(e))t[r]=(0,u.f)(e[r]);return t}writeDomains(e,t){const r={};for(const t of Object.keys(e))e[t]&&(r[t]=e[t]?.toJSON());t.domains=r}};(0,o._)([(0,i.Cb)({json:{write:!0}})],d.prototype,"id",void 0),(0,o._)([(0,i.Cb)({json:{write:!0}})],d.prototype,"name",void 0),(0,o._)([(0,i.Cb)({json:{write:!0}})],d.prototype,"domains",void 0),(0,o._)([(0,a.r)("domains")],d.prototype,"readDomains",null),(0,o._)([(0,p.w)("domains")],d.prototype,"writeDomains",null),(0,o._)([(0,i.Cb)({type:[c.Z],json:{write:!0}})],d.prototype,"templates",void 0),d=(0,o._)([(0,l.j)("esri.layers.support.FeatureType")],d);const y=d},87258:(e,t,r)=>{r.d(t,{Z:()=>w});var o,n=r(29768),s=r(74569),i=r(23761),a=r(57251),l=r(12047),p=r(76506),u=r(34250),c=(r(91306),r(97714)),d=r(17533),y=r(2906),f=r(60947),m=r(32422),h=r(97546);r(21801),r(40642),r(71552),r(48578),r(73796),r(91597),r(92143),r(31450),r(86787),r(86656),r(66396),r(53785),r(35132),r(84069),r(44567),r(98380),r(92482),r(82426),r(72836),r(66106),r(29794),r(7200),r(92896),r(22781),r(86748),r(66122),r(21972),r(60474),r(379),r(62062),r(6540),r(19657),r(91055),r(6906),r(79456),r(50406),r(60991),r(15324),r(75067),r(89914),r(14249),r(60217),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(8925),r(3482),r(36097),r(33921),r(45154),r(16769),r(93603),r(15438),r(593),r(85699),r(55531),r(96055),r(47776),r(18033),r(6331),r(62048),r(56890),r(30493),r(4292),r(75626),r(72652),r(29641),r(70821),r(3296),r(34229),r(37029),r(96467),r(63571),r(30776),r(48027),r(54174),r(63130),r(25696),r(98402),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(59877),r(9960),r(30823),r(53326),r(5853),r(39141),r(32101),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(82058),r(81184),r(33101),r(67477),r(78533),r(74653),r(91091),r(58943),r(70737),r(36834),r(8487),r(17817),r(90814),r(15459),r(97189),r(61847),r(28212),r(16955),r(22401),r(48699),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732);const g=new a.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let b=o=class extends l.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=f.Z.fromJSON(t.spatialReference),o=[];for(let t=0;t<e.length;t++){const n=e[t],s=i.Z.fromJSON(n),a=n.geometry&&n.geometry.spatialReference;null==s.geometry||a||(s.geometry.spatialReference=r);const l=n.aggregateGeometries,p=s.aggregateGeometries;if(l&&null!=p)for(const e in p){const t=p[e],o=l[e],n=o?.spatialReference;null==t||n||(t.spatialReference=r)}o.push(s)}return o}writeGeometryType(e,t,r,o){if(e)return void g.write(e,t,r,o);const{features:n}=this;if(n)for(const e of n)if(e&&null!=e.geometry)return void g.write(e.geometry.type,t,r,o)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,o=(0,m.im)(e);return o&&!r&&t.spatialReference&&(o.spatialReference=f.Z.fromJSON(t.spatialReference)),o}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new o(this.cloneProperties())}cloneProperties(){return(0,p.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e&&e[r];o.geometry=t&&t.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,r],translate:[o,n]}=e,s=this.features,i=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-o)/t)),(e=>Math.round((n-e)/r)));for(let e=0,t=s.length;e<t;e++)i?.(s[e].geometry)||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[o,n],scale:[s,i]}=r;let a=null,l=null;if(this.hasZ&&null!=r?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=r;a=r=>r*t+e}if(this.hasM&&null!=r?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=r;l=r=>null==r?r:r*t+e}const p=this._getHydrationFunction(e,(e=>e*s+o),(e=>n-e*i),a,l);for(const{geometry:e}of t)null!=e&&p&&p(e);return this.transform=null,this}_quantizePoints(e,t,r){let o,n;const s=[];for(let i=0,a=e.length;i<a;i++){const a=e[i];if(i>0){const e=t(a[0]),i=r(a[1]);e===o&&i===n||(s.push([e-o,i-n]),o=e,n=i)}else o=t(a[0]),n=r(a[1]),s.push([o,n])}return s.length>0?s:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=(0,m.oU)(e)?e.rings:e.paths,n=[];for(let e=0,s=o.length;e<s;e++){const s=o[e],i=this._quantizePoints(s,t,r);i&&n.push(i)}return n.length>0?((0,m.oU)(e)?e.rings=n:e.paths=n,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,r);return o&&o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r,o,n){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y),o&&(e.z=o(e.z))}:"polyline"===e||"polygon"===e?e=>{const s=(0,m.oU)(e)?e.rings:e.paths;let i,a;for(let e=0,o=s.length;e<o;e++){const o=s[e];for(let e=0,n=o.length;e<n;e++){const n=o[e];e>0?(i+=n[0],a+=n[1]):(i=n[0],a=n[1]),n[0]=t(i),n[1]=r(a)}}if(o&&n)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2]),r[3]=n(r[3])}}else if(o)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2])}}else if(n)for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=n(r[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax),o&&null!=e.zmax&&null!=e.zmin&&(e.zmax=o(e.zmax),e.zmin=o(e.zmin)),n&&null!=e.mmax&&null!=e.mmin&&(e.mmax=n(e.mmax),e.mmin=n(e.mmin))}:"multipoint"===e?e=>{const s=e.points;let i,a;for(let e=0,o=s.length;e<o;e++){const o=s[e];e>0?(i+=o[0],a+=o[1]):(i=o[0],a=o[1]),o[0]=t(i),o[1]=r(a)}if(o&&n)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=o(t[2]),t[3]=n(t[3])}else if(o)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=o(t[2])}else if(n)for(let e=0,t=s.length;e<t;e++){const t=s[e];t[2]=n(t[2])}}:null}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],b.prototype,"displayFieldName",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"exceededTransferLimit",void 0),(0,n._)([(0,u.Cb)({type:[i.Z],json:{write:!0}})],b.prototype,"features",void 0),(0,n._)([(0,c.r)("features")],b.prototype,"readFeatures",null),(0,n._)([(0,u.Cb)({type:[h.Z],json:{write:!0}})],b.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:g.read}}})],b.prototype,"geometryType",void 0),(0,n._)([(0,y.w)("geometryType")],b.prototype,"writeGeometryType",null),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"hasM",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],b.prototype,"hasZ",void 0),(0,n._)([(0,u.Cb)({types:s.qM,json:{write:!0}})],b.prototype,"queryGeometry",void 0),(0,n._)([(0,c.r)("queryGeometry")],b.prototype,"readQueryGeometry",null),(0,n._)([(0,u.Cb)({type:f.Z,json:{write:!0}})],b.prototype,"spatialReference",void 0),(0,n._)([(0,y.w)("spatialReference")],b.prototype,"writeSpatialReference",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],b.prototype,"transform",void 0),b=o=(0,n._)([(0,d.j)("esri.rest.support.FeatureSet")],b),b.prototype.toJSON.isDefaultToJSON=!0;const w=b}}]);