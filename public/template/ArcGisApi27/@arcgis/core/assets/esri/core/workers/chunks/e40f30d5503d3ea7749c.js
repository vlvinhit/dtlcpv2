"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2311,3754],{75025:(e,t,r)=>{r.d(t,{A:()=>l});var s=r(29768),o=r(92143),a=r(34250),i=(r(91306),r(48578),r(17533)),n=r(21132);const l=e=>{let t=class extends e{get title(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){const e=(0,n.p)(this.url);if(null!=e&&e.title)return e.title}return this._get("title")||""}set title(e){this._set("title",e)}set url(e){this._set("url",(0,n.s)(e,o.L.getLogger(this)))}};return(0,s._)([(0,a.Cb)()],t.prototype,"title",null),(0,s._)([(0,a.Cb)({type:String})],t.prototype,"url",null),t=(0,s._)([(0,i.j)("esri.layers.mixins.ArcGISService")],t),t}},83805:(e,t,r)=>{r.d(t,{f:()=>a});var s=r(82058),o=r(60991);async function a(e,t,r,a,i,n){let l=null;if(null!=r){const t=`${e}/nodepages/`,o=t+Math.floor(r.rootIndex/r.nodesPerPage);try{return{type:"page",rootPage:(await(0,s.default)(o,{query:{f:"json",token:a},responseType:"json",signal:n})).data,rootIndex:r.rootIndex,pageSize:r.nodesPerPage,lodMetric:r.lodSelectionMetricType,urlPrefix:t}}catch(e){null!=i&&i.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",o,e),l=e}}if(!t)return null;const p=`${e}/nodes/`,u=p+(t&&t.split("/").pop());try{return{type:"node",rootNode:(await(0,s.default)(u,{query:{f:"json",token:a},responseType:"json",signal:n})).data,urlPrefix:p}}catch(e){throw new o.Z("sceneservice:root-node-missing","Root node missing.",{pageError:l,nodeError:e,url:u})}}},25368:(e,t,r)=>{function s(e){return e&&"getAtOrigin"in e&&"originOf"in e}r.d(t,{i:()=>s})},87217:(e,t,r)=>{r.d(t,{u:()=>o});var s=r(25368);function o(e){e&&e.writtenProperties&&e.writtenProperties.forEach((({target:e,propName:t,newOrigin:r})=>{(0,s.i)(e)&&r&&e.originOf(t)!==r&&e.updateOrigin(t,r)}))}},3754:(e,t,r)=>{r.d(t,{W7:()=>c,addOrUpdateResource:()=>n,fetchResources:()=>i,removeAllResources:()=>p,removeResource:()=>l});var s=r(82058),o=r(60991),a=r(32101);async function i(e,t={},r){await e.load(r);const s=(0,a.v_)(e.itemUrl,"resources"),{start:o=1,num:i=10,sortOrder:n="asc",sortField:l="created"}=t,p={query:{start:o,num:i,sortOrder:n,sortField:l,token:e.apiKey},signal:r?.signal},u=await e.portal.request(s,p);return{total:u.total,nextStart:u.nextStart,resources:u.resources.map((({created:t,size:r,resource:s})=>({created:new Date(t),size:r,resource:e.resourceFromPath(s)})))}}async function n(e,t,r,i){if(!e.hasPath())throw new o.Z(`portal-item-resource-${t}:invalid-path`,"Resource does not have a valid path");const n=e.portalItem;await n.load(i);const l=(0,a.v_)(n.userItemUrl,"add"===t?"addResources":"updateResources"),[p,c]=u(e.path),d=await async function(e){return e instanceof Blob?e:(await(0,s.default)(e.url,{responseType:"blob"})).data}(r),h=new FormData;return p&&"."!==p&&h.append("resourcesPrefix",p),null!=i&&i.compress&&h.append("compress","true"),h.append("fileName",c),h.append("file",d,c),h.append("f","json"),null!=i&&i.access&&h.append("access",i.access),await n.portal.request(l,{method:"post",body:h,signal:i?.signal}),e}async function l(e,t,r){if(!t.hasPath())throw new o.Z("portal-item-resources-remove:invalid-path","Resource does not have a valid path");await e.load(r);const s=(0,a.v_)(e.userItemUrl,"removeResources");await e.portal.request(s,{method:"post",query:{resource:t.path},signal:r?.signal}),t.portalItem=null}async function p(e,t){await e.load(t);const r=(0,a.v_)(e.userItemUrl,"removeResources");return e.portal.request(r,{method:"post",query:{deleteAll:!0},signal:t?.signal})}function u(e){const t=e.lastIndexOf("/");return-1===t?[".",e]:[e.slice(0,t),e.slice(t+1)]}function c(e,t){if(!e.hasPath())return null;const[r,,s]=function(e){const[t,r]=function(e){const t=(0,a.Ml)(e);return null==t?[e,""]:[e.slice(0,e.length-t.length-1),`.${t}`]}(e),[s,o]=u(t);return[s,o,r]}(e.path);return e.portalItem.resourceFromPath((0,a.v_)(r,t+s))}r(31450),r(48578),r(71552),r(76506),r(88762),r(92143),r(40642),r(50406)},46857:(e,t,r)=>{r.d(t,{H:()=>l});var s=r(41864),o=r(60991),a=r(50406),i=r(10279),n=r(3754);async function l(e,t,r){if(!t||!t.resources)return;const s=t.portalItem===e.portalItem?new Set(e.paths):new Set;e.paths.length=0,e.portalItem=t.portalItem;const l=new Set(t.resources.toKeep.map((e=>e.resource.path))),c=new Set,d=[];l.forEach((t=>{s.delete(t),e.paths.push(t)}));for(const o of t.resources.toUpdate)if(s.delete(o.resource.path),l.has(o.resource.path)||c.has(o.resource.path)){const{resource:t,content:s,finish:a,error:l}=o,u=(0,n.W7)(t,(0,i.g)());e.paths.push(u.path),d.push(p({resource:u,content:s,compress:o.compress,finish:a,error:l},r))}else e.paths.push(o.resource.path),d.push(u(o,r)),c.add(o.resource.path);for(const s of t.resources.toAdd)d.push(p(s,r)),e.paths.push(s.resource.path);if(s.forEach((e=>{if(t.portalItem){const r=t.portalItem.resourceFromPath(e);d.push(r.portalItem.removeResource(r).catch((()=>{})))}})),0===d.length)return;const h=await(0,a.as)(d);(0,a.k_)(r);const y=h.filter((e=>"error"in e)).map((e=>e.error));if(y.length>0)throw new o.Z("save:resources","Failed to save one or more resources",{errors:y})}async function p(e,t){const r={...null!=t?t:{},compress:e.compress},o=await(0,s.r)(e.resource.portalItem.addResource(e.resource,e.content,r));if(!0!==o.ok)throw e.error?.(o.error),o.error;e.finish?.(e.resource)}async function u(e,t){const r=await(0,s.r)(e.resource.update(e.content,t));if(!0!==r.ok)throw e.error?.(r.error),r.error;e.finish?.(e.resource)}r(21972),r(17533),r(48578),r(86656),r(76506),r(66396),r(6540),r(92143),r(31450),r(71552),r(40642),r(91306),r(60474),r(379),r(62062),r(34250),r(19657),r(91055),r(6906),r(79456),r(82058),r(88762),r(32101)},10279:(e,t,r)=>{r.d(t,{a:()=>a,g:()=>o});const s="randomUUID"in crypto;function o(){if(s)return crypto.randomUUID();const e=crypto.getRandomValues(new Uint16Array(8));e[3]=4095&e[3]|16384,e[4]=16383&e[4]|32768;const t=t=>e[t].toString(16).padStart(4,"0");return t(0)+t(1)+"-"+t(2)+"-"+t(3)+"-"+t(4)+"-"+t(5)+t(6)+t(7)}function a(){return`{${o()}}`}},96994:(e,t,r)=>{r.d(t,{V:()=>i});var s=r(29768),o=r(34250),a=(r(91306),r(48578),r(17533));r(92143),r(31450),r(71552),r(76506),r(40642),r(60474),r(66396),r(86656),r(60991),r(6540);const i=e=>{let t=class extends e{get apiKey(){return this._isOverridden("apiKey")?this._get("apiKey"):"portalItem"in this?this.portalItem?.apiKey:null}set apiKey(e){null!=e?this._override("apiKey",e):(this._clearOverride("apiKey"),this.clear("apiKey","user"))}};return(0,s._)([(0,o.Cb)({type:String})],t.prototype,"apiKey",null),t=(0,s._)([(0,a.j)("esri.layers.mixins.APIKeyMixin")],t),t}},5437:(e,t,r)=>{r.d(t,{Vt:()=>R,xp:()=>U});var s=r(29768),o=r(82058),a=r(60991),i=r(92143),n=r(50406),l=r(32101),p=r(34250),u=(r(91306),r(48578),r(97714)),c=r(17533),d=r(2906),h=r(87217),y=r(21801),m=r(29027),f=r(60947),g=r(21132),v=r(43022),w=r(83805),S=r(49900),I=r(56420),_=r(46857);r(31450),r(71552),r(76506),r(88762),r(40642),r(60474),r(66396),r(86656),r(6540),r(73796),r(12047),r(21972),r(379),r(62062),r(19657),r(91055),r(6906),r(79456),r(53785),r(57251),r(91597),r(86787),r(35132),r(38742),r(93314),r(35197),r(1557),r(47842),r(14249),r(60217),r(74569),r(84069),r(44567),r(98380),r(92482),r(82426),r(72836),r(66106),r(29794),r(7200),r(92896),r(22781),r(32422),r(17298),r(85557),r(34394),r(81184),r(33101),r(3482),r(67477),r(78533),r(74653),r(91091),r(58943),r(73173),r(74742),r(28239),r(41864),r(10279),r(3754);const x="esri.layers.mixins.SceneService",b=i.L.getLogger(x),R=e=>{let t=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=(0,n.Ds)((async(e,t,r)=>{switch(e){case U.SAVE:return this._save(t);case U.SAVE_AS:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return f.Z.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,s=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=s?new f.Z(s):null}}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e){const s=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return y.Z.fromJSON(s,r)}const s=t.store,o=this._readSpatialReference(t);return null==o||null==s||null==s.extent||!Array.isArray(s.extent)||s.extent.some((e=>e<A))?null:new y.Z({xmin:s.extent[0],ymin:s.extent[1],xmax:s.extent[2],ymax:s.extent[3],spatialReference:o})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t}readVersion(e,t){const r=t.store,s=null!=r.version?r.version.toString():"";return this.parseVersionString(s)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return(0,g.t)(this.url,t.name);let s=t.name;if(!s&&this.url){const e=(0,g.p)(this.url);null!=e&&(s=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(s=r+" - "+s),(0,g.c)(s)}set url(e){const t=(0,g.a)({layer:this,url:e,nonStandardUrlAllowed:!1,logger:b});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,s){(0,g.w)(this,e,"layers",t,s)}get parsedUrl(){const e=this._get("url"),t=(0,l.mN)(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=(0,w.f)(this.parsedUrl.path,this.rootNode,e,this.apiKey,b,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,r=e.rootPage?.nodes?.[t];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new a.Z("sceneservice:invalid-node-page","Invalid node page.");if(r.obb.center[0]<A||null==this.fullExtent||this.fullExtent.hasZ)return;const s=r.obb.halfSize,o=r.obb.center[2],i=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);this.fullExtent.zmin=o-i,this.fullExtent.zmax=o+i}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<A)return;const r=t[2],s=t[3],{fullExtent:o}=this;o&&(o.zmin=r-s,o.zmax=r+s)}}async _fetchService(e){if(null==this.url)throw new a.Z("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await(0,o.default)(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await(0,o.default)(this.parsedUrl?.path??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(r=!0),r)return this._fetchVoxelServiceLayer();const s=t.data;this.read(s,this._getServiceContext()),this.validateLayer(s)}async _fetchVoxelServiceLayer(e){const t=(await(0,o.default)(this.parsedUrl?.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const s=t.getTypeKeywords();for(const t of s)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===O.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...N,...t};let s=I.default.from(e);s||(b.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new a.Z("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),s.id&&(s=s.clone(),s.id=null);const o=s.portal||S.Z.getDefault();await this._ensureLoadBeforeSave(),s.type=K,s.portal=o;const i={origin:"portal-item",url:null,messages:[],portal:o,portalItem:s,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(n,i,r),s.url=this.url,s.title||(s.title=this.title),this._updateTypeKeywords(s,r,O.newItem),await o.signIn(),await(o.user?.addItem({item:s,folder:r&&r.folder,data:n})),await(0,_.H)(this.resourceReferences,i,null),this.portalItem=s,(0,h.u)(i),i.portalItem=s,s}async _save(e){const t={...N,...e};if(!this.portalItem)throw b.error("_save(): requires the .portalItem property to be set"),new a.Z("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==K)throw b.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+K),new a.Z("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${K}"`);await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&(0,l.mN)(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||S.Z.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},s={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(s,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,O.existingItem),await this.portalItem.update({data:s}),await(0,_.H)(this.resourceReferences,r,null),(0,h.u)(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let s=t.messages?.filter((e=>"error"===e.type)).map((e=>new a.Z(e.name,e.message,e.details)))??[];if(r?.validationOptions?.ignoreUnsupported&&(s=s.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r?.validationOptions,validationOptions?.enabled,s.length>0)throw new a.Z("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:s})}};return(0,s._)([(0,p.Cb)(v.i)],t.prototype,"id",void 0),(0,s._)([(0,p.Cb)({type:f.Z})],t.prototype,"spatialReference",void 0),(0,s._)([(0,u.r)("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readSpatialReference",null),(0,s._)([(0,p.Cb)({type:y.Z})],t.prototype,"fullExtent",void 0),(0,s._)([(0,u.r)("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readFullExtent",null),(0,s._)([(0,p.Cb)({readOnly:!0,type:m.Z})],t.prototype,"heightModelInfo",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],t.prototype,"minScale",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],t.prototype,"maxScale",void 0),(0,s._)([(0,p.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,s._)([(0,u.r)("version",["store.version"])],t.prototype,"readVersion",null),(0,s._)([(0,p.Cb)({type:String,json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,s._)([(0,p.Cb)({type:String,json:{read:!1}})],t.prototype,"sublayerTitleMode",void 0),(0,s._)([(0,p.Cb)({type:String})],t.prototype,"title",void 0),(0,s._)([(0,u.r)("portal-item","title")],t.prototype,"readTitlePortalItem",null),(0,s._)([(0,u.r)("service","title",["name"])],t.prototype,"readTitleService",null),(0,s._)([(0,p.Cb)({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],t.prototype,"layerId",void 0),(0,s._)([(0,p.Cb)(v.u)],t.prototype,"url",null),(0,s._)([(0,d.w)("url")],t.prototype,"writeUrl",null),(0,s._)([(0,p.Cb)()],t.prototype,"parsedUrl",null),(0,s._)([(0,p.Cb)({readOnly:!0})],t.prototype,"store",void 0),(0,s._)([(0,p.Cb)({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],t.prototype,"rootNode",void 0),t=(0,s._)([(0,c.j)(x)],t),t},A=-1e38;var O,C;(C=O||(O={}))[C.existingItem=0]="existingItem",C[C.newItem=1]="newItem";const K="Scene Service",N={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var U;!function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(U||(U={}))}}]);