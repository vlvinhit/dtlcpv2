/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{d as i}from"../../../chunks/maybe.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ensureType.js";import"../../../chunks/typedArrayUtil.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import{d as n}from"../../../chunks/defaultUnit.js";import{A as o}from"../../../chunks/AnalysisView3D.js";import{M as a}from"../../../chunks/interfaces.js";import l from"../../../core/Handles.js";import{L as c}from"../../../chunks/Logger.js";import{b as u,t as h}from"../../../chunks/quantityUtils.js";import{watch as p,syncAndInitial as m}from"../../../core/reactiveUtils.js";import{z as d,s as g,n as _,b as v,f as j,d as y,e as f,a as k}from"../../../chunks/vec3.js";import{c as w}from"../../../chunks/vec3f64.js";import{geodesicLength as b}from"../../../geometry/geometryEngine.js";import P from"../../../geometry/Polyline.js";import{canProjectWithoutEngine as S,projectPointToVector as L,projectPointToWGS84ComparableLonLat as O}from"../../../geometry/projection.js";import{g as A,S as E,W as C}from"../../../chunks/spatialReferenceEllipsoidUtils.js";import{isSupported as V,geodesicLengths as z,InverseGeodeticSolverResult as M,inverseGeodeticSolver as D}from"../../../geometry/support/geodesicUtils.js";import{a as T,l as U,O as x,L as R}from"../../../chunks/LineVisualElement.js";import{U as G,s as I}from"../../../chunks/UnitNormalizer.js";import N from"../../../Color.js";import"../../../intl.js";import{g as B,a as F,b as H,c as q}from"../../../chunks/analysisThemeUtils.js";import{h as W,f as Q,d as X}from"../../../chunks/mathUtils.js";import{f as J,a as $,b as K,c as Y,d as Z}from"../../../chunks/quantityFormatUtils.js";import{b as ee,d as te}from"../../../chunks/screenUtils.js";import{M as ie,z as se}from"../../../chunks/unitUtils.js";import{g as re}from"../../../chunks/vec2.js";import{V as ne,a as oe}from"../../../chunks/interfaces3.js";import{L as ae,G as le,E as ce,m as ue}from"../../../chunks/Segment.js";import{c as he}from"../../../chunks/mat4f64.js";import{f as pe,c as me}from"../../../chunks/vec4f64.js";import{s as de}from"../../../chunks/ray.js";import{c as ge}from"../../../chunks/GeometryUtil.js";import{D as _e,b as ve,M as je,R as ye}from"../../../chunks/Material.js";import{n as fe}from"../../../chunks/InterleavedLayout.js";import{S as ke}from"../../../chunks/ShaderOutput.js";import{G as we}from"../../../chunks/DefaultBufferWriter.js";import{R as be}from"../../../chunks/RenderSlot.js";import{V as Pe}from"../../../chunks/VertexAttribute.js";import{R as Se,S as Le,P as Oe}from"../../../chunks/Program2.js";import{p as Ae}from"../../../chunks/ShaderTechniqueConfiguration.js";import{c as Ee,o as Ce}from"../../../chunks/OrderIndependentTransparency.js";import{T as Ve}from"../../../chunks/TransparencyPassType.js";import{D as ze}from"../../../chunks/DefaultTechniqueConfiguration.js";import{a as Me}from"../../../chunks/View.glsl.js";import{F as De}from"../../../chunks/Float4PassUniform.js";import{F as Te}from"../../../chunks/FloatPassUniform.js";import{g as Ue}from"../../../chunks/interfaces2.js";import{S as xe}from"../../../chunks/ShaderBuilder.js";import{g as Re,e as Ge}from"../../../chunks/enums3.js";import{m as Ie,d as Ne,a as Be}from"../../../chunks/renderState.js";import{R as Fe}from"../../../chunks/RightAngleQuadVisualElement.js";import{c as He}from"../../../chunks/lineStippleUtils.js";import{o as qe}from"../../../chunks/locale.js";import{f as We}from"../../../chunks/messages.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../core/lang.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../chunks/ArrayPool.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/getDefaultUnitForView.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../request.js";import"../../../core/JSONSupport.js";import"../../../core/Loadable.js";import"../../../core/Promise.js";import"../../../chunks/reader.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/jsonMap.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../portal/PortalGroup.js";import"../../../chunks/common.js";import"../../../chunks/geometryEngineBase.js";import"../../../chunks/_commonjsHelpers.js";import"../../../chunks/hydrated.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/vec4.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/mat4.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../geometry.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/ElevationProvider.js";import"../../../chunks/VisualElement.js";import"../../../chunks/TriangleMaterial.js";import"../../../chunks/sphere.js";import"../../../chunks/vector.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/basicInterfaces.js";import"../../../chunks/Util2.js";import"../../../chunks/vec2f64.js";import"../../../core/Evented.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/lineSegment.js";import"../../../chunks/FloatsPassUniform.js";import"../../../chunks/mat3.js";import"../../../chunks/mat3f64.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/MarkerSizing.glsl.js";import"../../../chunks/VisualVariables.glsl.js";import"../../../chunks/Float3PassUniform.js";import"../../../chunks/Matrix3PassUniform.js";import"../../../chunks/sdfPrimitives.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Texture2.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/Texture.js";import"../../../chunks/contextUtils.js";import"../../../chunks/RibbonLine.glsl.js";import"../../../chunks/ForwardLinearDepth.glsl.js";import"../../../chunks/Matrix4PassUniform.js";import"../../../chunks/RgbaFloatEncoding.glsl.js";import"../../../chunks/Slice.glsl.js";import"../../../chunks/ObjectAndLayerIdColor.glsl.js";import"../../../chunks/OutputDepth.glsl.js";import"../../../chunks/LineStipple.glsl.js";import"../../../chunks/Texture2DPassUniform.js";import"../../../chunks/MultipassTerrainTest.glsl.js";import"../../../chunks/ReadLinearDepth.glsl.js";import"../../../chunks/PiUtils.glsl.js";import"../../../chunks/AlphaCutoff.js";import"../../../chunks/ColorConversion.glsl.js";import"../../../chunks/line.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/Indices.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/Attribute.js";import"../../../chunks/colorUtils.js";import"../../../chunks/date.js";import"../../../chunks/datetime.js";import"../../../chunks/number.js";import"../../support/colorUtils.js";import"../../../chunks/colorUtils2.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/ByteSizeUnit.js";import"../../../chunks/Cyclical.js";import"../../../chunks/viewUtils.js";import"../../../chunks/dehydratedFeatures.js";import"../../../chunks/byteSizeEstimations.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/quantizationUtils.js";import"../../../layers/support/Field.js";import"../../../chunks/enumeration.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../chunks/quatf64.js";import"../../../chunks/vec3f32.js";import"../../../chunks/BufferView.js";import"../../../chunks/types.js";import"../../../chunks/triangle.js";import"../../../chunks/doublePrecisionUtils.js";import"../../../chunks/EngineVisualElement.js";import"../../../core/Identifiable.js";import"../../../chunks/RenderGeometry.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/TextureOnly.glsl.js";import"../../../chunks/ScreenSpacePass.glsl.js";import"../../../chunks/NestedMap.js";import"../../../chunks/Camera.js";import"../../../chunks/glUtil3D.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/WaterSurface.glsl.js";import"../../../chunks/Transform.glsl.js";import"../../../chunks/OutputHighlight.glsl.js";import"../../../chunks/PhysicallyBasedRendering.glsl.js";import"../../../chunks/compilerUtils.js";import"../../../chunks/Texture2DDrawUniform.js";import"../../../chunks/NormalUtils.glsl.js";import"../../../chunks/BooleanPassUniform.js";import"../../../chunks/MultipassGeometryTest.glsl.js";import"../../../chunks/SSAOHelper.js";import"../../../chunks/SSAOBlur.glsl.js";import"../../../chunks/SSAO.glsl.js";import"../../../chunks/CameraSpace.glsl.js";import"../../../chunks/Intersector.js";import"../../../chunks/Intersector2.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/quat.js";import"../../../chunks/glUtil.js";import"../../../chunks/VertexNormal.glsl.js";import"../../../chunks/MemCache.js";import"../../../chunks/Scheduler.js";import"../../../core/signal.js";import"../../../chunks/debugFlags.js";import"../../../chunks/VisualElementResources.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/ColorMaterial.glsl.js";import"../../../chunks/VertexColor.glsl.js";const Qe="esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController",Xe=c.getLogger(Qe);let Je=class extends t{constructor(e){super(e),this._unitNormalizer=new G,this._handles=new l,this._tempStartPosition=w(),this._tempEndPosition=w(),this._tempCornerPosition=w()}initialize(){const e=this.view.spatialReference,t=A(e),i=t===E?C:t;this._sphericalPCPF=i;const s=S(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add([p((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)}),m),p((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)}),m),p((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),m)])}destroy(){this._handles=i(this._handles)}_applyProjectionAndElevationAlignment(e){if(null==e)return e;const{spatialReference:t,elevationProvider:i}=this.view;return T(e,t,i)??(U(this.analysis,e.spatialReference,Xe),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i}=this.viewData;if(null==e||null==t)return null;const s=this._euclideanDistances(e,t),r=this._geodesicDistance(e,t,s.horizontal.value),n=i===a.Geodesic||i===a.Auto&&s.horizontal.value>1e5?"geodesic":"euclidean";return{mode:n,distance:"euclidean"===n?s.direct:r,directDistance:s.direct,horizontalDistance:s.horizontal,verticalDistance:s.vertical,geodesicDistance:r}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,r=this._tempEndPosition,n=this._tempCornerPosition,o=this.view.spatialReference,a=this._sphericalPCPF,l=S(o,a)?a:o;L(e,s,l),L(t,r,l),L(i,n,l);const c=d(s,r),h=d(n,r),p=Math.abs(t.z-e.z),m=e=>this._unitNormalizer.normalizeDistance(e),g=m(c),_=m(h),v=m(p);return{direct:u(g,"meters"),horizontal:u(_,"meters"),vertical:u(v,"meters")}}_geodesicDistance(e,t,i){const s=e.spatialReference,r=new P({spatialReference:s});r.addPath([e,t]);const n=s.isGeographic&&V(s)?z([r],"meters")[0]:s.isWebMercator?b(r,"meters"):null,o=null!=n?n:this._fallbackGeodesicDistance(e,t,i);return u(o,"meters")}_fallbackGeodesicDistance(e,t,i){if(O(e,$e)&&O(t,Ke)){const e=new M;return D(e,$e,Ke),e.distance}return i}};e([s()],Je.prototype,"view",void 0),e([s()],Je.prototype,"analysis",void 0),e([s()],Je.prototype,"viewData",void 0),e([s()],Je.prototype,"_computedResult",null),Je=e([r(Qe)],Je);const $e=w(),Ke=w(),Ye=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new xe,{vertex:i,fragment:s}=t;Me(i,e),i.uniforms.add(new Te("width",(e=>e.width))),t.attributes.add(Pe.POSITION,"vec3"),t.attributes.add(Pe.NORMAL,"vec3"),t.attributes.add(Pe.UV0,"vec2"),t.attributes.add(Pe.AUXPOS1,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),i.code.add(Ue`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),s.uniforms.add(new Te("outlineSize",(e=>e.outlineSize)),new De("outlineColor",(e=>e.outlineColor)),new Te("stripeLength",(e=>e.stripeLength)),new De("stripeEvenColor",(e=>e.stripeEvenColor)),new De("stripeOddColor",(e=>e.stripeOddColor)));const r=1/Math.sqrt(2);return s.code.add(Ue`
    const float INV_SQRT2 = ${Ue.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      fragColor = color;
    }
  `),t}},Symbol.toStringTag,{value:"Module"}));class Ze extends Le{constructor(e,t,i){super(e,t,i)}initializeProgram(e){return new Oe(e.rctx,Ze.shader.get().build(this.configuration),_e)}_setPipelineState(e){const t=e===Ve.NONE,i=this.configuration;return Ie({blending:i.transparent?t?Ee:Ce(e):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:Re.LESS},depthWrite:Ne,colorWrite:Be})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return Ge.TRIANGLE_STRIP}}Ze.shader=new Se(Ye,(()=>Promise.resolve().then((()=>Ye))));class et extends ze{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=Ve.NONE}}e([Ae()],et.prototype,"polygonOffsetEnabled",void 0),e([Ae()],et.prototype,"transparent",void 0),e([Ae({count:Ve.COUNT})],et.prototype,"transparencyPassType",void 0);class tt extends ve{constructor(e){super(e,new st),this._configuration=new et}getConfiguration(e,t){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration}dispose(){}intersect(){}requiresSlot(e,t){return(t===ke.Color||t===ke.Alpha)&&e===(this._transparent?be.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:be.OPAQUE_MATERIAL)}createGLMaterial(e){return new it(e)}createBufferWriter(){return new ut}get _transparent(){const{parameters:e}=this;return e.outlineColor[3]<1||e.stripeEvenColor[3]<1||e.stripeOddColor[3]<1}}class it extends we{beginSlot(e){return this.ensureTechnique(Ze,e)}}class st extends je{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=pe(1,.5,0,1),this.stripeEvenColor=pe(1,1,1,1),this.stripeOddColor=pe(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const rt=fe().vec3f(Pe.POSITION).vec3f(Pe.NORMAL).vec2f(Pe.UV0).f32(Pe.AUXPOS1),nt=w(),ot=w(),at=w(),lt=w(),ct=w();class ut{constructor(){this.vertexBufferLayout=rt}elementCount(e){return 2*(e.indices.get(Pe.POSITION).length/2+1)}write(e,t,i,s,r){const n=i.vertexAttributes.get(Pe.POSITION).data,o=i.vertexAttributes.get(Pe.NORMAL).data,a=n.length/3,l=i&&i.indices&&i.indices.get(Pe.POSITION);l&&l.length!==2*(a-1)&&console.warn("MeasurementArrowMaterial does not support indices");const c=nt,u=ot,h=at,p=lt,m=ct,f=s.position,k=s.normal,w=s.uv0;let b=0;for(let i=0;i<a;++i){const s=3*i;if(g(c,n[s],n[s+1],n[s+2]),i<a-1){const e=3*(i+1);g(u,n[e],n[e+1],n[e+2]),g(m,o[e],o[e+1],o[e+2]),_(m,m),v(h,u,c),_(h,h),j(p,m,h),_(p,p)}const l=d(c,u);e&&t&&(y(c,c,e),y(u,u,e),y(p,p,t));const P=r+2*i,S=P+1;f.setVec(P,c),f.setVec(S,c),k.setVec(P,p),k.setVec(S,p),w.set(P,0,b),w.set(P,1,-1),w.set(S,0,b),w.set(S,1,1),i<a-1&&(b+=l)}const P=s.auxpos1;for(let e=0;e<2*a;++e)P.set(r+e,b)}}class ht extends x{constructor(e){super(e),this._parameters={arrowWidth:16,arrowOutlineColor:N.toUnitRGBA(B()),arrowStripeEvenColor:N.toUnitRGBA(F()),arrowStripeOddColor:N.toUnitRGBA(B()),arrowSubdivisions:128},this._origin=w(),this._originTransform=he(),this._arrowCenter=w(),this._renderOccluded=ye.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i}=this._parameters,s=W(pt,this._stripesEnabled?t:i,e);this._arrowMaterial.setParameters({stripeEvenColor:s})}}get opacity(){return this._opacity}set opacity(e){e!==this._opacity&&(this._opacity=e,this._updateArrowOpacity())}createExternalResources(){const{arrowStripeEvenColor:e,arrowStripeOddColor:t,arrowOutlineColor:i}=this._parameters,s=this._stripesEnabled?e:t;this._arrowMaterial=new tt({outlineColor:i,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new l,this._handles.add(p((()=>this.view.state.camera),(()=>{this._viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles=i(this._handles)}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(null==this._geometry||null==this._geometry.startRenderSpace||null==this._geometry.endRenderSpace)return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.transformation=this._originTransform,e.addGeometry(t),this._viewChanged()}_createArrowGeometry(e,t,i,s){const r=this.view.renderCoordsHelper,n=[],o=[],a=(e,t)=>{const s=de.get();v(s,e,i),n.push(s),o.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=de.get();r.worldUpAtPosition(this._arrowCenter,i),a(e,i),a(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),n=de.get(),o=de.get();s.eval(i,n),r.worldUpAtPosition(n,o),a(n,o)}}return ge(this._arrowMaterial,n,o)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&null!=this._geometry){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*e})}}_updateArrowOpacity(){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters,r=W(pt,this._stripesEnabled?t:i,e),n=W(mt,s,e),o=W(dt,i,e);this._arrowMaterial.setParameters({stripeEvenColor:r,outlineColor:n,stripeOddColor:o})}}const pt=me(),mt=me(),dt=me();let gt=class extends t{get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(null==e||null==t||e.equals(t))return ne.None;const i=this.analysisView.result;if(null==i)return ne.Direct;if("geodesic"===i.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?ne.ProjectedGeodesic:ne.Direct;const{verticalDistance:s,horizontalDistance:r}=i,n=s.value,o=r.value;return Math.min(n/o,o/n)<this.triangleCollapseRatioThreshold?ne.Direct:ne.Triangle}get actualVisualizedMeasurement(){if(null==this.analysisView.result)switch(this.analysisView.measurementMode){case a.Auto:case a.Euclidean:default:return"euclidean";case a.Geodesic:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return null==this._triangleOrientationOverride}set allowVisualElementsOrientationChange(e){null==this._triangleOrientationOverride!==e&&(null==this._triangleOrientationOverride?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){const e="geodesic"===this.actualVisualizedMeasurement;return{direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._params={triangleColor:N.toUnitRGBA(B(.75)),triangleLineWidth:3,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:N.toUnitRGBA(B(.75)),guideLineWidth:2,guideStippleLengthPixels:6,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},this._handles=new l,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=w(),this._endPosition=w(),this._cornerPosition=w(),this._startPositionAtSeaLevel=w(),this._endPositionAtSeaLevel=w(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=oe.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new ht({...t,geometry:null,renderOccluded:ye.OccludeAndTransparent}),this._triangleVisualElement=new R({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:ye.OccludeAndTransparent}),this._rightAngleQuad=new Fe({...t,color:N.toUnitRGBA(B(.75)),renderOccluded:ye.OccludeAndTransparent});const i={...t,polygonOffset:!0,renderOccluded:ye.OccludeAndTransparent};this._projectedGeodesicLine=new R({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:He(e.guideStippleLengthPixels)}),this._geodesicStartHint=new R({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:He(e.guideStippleLengthPixels)}),this._geodesicEndHint=new R({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:He(e.guideStippleLengthPixels)});const s={...t,backgroundColor:H(.6),calloutColor:H(.5),textColor:q()};this._segmentLabel=new ae({...s,fontSize:e.directLabelFontSize}),this._verticalLabel=new ae({...s,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new ae({...s,fontSize:e.horizontalLabelFontSize}),this._handles.add([p((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),m),p((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),m),p((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),m),p((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateLabelVisibility(e)),m),p((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),m),qe((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._handles=i(this._handles),this._segmentVisualElement=i(this._segmentVisualElement),this._triangleVisualElement=i(this._triangleVisualElement),this._rightAngleQuad=i(this._rightAngleQuad),this._projectedGeodesicLine=i(this._projectedGeodesicLine),this._geodesicStartHint=i(this._geodesicStartHint),this._geodesicEndHint=i(this._geodesicEndHint),this._segmentLabel=i(this._segmentLabel),this._verticalLabel=i(this._verticalLabel),this._horizontalLabel=i(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case ne.None:break;case ne.Direct:this._segmentVisualElement.visible=!0;break;case ne.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case ne.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:n,visualizedMeasurement:o,stripeLength:a}){const l=e.renderCoordsHelper;if(null==l||null==s||null==r||s.equals(r))return;let c=this._startPosition,u=this._endPosition;l.toRenderCoords(s,c),l.toRenderCoords(r,u);const h=n===oe.AboveSegment?1:-1,p=h*(l.getAltitude(u)-l.getAltitude(c));p<0&&(c=this._endPosition,u=this._startPosition);const m="geodesic"===o?new le(this._startPosition,this._endPosition,l.spatialReference):new ce(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(a),i){case ne.Direct:this._updateSegment(m,n);break;case ne.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:m,orientation:n,startPosition:c,endPosition:u,deltaSign:h,altitudeDelta:p});break;case ne.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:n,startPosition:c,endPosition:u})}}_updateSegment(e,t){this._segmentLabel.anchor=t===oe.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:n,deltaSign:o,altitudeDelta:a}){const l=this._cornerPosition;e.worldUpAtPosition(r,l),f(l,l,o*Math.abs(a)),k(l,l,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[l[0],l[1],l[2]],[n[0],n[1],n[2]]]],this._rightAngleQuad.geometry={previous:r,center:l,next:n};const c=new ce(r,l),u=new ce(l,n),h=function(e,t,i,s,r){const n=vt,o=jt;r.projectToRenderScreen(i,n),r.projectToRenderScreen(t,o);const a={segment:"bottom",horizontal:"top",vertical:n[0]<o[0]?"left":"right"};{const s=yt,n=ft;if(I(e,i,s,r),I(e,t,n,r),re(s,n)>=_t){const e=Math.sign(s[1])===Math.sign(n[1]);a.segment=e?ue(a.vertical):a.vertical}else{const e=kt;I(i,t,e,r),re(e,n)>=_t&&(a.segment=Math.sign(e[0])===Math.sign(n[0])?ue(a.horizontal):a.horizontal)}}if(s===oe.BelowSegment){const e=e=>"top"===e?"bottom":"top";a.segment=e(a.segment),a.horizontal=e(a.horizontal),a.vertical=e(a.vertical)}return a}(r,n,l,s,t);this._segmentLabel.anchor=h.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=h.vertical,this._horizontalLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._horizontalLabel.anchor=h.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new le(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new ce(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new ce(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=t===oe.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){null!=e?(this._segmentLabel.text="euclidean"===t?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,e)switch(t){case ne.Direct:i.visible=!0;break;case ne.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case ne.ProjectedGeodesic:i.visible=!0;case ne.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(null==t||null==e)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r,geodesicDistance:n}=t,o=this.analysisView.unit,a=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(o){case"metric":return a({euclideanDistance:i&&Y(e,i),geodesicDistance:n&&Y(e,n),horizontalDistance:s&&Y(e,s),verticalDistance:r&&Z(e,r)});case"imperial":return a({euclideanDistance:i&&$(e,i),geodesicDistance:n&&$(e,n),horizontalDistance:s&&$(e,s),verticalDistance:r&&K(e,r)});default:return a({euclideanDistance:i&&J(e,i,o),geodesicDistance:n&&J(e,n,o),horizontalDistance:s&&J(e,s,o),verticalDistance:r&&J(e,r,o)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;null!=e?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===oe.Auto?this.view.state.camera.aboveGround?oe.AboveSegment:oe.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!t?.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(null==e)return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&h(s,"meters");break;case"imperial":i=s&&h(s,ie(s.value,s.unit));break;default:i=s&&h(s,t)}return null==i?null:Q(i.value/30)*se(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,We("esri/core/t9n/Units").then((e=>{this.messages=e})).finally((()=>{this.loadingMessages=!1}))}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement?.stripeLength}}};e([s()],gt.prototype,"_triangleOrientationOverride",void 0),e([s()],gt.prototype,"messages",void 0),e([s()],gt.prototype,"view",void 0),e([s()],gt.prototype,"analysis",void 0),e([s()],gt.prototype,"analysisView",void 0),e([s()],gt.prototype,"loadingMessages",void 0),e([s()],gt.prototype,"visible",null),e([s()],gt.prototype,"viewMode",null),e([s()],gt.prototype,"actualVisualizedMeasurement",null),e([s()],gt.prototype,"visualElementOrientation",void 0),e([s()],gt.prototype,"triangleCollapseRatioThreshold",void 0),e([s()],gt.prototype,"allowVisualElementsOrientationChange",null),e([s()],gt.prototype,"labels",null),e([s()],gt.prototype,"_labelsText",null),e([s()],gt.prototype,"_actualVisualElementsOrientation",null),e([s()],gt.prototype,"_measurementArrowStripeLength",null),gt=e([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],gt);const _t=Math.cos(X(12)),vt=ee(),jt=ee(),yt=te(),ft=te(),kt=te();let wt=class extends(o(t)){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=a.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new gt({view:e,analysis:t,analysisView:this}),this._analysisController=new Je({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=i(this._analysisController),this._analysisVisualization=i(this._analysisVisualization)}get updating(){return!!this._analysisVisualization?.loadingMessages}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisVisualization.labels.direct?.text??""}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal?.text??""}get verticalLabelText(){return this._analysisVisualization.labels.vertical?.text??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...this._analysisVisualization?.testData,visualization:this._analysisVisualization,controller:this._analysisController}}};e([s()],wt.prototype,"updating",null),e([s({readOnly:!0})],wt.prototype,"type",void 0),e([s({constructOnly:!0,nonNullable:!0})],wt.prototype,"analysis",void 0),e([s()],wt.prototype,"result",void 0),e([s()],wt.prototype,"measurementMode",void 0),e([s()],wt.prototype,"elevationAlignedStartPoint",void 0),e([s()],wt.prototype,"elevationAlignedEndPoint",void 0),e([s({readOnly:!0})],wt.prototype,"viewMode",null),e([s({readOnly:!0})],wt.prototype,"actualVisualizedMeasurement",null),e([s()],wt.prototype,"visualElementOrientation",null),e([s()],wt.prototype,"allowVisualElementsOrientationChange",null),e([s()],wt.prototype,"triangleCollapseRatioThreshold",null),e([s({readOnly:!0})],wt.prototype,"directLabelText",null),e([s({readOnly:!0})],wt.prototype,"horizontalLabelText",null),e([s({readOnly:!0})],wt.prototype,"verticalLabelText",null),e([s()],wt.prototype,"_analysisVisualization",void 0),e([s()],wt.prototype,"_analysisController",void 0),e([s()],wt.prototype,"unit",null),e([s(n)],wt.prototype,"_defaultUnit",void 0),wt=e([r("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],wt);const bt=wt;export{bt as default};
