/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Graphic.js";import i from"../Viewpoint.js";import{h as s,i as o}from"../chunks/typedArrayUtil.js";import n from"../core/Collection.js";import{C as a}from"../chunks/CollectionFlattener.js";import r from"../core/Error.js";import p,{i as h}from"../core/Handles.js";import{L as l}from"../chunks/Logger.js";import{r as c,d as m}from"../chunks/maybe.js";import{c as u,throwIfAborted as d}from"../core/promiseUtils.js";import{watch as g,sync as y,initial as w,when as f,whenOnce as v,syncAndInitial as _}from"../core/reactiveUtils.js";import{initialize as j}from"../core/workers/workers.js";import{property as k}from"../core/accessorSupport/decorators/property.js";import{cast as b}from"../core/accessorSupport/decorators/cast.js";import{subclass as S,W as M}from"../core/accessorSupport/decorators/subclass.js";import{s as T,m as x}from"../chunks/ensureType.js";import{project as V,load as D,canProjectWithoutEngine as P,isLoaded as R}from"../geometry/projection.js";import L from"../layers/support/TileInfo.js";import{BreakpointsOwner as C}from"./BreakpointsOwner.js";import{DOMContainer as O}from"./DOMContainer.js";import{PopupView as z}from"./PopupView.js";import I from"./View.js";import E from"./ViewAnimation.js";import"../geometry.js";import N from"../core/Accessor.js";import{addFrameTask as U}from"../core/scheduling.js";import{e as Z,p as G}from"../chunks/unitBezier.js";import A,{c as F,a as q,b as H,s as B,r as K,d as W,e as $,f as Y,g as X,t as Q,h as J,i as tt}from"./2d/ViewState.js";import et from"../geometry/Point.js";import it from"../layers/support/LOD.js";import{NumericIdentifiableMixin as st}from"../core/Identifiable.js";import ot,{a as nt,p as at}from"../geometry/Extent.js";import{d as rt,s as pt,c as ht,k as lt}from"../chunks/vec2.js";import ct,{f as mt}from"../geometry/Polygon.js";import"../chunks/TileStrategy.js";import{T as ut}from"../chunks/TileInfoView.js";import"../chunks/TileKey2.js";import{c as dt}from"../chunks/screenUtils.js";import{i as gt}from"../chunks/pe.js";import{f as yt}from"../chunks/unitUtils.js";import{a as wt}from"../chunks/vec2f64.js";import{I as ft,a as vt,V as _t}from"../chunks/InputManager.js";import{e as jt,D as kt,r as bt,a as St,i as Mt,b as Tt,g as xt,m as Vt,B as Dt,I as Pt,P as Rt,S as Lt,c as Ct,d as Ot,f as zt,h as It,j as Et,k as Nt,l as Ut}from"../chunks/WebGLRequirements.js";import{T as Zt}from"../chunks/TileStore.js";import{H as Gt}from"../chunks/HighlightOptions.js";import{i as At,a as Ft}from"../chunks/screenUtils2.js";import qt from"./ui/DefaultUI.js";import Ht from"../webmap/background/ColorBackground.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/lang.js";import"../chunks/utils.js";import"../chunks/get.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/JSONSupport.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../layers/support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../geometry/SpatialReference.js";import"../chunks/jsonMap.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/datetime.js";import"../chunks/number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils2.js";import"../symbols/edges/Edges3D.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils3.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../Camera.js";import"../chunks/Cyclical.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../chunks/assets.js";import"../intl.js";import"../chunks/messages.js";import"../chunks/mat4.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/TileKey.js";import"../chunks/domUtils.js";import"../chunks/WatchUpdatingTracking.js";import"../chunks/projector.js";import"../chunks/widgetUtils.js";import"../chunks/asyncUtils.js";import"../chunks/deprecate.js";import"../chunks/PropertiesPool.js";import"../core/signal.js";import"../Map.js";import"../Basemap.js";import"../chunks/loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/writeUtils.js";import"../chunks/layerUtils.js";import"../Ground.js";import"../chunks/compilerUtils.js";import"../chunks/editableLayers.js";import"../chunks/infoFor3D.js";import"../chunks/basemapUtils.js";import"../chunks/collectionUtils2.js";import"../support/LayersMixin.js";import"../layers/Layer.js";import"../support/TablesMixin.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../core/HandleOwner.js";import"../chunks/GraphicsCollection.js";import"../geometry/HeightModelInfo.js";import"../chunks/TimeReference.js";import"./BasemapView.js";import"./Magnifier.js";import"../chunks/Scheduler.js";import"../chunks/debugFlags.js";import"../chunks/ViewEvents.js";import"../chunks/IViewEvents.js";import"../chunks/interfaces4.js";import"./input/Input.js";import"./input/gamepad/GamepadSettings.js";import"./input/gamepad/GamepadInputDevice.js";import"./navigation/Navigation.js";import"./navigation/gamepad/GamepadSettings.js";import"../chunks/heightModelInfoUtils.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/ViewingMode.js";import"../chunks/projectionUtils.js";import"../chunks/mat2d.js";import"../chunks/mat2df32.js";import"../chunks/mat2df64.js";import"../chunks/mat3.js";import"../chunks/mat3f32.js";import"../chunks/vec2f32.js";import"../chunks/QueueProcessor.js";import"../chunks/capabilities2.js";import"../chunks/contextUtils.js";import"../chunks/rbush.js";import"../chunks/quickselect.js";import"../chunks/_commonjsHelpers.js";import"../chunks/QuantizationParameters.js";import"./ui/UI.js";import"../chunks/themeUtils.js";import"../widgets/Attribution.js";import"../widgets/Widget.js";import"../chunks/uuid.js";import"../chunks/dom.js";import"../chunks/guid.js";import"../chunks/index.js";import"../chunks/jsxWidgetSupport.js";import"../widgets/Attribution/AttributionViewModel.js";import"../chunks/accessibleHandler.js";import"../chunks/messageBundle.js";import"../chunks/jsxFactory.js";import"../widgets/Compass.js";import"../widgets/Compass/CompassViewModel.js";import"../widgets/support/GoTo.js";import"../widgets/NavigationToggle.js";import"../widgets/NavigationToggle/NavigationToggleViewModel.js";import"../widgets/Zoom.js";import"../widgets/Zoom/ZoomViewModel.js";class Bt{constructor(t,e,i,s){const o=t.targetGeometry,n=e.targetGeometry;s?"string"==typeof s&&(s=G(s)||Z.ease):s=Z.ease,this.easing=s,this.duration=i,this.sCenterX=o.x,this.sCenterY=o.y,this.sScale=t.scale,this.sRotation=t.rotation,this.tCenterX=n.x,this.tCenterY=n.y,this.tScale=e.scale,this.tRotation=e.rotation,this.dCenterX=this.tCenterX-this.sCenterX,this.dCenterY=this.tCenterY-this.sCenterY,this.dScale=this.tScale-this.sScale,this.dRotation=this.tRotation-this.sRotation,this.dRotation>180?this.dRotation-=360:this.dRotation<-180&&(this.dRotation+=360)}applyRatio(t,e){const i=this.easing(e);let s,o,n,a;e>=1?(s=this.tCenterX,o=this.tCenterY,n=this.tRotation,a=this.tScale):(s=this.sCenterX+i*this.dCenterX,o=this.sCenterY+i*this.dCenterY,n=this.sRotation+i*this.dRotation,a=this.sScale+i*this.dScale),t.targetGeometry.x=s,t.targetGeometry.y=o,t.scale=a,t.rotation=n}}let Kt=class extends N{constructor(t){super(t),this.updateFunction=null,this.animation=null,this.duration=200,this.transition=null,this.easing=Z.ease,this.view=null,this.viewpoint=new i({targetGeometry:new et,scale:0,rotation:0}),this._updateTask=U({postRender:this._postRender.bind(this)}),this._updateTask.pause()}destroy(){this._updateTask=c(this._updateTask)}animate(t,e,i){this.stop();const s=this.viewpoint;F(s,e),this.transition=new Bt(this.viewpoint,t.target,i&&i.duration||this.duration,i&&i.easing||this.easing);const o=()=>{this.animation===t&&this._updateTask&&("finished"===t.state&&(this.transition?.applyRatio(this.viewpoint,1),this.view?.state&&(this.view.state.viewpoint=this.viewpoint.clone())),this.animation=null,this.updateFunction=null)};return t.when(o,o),this._startTime=performance.now(),this._updateTask.resume(),this.animation=t,t}animateContinous(t,e){this.stop(),this.updateFunction=e,this.viewpoint=t;const i=new E({target:t.clone()}),s=()=>{this.animation===i&&this._updateTask&&(this.animation=null,this.updateFunction=null)};return i.when(s,s),this._startTime=performance.now(),this._updateTask.resume(),this.animation=i,i}stop(){this.animation&&(this.animation.stop(),this.animation=null,this.updateFunction=null)}_postRender(t){const e=this.animation;if(e&&e.state!==E.State.STOPPED){if(this.updateFunction)this.updateFunction(this.viewpoint,t.deltaTime);else{const t=this.transition,e=(performance.now()-this._startTime)/t.duration,i=e>=1;t.applyRatio(this.viewpoint,e),i&&this.animation?.finish()}this.view?.state&&(this.view.state.viewpoint=this.viewpoint.clone())}else this._updateTask.pause()}};t([k()],Kt.prototype,"animation",void 0),t([k()],Kt.prototype,"duration",void 0),t([k()],Kt.prototype,"transition",void 0),t([k()],Kt.prototype,"easing",void 0),t([k()],Kt.prototype,"view",void 0),t([k()],Kt.prototype,"viewpoint",void 0),Kt=t([S("esri.views.2d.AnimationManager")],Kt);const Wt=Kt;class $t{constructor(t){this.view=t,this._stationaryHandle=null,this._frameTaskHandle=null,this._updateParameters=null,this._updateRequested=!1,this.stationary=!0,this.animationInProgress=!1,this.prepare=()=>{this._updateParameters&&(this._updateParameters.state=this.view.state,this._updateParameters.stationary=this.view.stationary,this._updateParameters.pixelRatio=window.devicePixelRatio,this._updateParameters.renderingOptions=this.view.renderingOptions)},this.update=()=>{if(this._updateRequested=!1,this.view?.destroyed)return;const{allLayerViews:t,graphicsView:e,labelManager:i,state:{id:s}}=this.view;t.forEach(this._updateLayerView,this),null!=i&&(i.lastUpdateId!==s&&(i.viewChange(),i.lastUpdateId=s),i.updateRequested&&i.processUpdate(this._updateParameters)),null!=e&&(e.lastUpdateId!==s&&(e.viewChange(),e.lastUpdateId=s),e.updateRequested&&e.processUpdate(this._updateParameters)),this.view.graphicsTileStore.setViewState(this._updateParameters.state),this.animationInProgress||this._updateRequested||this._frameTaskHandle?.pause()}}destroy(){this.stop()}start(){if(this._frameTaskHandle)return;const t=this.view;this.stationary=t.stationary,this._updateParameters={state:t.state,pixelRatio:window.devicePixelRatio,stationary:this.stationary,renderingOptions:t.renderingOptions},this._stationaryHandle=g((()=>t.stationary),(t=>{this.stationary=t,this.requestFrame()})),this._frameTaskHandle=U(this),this.requestUpdate()}stop(){this._frameTaskHandle&&(this._updateRequested=!1,this._stationaryHandle?.remove(),this._frameTaskHandle.remove(),this._updateParameters=this._stationaryHandle=this._frameTaskHandle=null,this.stationary=!0,this.animationInProgress=!1)}requestUpdate(){this._updateRequested||(this._updateRequested=!0,this.requestFrame())}requestFrame(){this._frameTaskHandle&&this._frameTaskHandle.resume()}_updateLayerView(t){if(!t.attached)return void this.requestUpdate();const e=this.view.state,i=t.lastUpdateId;null!=i&&(this.stationary||t.moving)||(t.moving=!0,t.moveStart()),i!==e.id&&t.viewChange(),this.stationary&&t.moving&&(t.moving=!1,t.moveEnd()),t.lastUpdateId=e.id,t.updateRequested&&t.processUpdate(this._updateParameters),"layerViews"in t&&t.layerViews?.forEach(this._updateLayerView,this)}}function Yt(){return Promise.all([import("../chunks/webglDeps.js"),import("../chunks/mapViewDeps.js")])}const Xt=()=>Yt().then((()=>import("../chunks/TileLayerView2D.js"))),Qt=()=>Yt().then((()=>import("../chunks/FeatureLayerView2D.js"))),Jt={"base-dynamic":()=>Yt().then((()=>import("../chunks/BaseDynamicLayerView2D.js"))),"base-tile":Xt,"bing-maps":Xt,csv:Qt,"geo-rss":()=>Yt().then((()=>import("../chunks/GeoRSSLayerView2D.js"))),feature:Qt,geojson:Qt,graphics:()=>Yt().then((()=>import("../chunks/GraphicsLayerView2D.js"))),group:()=>Yt().then((()=>import("../chunks/GroupLayerView2D.js"))),imagery:()=>Yt().then((()=>import("../chunks/ImageryLayerView2D.js"))),"imagery-tile":()=>Yt().then((()=>import("../chunks/ImageryTileLayerView2D.js"))),kml:()=>Yt().then((()=>import("../chunks/KMLLayerView2D.js"))),"knowledge-graph":()=>Yt().then((()=>import("../chunks/KnowledgeGraphLayerView2D.js"))),"link-chart":()=>Yt().then((()=>import("../chunks/KnowledgeGraphLayerView2D.js"))),"knowledge-graph-sublayer":Qt,"map-image":()=>Yt().then((()=>import("../chunks/MapImageLayerView2D.js"))),"map-notes":()=>Yt().then((()=>import("../chunks/MapNotesLayerView2D.js"))),media:()=>Yt().then((()=>import("../chunks/MediaLayerView2D.js"))),"ogc-feature":()=>Yt().then((()=>import("../chunks/OGCFeatureLayerView2D.js"))),"open-street-map":Xt,"oriented-imagery":Qt,route:()=>Yt().then((()=>import("../chunks/RouteLayerView2D.js"))),stream:()=>Yt().then((()=>import("../chunks/StreamLayerView2D.js"))),"subtype-group":()=>Yt().then((()=>import("../chunks/SubtypeGroupLayerView2D.js"))),tile:Xt,"vector-tile":()=>Yt().then((()=>import("../chunks/VectorTileLayerView2D.js"))),video:()=>Yt().then((()=>import("../chunks/VideoLayerView2D.js"))),wcs:()=>Yt().then((()=>import("../chunks/ImageryTileLayerView2D.js"))),"web-tile":Xt,wfs:Qt,wms:()=>Yt().then((()=>import("../chunks/WMSLayerView2D.js"))),wmts:()=>Yt().then((()=>import("../chunks/WMTSLayerView2D.js"))),"line-of-sight":null,"base-elevation":null,"building-scene":null,dimension:null,elevation:null,"integrated-mesh":null,"point-cloud":null,voxel:null,scene:null,unknown:null,unsupported:null};var te;let ee=te=class extends(st(N)){constructor(t){super(t),this.geometry=null,this.spatialReference=null}get normalizedGeometry(){if(null==this.geometry||!this.spatialReference)return null;if(!this.spatialReference.equals(this.geometry.spatialReference))try{return V(this.geometry,this.spatialReference)}catch(t){return l.getLogger(this).error("#constraints.geometry","could not project the geometry to the view's spatial reference",{geometry:this.geometry,spatialReference:this.spatialReference,error:t}),null}return this.geometry}constrain(t,e){if(null==this.normalizedGeometry)return t;const i=t.targetGeometry;if("extent"===this.normalizedGeometry.type?nt(this.normalizedGeometry,i):at(this.normalizedGeometry,i))return t;const{coordinate:s}=function(t,e){const{spatialReference:i}=e,s=[e.x,e.y];let o=Number.POSITIVE_INFINITY,n=0,a=0;const r=[0,0],p="extent"===t.type?[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]:t.rings;for(const t of p)for(let e=0;e<t.length-1;e++){mt(r,s,t,e);const i=rt(s,r);i<o&&(o=i,n=r[0],a=r[1])}return{coordinate:new et({x:n,y:a,spatialReference:i}),distance:o}}(this.normalizedGeometry,i);return s?(t.targetGeometry=s,t):t}clone(){return new te({geometry:this.geometry?.clone(),spatialReference:this.spatialReference?.clone()})}};var ie;t([k({constructOnly:!0})],ee.prototype,"geometry",void 0),t([k({readOnly:!0})],ee.prototype,"normalizedGeometry",null),t([k({constructOnly:!0})],ee.prototype,"spatialReference",void 0),ee=te=t([S("esri.views.2d.constraints.GeometryConstraint")],ee);let se=ie=class extends(st(N)){constructor(){super(...arguments),this.enabled=!0,this.rotationEnabled=!0}constrain(t,e){return this.enabled&&e?(this.rotationEnabled||(t.rotation=e.rotation),t):t}clone(){return new ie({enabled:this.enabled,rotationEnabled:this.rotationEnabled})}};t([k()],se.prototype,"enabled",void 0),t([k()],se.prototype,"rotationEnabled",void 0),se=ie=t([S("esri.views.2d.constraints.RotationConstraint")],se);const oe=se;var ne;let ae=ne=class extends(st(N)){constructor(t){super(t),this._lodByScale={},this._scales=[],this.effectiveLODs=null,this.effectiveMinZoom=-1,this.effectiveMaxZoom=-1,this.effectiveMinScale=0,this.effectiveMaxScale=0,this.lods=null,this.minZoom=-1,this.maxZoom=-1,this.minScale=0,this.maxScale=0,this.snapToZoom=!0}initialize(){let t,{lods:e,minScale:i,maxScale:s,minZoom:o,maxZoom:n}=this,a=-1,r=-1,p=!1,h=!1;if(0!==i&&0!==s&&i<s&&([i,s]=[s,i]),!e||!e.length)return this._set("effectiveMinScale",i),void this._set("effectiveMaxScale",s);e=e.map((t=>t.clone())),e.sort(((t,e)=>e.scale-t.scale)),e.forEach(((t,e)=>t.level=e));for(const o of e)!p&&i>0&&i>=o.scale&&(a=o.level,p=!0),!h&&s>0&&s>=o.scale&&(r=t?t.level:-1,h=!0),t=o;-1===o&&(o=0===i?0:a),-1===n&&(n=0===s?e.length-1:r),o=Math.max(o,0),o=Math.min(o,e.length-1),n=Math.max(n,0),n=Math.min(n,e.length-1),o>n&&([o,n]=[n,o]),i=e[o].scale,s=e[n].scale,e.splice(0,o),e.splice(n-o+1,e.length),e.forEach(((t,e)=>{this._lodByScale[t.scale]=t,this._scales[e]=t.scale})),this._set("effectiveLODs",e),this._set("effectiveMinZoom",o),this._set("effectiveMaxZoom",n),this._set("effectiveMinScale",i),this._set("effectiveMaxScale",s)}constrain(t,e){if(e&&t.scale===e.scale)return t;const i=this.effectiveMinScale,s=this.effectiveMaxScale,o=t.targetGeometry,n=e&&e.targetGeometry,a=0!==s&&t.scale<s,r=0!==i&&t.scale>i;if(a||r){const a=r?i:s;if(e&&n){const i=(a-e.scale)/(t.scale-e.scale);o.x=n.x+(o.x-n.x)*i,o.y=n.y+(o.y-n.y)*i}t.scale=a}return this.snapToZoom&&this.effectiveLODs&&(t.scale=this._getClosestScale(t.scale)),t}fit(t){if(!this.effectiveLODs||!this.snapToZoom)return this.constrain(t,null);const e=this.scaleToZoom(t.scale),i=Math.abs(e-Math.floor(e));return t.scale=this.zoomToScale(i>.99?Math.round(e):Math.floor(e)),t}zoomToScale(t){if(!this.effectiveLODs)return 0;t-=this.effectiveMinZoom,t=Math.max(0,t);const e=this._scales;if(t<=0)return e[0];if(t>=e.length)return e[e.length-1];const i=Math.round(t-.5),s=Math.round(t);return e[s]+(s-t)*(e[i]-e[s])}scaleToZoom(t){if(!this.effectiveLODs)return-1;const e=this._scales;let i,s;if(t>=e[0])return this.effectiveMinZoom;if(t<=e[e.length-1])return this.effectiveMaxZoom;for(let o=0;o<e.length-1;o++){if(i=e[o],s=e[o+1],s===t)return o+this.effectiveMinZoom+1;if(i>t&&s<t)return o+this.effectiveMinZoom+1-(t-s)/(i-s)}return-1}snapToClosestScale(t){if(!this.effectiveLODs)return t;const e=this.scaleToZoom(t);return this.zoomToScale(Math.round(e))}snapToNextScale(t,e=.5){if(!this.effectiveLODs)return t*e;const i=Math.round(this.scaleToZoom(t));return this.zoomToScale(i+1)}snapToPreviousScale(t,e=2){if(!this.effectiveLODs)return t*e;const i=Math.round(this.scaleToZoom(t));return this.zoomToScale(i-1)}clone(){return new ne({lods:this.lods,minZoom:this.minZoom,maxZoom:this.maxZoom,minScale:this.minScale,maxScale:this.maxScale})}_getClosestScale(t){return this._lodByScale[t]||(t=this._scales.reduce(((e,i)=>Math.abs(i-t)<=Math.abs(e-t)?i:e),this._scales[0])),this._lodByScale[t].scale}};t([k({readOnly:!0})],ae.prototype,"effectiveLODs",void 0),t([k({readOnly:!0})],ae.prototype,"effectiveMinZoom",void 0),t([k({readOnly:!0})],ae.prototype,"effectiveMaxZoom",void 0),t([k({readOnly:!0})],ae.prototype,"effectiveMinScale",void 0),t([k({readOnly:!0})],ae.prototype,"effectiveMaxScale",void 0),t([k()],ae.prototype,"lods",void 0),t([k()],ae.prototype,"minZoom",void 0),t([k()],ae.prototype,"maxZoom",void 0),t([k()],ae.prototype,"minScale",void 0),t([k()],ae.prototype,"maxScale",void 0),t([k()],ae.prototype,"snapToZoom",void 0),ae=ne=t([S("esri.views.2d.constraints.ZoomConstraint")],ae);const re=ae,pe={base:null,key:"type",typeMap:{extent:ot,polygon:ct}};let he=class extends N{constructor(t){super(t),this.lods=null,this.minScale=0,this.maxScale=0,this.minZoom=-1,this.maxZoom=-1,this.rotationEnabled=!0,this.snapToZoom=!0,this.customConstraints=new n}destroy(){this.view=null}get effectiveLODs(){return this._zoom.effectiveLODs}get effectiveMinScale(){return this._zoom.effectiveMinScale}get effectiveMaxScale(){return this._zoom.effectiveMaxScale}get effectiveMinZoom(){return this._zoom.effectiveMinZoom}get effectiveMaxZoom(){return this._zoom.effectiveMaxZoom}set geometry(t){t?this._set("geometry",t):this._set("geometry",null)}get version(){return`${this._zoom?.uid}/${this._rotation?.uid}/${this._geometry?.uid}`}get _geometry(){const t=this._get("_geometry");return t&&this.geometry===t.geometry&&this.view?.constraintsInfo.spatialReference===t.spatialReference?t:new ee({geometry:this.geometry,spatialReference:this.view?.constraintsInfo.spatialReference})}get _rotation(){return new oe({rotationEnabled:this.rotationEnabled})}get _zoom(){const t=this._get("_zoom"),e=this.lods||this.view?.constraintsInfo.lods,i=this.minZoom,s=this.maxZoom,o=this.minScale,n=this.maxScale,a=this.snapToZoom;return t&&t.lods===e&&t.minZoom===i&&t.maxZoom===s&&t.minScale===o&&t.maxScale===n&&t.snapToZoom===a?t:new re({lods:e,minZoom:i,maxZoom:s,minScale:o,maxScale:n,snapToZoom:a})}canZoomInTo(t){const e=this.effectiveMaxScale;return 0===e||t>=e}canZoomOutTo(t){const e=this.effectiveMinScale;return 0===e||t<=e}constrain(t,e){return this._zoom.constrain(t,e),this._rotation.constrain(t,e),this._geometry.constrain(t,e),this.customConstraints.forEach((i=>i.constrain(t,e))),t}constrainByGeometry(t){return this._geometry.constrain(t)}fit(t){return this._zoom.fit(t)}zoomToScale(t){return this._zoom.zoomToScale(t)}scaleToZoom(t){return this._zoom.scaleToZoom(t)}snapScale(t){return this._zoom.snapToClosestScale(t)}snapToNextScale(t){return this._zoom.snapToNextScale(t)}snapToPreviousScale(t){return this._zoom.snapToPreviousScale(t)}};t([k({readOnly:!0})],he.prototype,"effectiveLODs",null),t([k({readOnly:!0})],he.prototype,"effectiveMinScale",null),t([k({readOnly:!0})],he.prototype,"effectiveMaxScale",null),t([k({readOnly:!0})],he.prototype,"effectiveMinZoom",null),t([k({readOnly:!0})],he.prototype,"effectiveMaxZoom",null),t([k({types:pe,value:null})],he.prototype,"geometry",null),t([k({type:[it]})],he.prototype,"lods",void 0),t([k()],he.prototype,"minScale",void 0),t([k()],he.prototype,"maxScale",void 0),t([k()],he.prototype,"minZoom",void 0),t([k()],he.prototype,"maxZoom",void 0),t([k()],he.prototype,"rotationEnabled",void 0),t([k()],he.prototype,"snapToZoom",void 0),t([k({type:n})],he.prototype,"customConstraints",void 0),t([k()],he.prototype,"view",void 0),t([k({readOnly:!0})],he.prototype,"version",null),t([k({type:ee,readOnly:!0})],he.prototype,"_geometry",null),t([k({type:oe})],he.prototype,"_rotation",null),t([k({readOnly:!0,type:re})],he.prototype,"_zoom",null),he=t([S("esri.views.2d.MapViewConstraints")],he);const le=he;var ce,me;let ue=ce=class extends N{constructor(){super(...arguments),this.left=0,this.top=0,this.right=0,this.bottom=0}clone(){return new ce({left:this.left,top:this.top,right:this.right,bottom:this.bottom})}};t([k()],ue.prototype,"left",void 0),t([k()],ue.prototype,"top",void 0),t([k()],ue.prototype,"right",void 0),t([k()],ue.prototype,"bottom",void 0),ue=ce=t([S("esri.views.2d.PaddedViewState.Padding")],ue);let de=me=class extends A{constructor(...t){super(...t),this.paddedViewState=new A,this._updateContent=(()=>{const t=wt();return()=>{const e=this._get("size"),i=this._get("padding");if(!e||!i)return;const s=this.paddedViewState;pt(t,i.left+i.right,i.top+i.bottom),ht(t,e,t),lt(s.size,t);const o=s.viewpoint;o&&(this.viewpoint=o)}})(),this.addHandles(g((()=>[this.size,this.padding]),(()=>this._updateContent()),y)),this.padding=new ue,this.size=[0,0]}set padding(t){this._set("padding",t||new ue)}set viewpoint(t){if(t){const e=t.clone();this.paddedViewState.viewpoint=t,q(e,t,this._get("size"),this._get("padding"));const i=this._viewpoint2D,s=e.targetGeometry;i.center[0]=s.x,i.center[1]=s.y,i.rotation=e.rotation,i.scale=e.scale,i.spatialReference=s.spatialReference,this._update()}}clone(){return new me({padding:this.padding.clone(),size:this.size.slice(),viewpoint:this.paddedViewState.viewpoint.clone(),pixelRatio:this.pixelRatio})}};t([k()],de.prototype,"paddedViewState",void 0),t([k({type:ue})],de.prototype,"padding",null),t([k()],de.prototype,"viewpoint",null),de=me=t([S("esri.views.2d.PaddedViewState")],de);const ge=de;let ye=class extends N{constructor(t){super(t),this.constraints=null,this.ready=!1,this.resizeAlign="center",this.addHandles([g((()=>this.constraints?.version),(t=>{this.constraints&&t&&this.ready&&(this.state.viewpoint=this.constraints.fit(this.state.paddedViewState.viewpoint))}),y)])}get center(){if(!this.ready)return this._get("center");const{center:t,spatialReference:e}=this.state.paddedViewState;return this.state.commitProperty("id"),new et({x:t[0],y:t[1],spatialReference:e})}set center(t){if(null==t)return;if(!this.ready)return void this._set("center",t);let e;try{e=this._project(t,this.state.spatialReference)}catch(e){return void l.getLogger(this).error(new r("mapview:invalid-center","could not project the value in the view's spatial reference",{input:t,error:e}))}const i=this.viewpoint;H(i,i,e),this.viewpoint=i}get extent(){return this.ready?(this.state.commitProperty("id"),this.state.paddedViewState.extent.clone()):this._get("extent")}set extent(t){if(null==t)return;if(!t.width||!t.height)return void l.getLogger(this).error(new r("mapview:invalid-extent","invalid extent size"));if(!this.ready)return this._set("extent",t),this._set("center",void 0),this._set("viewpoint",void 0),this._set("scale",void 0),void this._set("zoom",void 0);let e;try{e=this._project(t,this.state.spatialReference)}catch(t){return void l.getLogger(this).error(new r("mapview:invalid-extent","could not project the value in the view's spatial reference",{error:t}))}const i=this.viewpoint;B(i,i,e,this.state.size,{constraints:this.constraints}),this.viewpoint=i}get padding(){return this.ready?this.state.padding:this._get("padding")}set padding(t){this.ready?(this.state.padding=t,this._set("padding",this.state.padding)):this._set("padding",t)}get resolution(){return this.ready?(this.state.commitProperty("id"),this.state.resolution):0}get rotation(){return this.ready?(this.state.commitProperty("id"),this.state.rotation):this._get("rotation")}set rotation(t){if(isNaN(t))return;if(!this.ready)return void this._set("rotation",t);const e=this.viewpoint;K(e,e,t),this.viewpoint=e}get scale(){return this.ready?(this.state.commitProperty("id"),this.state.scale):this._get("scale")}set scale(t){if(!t||isNaN(t))return;if(!this.ready){this._set("scale",t),this._set("zoom",void 0);const e=this._get("extent");return void(e&&(this._set("extent",void 0),this._set("center",e.center)))}const e=this.viewpoint;W(e,e,t),this.viewpoint=e}get viewpoint(){return this.ready?this.state.paddedViewState.viewpoint.clone():this._get("viewpoint")}set viewpoint(t){if(null==t)return;if(!this.ready)return this._set("viewpoint",t),this._set("extent",void 0),this._set("center",void 0),this._set("zoom",void 0),void this._set("scale",void 0);let e,s;try{e=this._project(t,this.state.spatialReference),!t.scale||isNaN(t.scale)?s=new r("mapview:invalid-viewpoint",`invalid scale value of ${t.scale}`):null==t.targetGeometry&&(s=new r("mapview:invalid-viewpoint","geometry not defined"))}catch(t){s=new r("mapview:invalid-viewpoint","could not project the value in the view's spatial reference",{error:t})}if(s)return void l.getLogger(this).error(s);this._scaleBeforeChangingSpatialReference=null;const o=new i({targetGeometry:new et,scale:0,rotation:0});F(o,e),this.constraints?.constrain(o,this.state.paddedViewState.viewpoint),this.state.viewpoint=o,this._set("viewpoint",o)}get zoom(){return this.ready?this.constraints?.scaleToZoom(this.scale)??-1:this._get("zoom")}set zoom(t){if(!(t>=0))return;if(!this.ready){this._set("zoom",t),this._set("scale",void 0);const e=this._get("extent");return void(e&&(this._set("extent",void 0),this._set("center",e.center)))}const e=this.constraints?.zoomToScale(t)??0;if(!e)return void this._set("zoom",-1);const i=this.viewpoint;W(i,i,e),this.viewpoint=i,this._set("zoom",this.constraints?.scaleToZoom(this.scale)??-1)}getUserStartupOptions(t){if(!t[0]&&!t[1])return{center:void 0,rotation:void 0,scale:void 0};const{padding:e,constraints:i}=this,s=this._get("center"),o=this._get("extent"),n=this._get("scale"),a=this._get("rotation"),r=this._get("viewpoint"),p=this._get("zoom"),h=null!=p&&null!=i&&i.zoomToScale(p)||void 0;let l,c,m;const u=r?.rotation,d=r?.targetGeometry;"extent"===d?.type?l=d:"point"===d?.type&&(c=d,m=r?.scale);const g=o??l;return{center:s??c??g?.center,rotation:a??u,scale:(n??h??m??(g&&$(g,[t[0]-e.left-e.right,t[1]-e.top-e.bottom])))||void 0}}startup(t,e,i,s){const o=t.targetGeometry;try{this._project(t,i)}catch(e){l.getLogger(this).warn(new M("mapview:startup-projection-error","projection of initial viewpoint to the view's spatial reference, defaulting to the initial viewpoint.",{center:o.toJSON(),spatialReference:i,error:e})),t.targetGeometry=s||new et({x:0,y:0,spatialReference:i})}this.constraints?.fit(t),this._set("state",new ge({padding:this.padding,size:e,viewpoint:t})),this._set("ready",!0)}teardown(){this._set("ready",!1);const{center:[t,e],spatialReference:i,rotation:s,scale:o}=this.state.paddedViewState,n=new et({x:t,y:e,spatialReference:i});this._set("viewpoint",null),this._set("extent",null),this._set("center",n),this._set("zoom",-1),this._set("rotation",s),this._set("scale",o),this._set("state",null)}changeSpatialReference(t){const e=this.state.paddedViewState.clone();if(null==this._scaleBeforeChangingSpatialReference)this._scaleBeforeChangingSpatialReference=e.scale;else{const t=e.viewpoint.clone();t.scale=this._scaleBeforeChangingSpatialReference,e.viewpoint=t}const o=e.clone(),[n,a]=e.center;let r=null;try{r=this._project(new et({x:n,y:a,spatialReference:e.spatialReference}),t)}catch(e){gt()||l.getLogger(this).warn(new M("mapview:spatial-reference-change","could not project the view's center to the new spatial reference",{center:r?.toJSON(),spatialReference:t,error:e}))}r||(r=new et({x:0,y:0,spatialReference:t}));const p=H(new i({targetGeometry:new et,scale:0,rotation:0}),e.viewpoint,r);o.viewpoint=p;try{const i=20,n=[e.size[0]/2,e.size[1]/2],a=[n[0]+i,n[1]],r=e.toMap([0,0],a),{x:h,y:l}=this._project(new et({x:r[0],y:r[1],spatialReference:e.spatialReference}),t);r[0]=h,r[1]=l,o.toScreen(r,r);const c=Y(n,r,a),m=Math.hypot(r[0]-n[0],r[1]-n[1])/i;!Number.isFinite(m)||Math.abs(m)>4?(p.rotation=0,p.targetGeometry=new et({x:0,y:0,spatialReference:t})):(p.scale*=m,p.scale>s("mapview-srswitch-adjust-rotation-scale-threshold")?p.rotation=0:p.rotation+=Number.isFinite(c)?c:0)}catch{}this._get("constraints")?.constrain(p,void 0),this._get("state").viewpoint=p}resize(t,e){if(!this.ready)return;const i=this.state;let s=this.state.paddedViewState.viewpoint;const o=this.state.paddedViewState.size.concat();i.size=[t,e],X(s,s,o,this.state.paddedViewState.size,this.resizeAlign),s=this.constraints?.constrain(s,void 0)??s,this.state.viewpoint=s}toMap(t){if(!this.ready)return null;const[e,i]=this.state.toMap([0,0],[t.x,t.y]),s=this.state.spatialReference;return new et({x:e,y:i,spatialReference:s})}toScreen(t){if(!this.ready)return null;const e=this._project(t,this.state.spatialReference),i=[e.x,e.y];return this.state.toScreen(i,i),dt(i[0],i[1])}_project(t,e){const i=t&&t.targetGeometry||t;if(!e)return t;if(!i)return null;if(e.imageCoordinateSystem||i.spatialReference?.imageCoordinateSystem)return t;if(yt(e,i.spatialReference))return t;const s=V(i,e);if(!s)throw new r("mapview:projection-not-possible","projecting input geometry to target spatial reference returned a null value",{geometry:i,spatialReference:e});return function(t){return"esri.Viewpoint"===t?.declaredClass}(t)?(t.targetGeometry=s,t):s}};t([k({type:et})],ye.prototype,"center",null),t([k()],ye.prototype,"constraints",void 0),t([k({type:ot})],ye.prototype,"extent",null),t([k({value:{top:0,right:0,bottom:0,left:0},cast:t=>({top:0,right:0,bottom:0,left:0,...t})})],ye.prototype,"padding",null),t([k()],ye.prototype,"ready",void 0),t([k()],ye.prototype,"resizeAlign",void 0),t([k({readOnly:!0})],ye.prototype,"resolution",null),t([k({type:Number})],ye.prototype,"rotation",null),t([k({type:Number})],ye.prototype,"scale",null),t([k({readOnly:!0})],ye.prototype,"state",void 0),t([k({type:i})],ye.prototype,"viewpoint",null),t([k()],ye.prototype,"zoom",null),ye=t([S("esri.views.2d.ViewStateManager")],ye);class we extends ft{constructor(t,e){super(!0),this._view=t,this.registerIncoming("double-click",e,(t=>this._handleDoubleClick(t,e)))}_handleDoubleClick(t,e){jt(t.data,"primary")&&(t.stopPropagation(),e?this._view.mapViewNavigation.zoomOut([t.data.x,t.data.y]):this._view.mapViewNavigation.zoomIn([t.data.x,t.data.y]))}}class fe extends ft{constructor(t,e,i){super(!0),this.view=t,this.pointerType=e,this.registerIncoming("double-tap-drag",i,(t=>this._handleDoubleTapDrag(t)))}_handleDoubleTapDrag(t){const{data:e}=t,{pointerType:i}=e;if(i!==this.pointerType)return;t.stopPropagation();const{action:s,delta:o}=e,{view:n}=this,{mapViewNavigation:a}=n;switch(s){case"begin":{const{scale:t}=n;this._startScale=t,this._currentScale=t,this._previousDelta=o,a.begin();break}case"update":{if(this._previousDelta.y===o.y)return;this._previousDelta=o;const t=1.015**o.y,e=this._startScale*t,i=e/this._currentScale;a.setViewpointImmediate(i),this._currentScale=e;break}case"end":{const{constraints:t}=n,{effectiveLODs:e,snapToZoom:i}=t;if(!i||!e)return void a.end();const s=t.snapScale(this._currentScale),r=(o.y>0?Math.max(s,t.snapToPreviousScale(this._startScale)):Math.min(s,t.snapToNextScale(this._startScale)))/this._currentScale;a.zoom(r);break}}}}class ve extends ft{constructor(t,e,i){super(!0),this.view=t,this.pointerAction=e,this.registerIncoming("drag",i,(t=>this._handleDrag(t))),this.registerIncoming("pointer-down",(()=>this.stopMomentumNavigation()))}onInstall(t){super.onInstall(t),this._dragEventSeparator=new kt({start:(t,e)=>{this.view.mapViewNavigation.pan.begin(this.view,e.data),e.stopPropagation()},update:(t,e)=>{this.view.mapViewNavigation.pan.update(this.view,e.data),e.stopPropagation()},end:(t,e)=>{this.view.mapViewNavigation.pan.end(this.view,e.data),e.stopPropagation()},condition:(t,e)=>1===t&&jt(e.data,this.pointerAction)})}_handleDrag(t){const e=this.view.mapViewNavigation;e.pinch.zoomMomentum||e.pinch.rotateMomentum?this.stopMomentumNavigation():this._dragEventSeparator.handle(t)}stopMomentumNavigation(){this.view.mapViewNavigation.pan.stopMomentumNavigation()}}class _e extends ft{constructor(t,e,i){super(!0),this._view=t,this.pointerAction=e;const s=this._view.mapViewNavigation;this._dragEventSeparator=new kt({start:(t,e)=>{s.rotate.begin(this._view,e.data),e.stopPropagation()},update:(t,e)=>{s.rotate.update(this._view,e.data),e.stopPropagation()},end:(t,e)=>{s.rotate.end(),e.stopPropagation()},condition:(t,e)=>1===t&&jt(e.data,this.pointerAction)}),this.registerIncoming("drag",i,(t=>this._dragEventSeparator.handle(t)))}}class je extends ft{constructor(t){super(!0),this._view=t,this._frameTask=null,this._watchHandles=new p,this._currentDevice=null,this._transformation={translation:[0,0,0],heading:0,tilt:0,zoom:0},this._handle=this.registerIncoming("gamepad",(t=>this._handleGamePadEvent(t))),this._handle.pause()}onInstall(t){super.onInstall(t),this._watchHandles.add([g((()=>this._view.navigation.gamepad?.enabled),(t=>{t?(this._handle.resume(),this._frameTask||(this._frameTask=U({update:t=>this._frameUpdate(t.deltaTime)}))):(this._handle.pause(),this._frameTask&&(this._frameTask.remove(),this._frameTask=null))}),w)])}onUninstall(){this._watchHandles.removeAll(),this._frameTask&&(this._frameTask.remove(),this._frameTask=null),super.onUninstall()}_handleGamePadEvent(t){const e=this._view.navigation.gamepad.device;e&&t.data.device!==e||this._currentDevice&&this._currentDevice!==t.data.device||("end"===t.data.action?(this._currentDevice=null,bt(this._transformation)):(this._currentDevice=t.data.device,St(t.data,this._view.navigation.gamepad,this._transformation)))}_frameUpdate(t){const e=this._transformation;if(Mt(e))return;const i=this._view.viewpoint.clone(),s=this._view.navigation.gamepad.velocityFactor,o=be*s*t;Q(i,i,[e.translation[0]*o,-e.translation[1]*o]);const n=1+e.translation[2]*Se*t,a=this._view.constraints.rotationEnabled?-e.heading*ke*t:0,r=this._view.size,p=[r[0]/2,r[1]];J(i,i,n,a,p,r);const h=this._view.constraints.constrain(i,this._view.viewpoint);this._view.viewpoint=h}}const ke=.06,be=.7,Se=6e-4;class Me extends ft{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._pressed=!1,this._keyMap={[e.left]:"left",[e.right]:"right",[e.up]:"up",[e.down]:"down"},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),this.registerIncoming("key-up",i,(t=>this._handleKeyUp(t))),this.registerIncoming("blur",i,(()=>this._handleBlur()))}_handleKeyDown(t){t.data.repeat||this._handleKey(t,!0)}_handleKeyUp(t){this._handleKey(t,!1)}_handleBlur(){this._pressed&&(this._pressed=!1,this.view.mapViewNavigation.stop())}_handleKey(t,e){const i=this._keyMap[t.data.key];if(this._pressed=null!=i,this._pressed){if(e)switch(this.view.mapViewNavigation.begin(),i){case"left":this.view.mapViewNavigation.continousPanLeft();break;case"right":this.view.mapViewNavigation.continousPanRight();break;case"up":this.view.mapViewNavigation.continousPanUp();break;case"down":this.view.mapViewNavigation.continousPanDown()}else this._pressed=!1,this.view.mapViewNavigation.stop();t.stopPropagation()}}}class Te extends ft{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._pressed=!1,this._keyToDirection={[e.clockwiseOption1]:"clockwise",[e.clockwiseOption2]:"clockwise",[e.counterClockwiseOption1]:"counterClockwise",[e.counterClockwiseOption2]:"counterClockwise",[e.resetOption1]:"reset",[e.resetOption2]:"reset"},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),this.registerIncoming("key-up",i,(t=>this._handleKeyUp(t))),this.registerIncoming("blur",i,(()=>this._handleBlur()))}_handleKeyDown(t){t.data.repeat||this._handleKey(t,!0)}_handleKeyUp(t){this._handleKey(t,!1)}_handleBlur(){this._pressed&&(this._pressed=!1,this.view.mapViewNavigation.stop())}_handleKey(t,e){const i=t.modifiers;if(i.size>0&&!i.has("Shift")||!this.view.constraints.rotationEnabled)return;const s=this._keyToDirection[t.data.key];if(this._pressed=null!=s,this._pressed){if(e)switch(this.view.mapViewNavigation.begin(),s){case"clockwise":this.view.mapViewNavigation.continousRotateClockwise();break;case"counterClockwise":this.view.mapViewNavigation.continousRotateCounterclockwise();break;case"reset":this.view.mapViewNavigation.resetRotation()}else this._pressed=!1,this.view.mapViewNavigation.stop();t.stopPropagation()}}}var xe;!function(t){t[t.IN=0]="IN",t[t.OUT=1]="OUT"}(xe||(xe={}));class Ve extends ft{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._keysToZoomAction={},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),e.zoomIn.forEach((t=>this._keysToZoomAction[t]=xe.IN)),e.zoomOut.forEach((t=>this._keysToZoomAction[t]=xe.OUT))}_handleKeyDown(t){this._handleKey(t)}_handleKey(t){const e=t.modifiers;if(e.size>0&&!e.has("Shift"))return;const{key:i}=t.data;if(!(i in this._keysToZoomAction))return;const s=this._keysToZoomAction[i],{mapViewNavigation:o}=this.view;let n=null;switch(s){case xe.IN:n=o.zoomIn();break;case xe.OUT:n=o.zoomOut();break;default:return}o.begin(),n.then((()=>o.end())),t.stopPropagation()}}class De extends ft{constructor(t,e){super(!0),this._view=t,this._canZoom=!0,this.registerIncoming("mouse-wheel",e,(t=>this._handleMouseWheel(t)))}_handleMouseWheel(t){if(!this._view.navigation.mouseWheelZoomEnabled)return;if(t.preventDefault(),t.stopPropagation(),!this._canZoom)return;const e=this._view.mapViewNavigation,{x:i,y:s,deltaY:o}=t.data,n=1/.6**(1/60*o),a=e.zoom(n,[i,s]);a&&(this._canZoom=!1,a.catch((()=>{})).then((()=>{this._canZoom=!0,e.end()})))}}class Pe extends ft{constructor(t){super(!0),this.view=t,this.registerIncoming("drag",(t=>this._handleDrag(t))),this.registerIncoming("pointer-down",(()=>this._stopMomentumNavigation()));const e=this.view.mapViewNavigation;this._dragEventSeparator=new kt({start:(t,i)=>{e.pinch.begin(this.view,i.data),i.stopPropagation()},update:(t,i)=>{e.pinch.update(this.view,i.data),i.stopPropagation()},end:(t,i)=>{e.pinch.end(this.view),i.stopPropagation()},condition:t=>t>=2})}_handleDrag(t){this._dragEventSeparator.handle(t)}_stopMomentumNavigation(){this.view.mapViewNavigation.pinch.stopMomentumNavigation()}}class Re extends ft{constructor(t=Tt.maximumDoubleClickDelay,e=Tt.maximumDoubleClickDistance,i=Tt.maximumDoubleTouchDelay,s=Tt.maximumDoubleTouchDistance,o=u){super(!1),this._maximumDoubleClickDelay=t,this._maximumDoubleClickDistance=e,this._maximumDoubleTouchDelay=i,this._maximumDoubleTouchDistance=s,this._clock=o,this._doubleTapDragReady=!1,this._doubleTapDragActive=!1,this._dragStartCenter=dt(0,0),this._pointerState=new Map,this._doubleTapDrag=this.registerOutgoing("double-tap-drag"),this._dragEventSeparator=new kt({start:(t,e)=>this._dragStart(t,e),update:(t,e)=>this._dragUpdate(e),end:(t,e)=>this._dragEnd(e)}),this.registerIncoming("drag",(t=>this._dragEventSeparator.handle(t))),this.registerIncoming("pointer-down",(t=>this._handlePointerDown(t))),this.registerIncoming("pointer-up",(()=>this._handlePointerUp()))}onUninstall(){this._pointerState.forEach((t=>{t.doubleTapTimeout=c(t.doubleTapTimeout)}))}get hasPendingInputs(){return T(this._pointerState,(t=>null!=t.doubleTapTimeout))}_clearPointerDown(t){const e=this._pointerState.get(t);e&&(e.doubleTapTimeout=c(e.doubleTapTimeout),this._pointerState.delete(t),this.refreshHasPendingInputs())}_createDoubleTapDragData(t,e,i){const{button:s,buttons:o,pointer:n,pointers:a,pointerType:r,timestamp:p}=i;return{action:t,delta:e,button:s,buttons:o,pointer:n,pointers:a,pointerType:r,timestamp:p}}_dragStart(t,e){if(!this._doubleTapDragReady||1!==t)return;this._doubleTapDragReady=!1,this._doubleTapDragActive=!0;const{data:i,modifiers:s}=e,{center:o}=i;this._dragStartCenter=o;const n=this._createDoubleTapDragData("begin",dt(0,0),i);this._doubleTapDrag.emit(n,void 0,s),e.stopPropagation()}_dragUpdate(t){if(!this._doubleTapDragActive)return;const{data:e,modifiers:i}=t,{center:s}=e,o=dt(s.x-this._dragStartCenter.x,s.y-this._dragStartCenter.y),n=this._createDoubleTapDragData("update",o,e);this._doubleTapDrag.emit(n,void 0,i),t.stopPropagation()}_dragEnd(t){if(!this._doubleTapDragActive)return;const{data:e,modifiers:i}=t,{center:s}=e,o=dt(s.x-this._dragStartCenter.x,s.y-this._dragStartCenter.y),n=this._createDoubleTapDragData("end",o,e);this._doubleTapDrag.emit(n,void 0,i),this._doubleTapDragActive=!1,t.stopPropagation()}_handlePointerDown(t){const{data:e}=t,i=xt(e),s=this._pointerState.get(i),{pointerType:o}=e.native;if(s){const n="touch"===o?this._maximumDoubleTouchDistance:this._maximumDoubleClickDistance;this._clearPointerDown(i),Vt(s.event.data,e)>n?this._storePointerDown(t):this._doubleTapDragReady=!0}else this._storePointerDown(t)}_handlePointerUp(){this._doubleTapDragReady=!1}_storePointerDown(t){const{data:e}=t,{pointerType:i}=e.native,s=xt(e),o="touch"===i?this._maximumDoubleTouchDelay:this._maximumDoubleClickDelay,n=this._clock.setTimeout((()=>this._clearPointerDown(s)),o);this._pointerState.set(s,{event:t,doubleTapTimeout:n}),this.refreshHasPendingInputs()}}const Le={left:"ArrowLeft",right:"ArrowRight",up:"ArrowUp",down:"ArrowDown"},Ce={zoomIn:["=","+"],zoomOut:["-","_"]},Oe={clockwiseOption1:"a",clockwiseOption2:"A",counterClockwiseOption1:"d",counterClockwiseOption2:"D",resetOption1:"n",resetOption2:"N"};let ze=class extends N{constructor(){super(...arguments),this._handles=new p}initialize(){const t=()=>this.view?.ready;this._handles.add([f((()=>!t()),(()=>this._disconnect())),f(t,(()=>this._connect()))])}destroy(){this._handles=m(this._handles),this._disconnect()}get latestPointerType(){return this._inputManager?.latestPointerType}get latestPointerLocation(){return this._inputManager?.latestPointerLocation}get multiTouchActive(){return this._inputManager?.multiTouchActive??!1}_disconnect(){this.view.viewEvents.disconnect(),this._inputManager=m(this._inputManager)}_connect(){const t=this.view.surface,e=new Dt(t,this.view.input),i=[new Pt,new Rt,new Lt,new Ct(this.view.navigation),new Re],s=new vt({eventSource:e,recognizers:i});s.installHandlers("prevent-context-menu",[new Ot],_t.INTERNAL),s.installHandlers("navigation",[new Pe(this.view),new je(this.view),new De(this.view),new we(this.view),new we(this.view,["Ctrl"]),new ve(this.view,"primary"),new Me(this.view,Le),new Ve(this.view,Ce),new Te(this.view,Oe),new _e(this.view,"secondary"),new fe(this.view,"touch")],_t.INTERNAL),this.view.viewEvents.connect(s),this._source=e,this._inputManager=s,g((()=>this.view?.navigation?.browserTouchPanEnabled),(t=>{this._source&&(this._source.browserTouchPanningEnabled=!t)}),w)}get test(){return{inputManager:this._inputManager}}};t([k()],ze.prototype,"view",void 0),t([k()],ze.prototype,"latestPointerType",null),t([k()],ze.prototype,"latestPointerLocation",null),t([k()],ze.prototype,"multiTouchActive",null),ze=t([S("esri.views.2d.input.MapViewInputManager")],ze);const Ie=ze;class Ee{constructor(){this._names=new Map}begin(t){this._names.has(t)||(this._names.set(t,!1),(t=>t.includes("Brush"))(t)&&this.record("Esri.FirstDraw"),performance.mark(`Esri.${t}.Start`))}end(t){this._names.has(t)&&!this._names.get(t)&&(this._names.set(t,!0),performance.mark(`Esri.${t}.End`))}record(t){this._names.has(t)||(this._names.set(t,!0),performance.mark(`Esri.${t}`))}}let Ne=class extends qt{constructor(t){super(t),this.components=["attribution","zoom"]}};t([k()],Ne.prototype,"components",void 0),Ne=t([S("esri.views.ui.2d.DefaultUI2D")],Ne);const Ue=Ne;let Ze,Ge,Ae,Fe,qe,He;const Be={flipY:!0,premultipliedAlpha:!0};let Ke=class extends(C(z(O(I)))){constructor(t){super(t),this._magnifierView=null,this._stage=null,this._resolveWhenReady=[],this.rootLayerViews=new a({getCollections:()=>[this.basemapView?.baseLayerViews,this.layerViews,this.basemapView?.referenceLayerViews],getChildrenFunction:()=>null}),this.featuresTilingScheme=null,this.fullOpacity=1,this.graphicsView=null,this.stateManager=new ye({constraints:new le({view:this})}),this.labelManager=null,this.mapViewNavigation=null,this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.rendering=!1,this.supersampleScreenshotsEnabled=!0,this.supportsGround=!1,this._stationaryTimer=null,this._gotoTask=null,this.frameTask=new $t(this),this._pePromise=null,this.floors=new n,this.highlightOptions=new Gt,this.inputManager=new Ie({view:this}),this.map=null,this.spatialReferenceLocked=!1,this.timeline=new Ee,this.type="2d",this.ui=new Ue,this.padding={top:0,right:0,bottom:0,left:0},this.addHandles([g((()=>this.viewpoint),(()=>{this._lastStationaryEventTimestamp=performance.now(),this._flipStationary(160)}),y),this.on("resize",(t=>this.stateManager.resize(t.width,t.height))),g((()=>this.animationManager?.animation),(t=>{this.animation=t}))]),j()}destroy(){this._set("preconditionsReady",!1),this.frameTask=m(this.frameTask),this._gotoTask=null,this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)}get graphicsTileStore(){return new Zt(this.featuresTilingScheme)}get constraintsInfo(){const t=this.defaultsFromMap?.tileInfo,e=this.spatialReference;return{lods:t?.spatialReference?.equals(e)?t.lods:null,spatialReference:e}}get state(){return this.stateManager.state}get initialExtentRequired(){if(!this.stateManager)return!1;const{scale:t,constraints:e,center:i,viewpoint:s,extent:o}=this;let n=this.zoom;return!(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint||o||(e?.effectiveLODs||(n=-1),i&&(0!==t||-1!==n)||s&&null!=s.targetGeometry&&("extent"===s.targetGeometry.type||s.scale)))}get resourceManager(){return this._stage.resourceManager}get textureManager(){return this._stage.painter.textureManager}get _defaultsFromMapSettings(){return{required:{tileInfo:!0,heightModelInfo:!1,extent:!1},requiresExtentInSpatialReference:this.spatialReferenceLocked}}get _projectionEngineLoaded(){return!!R()||(this._pePromise||(this._pePromise=D().finally((()=>{this._pePromise=null}))),!1)}get typeSpecificPreconditionsReady(){const t=this._getDefaultViewpoint();if(!t)return!1;const e=this.spatialReference,i=t.targetGeometry;return!!P(i.spatialReference,e)||this._projectionEngineLoaded}set animation(t){const e=this._get("animation");if(t===e)return;if(e&&e.stop(),!t||t.isFulfilled())return void this._set("animation",null);this._set("animation",t),this.frameTask.animationInProgress=!0;const i=()=>{t===this._get("animation")&&(this._set("animation",null),this.frameTask?.requestFrame()),this.frameTask.animationInProgress=!1};t.when(i,i)}get background(){return t=this.map,"esri.WebMap"===t?.declaredClass?this.map.initialViewProperties.background:null;var t}set background(t){this._override("background",t)}get center(){return this.stateManager?.center??null}set center(t){this.stateManager.center=t}get constraints(){return this.stateManager?.constraints}set constraints(t){t.view=this;const e=this.stateManager.constraints;this.stateManager.constraints=t,e?.destroy()}get extent(){return this.stateManager?.extent??null}set extent(t){this.stateManager.extent=t}get padding(){return this.stateManager?.padding}set padding(t){this.stateManager&&(this.stateManager.padding=t)}get resizeAlign(){return this.stateManager.resizeAlign}set resizeAlign(t){this.stateManager.resizeAlign=t}get resolution(){return this.stateManager.resolution??0}get rotation(){return this.stateManager.rotation??0}set rotation(t){this.stateManager.rotation=t}get scale(){return this.stateManager?.scale??0}set scale(t){this.stateManager&&(this.stateManager.scale=t)}get stationary(){return!(this.animation||this.navigating||this.resizing||this._stationaryTimer)}get updating(){const t=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some((t=>!t.destroyed&&!("layerViews"in t)&&!0===t.updating)));if(s("esri-2d-log-updating")){const e=this.allLayerViews.reduce(((t,e)=>({...t,[e.layer.id]:!e.destroyed&&!("layerViews"in e)&&e.updating})),{});console.log(`Updating MapView: ${t}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(e)}\n`)}return t}get viewpoint(){return this.stateManager.viewpoint??null}set viewpoint(t){this.stateManager.viewpoint=t,this.frameTask.requestFrame()}get zoom(){return this.stateManager.zoom??-1}set zoom(t){this.stateManager.zoom=t}get navigating(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}goTo(t,e){if(t)return this.animation&&(this.animation=null),this._createAnimation(),v((()=>this.ready),e).then((()=>{const i={animate:!0,...e},s=tt(t,this);return this.animation?.update(s),this._gotoTask={},i.animate?this._gotoAnimated(s,i):this._gotoImmediate(s,i)}));l.getLogger(this).error("#goTo()","target cannot be null or undefined")}async hitTest(t,e){const i=At(t)?Ft(this,t):t;if(!this.ready||isNaN(i.x)||isNaN(i.y))return{screenPoint:i,results:[]};let s=new Set,n=!1,a=null,r=null;e?.include?Xe(e.include,Ye(this,(t=>s.add(t)),(t=>{a||(a=new Set),a.add(t)}),(t=>s.add(t)),(()=>n=!0))):(n=!0,s=new Set(this.allLayerViews)),e?.exclude&&Xe(e.exclude,Ye(this,(t=>s.delete(t)),(t=>{r||(r=new Set),r.add(t)})));const p=this.allLayerViews.filter((t=>!t.suspended&&s.has(t))).reverse(),h=this.toMap(i);let l=[...n?this.graphicsView.hitTest(h).map((t=>({type:"graphic",graphic:t,layer:null,mapPoint:h}))):[],...await Promise.all(p.map((t=>t.hitTest(h,i))).toArray())].filter(o).flat().filter(o);return a&&(l=l.filter((t=>!("graphic"in t)||!t.graphic||a?.has($e(t.graphic))))),r&&(l=l.filter((t=>!("graphic"in t)||!t.graphic||!r?.has($e(t.graphic))))),{screenPoint:i,results:l}}async takeScreenshot(t){const e=this._createScreenshotPlan(t),i=await this._stage.takeScreenshot(e);return zt(i,{format:e.format,quality:e.quality,rotation:0,disableDecorations:!1},Be)}async _takeScreenshot(t){const e=this._createScreenshotPlan(t),i=await this._stage.takeScreenshot(e);return It(i,Be)}_createScreenshotPlan(t){t=t??{};const e=this.supersampleScreenshotsEnabled?Math.min(4,Et(this.size,Math.min(4096,this._stage.context.parameters.maxTextureSize))):1;let i;t.layers?(i=[],t.layers.forEach((t=>{const e=this.allLayerViews.find((e=>e.layer.id===t.id));e&&"container"in e&&e.container&&i.push(e.container)}))):i=this._stage.children;const{format:s,quality:o}=Nt(t.format,t.quality);return function(t,e,i,s,o,n,a,r){t.ignorePadding&&(s={left:0,right:0,top:0,bottom:0});let p=null;null!=t.width&&null!=t.height?p=[t.width,t.height]:null==t.width&&null!=t.height?p=[t.height,t.height]:null!=t.width&&null==t.height?p=[t.width,t.width]:null==t.width&&null==t.height&&(p=null);const h=i[0]-(s.left+s.right),l=i[1]-(s.top+s.bottom);let c,m,u=t.area||{x:0,y:0,width:h,height:l};if(p){const t=h/l,e=p[0]/p[1];if(e>t){const t=u.width/e;u={x:u.x,y:Math.round(u.y+(u.height-t)/2),width:u.width,height:Math.round(t)}}else{const t=u.height*e;u={x:Math.round(u.x+(u.width-t)/2),y:u.y,width:Math.round(t),height:u.height}}}else p=[u.width,u.height];return p[0]>u.width?(c=Math.min(p[0]/u.width,e),m=p[0]/u.width/c):(c=1,m=p[0]/u.width),{resolutionScale:c,cropArea:{x:Math.round((u.x+s.left)*c),y:Math.round((u.y+s.top)*c),width:Math.round(u.width*c),height:Math.round(u.height*c)},outputScale:m,format:o,quality:n,children:a,rotation:r}}(t,e,this.size,this.padding,s,o,i,t.rotation)}get test(){return{takeScreenshot:t=>this._takeScreenshot(t)}}toMap(t){if(!this.ready)return null;const e=At(t)?Ft(this,t):t;return this.stateManager.toMap(e)}toScreen(t){return this.stateManager.toScreen(t)}on(t,e,i,s){return this.inputManager&&this.viewEvents.on(t,e,i,s)||super.on(t,e)}hasEventListener(t){return super.hasEventListener(t)||this.viewEvents.hasHandler(t)}whenLayerView(t){return super.whenLayerView(t)}graphicChanged(t){this.graphicsView&&this.graphicsView.graphicUpdateHandler(t)}whenReady(){return new Promise((t=>{this.ready?t(this):this._resolveWhenReady.push(t)}))}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.map&&"initialViewProperties"in this.map&&this.map?.initialViewProperties?.spatialReference||this.defaultsFromMap?.spatialReference||null}hasLayerViewModule(t){return(t=>null!=Jt[t.type])(t)}importLayerView(t){return(t=>{const e=Jt[t.type];if(null==e)throw function(t){const e=t.declaredClass?t.declaredClass.slice(t.declaredClass.lastIndexOf(".")+1):"Unknown",i=e.replaceAll(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new r(`${i}:view-not-supported`,`${e} is not supported in 2D`)}(t);return e(t)})(t)}pixelSizeAt(){return this.ready?this.resolution:(l.getLogger(this).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}popupHitTest(t){return this.hitTest(t).then((e=>({...e,mapPoint:this.toMap(t)})))}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}validate(){let t=Ut(this.type);return s("safari")&&s("safari")<9&&(t=new r("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:s("safari")})),null!=t?(l.getLogger(this).warn("#validate()",t.message),Promise.reject(t)):async function(){const[,{GraphicsView2D:t,GraphicContainer:e,LabelManager:i,MapViewNavigation:s,MagnifierView2D:o,Stage:n}]=await Promise.all([import("../chunks/webglDeps.js"),import("../chunks/mapViewDeps.js")]);Ge=t,Ae=e,Fe=i,qe=s,He=o,Ze=n}()}_createAnimation(){return this.animation&&!this.animation.done||(this.animation=new E),this.animation}_cancellableGoTo(t,e,i){const s=()=>t===this._gotoTask,o=i.then((()=>{s()&&(this.animation=null)})).catch((t=>{throw s()&&(e&&!e.done&&(e.stop(),this.frameTask.animationInProgress=!1),this.animation=null),t})),n=new Promise((t=>t(o)));return e.when().catch((()=>{s()&&n.cancel&&n.cancel()})),n}_gotoImmediate(t,e){const i=this._gotoTask,s=this.animation,o=t.then((t=>{if(d(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");this.viewpoint=s.target=t,s.finish()}));return this._cancellableGoTo(i,s,o)}_flipStationary(t){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const t=performance.now()-this._lastStationaryEventTimestamp;t<160&&(this._stationaryTimer=this._flipStationary(t))}),t)),this._stationaryTimer}_getDefaultViewpoint(){const{constraints:t,initialExtent:e,map:s,padding:o,size:n}=this;if(!t)return null;const a=s&&"initialViewProperties"in s?s.initialViewProperties:void 0,r=this.stateManager.getUserStartupOptions(this.size),p=a?.viewpoint,h=p?.targetGeometry?.extent??e,l=h?.center,c=p?.rotation??0,m=p?.scale||h&&$(h,[n[0]-o.left-o.right,n[1]-o.top-o.bottom]),u=r.center??l,d=r.rotation??c,g=r.scale??m;return u&&g?new i({targetGeometry:u,scale:g,rotation:d}):null}_gotoAnimated(t,e){const i=this._gotoTask,s=this.animation;if(!s)return Promise.resolve();const o=t.then((t=>{if(d(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");return s.update(t),this.animationManager.animate(s,this.viewpoint,e),s.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(i,s,o)}_startup(){this.timeline.begin("MapView Startup");const t=this._getDefaultViewpoint();this.stateManager.startup(t,this.size,this.spatialReference,this.defaultsFromMap.extent?.center),this.graphics.owner=this;const e=new Ze(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenshotsEnabled,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline});this._stage=e,this._magnifierView=new He,this._magnifierView.magnifier=this.magnifier;const i=new Fe({view:this});this._set("labelManager",i);const s=new Wt({view:this});this._set("animationManager",s);const o=new qe({view:this,animationManager:s});this._set("mapViewNavigation",o),this._setupSpatialReferenceDependentProperties(),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),e.on("post-render",(()=>this._set("rendering",e.renderRequested))),e.on("will-render",(()=>this._set("rendering",e.renderRequested))),e.on("webgl-error",(t=>this.fatalError=t.error)),g((()=>this.stationary),(t=>e.stationary=t),_),g((()=>this.background),(t=>{e.backgroundColor=t?.color,this._magnifierView.backgroundColor=t?.color}),_),g((()=>this.magnifier),(t=>this._magnifierView.magnifier=t),_),g((()=>this.renderingOptions),(t=>e.renderingOptions=t),_),g((()=>this.highlightOptions),(t=>e.highlightOptions=t),_),g((()=>this.state.id),(()=>e.state=this.state),_)],"map-view"),this._updateStageChildren();const n=this._resolveWhenReady;this._resolveWhenReady=[],n.forEach((t=>t(this))),this.timeline.end("MapView Startup"),this.frameTask.start(),this._set("ready",!0)}_teardown(){this._destroySpatialReferenceDependentProperties(),this.handles.remove("map-view"),this.mapViewNavigation.destroy(),this._set("mapViewNavigation",null),this.animationManager.destroy(),this._set("animationManager",null),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.frameTask.stop(),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null),this._set("ready",!1),this.stateManager.teardown(),this.animation=null}_updateStageChildren(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((t=>{this._stage.addChild(t.container)}));const t=this.graphicsView;this._stage.addChild(t.container),this._stage.addChild(this._magnifierView)}_setupSpatialReferenceDependentProperties(){const t=new ut(L.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",t);const e=new Ge({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Ae(t)});this._set("graphicsView",e)}_destroySpatialReferenceDependentProperties(){const t=this.graphicsView;this._set("graphicsView",null),t.destroy(),this._set("featuresTilingScheme",null)}_spatialReferenceChanged(t){if(this.ready){this.frameTask.stop();for(const t of this.allLayerViews)t.processDetach();this._destroySpatialReferenceDependentProperties(),this.stateManager.changeSpatialReference(t),this._stage.state=this.state,this._setupSpatialReferenceDependentProperties();for(const t of this.allLayerViews)t.processAttach();this.frameTask.requestFrame(),this.frameTask.start(),this._updateStageChildren()}}};Ke.type="2d",t([k({readOnly:!0})],Ke.prototype,"animationManager",void 0),t([k({constructOnly:!0})],Ke.prototype,"deactivatedWebGLExtensions",void 0),t([k({constructOnly:!0})],Ke.prototype,"debugWebGLExtensions",void 0),t([k({readOnly:!0})],Ke.prototype,"featuresTilingScheme",void 0),t([k({readOnly:!0})],Ke.prototype,"fullOpacity",void 0),t([k({readOnly:!0})],Ke.prototype,"graphicsTileStore",null),t([k()],Ke.prototype,"graphicsView",void 0),t([k()],Ke.prototype,"stateManager",void 0),t([k()],Ke.prototype,"constraintsInfo",null),t([k({readOnly:!0})],Ke.prototype,"state",null),t([k()],Ke.prototype,"initialExtentRequired",null),t([k()],Ke.prototype,"labelManager",void 0),t([k({readOnly:!0})],Ke.prototype,"resourceManager",null),t([k({readOnly:!0})],Ke.prototype,"textureManager",null),t([k({readOnly:!0})],Ke.prototype,"mapViewNavigation",void 0),t([k({constructOnly:!0})],Ke.prototype,"renderCanvas",void 0),t([k()],Ke.prototype,"renderingOptions",void 0),t([k({readOnly:!0})],Ke.prototype,"rendering",void 0),t([k({constructOnly:!0})],Ke.prototype,"supersampleScreenshotsEnabled",void 0),t([k({readOnly:!0})],Ke.prototype,"supportsGround",void 0),t([k()],Ke.prototype,"_stationaryTimer",void 0),t([k()],Ke.prototype,"_defaultsFromMapSettings",null),t([k()],Ke.prototype,"_pePromise",void 0),t([k({readOnly:!0})],Ke.prototype,"typeSpecificPreconditionsReady",null),t([k()],Ke.prototype,"animation",null),t([k({type:Ht})],Ke.prototype,"background",null),t([k()],Ke.prototype,"center",null),t([k({type:le})],Ke.prototype,"constraints",null),t([k()],Ke.prototype,"extent",null),t([k()],Ke.prototype,"floors",void 0),t([k({type:Gt})],Ke.prototype,"highlightOptions",void 0),t([k({readOnly:!0})],Ke.prototype,"inputManager",void 0),t([k()],Ke.prototype,"map",void 0),t([k()],Ke.prototype,"padding",null),t([k()],Ke.prototype,"resizeAlign",null),t([k({readOnly:!0})],Ke.prototype,"resolution",null),t([k()],Ke.prototype,"rotation",null),t([k()],Ke.prototype,"scale",null),t([k({constructOnly:!0})],Ke.prototype,"spatialReferenceLocked",void 0),t([k()],Ke.prototype,"stationary",null),t([k({type:Ee,readOnly:!0})],Ke.prototype,"timeline",void 0),t([k({readOnly:!0})],Ke.prototype,"type",void 0),t([k({readOnly:!0})],Ke.prototype,"updating",null),t([k()],Ke.prototype,"viewpoint",null),t([k()],Ke.prototype,"zoom",null),t([k({readOnly:!0})],Ke.prototype,"navigating",null),t([k(),b((t=>t instanceof qt?t:x(Ue,t)))],Ke.prototype,"ui",void 0),Ke=t([S("esri.views.MapView")],Ke);const We=Ke;function $e(t){const e=t.getObjectId();return e?`${t.layer?.uid??t.sourceLayer?.uid??"MapView"}/${e}`:`"MapView/${t.uid}`}function Ye(t,i,s,o,n){return a=>{if(a instanceof e){if(a.layer===t)n?.();else{const e=t.allLayerViews.find((t=>t.layer===a.layer));e&&o?.(e)}s($e(a))}else{const e=t.allLayerViews.find((t=>t.layer===a));e&&i(e)}}}function Xe(t,e){if(t)if(h(t))for(const i of t)if(h(i))for(const t of i)e(t);else e(i);else e(t)}export{Ee as T,We as default};
