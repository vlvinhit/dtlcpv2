/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../core/Accessor.js";import s from"../core/Collection.js";import{when as r,watch as o,sync as i}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/typedArrayUtil.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import p from"../core/Evented.js";import{L as l}from"../chunks/Logger.js";import m from"../geometry/SpatialReference.js";import{t as u}from"../chunks/aaBoundingRect.js";import{d as c}from"../geometry/Extent.js";import{updateGeometryElevation as h}from"../layers/support/ElevationSampler.js";import{E as d}from"../chunks/TerrainConst.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../core/lang.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/object.js";import"../config.js";import"../chunks/string.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../core/JSONSupport.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/writer.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../geometry/Geometry.js";import"../chunks/reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/projection.js";import"../chunks/mat4.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../layers/support/LOD.js";import"../layers/support/TileInfo.js";import"../chunks/TileKey.js";let j=class extends p.EventedAccessor{constructor(e){super(e),this.demResolution={min:-1,max:-1},this.noDataValue=d}initialize(){this.view.basemapTerrain.on("elevation-change",(()=>this.emit("changed",{})))}get extent(){const e=this.view.basemapTerrain;if(null==e||null==e.extent||null==e.spatialReference)return null;const t=u(e.extent,e.spatialReference);return t.zmin=e.visibleElevationBounds.min,t.zmax=e.visibleElevationBounds.max,t}get spatialReference(){return this.view.basemapTerrain?.spatialReference??m.WGS84}elevationAt(e,t){if(null==this.extent||!c(this.extent,e,t)){const s=null!=this.extent?`${this.extent.xmin}, ${this.extent.ymin}, ${this.extent.xmax}, ${this.extent.ymax}`:null;return l.getLogger(this).warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.view.elevationProvider?.getElevation(e,t,0,this.spatialReference,"ground")??this.noDataValue}queryElevation(e){return h(e.clone(),this)}};e([n({readOnly:!0})],j.prototype,"demResolution",void 0),e([n({readOnly:!0})],j.prototype,"extent",null),e([n({readOnly:!0})],j.prototype,"noDataValue",void 0),e([n()],j.prototype,"spatialReference",null),e([n({constructOnly:!0})],j.prototype,"view",void 0),j=e([a("esri.views.support.GroundViewElevationSampler")],j);const y=j;let g=class extends t{constructor(e){super(e),this.view=null,this.layerViews=new s}initialize(){this.addHandles(r((()=>this.view?.map?.ground),(e=>e.load()))),this.addHandles(this.layerViews.on("after-changes",(()=>this._layerViewsAfterChangesHandler())))}destroy(){this.removeAllHandles(),this._set("view",null);for(const e of this.layerViews)e.destroy();this.layerViews.length=0}get elevationSampler(){return this.view?"2d"===this.view.type?null:this.view.ready&&this.view.basemapTerrain&&this.view.basemapTerrain.ready?new y({view:this.view}):null:null}get updating(){return!this.suspended&&this.layerViews.some((e=>e.updating))}get suspended(){return!this.view||this.view.suspended}_layerViewsAfterChangesHandler(){this.removeHandles("updating"),this.addHandles(this.layerViews.map((e=>o((()=>e.updating),(()=>this._updateUpdating()),i))).toArray(),"updating"),this._updateUpdating()}_updateUpdating(){this.notifyChange("updating")}};e([n({readOnly:!0})],g.prototype,"elevationSampler",null),e([n({type:Boolean,readOnly:!0})],g.prototype,"updating",null),e([n({constructOnly:!0})],g.prototype,"view",void 0),e([n({type:s,readOnly:!0})],g.prototype,"layerViews",void 0),e([n({readOnly:!0})],g.prototype,"suspended",null),g=e([a("esri.views.GroundView")],g);const v=g;export{v as default};
