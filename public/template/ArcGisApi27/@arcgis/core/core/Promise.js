/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import r from"./Accessor.js";import{a as e}from"../chunks/maybe.js";import{createResolver as i,createAbortError as t,isAbortError as o}from"./promiseUtils.js";import{subclass as l}from"./accessorSupport/decorators/subclass.js";import"./Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"./lang.js";import"../chunks/typedArrayUtil.js";import"../chunks/metadata.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"./accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"./Error.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"./scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";var h;!function(s){s[s.PENDING=0]="PENDING",s[s.RESOLVED=1]="RESOLVED",s[s.REJECTED=2]="REJECTED"}(h||(h={}));class n{constructor(){this._resolver=i(),this._status=h.PENDING,this._resolvingPromises=[],this._resolver.promise.then((()=>{this._status=h.RESOLVED,this._cleanUp()}),(()=>{this._status=h.REJECTED,this._cleanUp()})),this.promise=this._resolver.promise}destroy(){this._cleanUp()}addResolvingPromise(s){this._resolvingPromises.push(s),this._tryResolve()}isResolved(){return this._status===h.RESOLVED}isRejected(){return this._status===h.REJECTED}isFulfilled(){return this._status!==h.PENDING}abort(){this._resolver.reject(t())}_cleanUp(){this._allPromise=null,this._resolvingPromises=null}_tryResolve(){if(this.isFulfilled())return;const s=i(),r=[...this._resolvingPromises,e(s.promise)],t=this._allPromise=Promise.all(r);t.then((()=>{this.isFulfilled()||this._allPromise!==t||this._resolver.resolve()}),(s=>{this.isFulfilled()||this._allPromise!==t||o(s)||this._resolver.reject(s)})),s.resolve()}}const p=r=>{let e=class extends r{constructor(...s){super(...s),this._promiseProps=new n,this.addResolvingPromise(Promise.resolve())}destroy(){this._promiseProps?.destroy()}isResolved(){return this._promiseProps.isResolved()}isRejected(){return this._promiseProps.isRejected()}isFulfilled(){return this._promiseProps.isFulfilled()}when(s,r){return this._promiseProps.promise.then((()=>this)).then(s,r)}catch(s){return this.when(null,s)}addResolvingPromise(s){s&&!this._promiseProps.isFulfilled()&&this._promiseProps.addResolvingPromise("_promiseProps"in s?s.when():s)}};return e=s([l("esri.core.Promise")],e),e};let m=class extends(p(r)){};m=s([l("esri.core.Promise")],m);export{m as EsriPromise,p as EsriPromiseMixin};
