/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{a as t,b as n,c as e,d as r,e as o,f,g as i,j as c,k as u,l as s}from"../chunks/typedArrayUtil.js";function a(t,n){let e;if(n)for(e in t)t.hasOwnProperty(e)&&(void 0===t[e]?delete t[e]:t[e]instanceof Object&&a(t[e],!0));else for(e in t)t.hasOwnProperty(e)&&void 0===t[e]&&delete t[e];return t}function l(t){if(!t||"object"!=typeof t||"function"==typeof t)return t;const n=O(t);if(null!=n)return n;if(y(t))return t.clone();if(b(t))return t.map(l);if(g(t))return t.clone();const e={};for(const n of Object.getOwnPropertyNames(t))e[n]=l(t[n]);return e}function p(t){if(!t||"object"!=typeof t||"function"==typeof t||"HTMLElement"in globalThis&&t instanceof HTMLElement)return t;const n=O(t);if(null!=n)return n;if(b(t)){let n=!0;const e=t.map((t=>{const e=p(t);return null!=t&&null==e&&(n=!1),e}));return n?e:null}if(y(t))return t.clone();if(t instanceof File||t instanceof Blob)return t;if(!g(t)){const n=new(0,Object.getPrototypeOf(t).constructor);for(const e of Object.getOwnPropertyNames(t)){const r=t[e],o=p(r);if(null!=r&&null==o)return null;n[e]=o}return n}return null}function y(t){return"function"==typeof t.clone}function b(t){return"function"==typeof t.map&&"function"==typeof t.forEach}function g(t){return"function"==typeof t.notifyChange&&"function"==typeof t.watch}function m(t){if("[object Object]"!==Object.prototype.toString.call(t))return!1;const n=Object.getPrototypeOf(t);return null===n||n===Object.prototype}function O(s){if(t(s)||n(s)||e(s)||r(s)||o(s)||f(s)||i(s)||c(s)||u(s))return s.slice();if(s instanceof Date)return new Date(s.getTime());if(s instanceof ArrayBuffer)return s.slice(0,s.byteLength);if(s instanceof Map){const t=new Map;for(const[n,e]of s)t.set(n,l(e));return t}if(s instanceof Set){const t=new Set;for(const n of s)t.add(l(n));return t}return null}function j(t,n){return t===n||"number"==typeof t&&isNaN(t)&&"number"==typeof n&&isNaN(n)||"function"==typeof(t||{}).getTime&&"function"==typeof(n||{}).getTime&&t.getTime()===n.getTime()||!1}function h(t,n){return t===n||(null==t||"string"==typeof t?t===n:"number"==typeof t?t===n||"number"==typeof n&&isNaN(t)&&isNaN(n):t instanceof Date?n instanceof Date&&t.getTime()===n.getTime():Array.isArray(t)?Array.isArray(n)&&s(t,n):t instanceof Set?n instanceof Set&&function(t,n){if(t.size!==n.size)return!1;for(const e of t)if(!n.has(e))return!1;return!0}(t,n):t instanceof Map?n instanceof Map&&function(t,n){if(t.size!==n.size)return!1;for(const[e,r]of t){const t=n.get(e);if(t!==r||void 0===t&&!n.has(e))return!1}return!0}(t,n):!!m(t)&&m(n)&&function(t,n){if(null===t||null===n)return!1;const e=Object.keys(t);if(null===n||Object.keys(n).length!==e.length)return!1;for(const r of e)if(t[r]!==n[r]||!Object.prototype.hasOwnProperty.call(n,r))return!1;return!0}(t,n))}export{l as clone,j as equals,h as equalsShallow,a as fixJson,g as isAccessorLike,y as isClonable,m as isPlainObject,p as tryClone};
