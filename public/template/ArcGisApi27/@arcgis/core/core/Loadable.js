/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import o from"./Error.js";import{b as t}from"../chunks/maybe.js";import{EsriPromise as r}from"./Promise.js";import{onAbortOrThrow as e,onAbort as l}from"./promiseUtils.js";import{W as a,subclass as i}from"./accessorSupport/decorators/subclass.js";import{property as n}from"./accessorSupport/decorators/property.js";import"./lang.js";import"../chunks/typedArrayUtil.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"./Accessor.js";import"./Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"./scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/ensureType.js";const d="loaded",c=r=>{let c=class extends r{constructor(...s){super(...s),this._loadController=null,this.loadError=null,this.loadStatus="not-loaded",this._set("loadWarnings",[]),this.addResolvingPromise(new Promise((s=>{const t=this.load.bind(this);this.load=r=>{const a=new Promise(((s,t)=>{const l=e(r,t);this.destroyed&&t(new o("load:instance-destroyed",`Instance of '${this.declaredClass||this.constructor.name}' is already destroyed`,{instance:this})),this.when(s,t).finally((()=>{l&&l.remove()}))}));if("not-loaded"===this.loadStatus){this._set("loadStatus","loading");const s=this._loadController=new AbortController;t({signal:s.signal}),l(s.signal,(()=>{this._promiseProps.abort()}))}return s(),a}}))),this.when((()=>{this._set("loadStatus",d),this._loadController=null}),(s=>{this._set("loadStatus","failed"),this._set("loadError",s),this._loadController=null}))}destroy(){this._loadController=t(this._loadController),this._set("loadError",null),this._set("loadWarnings",[])}get loaded(){return this.loadStatus===d}get loadWarnings(){return this._get("loadWarnings")}load(){return null}cancelLoad(){return this.isFulfilled()||(this._set("loadError",new o("load:cancelled","Cancelled")),this._loadController?.abort()),this}};return s([n({readOnly:!0})],c.prototype,"loaded",null),s([n({readOnly:!0})],c.prototype,"loadError",void 0),s([n({clonable:!1})],c.prototype,"loadStatus",void 0),s([n({type:[a],readOnly:!0})],c.prototype,"loadWarnings",null),c=s([i("esri.core.Loadable")],c),c};let h=class extends(c(r)){};h=s([i("esri.core.Loadable")],h),function(s){s.LoadableMixin=c,s.isLoadable=function(s){return!(!s||!s.load)}}(h||(h={}));const u=h;export{u as default};
