/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../request.js";import{o as r}from"../../chunks/ensureType.js";import{throwIfAborted as s}from"../../core/promiseUtils.js";import{join as o}from"../../core/urlUtils.js";import{V as i}from"../../chunks/Version.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/typedArrayUtil.js";import{r as a}from"../../chunks/reader.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{O as l}from"../../core/Accessor.js";import c from"../../geometry/Extent.js";import m from"../../geometry/SpatialReference.js";import{p as u}from"../../chunks/arcgisLayerUrl.js";import{i as h,p as y}from"../../chunks/commonProperties2.js";import{i as j}from"../../chunks/portalItemUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../kernel.js";import"../../core/Error.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../support/timeUtils.js";import"../../chunks/ElevationInfo.js";import"../support/fieldUtils.js";import"../../chunks/arcadeOnDemand.js";import"../../geometry.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/opacityUtils.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";const d=d=>{let f=class extends d{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const s=this.type,o="tile"!==s&&!!t.supportsDynamicLayers,p=r.includes("query"),a=r.includes("map"),n=!!t.exportTilesAllowed,l=r.includes("tilemap"),c=r.includes("data"),m="tile"!==s&&(!t.tileInfo||o),u="tile"!==s&&(!t.tileInfo||o),h="tile"!==s,y=t.cimVersion&&i.parse(t.cimVersion),j=y?.since(1,4)??!1,d=y?.since(2,0)??!1;return{operations:{supportsExportMap:a,supportsExportTiles:n,supportsIdentify:p,supportsQuery:c,supportsTileMap:l},exportMap:a?{supportsArcadeExpressionForLabeling:j,supportsSublayersChanges:h,supportsDynamicLayers:o,supportsSublayerVisibility:m,supportsSublayerDefinitionExpression:u,supportsCIMSymbols:d}:null,exportTiles:n?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchRelatedService(e){const t=this.portalItem;if(!t||!j(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const r=await this._relatedFeatureServicePromise;return s(e),r?{itemId:r.id,url:r.url}:null}async fetchSublayerInfo(e,r){const{source:s}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===s?.type&&j(this.portalItem)&&e.originIdOf("url")<l.SERVICE){const t=await this.fetchRelatedService(r);t&&(e.url=o(t.url,s.mapLayerId.toString()),e.layerItemId=t.itemId)}const{url:i}=e;let p;if("data-layer"===s.type)p=(await t(i,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(i&&e.originIdOf("url")>l.SERVICE)try{p=(await this._fetchAllLayersAndTablesFromService(i)).get(s.mapLayerId)}catch{}else{let t=e.id;"map-layer"===s?.type&&(t=s.mapLayerId);try{p=(await this.fetchAllLayersAndTables(r)).get(t)}catch{}}return p}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,i){await this.load(i),this._allLayersAndTablesMap||=new Map;const p=u(e),a=r(this._allLayersAndTablesMap,p?.url.path,(()=>t(o(p?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const t=new Map;for(const r of e.data.layers)t.set(r.id,r);return{result:t}}),(e=>({error:e}))))),n=await a;if(s(i),"result"in n)return n.result;throw n.error}};return e([p({readOnly:!0})],f.prototype,"capabilities",void 0),e([a("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],f.prototype,"readCapabilities",null),e([p({json:{read:{source:"copyrightText"}}})],f.prototype,"copyright",void 0),e([p({type:c})],f.prototype,"fullExtent",void 0),e([p(h)],f.prototype,"id",void 0),e([p({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],f.prototype,"legendEnabled",void 0),e([p(y)],f.prototype,"popupEnabled",void 0),e([p({type:m})],f.prototype,"spatialReference",void 0),e([p({readOnly:!0})],f.prototype,"version",void 0),e([a("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],f.prototype,"readVersion",null),f=e([n("esri.layers.mixins.ArcGISMapService")],f),f};export{d as ArcGISMapService};
