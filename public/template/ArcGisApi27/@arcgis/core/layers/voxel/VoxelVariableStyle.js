/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Collection.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{clone as r}from"../../core/lang.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{I as i}from"../../chunks/ensureType.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import l from"../../Color.js";import{ClonableMixin as u}from"../../core/Clonable.js";import"../../chunks/typedArrayUtil.js";import c from"./VoxelTransferFunctionStyle.js";import p from"./VoxelUniqueValue.js";import"../../chunks/ArrayPool.js";import"../../chunks/ObjectPool.js";import"../../core/Evented.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../chunks/collectionUtils.js";let a=class extends(u(o)){constructor(){super(...arguments),this.color=l.fromArray([0,0,0,0]),this.value=0,this.enabled=!0,this.label="",this.colorLocked=!1}};e([t({type:l,json:{type:[i],write:{enabled:!0,isRequired:!0}}})],a.prototype,"color",void 0),e([t({type:Number,json:{write:{enabled:!0,isRequired:!0}}})],a.prototype,"value",void 0),e([t({type:Boolean,json:{default:!0,write:!0}})],a.prototype,"enabled",void 0),e([t({type:String,json:{write:!0}})],a.prototype,"label",void 0),e([t({type:Boolean,json:{default:!1,write:!0}})],a.prototype,"colorLocked",void 0),a=e([n("esri.layers.voxel.VoxelIsosurface")],a);const m=a;var h;let j=h=class extends o{constructor(e){super(e),this.variableId=0,this.label="",this.transferFunction=null,this.uniqueValues=null,this.isosurfaces=null,this.uniqueValues=new(s.ofType(p)),this.isosurfaces=new(s.ofType(m))}clone(){return new h({variableId:this.variableId,label:this.label,transferFunction:r(this.transferFunction),uniqueValues:r(this.uniqueValues),isosurfaces:r(this.isosurfaces)})}};e([t({type:i,json:{write:{enabled:!0,isRequired:!0}}})],j.prototype,"variableId",void 0),e([t({type:String,json:{write:!0}})],j.prototype,"label",void 0),e([t({type:c,json:{write:{enabled:!0,overridePolicy(){return{enabled:!this.uniqueValues||this.uniqueValues.length<1}}}}})],j.prototype,"transferFunction",void 0),e([t({type:s.ofType(p),json:{write:{enabled:!0,overridePolicy(){return{enabled:!!this.uniqueValues&&this.uniqueValues.length>0}}}}})],j.prototype,"uniqueValues",void 0),e([t({type:s.ofType(m),json:{write:{enabled:!0,overridePolicy(){const e=!this.uniqueValues||this.uniqueValues.length<1,s=!!this.isosurfaces&&this.isosurfaces.length>0;return{enabled:e&&s}}}}})],j.prototype,"isosurfaces",void 0),j=h=e([n("esri.layers.voxel.VoxelVariableStyle")],j);const d=j;export{d as default};
