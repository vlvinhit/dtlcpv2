/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../request.js";import r from"../../core/Error.js";import{isDataProtocol as s,isBlobProtocol as o,isAbsolute as i,dataToBlob as n,join as m}from"../../core/urlUtils.js";import{g as p}from"../../chunks/uuid.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{r as c}from"../../chunks/reader.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{w as l}from"../../chunks/writer.js";import j from"./MediaElementBase.js";import{g as h}from"../../chunks/resourceExtension.js";import{f as g,t as d,i as f,M as k}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../kernel.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/maybe.js";import"../../core/promiseUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../core/Identifiable.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"./ControlPointsGeoreference.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/mat3.js";import"../../chunks/common.js";import"../../chunks/mat3f64.js";import"../../chunks/vec2.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/screenUtils.js";import"../../chunks/vec2f64.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec4.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../geometry/Polyline.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/GeoreferenceBase.js";import"../../core/Clonable.js";import"./CornersGeoreference.js";import"./ExtentAndRotationGeoreference.js";let y=class extends j{constructor(e){super(e),this.content=null,this.image=null,this.type="image",this.image=null}load(){const e=this.image;if("string"==typeof e){const r=t(e,{responseType:"image"}).then((({data:e})=>{this._set("content",e)}));this.addResolvingPromise(r)}else if(e instanceof HTMLImageElement){const t=e.decode().then((()=>{this._set("content",e)}));this.addResolvingPromise(t)}else e?this._set("content",e):this.addResolvingPromise(Promise.reject(new r("image-element:invalid-image-type","Invalid image type",{image:e})));return Promise.resolve(this)}readImage(e,t,r){return g(t.url,r)}writeImage(e,t,r,n){if(null==e)return;const a=n?.portalItem,c=n?.resources;if(!a||!c)return void("string"==typeof e&&(t[r]=d(e,n)));const u="string"!=typeof e||s(e)||o(e)?null:e;if(u){if(null==f(u))return void(t[r]=u);const e=d(u,{...n,verifyItemRelativeUrls:n&&n.verifyItemRelativeUrls?{writtenUrls:n.verifyItemRelativeUrls.writtenUrls,rootPath:void 0}:void 0},k.NO);if(a&&e&&!i(e))return c.toKeep.push({resource:a.resourceFromPath(e),compress:!1}),void(t[r]=e)}t[r]="<pending>",c.pendingOperations.push(I(e).then((e=>{const s=function(e,t){const r=p(),s=`${m("media",r)}.${h(e)}`;return t.resourceFromPath(s)}(e,a);t[r]=s.itemRelativeUrl,c.toAdd.push({resource:s,content:e,compress:!1,finish:e=>{this.image=e.url}})})))}};e([a({readOnly:!0})],y.prototype,"content",void 0),e([a({json:{name:"url",type:String}})],y.prototype,"image",void 0),e([c("image",["url"])],y.prototype,"readImage",null),e([l("image")],y.prototype,"writeImage",null),e([a({readOnly:!0,json:{name:"mediaType"}})],y.prototype,"type",void 0),y=e([u("esri.layers.support.ImageElement")],y);const v=y;async function I(e){if("string"==typeof e){if(o(e)){const{data:r}=await t(e,{responseType:"blob"});return r}return s(e)?n(e):I((await t(e,{responseType:"image"})).data)}return new Promise((t=>function(e){if(e instanceof HTMLCanvasElement)return e;const t=e instanceof HTMLImageElement?e.naturalWidth:e.width,r=e instanceof HTMLImageElement?e.naturalHeight:e.height,s=document.createElement("canvas"),o=s.getContext("2d");return s.width=t,s.height=r,e instanceof HTMLImageElement?o.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&o.putImageData(e,0,0),s}(e).toBlob(t)))}export{v as default};
