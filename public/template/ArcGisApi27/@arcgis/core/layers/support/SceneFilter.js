/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../request.js";import t from"../../core/Handles.js";import{JSONSupportMixin as r,JSONSupport as o}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import{on as n,sync as p}from"../../core/reactiveUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{r as m}from"../../chunks/reader.js";import{W as a,subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{p as u}from"../../chunks/persistable.js";import h from"../../core/Collection.js";import"../../chunks/Logger.js";import"../../chunks/typedArrayUtil.js";import"../../core/Error.js";import j from"../../geometry/Polygon.js";import{canProjectWithoutEngine as g,projectPolygon as f}from"../../geometry/projection.js";import{f as k}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/maybe.js";import"../../chunks/string.js";import"../../core/promiseUtils.js";import"../../core/Accessor.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/multiOriginJSONSupportUtils.js";import"../../chunks/uuid.js";import"../../chunks/resourceExtension.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/writer.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../chunks/zmUtils.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../geometry/Polyline.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";var y;let d=y=class extends(r(h.ofType(j))){constructor(e){super(e)}clone(){return new y(this.items.map((e=>e.clone())))}write(e,s){return this.toJSON(s)}toJSON(e){const s=e?.layer?.spatialReference;return s?this.toArray().map((t=>{if(!s.equals(t.spatialReference)){if(!g(t.spatialReference,s))return e&&e.messages&&e.messages.push(new a("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const r=new j;f(t,r,s),t=r}const r=t.toJSON(e);return delete r.spatialReference,r})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new a("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((s=>s.toJSON(e))))}static fromJSON(e,s){const t=new y;return e.forEach((e=>t.add(j.fromJSON(e,s)))),t}};d=y=e([l("esri.layers.support.PolygonCollection")],d);const S=d;var w;let b=w=class extends o{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new S,this._geometriesSource=null,this._handles=new t}initialize(){this._handles.add(n((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),p))}destroy(){this._handles.destroy()}readGeometries(e,s,t){Array.isArray(e)?this.geometries=S.fromJSON(e,t):this._geometriesSource={url:k(e,t),context:t}}async loadGeometries(e,t){if(null==this._geometriesSource)return;const{url:r,context:o}=this._geometriesSource,i=await s(r,{responseType:"json",signal:t?.signal}),n=e.toJSON(),p=i.data.map((e=>({...e,spatialReference:n})));this.geometries=S.fromJSON(p,o),this._geometriesSource=null}clone(){const e=new w({geometries:i(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e([c({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],b.prototype,"spatialRelationship",void 0),e([c({type:S,nonNullable:!0,json:{write:!0}}),u({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],b.prototype,"geometries",void 0),e([m(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=w=e([l("esri.layers.support.SceneFilter")],b);const O=b;export{O as default};
