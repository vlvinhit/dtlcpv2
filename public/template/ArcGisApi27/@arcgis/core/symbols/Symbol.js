/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as r}from"../chunks/tslib.es6.js";import o from"../Color.js";import{J as s}from"../chunks/jsonMap.js";import{JSONSupport as e}from"../core/JSONSupport.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/typedArrayUtil.js";import{r as i}from"../chunks/reader.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../chunks/object.js";import"../core/lang.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/metadata.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/string.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";const l=new s({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let p=0,m=class extends e{constructor(r){super(r),this.id="sym"+p++,this.type=null,this.color=new o([0,0,0,1])}readColor(r){return r&&null!=r[0]?[r[0],r[1],r[2],r[3]/255]:r}async collectRequiredFields(r,o){}hash(){return JSON.stringify(this.toJSON())}clone(){}};r([t({type:l.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:l.write}}})],m.prototype,"type",void 0),r([t({type:o,json:{write:{allowNull:!0}}})],m.prototype,"color",void 0),r([i("color")],m.prototype,"readColor",null),m=r([c("esri.symbols.Symbol")],m);const n=m;export{n as default};
