/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Color.js";import{L as o}from"../../chunks/typedArrayUtil.js";import i from"../../core/Evented.js";import{h as s}from"../../chunks/utils.js";import{c as r}from"../../chunks/maybe.js";import{m as n}from"../../chunks/memoize.js";import{watch as l,syncAndInitial as a,sync as p}from"../../core/reactiveUtils.js";import{g as u}from"../../chunks/uuid.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import h from"../../geometry/Point.js";import{z as d,g as v,j as f}from"../../chunks/unitUtils.js";import{a as g}from"../../chunks/vec4f64.js";import{R as j}from"../../chunks/Material.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/string.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../geometry/SpatialReference.js";import"../../chunks/jsonMap.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/interfaces2.js";import"../../chunks/VertexAttribute.js";import"../../chunks/aaBoundingBox.js";import"../../geometry/Extent.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/ViewingMode.js";import"../../chunks/Util2.js";import"../../chunks/vec2f64.js";var y,k;!function(e){e.Disabled="disabled",e.Ready="ready",e.Creating="creating",e.Created="created",e.Selecting="selecting",e.Selected="selected"}(y||(y={})),function(e){e.NoValidInput="no-valid-input",e.NoVisibleProfiles="no-visible-profiles",e.InvalidGeometry="invalid-geometry",e.TooComplex="too-complex",e.InvalidElevationInfo="invalid-elevation-info",e.UnknownError="unknown-error",e.RefinedButNoChartData="refined-but-no-chart-data",e.None="none"}(k||(k={}));let S={noDataValue:-5e5,defaultQueryOptions:()=>({noDataValue:S.noDataValue,demResolution:"auto",maximumAutoTileRequests:150,ignoreInvisibleLayers:!0}),updateThrottleMillis:100,delayAfterPreviewMillis:500,defaultDemResolution:d(10,"centimeters","meters"),densificationMaxSamples:3e3,largeChartSamples:1e4,maxTotalSamples:1e5,maxChartRatio:300,minSlopeSampleDistance:10,formatPrecision:1,portraitModePixelBreakpoint:400,profileLinesStyle3D:{width:3,outlineSize:0,falloff:0,outlineColor:g([1,1,1,0]),renderOccluded:j.Opaque},hoveredPointsStyle:{size:14,borderStyle:"solid",borderWidth:3,borderColor:"#ffffff",boxShadow:"0px 0px 0px 5px rgba(255,255,255,0.2)"}};function b(){return S}const x=" â€• ",P={progress:1,hasZ:!1,samples:[],statistics:null,spatialReference:null};function w(e,t,o){return null==e?null:d(e*t,"meters",o)}function E(e,t,o){return null==e?null:d(e*t,"meters",o)}let R=class extends i.EventedAccessor{constructor(e){super(e),this.type=null,this.id=u(),this.title=null,this.color=new t("#000000"),this.visible=!0,this._getSamplesMemoized=n(((e,t)=>function(e,t){if(null==e||null==t)return null;const{samples:o,spatialReference:i}=e,{distance:s,elevation:r}=t,n=v(i),l=f(i),a=o.length,p=new Array(a);for(let e=0;e<a;++e){const t=o[e],i=t.sampledZ,a=t.coordinate;p[e]={x:a[0],y:a[1],z:i,distance:w(t.distance,n,s),elevation:E(i,l,r)}}return p}(e,t))),this._getStatisticsMemoized=n(((e,t)=>function(e,t){if(null==e||null==t||null==e.statistics||null==e.spatialReference)return null;const{distance:o,elevation:i}=t,{statistics:s,spatialReference:r}=e,n=v(r),l=f(r);return{maxDistance:w(s.maxDistance,n,o),minElevation:E(s.minElevation,l,i),maxElevation:E(s.maxElevation,l,i),avgElevation:E(s.avgElevation,l,i),elevationGain:E(s.elevationGain,l,i),elevationLoss:E(s.elevationLoss,l,i),maxPositiveSlope:s.maxPositiveSlope,maxNegativeSlope:s.maxNegativeSlope,avgPositiveSlope:s.avgPositiveSlope,avgNegativeSlope:s.avgNegativeSlope}}(e,t))),this.viewVisualizationEnabled=!0,this.result=null,this.effectiveUnits=null,this.numSamplesForPreview=30,this.numSamplesPerChunk=200,this.chartFillEnabled=!0,this.chartStrokeWidth=1.5,this.chartStrokeOffsetY=0,this._viewModel=null}get progress(){return null!=this.result&&this.visible?this.result.progress:0}get samples(){return this._getSamplesMemoized(this.result,this.effectiveUnits)}get statistics(){return this._getStatisticsMemoized(this.result,this.effectiveUnits)}get hoveredPoint(){return r(this._viewModel?.hoveredChartPosition,(e=>this._getPoint(e)))}get available(){return!0}get hasZ(){const e=this.result;return null!=e&&e.hasZ}get minDemResolution(){return b().defaultDemResolution}queryElevation(){throw new Error("not implemented")}attach(e){return this._viewModel=e,s([l((()=>e.effectiveUnits),(e=>{this.effectiveUnits=e}),a),l((()=>[e.input]),(()=>this._onChange()),p)])}toggleVisibility(e){this.visible=void 0===e?!this.visible:e}_onChange(){this.emit("change")}_getPoint(e){const{samples:t,result:i}=this;if(null==t||null==i)return null;const s=t.length;if(0===s)return null;const r=t[s-1].distance,n=o(t,e*r,(e=>e.distance));if(null==n)return null;const{x:l,y:a,z:p}=n;return null==p?null:new h({x:l,y:a,z:p,spatialReference:i.spatialReference})}};e([c({nonNullable:!0})],R.prototype,"id",void 0),e([c({nonNullable:!0})],R.prototype,"title",void 0),e([c({type:t,nonNullable:!0})],R.prototype,"color",void 0),e([c({nonNullable:!0})],R.prototype,"visible",void 0),e([c({readOnly:!0})],R.prototype,"progress",null),e([c({readOnly:!0})],R.prototype,"samples",null),e([c({readOnly:!0})],R.prototype,"statistics",null),e([c()],R.prototype,"hoveredPoint",null),e([c()],R.prototype,"viewVisualizationEnabled",void 0),e([c()],R.prototype,"available",null),e([c()],R.prototype,"result",void 0),e([c()],R.prototype,"effectiveUnits",void 0),e([c()],R.prototype,"numSamplesForPreview",void 0),e([c()],R.prototype,"numSamplesPerChunk",void 0),e([c()],R.prototype,"chartFillEnabled",void 0),e([c()],R.prototype,"chartStrokeWidth",void 0),e([c()],R.prototype,"chartStrokeOffsetY",void 0),e([c({readOnly:!0})],R.prototype,"hasZ",null),e([c({readOnly:!0})],R.prototype,"minDemResolution",null),e([c()],R.prototype,"_viewModel",void 0),R=e([m("esri.widgets.ElevationProfile.ElevationProfileLine")],R);const M=R;export{k as E,x as N,y as a,P as b,M as default,b as g};
