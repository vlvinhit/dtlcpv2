/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import r,{g as i}from"./BuildingNumericFilterViewModel.js";import{d as o,e as l}from"../../chunks/filterUtils.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../chunks/tracking.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/collectionUtils.js";import"../../chunks/uuid.js";import"../../chunks/BuildingFilterBlock.js";import"../../core/JSONSupport.js";import"../../chunks/enumeration.js";import"../../chunks/jsonMap.js";import"../../chunks/utils2.js";import"../../symbols/edges/Edges3D.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";let n=class extends r{constructor(){super(...arguments),this._levelFieldName=null,this._parseValueFromFilter=s=>{const e=new RegExp(`${this._levelFieldName}\\s*=\\s*(\\d+)`,"gi"),t=new RegExp(`${this._levelFieldName}\\s*<\\s*(\\d+)`,"gi");for(const{filterMode:r,filterExpression:i}of s.filterBlocks?.items??[]){if(null==i)continue;let s=null;if("solid"===r.type?s=e.exec(i):"x-ray"===r.type&&(s=t.exec(i)),s)return parseInt(s[1],10)}return null}}get filterExpressions(){return this.enabled&&this._levelFieldName?{xRay:`${this._levelFieldName} < ${this.value}`,solid:`${this._levelFieldName} = ${this.value}`}:{solid:null,xRay:null}}get _firstValue(){const s=this.allowedValues;return s.length>0?s[0]:0}_setup(){const s=[];this.layers.forEach((e=>{const t=o(e,"bldglevel");null!=t&&(this._levelFieldName=t.fieldName,s.push(t))})),this._domainInfo=i(s);const e=this._valueBeforeReady;this._set("state","ready"),this._valueBeforeReady=null;const t=e??l(this.layers,this._parseValueFromFilter);null!=t?this.select(t):(this.enabled=!1,this.value=this._firstValue)}};s([e({readOnly:!0})],n.prototype,"filterExpressions",null),s([e()],n.prototype,"_levelFieldName",void 0),s([e({readOnly:!0})],n.prototype,"_firstValue",null),n=s([t("esri.widgets.BuildingExplorer.BuildingLevel")],n);const c=n;export{c as default};
