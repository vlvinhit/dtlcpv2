/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import o from"../../core/Accessor.js";import r from"../../core/Handles.js";import{r as s}from"../../chunks/maybe.js";import{watch as e,initial as i}from"../../core/reactiveUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{GoToMixin as p}from"../support/GoTo.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../core/lang.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";let h=class extends(p(o)){constructor(t){super(t),this._handles=new r,this.orientation={x:0,y:0,z:0},this.view=null,this._updateForCamera=this._updateForCamera.bind(this),this._updateForRotation=this._updateForRotation.bind(this),this._updateRotationWatcher=this._updateRotationWatcher.bind(this)}initialize(){this._handles.add(e((()=>this.view),this._updateRotationWatcher,i))}destroy(){s(this._handles),this.view=null}get canShowNorth(){const t=this.get("view.spatialReference");return!(!t||!t.isWebMercator&&!t.isGeographic)}get state(){return this.get("view.ready")?this.canShowNorth?"compass":"rotation":"disabled"}reset(){if(!this.get("view.ready"))return;const t={};"2d"===this.view?.type?t.rotation=0:t.heading=0,this.callGoTo({target:t})}_updateForRotation(t){null!=t&&(this.orientation={z:t})}_updateForCamera(t){if(!t)return;const o=-t.heading;this.orientation={x:0,y:0,z:o}}_updateRotationWatcher(t){this._handles.removeAll(),t&&this._handles.add("2d"===t.type?e((()=>t?.rotation),this._updateForRotation,i):e((()=>t?.camera),this._updateForCamera,i))}};t([a({readOnly:!0})],h.prototype,"canShowNorth",null),t([a()],h.prototype,"orientation",void 0),t([a({readOnly:!0})],h.prototype,"state",null),t([a()],h.prototype,"view",void 0),h=t([n("esri.widgets.CompassViewModel")],h);const c=h;export{c as default};
