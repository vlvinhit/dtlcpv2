/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import r,{C as s}from"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import{isFieldVisibleByDefault as n,getLowerCaseEditTrackingFields as l,isNumericField as o,isStringField as u,isDateField as a,g as p,getFieldRange as m,TypeValidationError as d,v as c,validateFieldValue as h}from"../../layers/support/fieldUtils.js";import{a as y}from"../../chunks/featureUtils.js";import g from"./EditableInput.js";import{r as j,s as f,L as v}from"../../chunks/featureFormUtils.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../chunks/tracking.js";import"../../chunks/enumeration.js";import"../../chunks/jsonMap.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/arcadeOnDemand.js";import"../../geometry.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/datetime.js";import"../../chunks/number.js";import"../../chunks/layerUtils.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../request.js";import"../../popup/support/FieldInfoFormat.js";import"../../core/Clonable.js";import"./InputBase.js";import"../../core/HandleOwner.js";import"../../chunks/WatchUpdatingTracking.js";import"../../core/reactiveUtils.js";import"../../intl.js";import"../../chunks/messages.js";import"../../chunks/assets.js";var E;!function(e){e.Text="text",e.Number="number",e.Date="date",e.Unsupported="unsupported"}(E||(E={}));let b=class extends g{constructor(e){super(e),this._storedValue=null,this.error=null,this.field=null,this.group=null,this.requiredExpressionExecutor=null,this.type="field",this.valueExpressionExecutor=null}get _dateRange(){const{element:e}=this;if("datetime-picker"===e?.input?.type){const{max:t,min:i}=e.input;return{max:t,min:i}}return{min:null,max:null}}get _configAllowsEdits(){const{element:e,layer:t,name:i}=this;if(null!=e)return e.editableExpression?!!this.evaluatedEditableExpression:!1!==e.editable;if(t?.userHasUpdateItemPrivileges)return!0;const r=t&&"popupTemplate"in t?t?.popupTemplate?.fieldInfos?.find((({fieldName:e})=>e===i)):null;return r?.isEditable??!0}get _layerAndFieldAllowEdits(){return this.layerAllowsEdits&&this.field?.editable}get _isVisibleByDefault(){const{field:e,layer:t}=this;return!!e?.visible&&n(e,t)}get _isEditTrackingField(){return l(this.layer).includes(this.name?.toLowerCase())}get _shouldUseValueExpression(){return this._layerAndFieldAllowEdits&&!this._configAllowsEdits&&null!=this.valueExpressionExecutor}get dataType(){const{field:e}=this;return o(e)?E.Number:u(e)?E.Text:a(e)?E.Date:E.Unsupported}get dateDataType(){if(this.dataType===E.Date)return"date"!==this.field.type?"string":"number"}get domain(){const{layer:e}=this,{typeFieldName:t,types:i}=j(e);if(t===this.name&&null==this.field.domain)return new r({name:"__internal-type-based-coded-value-domain__",codedValues:i.map((({code:e,name:t})=>new s({code:e,name:t})))});const{feature:n}=this,l=e?.getFieldDomain(this.name,{feature:n}),o=this.element?.domain;return null!=o&&this._isDomainCompatible(o)?o:l}get editable(){return!!this._layerAndFieldAllowEdits&&(this.evaluatedEditableExpression??this._configAllowsEdits)}get evaluatedRequiredExpression(){const{requiredExpressionExecutor:e}=this;return null!=e?!!e.lastEvaluatedValue:null}get evaluatedValueExpression(){const{valueExpressionExecutor:e}=this;return null!=e?e.lastEvaluatedValue:null}get hint(){return this.element?.hint}get includeDate(){return!(this.dataType!==E.Date||"time-only"===this.field.type)}get includeTime(){const{element:e,field:t}=this;if(this.dataType!==E.Date)return!1;if("time-only"===t.type)return!0;if("date-only"===t.type)return!1;const i="datetime-picker"===e?.input?.type?e.input.includeTime:void 0;return void 0===i||i}get includeTimestamp(){return"timestamp-offset"===this.field.type}set initialFeature(e){this._set("initialFeature",e),this.notifyChange("valid")}get inputType(){return this.element?.input?.type}get isRelationshipKeyField(){const{field:e,layer:t}=this;return y(t)&&!!t.relationships?.some((t=>t.keyField===e.name))}get label(){return this.element?.label||this.field.alias||this.field.name}get maxLength(){if(this.dataType===E.Date)return-1;const{field:e,element:t}=this,i=e?.length,r=f(t)?t.input.maxLength:NaN;return null!=r&&!isNaN(r)&&r>=-1&&(-1===i||r<=i)?r:i}get minLength(){if(this.dataType===E.Date)return-1;const{field:e,element:t}=this,i=e?.length,r=f(t)?t.input.minLength:NaN;return null!=r&&!isNaN(r)&&r>=-1&&(-1===i||r<=i)?r:-1}get name(){return this.field?.name}get range(){const{_dateRange:e,domain:t,field:i}=this,{max:r,min:s}=e,n=null!=r&&x(r)?r.getTime():null,l=null!=s&&x(s)?s.getTime():null,o=p(t)||m(i);if(!o)return{max:n,min:l};const u=o.max===Number.MAX_VALUE?null:o.max,a=o.min===Number.MIN_VALUE?null:o.min;return{max:null!=n&&(null===u||null!=u&&n<u)?n:u,min:null!=l&&(null===a||null!=a&&l>a)?l:a}}get required(){const{editable:e,evaluatedRequiredExpression:t,field:i,visible:r}=this;return!!e&&(!1===i?.nullable||!(!r||null==t)&&t)}set required(e){this._overrideIfSome("required",e)}get submittable(){const{field:e,required:t,valid:i,value:r}=this;return!(t&&null==r||!i&&this.initialFeature.getAttribute(e.name)!==r)}get updating(){const{editableExpressionExecutor:e,valueExpressionExecutor:t}=this;return null!=t&&t.updating||null!=e&&e.updating}get valid(){const e=this.editable?this._validate():null;return this._set("error",e),null===e}get value(){if(this._shouldUseValueExpression){const e=this.evaluatedValueExpression;if(this.dataType===E.Date){if(e instanceof Date)return e.getTime();if("number"!=typeof e)return parseInt(e,10)}return null!=e&&"object"==typeof e?e.toString():e}return this.get("_storedValue")}set value(e){this.notifyChange("evaluatedVisibilityExpression"),this.set("_storedValue",e)}get visible(){return!this._isEditTrackingField&&(null!=this.evaluatedVisibilityExpression?this.evaluatedVisibilityExpression:null!=this.element||this._isVisibleByDefault)}_isDomainCompatible(e){const{field:t}=this;if("coded-value"===e?.type){const i=typeof e.codedValues[0].code;if("string"===i&&u(t)||"number"===i&&o(t))return!0}return!!("range"===e?.type&&o(t)||a(t))}_validate(){const{dataType:e,domain:t,field:i,initialFeature:r,minLength:s,required:n,valid:l,value:o}=this,u=n&&null==o,a=void 0!==l;return!u&&r.getAttribute(i.name)===o&&a?null:u?d.INVALID_TYPE:"text"===e&&s>-1&&"string"==typeof o&&o.length<s?v.TOO_SHORT:t?null!==o||n?c(t,o):null:h(i,o)}};e([t()],b.prototype,"_storedValue",void 0),e([t()],b.prototype,"_configAllowsEdits",null),e([t()],b.prototype,"_layerAndFieldAllowEdits",null),e([t()],b.prototype,"_isVisibleByDefault",null),e([t()],b.prototype,"_isEditTrackingField",null),e([t()],b.prototype,"_shouldUseValueExpression",null),e([t()],b.prototype,"dataType",null),e([t()],b.prototype,"dateDataType",null),e([t()],b.prototype,"domain",null),e([t()],b.prototype,"editable",null),e([t({readOnly:!0})],b.prototype,"error",void 0),e([t()],b.prototype,"evaluatedRequiredExpression",null),e([t()],b.prototype,"evaluatedValueExpression",null),e([t()],b.prototype,"field",void 0),e([t()],b.prototype,"group",void 0),e([t({readOnly:!0})],b.prototype,"hint",null),e([t()],b.prototype,"includeDate",null),e([t()],b.prototype,"includeTime",null),e([t()],b.prototype,"includeTimestamp",null),e([t()],b.prototype,"initialFeature",null),e([t({readOnly:!0})],b.prototype,"inputType",null),e([t()],b.prototype,"label",null),e([t()],b.prototype,"maxLength",null),e([t()],b.prototype,"minLength",null),e([t({readOnly:!0})],b.prototype,"name",null),e([t()],b.prototype,"range",null),e([t()],b.prototype,"required",null),e([t()],b.prototype,"requiredExpressionExecutor",void 0),e([t()],b.prototype,"submittable",null),e([t({readOnly:!0})],b.prototype,"type",void 0),e([t()],b.prototype,"updating",null),e([t()],b.prototype,"valid",null),e([t({value:null})],b.prototype,"value",null),e([t()],b.prototype,"valueExpressionExecutor",void 0),e([t()],b.prototype,"visible",null),b=e([i("esri.widgets.FeatureForm.FieldInput")],b);const x=e=>e&&!Number.isNaN(e.valueOf()),k=b;export{k as default};
