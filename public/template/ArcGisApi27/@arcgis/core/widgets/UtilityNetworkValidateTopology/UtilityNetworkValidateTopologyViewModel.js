/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../intl.js";import i from"../../core/Accessor.js";import e from"../../core/Collection.js";import s from"../../core/Error.js";import{HandleOwnerMixin as r}from"../../core/HandleOwner.js";import{L as o}from"../../chunks/Logger.js";import{watch as a,on as n}from"../../core/reactiveUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import c from"../../geometry/Extent.js";import{n as m}from"../../chunks/layerUtils.js";import d from"../../rest/networks/support/ValidateNetworkTopologyParameters.js";import{o as h}from"../../chunks/locale.js";import{f as y}from"../../chunks/messages.js";import"../../chunks/date.js";import"../../chunks/jsonMap.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/datetime.js";import"../../chunks/number.js";import"../../chunks/maybe.js";import"../../chunks/string.js";import"../../request.js";import"../../config.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/promiseUtils.js";import"../../chunks/assets.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/WatchUpdatingTracking.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/typeUtils2.js";let u=class extends(r(i)){constructor(t){super(t),this._activeOperationDidSucceed=!1,this._initialValidationsFinished=!1,this._dirtyAreasLayer=null,this._noViewPropertyErrorMessage="Property 'view' is missing on UtilityNetworkValidateTopologyViewModel.",this._validView=!1,this.executionError="",this.extentToValidate="current",this.loadErrors=new e}initialize(){const t=async()=>{this.messages||(this.messages=await y("esri/widgets/UtilityNetworkValidateTopology/t9n/UtilityNetworkValidateTopology"))};t().then((()=>{this.view||(this.view=null),this.utilityNetwork||(this.utilityNetwork=null),this.addHandles([a((()=>[this.view,this.utilityNetwork]),(async()=>{const{loadErrors:t,messages:i}=this,e=i.info;if(this._initialValidationsFinished=!1,t.removeAll(),this._validView=!0,this._dirtyAreasLayer=null,this.view&&"2d"===this.view.type||(this._validView=!1,o.getLogger(this).error(new s("validateNetworkTopology:missing-property",this._noViewPropertyErrorMessage))),this.utilityNetwork&&"utility"===this.utilityNetwork.type){this.utilityNetwork.loaded||await this.utilityNetwork.load(),await this._checkUtilityNetworkExtension();const i=1===t.length&&this.loadErrors.find((t=>t===e.noUtilityNetworkServiceUserTypeExtension));t.length&&!i||this._setDirtyAreasLayer(),this._validView&&(this._initialValidationsFinished=!0)}else this.loadErrors.push(e.noUtilityNetwork)}),{initial:!0}),n((()=>this.view?.map?.layers),"change",(()=>{const{loadErrors:t,messages:i}=this,e=i.info,s=t.find((t=>t===e.noUtilityNetwork)),r=t.find((t=>t===e.noUtilityNetworkServiceUserTypeExtension));this._initialValidationsFinished=!1,s||(t.removeAll(),r&&t.push(e.noUtilityNetworkServiceUserTypeExtension),this._setDirtyAreasLayer()),this._validView&&(this._initialValidationsFinished=!0)})),h(t)])}))}get state(){return this.loadErrors.length?"disabled":this.executionError?"failed":this.updatingHandles.updating?"executing":this._activeOperationDidSucceed?"success":this._initialValidationsFinished?"ready":"loading"}set utilityNetwork(t){this._get("utilityNetwork")!==t&&this._set("utilityNetwork",t)}set view(t){this._get("view")!==t&&this._set("view",t)}async validateTopology(){const{messages:t,utilityNetwork:i,view:e}=this;if(!this.loadErrors.length){let r;this._activeOperationDidSucceed=!1,this._set("executionError",""),r="current"===this.extentToValidate?{xmin:e?.extent.xmin,ymin:e?.extent.ymin,xmax:e?.extent.xmax,ymax:e?.extent.ymax,spatialReference:{wkid:e?.spatialReference.wkid,latestWkid:e?.spatialReference.latestWkid}}:{xmin:i?.fullExtent?.xmin,ymin:i?.fullExtent?.ymin,xmax:i?.fullExtent?.xmax,ymax:i?.fullExtent?.ymax,spatialReference:{wkid:i?.spatialReference.wkid,latestWkid:i?.spatialReference.latestWkid}},this.updatingHandles.addPromise(i?.validateTopology(new d({gdbVersion:this._dirtyAreasLayer.gdbVersion,validateArea:new c(r)})).then((()=>{this._activeOperationDidSucceed=!0}),(i=>{let e="Error: "+i;i instanceof s&&i.details&&i.details.raw&&(-2147208940===i.details.raw.extendedCode?e=t.info.noDirtyAreasInExtent:-2147217146!==i.details.raw.extendedCode&&-2147220947!==i.details.raw.extendedCode||(e=t.info.cannotAcquireVersionLock)),this._set("executionError",e)})))}}_setDirtyAreasLayer(){const t=this.view?.map.layers;if(t){const i=t.items.filter((t=>m(t))).find((t=>t.parsedUrl?.path===this.utilityNetwork?.networkSystemLayers.dirtyAreasLayerUrl));i?this._dirtyAreasLayer=i:this.loadErrors.push(this.messages.info.noDirtyAreasLayer)}}async _checkUtilityNetworkExtension(){await(this.utilityNetwork?.queryNamedTraceConfigurations({globalIds:["{AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}"]}).catch((t=>{-2147208474===t.details.raw.extendedCode?this.loadErrors.push(this.messages.info.noUtilityNetworkServiceUserTypeExtension):this.loadErrors.push(t.message)})))}};t([l()],u.prototype,"_initialValidationsFinished",void 0),t([l()],u.prototype,"_dirtyAreasLayer",void 0),t([l({readOnly:!0})],u.prototype,"executionError",void 0),t([l()],u.prototype,"extentToValidate",void 0),t([l()],u.prototype,"loadErrors",void 0),t([l()],u.prototype,"messages",void 0),t([l({readOnly:!0})],u.prototype,"state",null),t([l()],u.prototype,"utilityNetwork",null),t([l()],u.prototype,"view",null),u=t([p("esri.widgets.UtilityNetworkValidateTopology.UtilityNetworkValidateTopologyViewModel")],u);const k=u;export{k as default};
