/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as i}from"./tslib.es6.js";import e from"../Graphic.js";import t from"../core/Accessor.js";import s from"../core/Collection.js";import{m as r}from"./handleUtils.js";import{d as n}from"./maybe.js";import{isAbortError as a}from"../core/promiseUtils.js";import{watch as o,sync as l,syncAndInitial as p}from"../core/reactiveUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./Logger.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{d as u}from"./diffUtils.js";import{U as d}from"./UpdatingHandles.js";import y from"../layers/Layer.js";import{h as g}from"./hydratedFeatures.js";import{g as m,a as f,s as b}from"./ElevationUpdateEvent.js";import C from"../rest/support/Query.js";import{D as w}from"./RenderGeometry.js";import{G as v,a as j,b as V,c as E,d as G}from"./Graphics3DObjectStates.js";import{e as S}from"./graphicUtils.js";import{O as _}from"./basicInterfaces.js";import{U as O}from"./RibbonLineMaterial.js";let x=class extends t{constructor(i){super(i),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=w.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new d}initialize(){const{layer:i}=this,e="effectiveScaleRange"in i?i:null,t=this.scaleVisibilityEnabled&&null!=e,s=new v({owner:this,layer:this.owner.layer,preferredUpdatePolicy:O.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(i,e)=>new j({graphicsCoreOwner:this,graphicsCore:i,queryGraphicUIDsInExtent:e,elevationProvider:this.view.elevationProvider}),scaleVisibility:t?(i,t)=>new V({graphicsCoreOwner:this,layer:e,queryGraphicUIDsInExtent:t,graphicsCore:i,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:i=>new E(i)}});if(this._set("graphicsCore",s),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new G({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const i=this.owner;this._updatingHandles.add((()=>i.fullOpacity),(()=>this.graphicsCore.opacityChange()))}if("elevationInfo"in i){const e=i;this._updatingHandles.add((()=>e.elevationInfo),((i,e)=>{u(i,e)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())}))}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(i){if(a(i))return;throw i}this.destroyed||(this.addHandles(o((()=>this.view.clippingArea),(()=>this._updateClippingExtent()),l)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",n(this.frustumVisibility)),this._set("graphicsCore",n(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get scaleVisibilitySuspended(){return!(null==this.scaleVisibility||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return null!=this.frustumVisibility&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){return!!(this.graphicsCore?.updating||null!=this.scaleVisibility&&this.scaleVisibility.updating||null!=this.frustumVisibility&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(i){this.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphicsCore.notifyGraphicVisibilityChanged(i)}getRenderingInfo(i,e,t){const s=m(i,{renderer:e,arcade:t});if(s?.color){const i=s.color;i[0]=i[0]/255,i[1]=i[1]/255,i[2]=i[2]/255}return s}getRenderingInfoAsync(i,e,t,s){return f(i,{renderer:e,arcade:t,...s})}getHit(i){if(this.owner.loadedGraphics){const e=this.owner.loadedGraphics.find((e=>e.uid===i));if(e){const i=this.layer instanceof y?this.layer:null,t=g(e,i);return{type:"graphic",graphic:t,layer:t.layer}}}return null}whenGraphicBounds(i,e){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(i,e):Promise.reject()}computeAttachmentOrigin(i,e){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(i,e):null}getSymbolLayerSize(i,e){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(i,e):null}maskOccludee(i){const e=this.graphicsCore?.objectStates;if(!e)return r();const{set:t,handle:s}=e.acquireSet(_.MaskOccludee,null);return e.setUid(t,i.uid),s}highlight(i){const t=this.graphicsCore?.objectStates;if(!t)return r();if(i instanceof C)return P;if("number"==typeof i)return this.highlight([i]);if(i instanceof e)return this.highlight([i]);if(i instanceof s&&(i=i.toArray()),Array.isArray(i)&&i.length>0){if(i[0]instanceof e){const e=i.map((i=>i.uid)),{set:s,handle:r}=t.acquireSet(_.Highlight,null);return t.setUids(s,e),r}if("number"==typeof i[0]){const e=i,{set:s,handle:r}=t.acquireSet(_.Highlight,null);return t.setObjectIds(s,e),r}}return P}_setupSuspendResumeExtent(){const{scaleVisibility:i,frustumVisibility:e}=this;if(null==i&&null==e)return;const t=({computedExtent:t,extentPadding:s})=>{this._suspendResumeExtent=S(t,this._suspendResumeExtent,b,s),null!=i&&i.setExtent(this._suspendResumeExtent),null!=e&&e.setExtent(this._suspendResumeExtent)};this.addHandles(o((()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding})),(i=>t(i)),p))}_updateClippingExtent(){const i=this.view.clippingArea;this.graphicsCore.setClippingExtent(i,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};i([c()],x.prototype,"type",void 0),i([c({constructOnly:!0})],x.prototype,"owner",void 0),i([c()],x.prototype,"layer",null),i([c()],x.prototype,"view",null),i([c({constructOnly:!0})],x.prototype,"graphicsCore",void 0),i([c()],x.prototype,"scaleVisibility",null),i([c({constructOnly:!0})],x.prototype,"frustumVisibility",void 0),i([c()],x.prototype,"elevationAlignment",null),i([c()],x.prototype,"scaleVisibilitySuspended",null),i([c({readOnly:!0})],x.prototype,"frustumVisibilitySuspended",null),i([c()],x.prototype,"suspended",null),i([c({readOnly:!0})],x.prototype,"updating",null),i([c()],x.prototype,"loadedGraphics",null),i([c()],x.prototype,"fullOpacity",null),i([c()],x.prototype,"slicePlaneEnabled",null),i([c()],x.prototype,"drapeSourceType",void 0),i([c()],x.prototype,"updatePolicy",null),i([c({constructOnly:!0})],x.prototype,"scaleVisibilityEnabled",void 0),i([c({constructOnly:!0})],x.prototype,"frustumVisibilityEnabled",void 0),i([c()],x.prototype,"initializePromise",void 0),x=i([h("esri.views.3d.layers.graphics.GraphicsProcessor")],x);const P=r();export{x as G};
