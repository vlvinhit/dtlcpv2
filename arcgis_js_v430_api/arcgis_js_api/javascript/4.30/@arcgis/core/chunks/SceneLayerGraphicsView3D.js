/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{m as r,x as s}from"../core/lang.js";import{L as i}from"./Logger.js";import{d as o}from"./maybe.js";import{initial as a,watch as p}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{s as m}from"./vec3.js";import{Z as d,c as u}from"./vec3f64.js";import{p as c}from"./projectBuffer.js";import{p as h}from"./projectVectorToVector.js";import{c as j,d as g}from"../geometry/Extent.js";import{n as y,a as f}from"./DoubleArray.js";import{g as b}from"./zscale.js";import{f as _}from"./LayerConstants.js";import{e as v}from"./dehydratedFeatures.js";import{m as w}from"./dehydratedPoint.js";import{h as S}from"./hydratedFeatures.js";import{I,a as x}from"./I3SOverrides.js";import C from"../layers/support/FeatureFilter.js";import E from"../rest/support/Query.js";import{l as U}from"./basemapUtils.js";import{W as D}from"./WorkerHandle.js";import{L as O}from"./LayerView3D.js";import{G as V,Q as M}from"./Graphics3DGraphicsPipeline.js";import{S as F,c as N,n as L,a as R,d as P,b as A}from"./SceneLayerView.js";import G from"../core/Evented.js";import{s as T}from"./ensureType.js";import{c as B,d as q,e as H,w as k,b as Q}from"./I3SUtil.js";import{T as z,D as W}from"./TemporalSceneLayerView.js";import{L as Z}from"./LayerViewPerformanceInfo.js";import{P as K}from"./PopupSceneLayerView.js";import{d as J}from"./debugFlags2.js";import{a as Y}from"./orientedBoundingBox.js";import{u as $}from"../views/SceneView.js";import{V as X}from"./Attribute.js";import{U as ee}from"./RibbonLineMaterial.js";import{h as te}from"./popupUtils.js";import{T as re}from"./Scheduler.js";import"../geometry.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../config.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./common.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./datetime.js";import"./number.js";import"./substitute.js";import"./messages.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils4.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils5.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"./asyncUtils.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./geodesicConstants.js";import"./projectPointToVector.js";import"../geometry/projection.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./projectBoundingRect.js";import"./ViewingMode.js";import"./MemCache.js";import"./uuid.js";import"./mat3.js";import"./mat3f64.js";import"./RenderTexture.js";import"./meshVertexSpaceUtils.js";import"../geometry/support/MeshGeoreferencedVertexSpace.js";import"../geometry/support/MeshLocalVertexSpace.js";import"./sphere.js";import"./mat4.js";import"./vec4.js";import"./vec4f64.js";import"./ray.js";import"./plane.js";import"./mat4f64.js";import"./quatf64.js";import"./vec2f64.js";import"./mathUtils2.js";import"./resourceUtils3.js";import"./basicInterfaces.js";import"./StencilUtils.js";import"./Indices.js";import"./Util.js";import"./Material.js";import"./interfaces3.js";import"./VertexAttribute.js";import"./triangle.js";import"./lineSegment.js";import"./doublePrecisionUtils.js";import"./Matrix4PassUniform.js";import"./BindType.js";import"./ShaderTechniqueConfiguration.js";import"./lengthUtils.js";import"./requestImageUtils.js";import"./enums.js";import"./Texture.js";import"./GLObjectType.js";import"./vec2.js";import"./renderState.js";import"./objectResourceUtils.js";import"./devEnvironmentUtils.js";import"./BufferView.js";import"./vec32.js";import"./vec42.js";import"./DefaultMaterial_COLOR_GAMMA.js";import"./Version.js";import"./quat.js";import"./vec2f32.js";import"./NestedMap.js";import"./InterleavedLayout.js";import"./types.js";import"./NormalAttribute.glsl.js";import"./compilerUtils.js";import"./IntegerPassUniform.js";import"./VertexPosition.glsl.js";import"./Matrix3DrawUniform.js";import"./GLTextureMaterial.js";import"./RayIntersections.js";import"./verticalOffsetUtils.js";import"./OutputHighlight.glsl.js";import"./DecodeSymbolColor.glsl.js";import"./VerticalOffset.glsl.js";import"./Matrix4sPassUniform.js";import"../views/3d/webgl/RenderNode.js";import"./ScreenSpacePass.glsl.js";import"./CameraSpace.glsl.js";import"./styleUtils.js";import"./I3SNode.js";import"./ElevationRange.js";import"./I3SBinaryReader.js";import"./spatialReferenceEllipsoidUtils.js";import"./frustum.js";import"./ElevationContext.js";import"./computeTranslationToOriginAndRotation.js";import"./ElevationProvider.js";import"./unitConversionUtils.js";import"./ElevationUpdateEvent.js";import"./graphicUtils.js";import"./HUDMaterial.js";import"./VertexArrayObject2.js";import"./VertexArrayObject.js";import"./RenderGeometry.js";import"../views/3d/webgl/RenderCamera.js";import"./axisAngleDegrees.js";import"./weather.js";import"../views/3d/environment/CloudyWeather.js";import"../views/3d/environment/FoggyWeather.js";import"../views/3d/environment/RainyWeather.js";import"../views/3d/environment/SnowyWeather.js";import"../views/3d/environment/SunnyWeather.js";import"./Float4DrawUniform.js";import"./Intersector.js";import"./Intersector2.js";import"./boundedPlane.js";import"./glUtil.js";import"./VertexElementDescriptor.js";import"./BufferObject.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./edgeUtils.js";import"./floatRGBA.js";import"./earcut.js";import"./_commonjsHelpers.js";import"./SnappingCandidate.js";import"./visualVariableUtils.js";import"./sizeVariableUtils.js";import"./triangulationUtils.js";import"./deduplicate.js";import"./Normals.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"./fontUtils.js";import"./GeometryUtils.js";import"./enums2.js";import"./utils7.js";import"./definitions.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./Rect.js";import"./BoundingBox.js";import"./defaults.js";import"./defaultsJSON.js";import"./OverrideHelper.js";import"./colorUtils2.js";import"../symbols/support/cimSymbolUtils.js";import"./utils11.js";import"./jsonUtils.js";import"./parser.js";import"./utils3.js";import"./LRUCache.js";import"./GeometryUtil.js";import"./vec3f32.js";import"./line.js";import"./line2.js";import"./lineStippleUtils.js";import"./projectVectorToPoint.js";import"../geometry/support/MeshComponent.js";import"../geometry/support/MeshMaterial.js";import"../geometry/support/MeshTexture.js";import"./imageUtils.js";import"../geometry/support/MeshTextureTransform.js";import"../geometry/support/MeshMaterialMetallicRoughness.js";import"./MeshVertexAttributes.js";import"./projection.js";import"./interfaces6.js";import"./DefaultLayouts.js";import"./webStyleSymbolUtils.js";import"../symbols/support/jsonUtils.js";import"./layerUtils2.js";import"./Octree.js";import"./Intersector3.js";import"./ColorMaterial.js";import"./TriangleMaterial.js";import"./ReactiveSet.js";import"./featureQueryAll.js";import"./meshFeatureSet.js";import"../geometry/Mesh.js";import"../geometry/support/MeshTransform.js";import"./vertexSpaceConversion.js";import"./External.js";import"./infoFor3D.js";import"../rest/support/FeatureSet.js";import"./FeatureLayerView3D.js";import"./FeatureLayerViewBase3D.js";import"./query.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils8.js";import"./utils9.js";import"./pbfQueryUtils.js";import"./pbf.js";import"./queryZScale.js";import"./EventedSet.js";import"../core/signal.js";import"./FeatureLayerView.js";import"../layers/support/FeatureEffect.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"./floorFilterUtils.js";import"../views/layers/LayerView.js";import"./UpdatingHandles.js";import"./layerViewUtils.js";import"./RefreshableLayerView.js";import"./timeSupport2.js";import"../support/timeUtils.js";import"./utils6.js";import"./tagSymbols.js";import"./projectExtentUtils.js";import"./geometryServiceUtils.js";import"./project.js";import"../rest/support/ProjectParameters.js";import"./arcgisLayerUrl.js";import"./ReactiveMap.js";import"./dehydratedFeatureComparison.js";import"../Camera.js";import"../CameraLayout.js";import"./Cyclical.js";import"../Viewpoint.js";import"./domUtils.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"./GraphicsCollection.js";import"../geometry/HeightModelInfo.js";import"./RenderCoordsHelper.js";import"./scaleUtils.js";import"../views/View.js";import"../Map.js";import"../Basemap.js";import"./loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"../Ground.js";import"./CollectionFlattener.js";import"./editableLayers.js";import"../layers/catalog/catalogUtils.js";import"./collectionUtils2.js";import"../support/LayersMixin.js";import"../layers/Layer.js";import"../support/TablesMixin.js";import"../views/BasemapView.js";import"../views/Magnifier.js";import"./selectionUtils.js";import"../views/Theme.js";import"./InputManager.js";import"./ViewEvents.js";import"./IViewEvents.js";import"./interfaces.js";import"./screenUtils2.js";import"../views/input/Input.js";import"../views/input/gamepad/GamepadSettings.js";import"../views/input/gamepad/GamepadInputDevice.js";import"../views/navigation/Navigation.js";import"./a11yUtils.js";import"../views/navigation/gamepad/GamepadSettings.js";import"./heightModelInfoUtils.js";import"./projectionUtils.js";import"../views/BreakpointsOwner.js";import"../views/DOMContainer.js";import"./projector.js";import"./widgetUtils.js";import"../views/GroundView.js";import"./cameraUtils.js";import"./earthUtils.js";import"./spatialReferenceSupport.js";import"../layers/support/ElevationSampler.js";import"./TerrainConst.js";import"../layers/support/LOD.js";import"../layers/support/TileInfo.js";import"./TileKey.js";import"../views/PopupView.js";import"../views/ViewAnimation.js";import"../views/3d/environment/SunLighting.js";import"../webscene/SunLighting.js";import"../views/3d/environment/VirtualLighting.js";import"../webscene/VirtualLighting.js";import"../webscene/Environment.js";import"./lightingTypes.js";import"../webscene/background/Background.js";import"../webscene/background/ColorBackground.js";import"./quantityUtils.js";import"./debugFlags.js";import"./Program.js";import"./ShadowCastVisualizeTechniqueConfiguration.js";import"./euclideanLengthMeasurementUtils.js";import"./WebGLRequirements.js";import"./capabilities2.js";import"./contextUtils.js";import"./ray2.js";import"./viewpointUtils2.js";import"./ZoomMomentumEstimator.js";import"./labelFormatUtils.js";import"./labelUtils.js";import"./FeatureTileDescriptor3D.js";import"./elevationInfoUtils.js";import"./hitTest.js";import"./intersectorUtilsConversions.js";import"./hitTestSelectUtils.js";import"./terrainUtils.js";import"../views/3d/support/SceneViewPerformanceInfo.js";import"./ByteSizeUnit.js";import"../views/3d/support/LayerPerformanceInfo.js";import"./ElevationQueryTileCache.js";import"./RenderableTile.js";import"./mat3f32.js";import"./enums3.js";import"./TileStrategy.js";import"./TileKey2.js";import"./QueueProcessor.js";import"./config.js";import"./TiledDisplayObject.js";import"./DisplayObject.js";import"./StyleDefinition.js";import"./ElevationSamplerData.js";import"./resources.js";import"./edgeProcessing.js";import"./Viewshed.js";import"../views/3d/webgl.js";import"../views/3d/webgl/ManagedFBO.js";import"./testSVGPremultipliedAlpha.js";import"./RenderingContext.js";import"./ProgramCache.js";import"./screenshotUtils.js";import"../views/ui/DefaultUI.js";import"../views/ui/UI.js";import"./themeUtils.js";import"../widgets/Attribution.js";import"../widgets/Widget.js";import"./jsxWidgetSupport.js";import"../widgets/Attribution/AttributionViewModel.js";import"./globalCss.js";import"./accessibleHandler.js";import"./messageBundle.js";import"./jsxFactory.js";import"../widgets/Compass.js";import"../widgets/Compass/CompassViewModel.js";import"./utils20.js";import"../widgets/support/GoTo.js";import"../widgets/NavigationToggle.js";import"../widgets/NavigationToggle/NavigationToggleViewModel.js";import"../widgets/Zoom.js";import"../widgets/Zoom/ZoomViewModel.js";import"./queryForSymbologySnapping.js";import"./hash.js";import"./diffUtils.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"./Graphics3DObjectStates.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/support/ClassBreakInfo.js";import"./commonProperties.js";import"../renderers/DictionaryRenderer.js";import"../layers/support/FieldsIndex.js";import"./UnknownTimeZone.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"./heatmapUtils.js";import"../renderers/PieChartRenderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../renderers/support/jsonUtils.js";import"./rendererConversion.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./PooledRBush.js";import"./quickselect.js";import"./QueryEngine.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./timeSupport.js";import"./projectionSupport.js";import"./json.js";import"./QueryEngineCapabilities.js";import"./utils12.js";import"./utils2.js";import"./utils10.js";import"./generateRendererUtils.js";import"./FeatureStore.js";import"./BoundsStore.js";import"./heatmapTextureUtils.js";class se extends D{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:e=>[e.geometryBuffer]},e,{hasInitialize:!0})}}class ie extends G{constructor(e,t){super(),this._updateAndCompare=e,this._notifyUpdated=t,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,t){this._nodes.set(e,t);const r=t.graphics;if(0===r.length)return;const s=new Set;for(let t=0;t<r.length;t++){const i=r[t],o=i.objectId,a=this._graphics.get(o);if(a){s.add(o),i!==a&&(r[t]=a);const p=this._duplicates.get(o);p?p.push(e):this._duplicates.set(o,[a.nodeIndex,e])}else i.nodeIndex=e,this._graphics.set(o,i)}s.size&&this._updateForeignGraphics(t);const i=s.size>0?r.filter((e=>!s.has(e.objectId))):r;i.length>0&&this.emit("change",{added:i,removed:[]})}removeNode(e){const t=this._nodes.get(e);if(!t)return;this._nodes.delete(e);const r=new Set,s=[];for(const i of t.graphics){const t=i.objectId,o=this._graphics.get(t);if(!o)continue;const a=this._duplicates.get(t);if(a){const s=a.indexOf(e);if(-1===s)continue;if(a.splice(s,1),o.nodeIndex===e){let e=this.getNode(a[0]);for(let t=1;t<a.length;t++){const r=this.getNode(a[t]);(null==e||null!=r&&r.node.level>e.node.level)&&(e=r)}null!=e&&r.add(e)}1===a.length&&this._duplicates.delete(t)}else this._graphics.delete(t),s.push(i)}s.length>0&&this.emit("change",{added:[],removed:s}),r.forEach((e=>this._updateForeignGraphics(e)))}_updateForeignGraphics(e){const t=[],r=e.node.index,s=e.node.level;let i=0;for(;i<e.graphics.length;){const o=e.graphics[i].nodeIndex;if(o===r){i++;continue}let a=1;for(;i+a<e.graphics.length&&e.graphics[i+a].nodeIndex===o;)a++;const p=this.getNode(o);if(null!=p&&p.node.level>s)i+=a;else{for(let s=i;s<i+a;s++){const i=e.graphics[s];i.nodeIndex=r,this._updateAndCompare(i,e,s)&&t.push(i)}i+=a}}t.length>0&&this._notifyUpdated(t)}toArray(){return Array.from(this._graphics.values())}find(e){let t;return T(this._graphics,(r=>!!e(r)&&(t=r,!0))),t}forEach(e){this._graphics.forEach((t=>e(t)))}forEachNode(e){this._nodes.forEach(((t,r)=>e(t,r)))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach(((t,r)=>{t.graphics.forEach((t=>{e.set(t.objectId,1+(e.get(t.objectId)??0)),this._duplicates.get(t.objectId)}))})),e.forEach(((e,t)=>{const r=this._graphics.get(t);if(!r)return;if(!this._nodes.get(r.nodeIndex))return;const s=this._duplicates.get(t);s&&s.forEach((e=>{this._nodes.get(e)}))}))}}const oe=P();class ae{constructor(e,t,r,s){this.graphics=e,this.featureIds=t,this.attributeInfo=r,this.node=s}}let pe=class extends(z(W(K(O(A))))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new ie(((e,t,r)=>function(e,t,r){const s=t.attributeInfo;if(null==s?.loadedAttributes||null==s.attributeData)return!1;let i=!1;for(const{name:t}of s.loadedAttributes)if(s.attributeData[t]){const o=Q(s.attributeData[t],r);o!==e.attributes[t]&&(e.attributes[t]=o,i=!0)}return i}(e,t,r)),(e=>this.processor.graphicsCore.recreateGraphics(e))),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then((()=>{B(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const t=this.view.resourceController?.memoryController;this._i3sOverrides=new I({view:this.view,layer:e,memoryController:t}),o(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()})):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const e=this.view.resourceController?.memoryController;this._i3sOverrides=new I({view:this.view,layer:this.layer,memoryController:e}),q(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new F({layerView:this}),this._updatingHandles.add((()=>this.layer.rangeInfos),(e=>this._rangeInfosChanged(e)),a),this._updatingHandles.add((()=>this.layer.renderer),((e,t)=>this._rendererChange(e,t))),this._updatingHandles.add((()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted]),(()=>this._filterChange())),this.addHandles(p((()=>J.I3S_TREE_SHOW_TILES),(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&J.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||J.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}),a)),this._set("processor",new V({owner:this,preferredUpdatePolicy:ee.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",(({extent:e,spatialReference:t})=>this._controller.updateElevationChanged(e,t))),this.supportsHeightUnitConversion&&(this._verticalScale=b("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new x({layerView:this}),H(this.layer.geometryDefinitions)&&(this._worker=new se((e=>this.view.resourceController.immediate.schedule(e)))),this.addHandles(this.layer.on("apply-edits",(e=>this._updatingHandles.addPromise(e.result)))),this.addHandles(this.layer.on("edits",(e=>{const t=this._pendingEditsQueue.then((()=>this._handleEdits(e))).then();this._pendingEditsQueue=t,this._updatingHandles.addPromise(t)}))),this.when((()=>{this._setupQueryEngine(),this._updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),a),this._updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=o(this._treeDebugger),this._i3sOverrides=o(this._i3sOverrides),this._set("processor",o(this.processor)),this._controller=o(this._controller),this._queryEngine=o(this._queryEngine),this._worker=o(this._worker),this._memCache=o(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=o(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??1}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return"Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){return!this.suspended&&!!this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}async whenGraphicAttributes(e,t){return k(this.layer,e,this._getObjectIdField(),t,(()=>[...this.loadedGraphics.nodes()]))}getHit(e){if(!this.loadedGraphics)return null;const t=S(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t?.attributes?.[r]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return N(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};null==this._worker&&(this._worker=new se((e=>this.view.resourceController.immediate.schedule(e))));const s=await this._worker.invoke(r,t);if(null==s)throw new Error("Failed to decompress Draco point data");return{positionData:s.positions,featureIds:s.featureIds}}async addNode(e,t,r){if(!le(t)&&!function(e){return"pointData"in e}(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void i.getLogger(this).error("I3S node "+e.id+" already added");const s=null!=this.layer.fullExtent?(l=.5,(n=this.layer.fullExtent.clone()).xmin-=l,n.ymin-=l,n.xmax+=l,n.ymax+=l,null!=n.zmin&&null!=n.zmax&&(n.zmin-=l,n.zmax+=l),null!=n.mmin&&null!=n.mmax&&(n.mmin-=l,n.mmax+=l),n):null,{featureIds:o,pointPositions:a}=le(t)?await this._extractBinaryPointPositions(e,t,r):this._extractLegacyPointPositions(t),p=new Array;var n,l;this._validatePositions(e,o,a,s,p);const m=this._controller.crsVertex,d=this.view.spatialReference;c(a,m,0,a,d,0,o.length);const u=le(t)?e.level:0,h=this._createGraphics(o,a,e.index,u),j=new ae(h,o,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(j.featureIds,t.attributeDataInfo,r),e.numFeatures=j.graphics.length,this._updateNodeMemory(e),me(j),p.length>0&&(this._computeObb(e,p,m),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(j);if(null!=this._verticalScale)for(const e of j.graphics)this._verticalScale(e.geometry);const g=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(null!=g){const e=U(this.view.map,this.layer.uid);for(let t=0;t<j.featureIds.length;t++){const r=j.featureIds[t];g.setUidToObjectAndLayerId(r,j.graphics[t].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!e&&te(this.layer,this.view.popup?.defaultPopupTemplateEnabled),j.node.resources.attributes,t)}}this.loadedGraphics.addNode(e.index,j),this._controller.updateLoadStatus(e.index,!0),this._filterNode(j),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,r){const s=this._controller.crsIndex,i=s.isGeographic?this.view.renderSpatialReference:s;c(t,r,0,t,i,0,t.length/3),e.serviceObbInIndexSR=Y(new X(t,3)),s.isGeographic&&(h(e.serviceObbInIndexSR.center,i,ue,s),e.serviceObbInIndexSR.center=ue)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,r){const s=await this._decompressBinaryPointData(t,r),i=s.positionData,o=i.length/3,a=y(3*o),p=null!=e.serviceObbInIndexSR?e.serviceObbInIndexSR.center:d,n=Math.abs(p[2])*2**-20;for(let e=0;e<o;e++){const t=3*e;a[t]=i[t]+p[0],a[t+1]=i[t+1]+p[1],a[t+2]=i[t+2]+p[2],Math.abs(a[t+2])<n&&(a[t+2]=0)}return{featureIds:s.featureIds?f(s.featureIds):[],pointPositions:a}}_extractLegacyPointPositions(e){const t=e.pointData.length,r=y(3*t),s=new Array;for(let i=0;i<t;i++){const t=e.pointData[i],o=t.featureDataPosition,a=o.length,p=t.geometries?.[0]??de[a],n=t.featureIds[0];if("Embedded"!==p.type||"points"!==p.params.type||a<2||a>3)continue;const l=p.params.vertexAttributes?.position??[0,0,0],m=3*s.length;r[m]=o[0]+l[0],r[m+1]=o[1]+l[1],r[m+2]=3===a?o[2]+l[2]:NaN,s.push(n)}return{featureIds:s,pointPositions:r}}_validatePositions(e,t,r,s,o){if(null==s&&e.serviceObbInIndexSR)return;const a=t.length;for(let t=0;t<a;t++){const a=3*t;m(ue,r[a],r[a+1],r[a+2]);const p=!Number.isNaN(r[2]);null==s||(p?j(s,ue):g(s,ue))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&i.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&i.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||o.push(ue[0],ue[1],ue[2])}}_createGraphics(e,r,s,i){const o=e.length,a=this._getObjectIdField(),p=this.processor.graphicsCore,n=new Array,l=this.view.spatialReference;for(let m=0;m<o;m++){const o=e[m],d={};null!=o&&(d[a]=o);const u=o??t.generateUID(),c=3*m,h=isNaN(r[c+2])?void 0:r[c+2],j=w(r[c],r[c+1],h,l),g=this.loadedGraphics.get(u);if(null!=g)(null==g.level||g.level<i)&&(ce.property="geometry",ce.graphic=g,ce.oldValue=g.geometry,ce.newValue=j,g.geometry=j,g.level=i,p.graphicUpdateHandler(ce)),n.push(g);else{const e=t.generateUID();n.push({objectId:u,uid:e,geometry:j,attributes:d,visible:!0,nodeIndex:s,level:i})}}return n}_updateNodeMemory(e){e.memory=4096+(null!=e.numFeatures?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>v(t)+e),r(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)})),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return null==t?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){return this._memCache?.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,s){this.loadedGraphics.hasNode(e.index)?i.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,r,s),t.attributeInfo=r,this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),me(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if(null!=t?.attributeInfo)return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this.loadedGraphics.getNode(e);null!=r?.attributeInfo&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const s=this.loadedGraphics.getNode(e);null!=s&&(await this._i3sOverrides.applyAttributeOverrides(s.featureIds,t,r),s.attributeInfo=t,this._attributeValuesChanged(s))}_attributeValuesChanged(e){if(me(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.node.index,r=new Array;e.graphics.forEach((e=>e.nodeIndex===t&&r.push(e.uid))),this.processor.graphicsCore.updateLabelingInfo(r)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||_}_getGlobalIdField(){return this.layer.associatedLayer?.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,s=new Set;let i,o;e?(await e.collectRequiredFields(s,r),i=Array.from(s).sort()):i=[],s.clear(),t?(await t.collectRequiredFields(s,r),o=Array.from(s).sort()):o=[],i.length===o.length&&i.every(((e,t)=>i[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&i.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,r=this._excludeObjectIdsSorted,i=this._getObjectIdField();for(const o of e.graphics){const e=o.visible,a=!t||this._evaluateClause(t,o),p=null==r||s(r,o.attributes[i])<0;o.visible=a&&p,e!==o.visible&&(ce.graphic=o,ce.property="visible",ce.oldValue=e,ce.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(ce))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return null!=this.filter?this.filter.createQuery(e):new E(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(null==e?this.createQuery():E.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new M({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:re.FEATURE_QUERY_ENGINE})}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return.8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,r=await L(t,e);R(t,r)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:e=>this.loadedGraphics.forEachNode((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,s)=>{this._setAttributeData(t,r);const i=this.loadedGraphics.getNode(t);if(null!=s){const t=this.loadedGraphics.get(s.attributes[e]);null!=t&&this.processor.graphicsCore.recreateGraphics([t])}else null!=i&&this.processor.graphicsCore.recreateGraphics(i.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new Z(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};e([n()],pe.prototype,"processor",void 0),e([n({type:C})],pe.prototype,"filter",void 0),e([n()],pe.prototype,"loadedGraphics",void 0),e([n()],pe.prototype,"i3slayer",null),e([n()],pe.prototype,"_controller",void 0),e([n()],pe.prototype,"updating",void 0),e([n()],pe.prototype,"suspended",void 0),e([n()],pe.prototype,"holeFilling",void 0),e([n($)],pe.prototype,"updatingProgress",void 0),e([n()],pe.prototype,"updatingProgressValue",null),e([n(oe.requiredFields)],pe.prototype,"requiredFields",null),e([n(oe.availableFields)],pe.prototype,"availableFields",void 0),e([n()],pe.prototype,"_fieldsHelper",void 0),e([n({type:Number})],pe.prototype,"maximumNumberOfFeatures",null),e([n({readOnly:!0})],pe.prototype,"maximumNumberOfFeaturesExceeded",null),e([n()],pe.prototype,"_excludeObjectIdsSorted",null),e([n({readOnly:!0})],pe.prototype,"lodFactor",null),e([n({readOnly:!0})],pe.prototype,"hasM",null),e([n({readOnly:!0})],pe.prototype,"hasZ",null),e([n()],pe.prototype,"contentVisible",null),e([n({readOnly:!0})],pe.prototype,"legendEnabled",null),pe=e([l("esri.views.3d.layers.SceneLayerGraphicsView3D")],pe);const ne=pe;function le(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function me(e){const t=e.attributeInfo,r=e.node.index;if(null!=t?.loadedAttributes&&null!=t.attributeData)for(let s=0;s<e.graphics.length;s++){const i=e.graphics[s];if(i.nodeIndex===r){i.attributes||(i.attributes={});for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(i.attributes[e]=Q(t.attributeData[e],s))}}}const de={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},ue=u(),ce={graphic:null,property:null,oldValue:null,newValue:null};export{ne as default};
