/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{P as e}from"./TiledDisplayObject.js";import{B as t}from"./BufferObject.js";import{T as r,c as s,U as i,i as n,P as a,d as o,b as E}from"./enums.js";import{F as _}from"./Program.js";import{a as u,T}from"./Texture.js";import{V as m}from"./VertexArrayObject.js";import{f as g}from"./maybe.js";class p{constructor(e,t,r,s,i,n,a,o,E){this.createQuery=e,this.deleteQuery=t,this.resultAvailable=r,this.getResult=s,this.disjoint=i,this.beginTimeElapsed=n,this.endTimeElapsed=a,this.createTimestamp=o,this.timestampBits=E}}let l=!1;function c(e,t){if(t.disjointTimerQuery)return null;let r=e.getExtension("EXT_disjoint_timer_query_webgl2");return r?new p((()=>e.createQuery()),(t=>{e.deleteQuery(t),l=!1}),(t=>e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE)),(t=>e.getQueryParameter(t,e.QUERY_RESULT)),(()=>e.getParameter(r.GPU_DISJOINT_EXT)),(t=>{l||(l=!0,e.beginQuery(r.TIME_ELAPSED_EXT,t))}),(()=>{e.endQuery(r.TIME_ELAPSED_EXT),l=!1}),(e=>r.queryCounterEXT(e,r.TIMESTAMP_EXT)),(()=>e.getQuery(r.TIMESTAMP_EXT,r.QUERY_COUNTER_BITS_EXT))):(r=e.getExtension("EXT_disjoint_timer_query"),r?new p((()=>r.createQueryEXT()),(e=>{r.deleteQueryEXT(e),l=!1}),(e=>r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT)),(e=>r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)),(()=>e.getParameter(r.GPU_DISJOINT_EXT)),(e=>{l||(l=!0,r.beginQueryEXT(r.TIME_ELAPSED_EXT,e))}),(()=>{r.endQueryEXT(r.TIME_ELAPSED_EXT),l=!1}),(e=>r.queryCounterEXT(e,r.TIMESTAMP_EXT)),(()=>r.getQueryEXT(r.TIMESTAMP_EXT,r.QUERY_COUNTER_BITS_EXT))):null)}class d{constructor(){this._result=!1}dispose(){this._program=g(this._program)}get result(){return null!=this._program&&(this._result=this._test(this._program),this.dispose()),this._result}}class h extends d{constructor(e){super(),this._rctx=e,this._program=e.programCache.acquire("\n    precision highp float;\n\n    attribute vec2 a_pos;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = a_pos;\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n    precision highp float;\n\n    varying vec2 v_uv;\n\n    uniform sampler2D u_texture;\n\n    void main() {\n      gl_FragColor = texture2D(u_texture, v_uv);\n    }\n    ",new Map([["a_pos",0]]))}dispose(){super.dispose()}_test(g){const p=this._rctx;if(!p.gl)return g.dispose(),!0;const l=new u(1);l.wrapMode=r.CLAMP_TO_EDGE,l.samplingMode=s.NEAREST;const c=new _(p,l),d=t.createVertex(p,i.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),h=new m(p,new Map([["a_pos",0]]),e,{geometry:d}),A=new u;A.samplingMode=s.LINEAR,A.wrapMode=r.CLAMP_TO_EDGE;const w=new T(p,A,y);p.useProgram(g),p.bindTexture(w,0),g.setUniform1i("u_texture",0);const f=p.getBoundFramebufferObject(),{x:X,y:v,width:I,height:P}=p.getViewport();p.bindFramebuffer(c),p.setViewport(0,0,1,1),p.setClearColor(0,0,0,0),p.setBlendingEnabled(!1),p.clear(n.COLOR_BUFFER_BIT),p.bindVAO(h),p.drawArrays(a.TRIANGLE_STRIP,0,4);const Q=new Uint8Array(4);return c.readPixels(0,0,1,1,o.RGBA,E.UNSIGNED_BYTE,Q),h.dispose(),c.dispose(),w.dispose(),p.setViewport(X,v,I,P),p.bindFramebuffer(f),255!==Q[0]}}const y=new Image;y.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",y.width=5,y.height=5,y.decode();export{h as S,d as W,c,l as h};
