/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{a as t}from"./maybe.js";import{throwIfNotAbortError as e,throwIfAbortError as s,isAbortError as i,eachAlways as r}from"../core/promiseUtils.js";import{addQueryParameters as h}from"../core/urlUtils.js";import{open as a}from"../core/workers/workers.js";import{R as n}from"./Rect.js";import{d as o,T as l}from"./enums.js";import{a as c,T as _}from"./Texture.js";import u from"../request.js";import{P as g}from"./pbf.js";import"../core/lang.js";import{r as p}from"./rasterizingUtils.js";import{T as d}from"./TileKey2.js";import f from"../layers/support/TileInfo.js";import{T as y}from"./TileStrategy.js";class m{constructor(t,e){this._width=0,this._height=0,this._free=[],this._width=t,this._height=e,this._free.push(new n(0,0,t,e))}get width(){return this._width}get height(){return this._height}allocate(t,e){if(t>this._width||e>this._height)return new n;let s=null,i=-1;for(let r=0;r<this._free.length;++r){const h=this._free[r];t<=h.width&&e<=h.height&&(null===s||h.y<=s.y&&h.x<=s.x)&&(s=h,i=r)}return null===s?new n:(this._free.splice(i,1),s.width<s.height?(s.width>t&&this._free.push(new n(s.x+t,s.y,s.width-t,e)),s.height>e&&this._free.push(new n(s.x,s.y+e,s.width,s.height-e))):(s.width>t&&this._free.push(new n(s.x+t,s.y,s.width-t,s.height)),s.height>e&&this._free.push(new n(s.x,s.y+e,t,s.height-e))),new n(s.x,s.y,t,e))}release(t){for(let e=0;e<this._free.length;++e){const s=this._free[e];if(s.y===t.y&&s.height===t.height&&s.x+s.width===t.x)s.width+=t.width;else if(s.x===t.x&&s.width===t.width&&s.y+s.height===t.y)s.height+=t.height;else if(t.y===s.y&&t.height===s.height&&t.x+t.width===s.x)s.x=t.x,s.width+=t.width;else{if(t.x!==s.x||t.width!==s.width||t.y+t.height!==s.y)continue;s.y=t.y,s.height+=t.height}this._free.splice(e,1),this.release(t)}this._free.push(t)}}class w{constructor(t,e,s){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphIndex={},this._textures=[],this._rangePromises=new Map,this.width=t,this.height=e,this._glyphSource=s,this._binPack=new m(t-4,e-4),this._glyphData.push(new Uint8Array(t*e)),this._dirties.push(!0),this._textures.push(void 0)}getGlyphItems(t,e){const s=[],i=this._glyphSource,r=new Set,h=1/256;for(const t of e){const e=Math.floor(t*h);r.add(e)}const a=[];return r.forEach((e=>{const s=t+e;if(this._rangePromises.has(s))a.push(this._rangePromises.get(s));else{const r=i.getRange(t,e).then((()=>{this._rangePromises.delete(s)}),(()=>{this._rangePromises.delete(s)}));this._rangePromises.set(s,r),a.push(r)}})),Promise.all(a).then((()=>{let r=this._glyphIndex[t];r||(r={},this._glyphIndex[t]=r);for(const h of e){const e=r[h];if(e){s[h]={sdf:!0,rect:e.rect,metrics:e.metrics,page:e.page,code:h};continue}const a=i.getGlyph(t,h);if(!a?.metrics)continue;const o=a.metrics;let l;if(0===o.width)l=new n(0,0,0,0);else{const t=3,e=o.width+2*t,s=o.height+2*t;let i=e%4?4-e%4:4,r=s%4?4-s%4:4;1===i&&(i=5),1===r&&(r=5),l=this._binPack.allocate(e+i,s+r),l.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(void 0),this._binPack=new m(this.width-4,this.height-4),l=this._binPack.allocate(e+i,s+r));const h=this._glyphData[this._currentPage],n=a.bitmap;let c,_;if(n)for(let t=0;t<s;t++){c=e*t,_=this.width*(l.y+t+1)+l.x;for(let t=0;t<e;t++)h[_+t+1]=n.at(c+t)}}r[h]={rect:l,metrics:o,tileIDs:null,page:this._currentPage},s[h]={sdf:!0,rect:l,metrics:o,page:this._currentPage,code:h},this._dirties[this._currentPage]=!0}return s}))}removeGlyphs(t){for(const e in this._glyphIndex){const s=this._glyphIndex[e];if(!s)continue;let i;for(const e in s)if(i=s[e],i.tileIDs.delete(t),0===i.tileIDs.size){const t=this._glyphData[i.page],r=i.rect;let h,a;for(let e=0;e<r.height;e++)for(h=this.width*(r.y+e)+r.x,a=0;a<r.width;a++)t[h+a]=0;delete s[e],this._dirties[i.page]=!0}}}bind(t,e,s,i=0){if(!this._textures[s]){const e=new c;e.pixelFormat=o.ALPHA,e.wrapMode=l.CLAMP_TO_EDGE,e.width=this.width,e.height=this.height,this._textures[s]=new _(t,e,new Uint8Array(this.width*this.height))}const r=this._textures[s];r.setSamplingMode(e),this._dirties[s]&&r.setData(this._glyphData[s]),t.bindTexture(r,i),this._dirties[s]=!1}destroy(){this.dispose()}dispose(){this._glyphData.length=0,this._binPack=null;for(const t of this._textures)t&&t.dispose();this._textures.length=0}}class S{constructor(t){if(this._metrics=[],!t)return void(this._allBitmaps=null);const e=new Map;let s=0;for(;t.next();)switch(t.tag()){case 1:{const i=t.getMessage();for(;i.next();)switch(i.tag()){case 3:{const t=i.getMessage();let r,h,a,n,o,l,c;for(;t.next();)switch(t.tag()){case 1:r=t.getUInt32();break;case 2:h=t.getBytes();break;case 3:a=t.getUInt32();break;case 4:n=t.getUInt32();break;case 5:o=t.getSInt32();break;case 6:l=t.getSInt32();break;case 7:c=t.getUInt32();break;default:t.skip()}if(t.release(),r){const t=h?.length??0;this._metrics[r]={width:a,height:n,left:o,top:l,advance:c,startOffset:s,length:t},e.set(r,h),s+=t}break}default:i.skip()}i.release();break}default:t.skip()}const i=new Uint8Array(s),r=this._metrics;for(const[t,s]of e){const{startOffset:e,length:h}=r[t];if(s)for(let t=0;t<h;++t)i[e+t]=s[t]}this._allBitmaps=i}getMetrics(t){return this._metrics[t]}getBitmap(t){if(!this._allBitmaps)return;const e=this._metrics[t];if(void 0===e)return;const{startOffset:s,length:i}=e;return 0!==i?new P(this._allBitmaps,s,i):void 0}}class x{constructor(){this._ranges=[]}get ranges(){return this._ranges}getRange(t){return this._ranges[t]}addRange(t,e){this._ranges[t]=e}}class b{constructor(t){this._glyphInfo={},this._baseURL=t}getRange(t,e){const s=this._getFontStack(t);if(s.getRange(e))return Promise.resolve();const i=256*e,r=i+255;if(this._baseURL){const h=this._baseURL.replace("{fontstack}",t).replace("{range}",i+"-"+r);return u(h,{responseType:"array-buffer"}).then((t=>{s.addRange(e,new S(new g(new Uint8Array(t.data),new DataView(t.data))))})).catch((()=>{s.addRange(e,new S)}))}return s.addRange(e,new S),Promise.resolve()}getGlyph(t,e){const s=this._getFontStack(t);if(!s)return;const i=Math.floor(e/256),r=s.getRange(i);return r?{metrics:r.getMetrics(e),bitmap:r.getBitmap(e)}:void 0}_getFontStack(t){let e=this._glyphInfo[t];return e||(e=this._glyphInfo[t]=new x),e}}class P{constructor(t,e,s){this._array=t,this._start=e,this.length=s}at(t){return 0<=t&&t<this.length?this._array[this._start+t]:void 0}}class v{constructor(t,e,s=0){this._size=[],this._mosaicsData=[],this._textures=[],this._dirties=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects={},this.pixelRatio=1,e<=0&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!"),this._pageWidth=t,this._pageHeight=e,s>0&&(this._maxItemSize=s),this._binPack=new m(t-4,e-4)}destroy(){this.dispose()}dispose(){this._binPack=null,this._mosaicsData.length=0,this._mosaicRects={};for(const t of this._textures)t&&t.dispose();this._textures.length=0}getWidth(t){return t>=this._size.length?-1:this._size[t][0]}getHeight(t){return t>=this._size.length?-1:this._size[t][1]}getPageSize(t){return t>=this._size.length?null:this._size[t]}setSpriteSource(t){if(this.dispose(),this.pixelRatio=t.devicePixelRatio,0===this._mosaicsData.length){this._binPack=new m(this._pageWidth-4,this._pageHeight-4);const t=Math.floor(this._pageWidth),e=Math.floor(this._pageHeight),s=new Uint32Array(t*e);this._mosaicsData[0]=s,this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0)}this._sprites=t}getSpriteItem(t,e=!1){let s,i,r=this._mosaicRects[t];if(r)return r;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;if(t&&t.startsWith("dasharray-")?([s,i]=this._rasterizeDash(t),e=!0):s=this._sprites.getSpriteInfo(t),!s?.width||!s.height||s.width<0||s.height<0)return null;const h=s.width,a=s.height,[n,o,l]=this._allocateImage(h,a);return n.width<=0?null:(this._copy(n,s,o,l,e,i),r={type:"sprite",rect:n,width:h,height:a,sdf:s.sdf,simplePattern:!1,rasterizationScale:s.pixelRatio,page:o},this._mosaicRects[t]=r,r)}getSpriteItems(t){const e={};for(const s of t)e[s.name]=this.getSpriteItem(s.name,s.repeat);return e}getMosaicItemPosition(t,e){const s=this.getSpriteItem(t,e),i=s?.rect;if(!i)return null;i.width=s.width,i.height=s.height;const r=s.width,h=s.height;return{tl:[i.x+2,i.y+2],br:[i.x+2+r,i.y+2+h],page:s.page}}bind(t,e,s=0,i=0){if(s>=this._size.length||s>=this._mosaicsData.length)return;if(!this._textures[s]){const e=new c;e.wrapMode=l.CLAMP_TO_EDGE,e.width=this._size[s][0],e.height=this._size[s][1],this._textures[s]=new _(t,e,new Uint8Array(this._mosaicsData[s].buffer))}const r=this._textures[s];r.setSamplingMode(e),this._dirties[s]&&r.setData(new Uint8Array(this._mosaicsData[s].buffer)),t.bindTexture(r,i),this._dirties[s]=!1}static _copyBits(t,e,s,i,r,h,a,n,o,l,c){let _=i*e+s,u=n*h+a;if(c){u-=h;for(let a=-1;a<=l;a++,_=((a+l)%l+i)*e+s,u+=h)for(let e=-1;e<=o;e++)r[u+e]=t[_+(e+o)%o]}else for(let s=0;s<l;s++){for(let e=0;e<o;e++)r[u+e]=t[_+e];_+=e,u+=h}}_copy(t,e,s,i,r,h){if(!this._sprites||"loaded"!==this._sprites.loadStatus||s>=this._mosaicsData.length)return;const a=new Uint32Array(h?h.buffer:this._sprites.image.buffer),n=this._mosaicsData[s],o=h?e.width:this._sprites.width;v._copyBits(a,o,e.x,e.y,n,i[0],t.x+2,t.y+2,e.width,e.height,r),this._dirties[s]=!0}_allocateImage(t,e){t+=2,e+=2;const s=Math.max(t,e);if(this._maxItemSize&&this._maxItemSize<s){const s=new n(0,0,t,e);return this._mosaicsData.push(new Uint32Array(t*e)),this._dirties.push(!0),this._size.push([t,e]),this._textures.push(void 0),[s,this._mosaicsData.length-1,[t,e]]}let i=t%4?4-t%4:4,r=e%4?4-e%4:4;1===i&&(i=5),1===r&&(r=5);const h=this._binPack.allocate(t+i,e+r);return h.width<=0?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new m(this._pageWidth-4,this._pageHeight-4),this._allocateImage(t,e)):[h,this._currentPage,[this._pageWidth,this._pageHeight]]}_rasterizeDash(t){const e=t.match(/\[(.*?)\]/);if(!e)return null;const s=e[1].split(",").map(Number),i=t.slice(t.lastIndexOf("-")+1),[r,h,a]=p(s,i);return[{x:0,y:0,width:h,height:a,sdf:!0,pixelRatio:1},new Uint8Array(r.buffer)]}}class D{constructor(t,e,s,i){this._layer=t,this._styleRepository=e,this.devicePixelRatio=s,this._sourceDataMaxLOD=i,this._spriteMosaic=null,this._glyphMosaic=null,this._connection=null,this._spriteSourceAbortController=null,this._startOptionsInputSignal=null,this._inputSignalEventListener=null}destroy(){this._connection?.close(),this._connection=null,this._styleRepository=null,this._layer=null,this._spriteMosaic?.destroy(),this._spriteMosaic=null,this._glyphMosaic=null,this._spriteSourceAbortController=t(this._spriteSourceAbortController),this._spriteSourcePromise=null,this._inputSignalEventListener&&this._startOptionsInputSignal?.removeEventListener("abort",this._inputSignalEventListener),this._startOptionsInputSignal=null,this._inputSignalEventListener=null}get spriteMosaic(){return this._spriteSourcePromise.then((()=>this._spriteMosaic))}get glyphMosaic(){return this._glyphMosaic}async start(t){this._requestSprite(t);const s=this._layer.currentStyleInfo.glyphsUrl,i=new b(s?h(s,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new w(1024,1024,i),this._broadcastPromise=a("WorkerTileHandler",{client:this,schedule:t.schedule,signal:t.signal}).then((s=>{if(this._layer&&(this._connection?.close(),this._connection=s,this._layer&&!this._connection.closed)){const i=s.broadcast("setStyle",{style:this._layer.currentStyleInfo.style,sourceDataMaxLOD:this._sourceDataMaxLOD},t);Promise.all(i).catch((t=>e(t)))}}))}_requestSprite(t){this._spriteSourceAbortController?.abort();const e=new AbortController;this._spriteSourceAbortController=e;const i=t?.signal;this._inputSignalEventListener&&this._startOptionsInputSignal?.removeEventListener("abort",this._inputSignalEventListener),this._startOptionsInputSignal=null,i&&(this._inputSignalEventListener=function(t){return()=>t.abort()}(e),i.addEventListener("abort",this._inputSignalEventListener,{once:!0}));const{signal:r}=e,h={...t,signal:r};this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,h),this._spriteSourcePromise.then((t=>{s(r),this._spriteMosaic=new v(1024,1024,250),this._spriteMosaic.setSpriteSource(t)}))}async updateStyle(t){return await this._broadcastPromise,this._broadcastPromise=Promise.all(this._connection.broadcast("updateStyle",t)),this._broadcastPromise}setSpriteSource(t){const e=new v(1024,1024,250);return e.setSpriteSource(t),this._spriteMosaic=e,this._spriteSourcePromise=Promise.resolve(t),this._spriteSourceAbortController=null,e}async setStyle(t,e,s){await this._broadcastPromise,this._styleRepository=t,this._sourceDataMaxLOD=s,this._requestSprite();const i=new b(this._layer.currentStyleInfo.glyphsUrl?h(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);return this._glyphMosaic=new w(1024,1024,i),this._broadcastPromise=Promise.all(this._connection.broadcast("setStyle",{style:e,sourceDataMaxLOD:this._sourceDataMaxLOD})),this._broadcastPromise}async fetchTileData(t,e){const s=await this._getRefKeys(t,e);return this._getSourcesData(Object.keys(this._layer.sourceNameToSource),s,e)}async fetchTilePBFs(t){const e=Object.keys(this._layer.sourceNameToSource),s={},i=await this._getRefKeys(t,s),r=[],h=[];for(let t=0;t<i.length;t++)if(null==i[t].value||null==e[t])h.push(null);else{const a=i[t].value,n=this._getTilePayload(a,e[t],s);n.then((t=>{r.push({...t,key:a})})),h.push(n)}return Promise.all(h).then((()=>r))}async parseTileData(t,e){const s=t&&t.data;if(!s)return null;const{sourceName2DataAndRefKey:i,transferList:r}=s;return 0===Object.keys(i).length?null:this._broadcastPromise.then((()=>this._connection.invoke("createTileAndParse",{key:t.key.id,sourceName2DataAndRefKey:i,styleLayerUIDs:t.styleLayerUIDs},{...e,transferList:r})))}async getSprites(t){return await this._spriteSourcePromise,this._spriteMosaic.getSpriteItems(t)}getGlyphs(t){return this._glyphMosaic.getGlyphItems(t.font,t.codePoints)}async _getTilePayload(t,e,s){const r=d.pool.acquire(t.id),h=this._layer.sourceNameToSource[e],{level:a,row:n,col:o}=r;d.pool.release(r);try{return{protobuff:await h.requestTile(a,n,o,s),sourceName:e}}catch(t){if(i(t))throw t;return{protobuff:null,sourceName:e}}}async _getRefKeys(t,e){const s=this._layer.sourceNameToSource,i=new Array;for(const r in s){const h=s[r].getRefKey(t,e);i.push(h)}return r(i)}_getSourcesData(t,e,s){const i=[];for(let r=0;r<e.length;r++)if(null==e[r].value||null==t[r])i.push(null);else{const h=e[r].value,a=this._getTilePayload(h,t[r],s);i.push(a)}return r(i).then((t=>{const s={},i=[];for(let r=0;r<t.length;r++){const h=t[r].value;if(h&&h.protobuff&&h.protobuff.byteLength>0){const t=e[r].value.id;s[h.sourceName]={refKey:t,protobuff:h.protobuff},i.push(h.protobuff)}}return{sourceName2DataAndRefKey:s,transferList:i}}))}}class I extends y{constructor(){super(...arguments),this._fullCacheLodInfos=null,this._levelByScale={}}getTileParentId(t){const e=d.pool.acquire(t),s=0===e.level?null:d.getId(e.level-1,e.row>>1,e.col>>1,e.world);return d.pool.release(e),s}getTileCoverage(t,e,s=!0,i){const r=super.getTileCoverage(t,e,s,i);if(!r)return r;const h=1<<r.lodInfo.level;return r.spans=r.spans.filter((t=>t.row>=0&&t.row<h)),r}scaleToLevel(t){if(this._fullCacheLodInfos||this._initializeFullCacheLODs(this._lodInfos),this._levelByScale[t])return this._levelByScale[t];{const e=this._fullCacheLodInfos;if(t>e[0].scale)return e[0].level;let s,i;for(let r=0;r<e.length-1;r++)if(i=e[r+1],t>i.scale)return s=e[r],s.level+(s.scale-t)/(s.scale-i.scale);return e[e.length-1].level}}_initializeFullCacheLODs(t){let e;if(0===t[0].level)e=t.map((t=>({level:t.level,resolution:t.resolution,scale:t.scale})));else{const t=this.tileInfo.size[0],s=this.tileInfo.spatialReference;e=f.create({size:t,spatialReference:s}).lods.map((t=>({level:t.level,resolution:t.resolution,scale:t.scale})))}for(let t=0;t<e.length;t++)this._levelByScale[e[t].scale]=e[t].level;this._fullCacheLodInfos=e}}export{I as T,D as a};
