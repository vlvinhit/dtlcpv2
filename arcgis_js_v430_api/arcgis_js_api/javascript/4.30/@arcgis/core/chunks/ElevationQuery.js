/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{r as e}from"./asyncUtils.js";import t from"../core/Error.js";import{b as i}from"./maybe.js";import{whenOrAbort as o,throwIfAbortError as s}from"../core/promiseUtils.js";import{g as n}from"./unitUtils.js";import l from"../geometry/Multipoint.js";import a from"../geometry/Point.js";import r from"../geometry/Polyline.js";import{initializeProjection as c,project as p}from"../geometry/projection.js";import{d as u,c as m,k as h}from"./aaBoundingRect.js";import{MultiTileElevationSampler as f}from"../layers/support/ElevationSampler.js";import{E as d}from"./ElevationTile.js";import{T as y}from"./TileKey.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/lang.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"../core/accessorSupport/decorators/property.js";import"./ObservableBase.js";import"../core/scheduling.js";import"./jsonMap.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"./zmUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./extentUtils.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./SimpleObservable.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"./ElevationSamplerData.js";class g{async queryAll(e,i,o){if(!(e=o?.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const s=T.fromGeometry(i);let n=!1;o?.returnSampleInfo||(n=!0);const l={...E,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),n&&delete r.sampleInfo,r}async query(e,o,s){if(!e)throw new t("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!o||!(o instanceof T)&&"point"!==o.type&&"multipoint"!==o.type&&"polyline"!==o.type)throw new t("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const l={...E,...s},a=new x(e,o.spatialReference,l),r=l.signal;return await e.load({signal:r}),await async function(e,i,o){let s;const n=e.layer.tileInfo.spatialReference;if(i instanceof T?s=await i.project(n,o):(await c([{source:i.spatialReference,dest:n}],{signal:o}),s=p(i,n)),!s)throw new t("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);e.geometry=T.fromGeometry(s)}(a,o,r),await this._selectTiles(a,r),await q(a,r),function(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let o=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?o=e:t.elevationTile=null}t.z=o}))}(a),async function(e,t){const o=await e.geometry.project(e.outSpatialReference,t);i(o);const s={geometry:o.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(s.sampleInfo=function(e){const t=e.layer.tileInfo,i=n(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;return o.elevationTile&&o.elevationTile!==e.outsideExtentTile&&(s=t.lodAt(o.elevationTile.tile.level).resolution*i),{demResolution:s}}))}(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),s}(a,r)}async createSampler(e,i,o){if(!e)throw new t("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new t("elevation-query:invalid-extent","Invalid or undefined extent");const s={...E,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o?.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new t("elevation-query:invalid-extent","Invalid or undefined extent");const s={...E,...o,returnSampleInfo:!0},n=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,n,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const n=t.spatialReference,l=e.tileInfo.spatialReference;n.equals(l)||(await c([{source:n,dest:l}],{signal:s}),t=p(t,l));const a=new j(e,t,i,o);return await this._selectTiles(a,s),await q(a,s),new f(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.filter((e=>!e.tile.hasNoDataValues)).map((e=>u(e.extent))),n=await this._createSampler(e[e.length-1],t,o,s);if(0===n.samplers.length)return i;const l=i.samplers.concat(n.samplers),a=new f(l,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,o){const s=e.pop(),n=t.geometry.coordinates,l=t.sampleInfo;i(l);const a=[],r=[];for(let t=0;t<n.length;t++){const i=l[t];i.demResolution>=0?i.source||(i.source=s):e.length&&(a.push(n[t]),r.push(t))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),p=await this.query(e[e.length-1],c,o),u=p.sampleInfo;if(!u)throw new Error("no sampleInfo");return r.forEach(((e,t)=>{n[e].z=p.geometry.coordinates[t].z,l[e].demResolution=u[t].demResolution})),this._queryAllContinue(e,t,o)}async _selectTiles(e,i){"geometry"===e.type&&function(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const o=e.x,s=e.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(e.elevationTile=t)}))}(e);const o=e.options.demResolution;if("number"==typeof o)!function(e,t){const i=function(e,t){const{tileInfo:i,tilemapCache:o}=e.layer,s=t/n(i.spatialReference),l=R(i,o);let a=l[0],r=0;for(let e=1;e<l.length;e++){const t=l[e];Math.abs(t.resolution-s)<Math.abs(a.resolution-s)&&(a=t,r=e)}return r}(e,t);e.selectTilesAtLOD(i)}(e,o);else if("finest-contiguous"===o)await this._selectTilesFinestContiguous(e,i);else{if("auto"!==o)throw new t("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${o}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,i)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:o}=e.layer,s=_(i,o,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,i,n){const l=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=l.tilemapCache,r=e.getTilesToFetch();try{if(a&&!I(a))await o(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:n})))),n);else if(await q(e,n),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t("elevation-query:has-unavailable-tiles")}catch(t){s(t),await this._selectTilesFinestContiguousAt(e,i-1,n)}}async _selectTilesAuto(t,i){!function(e){const{tileInfo:t,tilemapCache:i}=e.layer,o=_(t,i,e.options.minDemResolution);e.selectTilesAtLOD(o,e.options.maximumAutoTileRequests)}(t),function(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{null!=e.id&&(e.id in o?o[e.id]++:(o[e.id]=1,i++))},n=e=>{if(null==e.id)return;const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,n);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(n(o),t.upsampleTile(o)&&(l=!0),s(o))}),n),l););}(t);const n=t.layer.tilemapCache;if(!n||I(n))return this._selectTilesAutoPrefetchUpsample(t,i);const l=t.getTilesToFetch(),a={},r=l.map((async t=>{const o=new y(null,0,0,0,m()),l=await e(n.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:i}));!1!==l.ok?null!=t.id&&(a[t.id]=o):s(l.error)}));await o(Promise.all(r),i),t.remapTiles(a)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await q(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class T{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new T;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new l({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=e.clone(),s=o.points[t];return i.x=s[0],i.y=s[1],i})),n=this.clone(s);return n.spatialReference=e,n}static fromGeometry(e){const t=new T;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof T)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case"point":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[new v(i.x,i.y,i.z,i.m)]:o?[new v(i.x,i.y,i.z)]:s?[new v(i.x,i.y,null,i.m)]:[new v(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>new v(e[0],e[1],e[2],e[3]))):o?i.points.map((e=>new v(e[0],e[1],e[2]))):s?i.points.map((e=>new v(e[0],e[1],null,e[2]))):i.points.map((e=>new v(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new l({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatialReference:i}):new l(t.map((e=>[e.x,e.y,e.z])),i);break}case"polyline":{const i=e,o=[],s=[],{hasZ:n,hasM:l}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,n&&l)for(const t of e)o.push(new v(t[0],t[1],t[2],t[3]));else if(n)for(const t of e)o.push(new v(t[0],t[1],t[2]));else if(l)for(const t of e)o.push(new v(t[0],t[1],null,t[2]));else for(const t of e)o.push(new v(t[0],t[1]));t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),n=s.map((e=>o.slice(e[0],e[1])));return new r({paths:n,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class v{constructor(e,t,i=null,o=null,s=null,n=null){this.x=e,this.y=t,this.z=i,this.m=o,this.tile=s,this.elevationTile=n}clone(){return new v(this.x,this.y,this.z,this.m)}}class w{constructor(e,t){this.layer=e,this.options=t}}class x extends w{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,o=R(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(o,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;if(!o)continue;const s=i.tile?.id;i.elevationTile||!s||e[s]||(e[s]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class j extends w{constructor(e,t,i,o){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,o=R(t,i);if(!e)return o.length-1;const s=this.extent;if(null==s)return-1;for(let i=o.length-1;i>=0;i--){const n=o[i],l=n.resolution*t.size[0],a=n.resolution*t.size[1];if(Math.ceil(s.width/l)*Math.ceil(s.height/a)<=e)return i}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=A(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=A(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:o}=this.layer,s=R(i,o)[e],n=i.tileAt(s.level,t.xmin,t.ymin),l=n.extent;if(null==l)return;const a=s.resolution*i.size[0],r=s.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),p=Math.ceil((t.ymax-l[1])/r);for(let e=0;e<p;e++)for(let t=0;t<c;t++){const o=new y(null,n.level,n.row-e,n.col+t);i.updateTileInfo(o),this._tileIsMasked(o)||this._candidateTiles.push(o)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&h(t,e.extent)))}}function _(e,t,i=0){const o=R(e,t);let s=o.length-1;if(i>0){const t=i/n(e.spatialReference),l=o.findIndex((e=>e.resolution<t));0===l?s=0:l>0&&(s=l-1)}return s}const E={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};function R(e,t){const i=e.lods;if(I(t)){const{effectiveMinLOD:e,effectiveMaxLOD:o}=t;return i.filter((t=>t.level>=e&&t.level<=o))}return i}async function q(e,t){const i=e.getTilesToFetch(),s={},n=e.options.cache,l=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const o=`${e.layer.uid}:${i.id}:${l}`,a=null!=n?n.get(o):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:l,signal:t});null!=n&&n.put(o,r),s[i.id]=new d(i,r)}));await o(Promise.allSettled(a),t),e.populateElevationTiles(s)}function A(e,t){const i={},o=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,o.push(s)):t&&t(s)}const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++){const i=s[o].extent;if(i&&e.extent&&h(i,e.extent))return t&&t(e),!1}return!0}))}function I(e){return null!=e?.tileInfo}export{g as ElevationQuery,T as GeometryDescriptor,_ as getFinestLodIndex};
