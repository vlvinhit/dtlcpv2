/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{h as t}from"./handleUtils.js";import{h as s,R as r}from"../core/lang.js";import{n as i}from"../core/scheduling.js";import{throwIfNotAbortError as n,throwIfAborted as a,onAbort as o,isAborted as u,ignoreAbortErrors as c,createResolver as l}from"../core/promiseUtils.js";import{watch as h}from"../core/reactiveUtils.js";import{a as d}from"./screenUtils.js";import{i as p}from"../core/workers/RemoteClient.js";import _ from"../layers/support/TileInfo.js";import{T as m}from"./TileStrategy.js";import{T as g}from"./TileKey2.js";import{i as f}from"./definitions.js";import{d as y,b}from"./maybe.js";import{n as I}from"../config.js";import{d as S,a as w,b as v}from"./diffUtils.js";import x from"../geometry/SpatialReference.js";import{M as j,F as k,C as F,b as C,c as M,i as T,R as q,a as E,d as R,e as O}from"./AttributeStore.js";import{g as P}from"./tileUtils.js";import{D as A,M as U}from"./MeshWriterRegistry.js";import{Q as D}from"./QueueProcessor.js";import"../geometry.js";import{g as L,d as z,o as W,t as G,e as N,u as B,v as V,w as Q,q as Y,m as X,p as $,a as H,x as Z}from"./featureConversionUtils.js";import{h as J,O as K}from"./OptimizedFeature.js";import{c as ee,p as te}from"./projectionSupport.js";import se from"../core/Evented.js";import{c as re}from"./aaBoundingBox.js";import{o as ie}from"./optimizedFeatureQueryEngineAdapter.js";import{Q as ne}from"./QueryEngine.js";import ae from"../layers/support/FieldsIndex.js";import{O as oe}from"./OptimizedGeometry.js";import{g as ue,a1 as ce,h as le}from"./unitUtils.js";import{r as he}from"./rbush.js";import{r as de}from"./mathUtils.js";import pe from"../geometry/Extent.js";import _e from"../geometry/Polygon.js";import me from"../request.js";import{f as ge,e as fe,b as ye}from"./query.js";import be from"../TimeExtent.js";import{sqlAnd as Ie}from"../core/sql.js";import{i as Se}from"./arcgisLayerUrl.js";import we from"../rest/support/Query.js";import{_ as ve}from"./tslib.es6.js";import xe from"../core/Accessor.js";import{property as je}from"../core/accessorSupport/decorators/property.js";import{L as ke}from"./Logger.js";import{subclass as Fe}from"../core/accessorSupport/decorators/subclass.js";import Ce from"../core/workers/Connection.js";import{t as Me}from"./quantizationUtils.js";import{i as Te}from"./ogcFeatureUtils.js";import{P as qe}from"./pbf.js";import{a as Ee,b as Re}from"./pbfQueryUtils.js";import{S as Oe}from"./StreamFeatureManager.js";import{createConnection as Pe}from"./createConnection.js";import{U as Ae}from"./UpdateTracking2D.js";import{T as Ue}from"./Tile.js";import"./asyncUtils.js";import"../core/Collection.js";import"./ensureType.js";import"./tracking.js";import"./utils.js";import"./shared.js";import"./SimpleObservable.js";import"./ObservableBase.js";import"../core/Handles.js";import"./metadata.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"./jsonMap.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Geometry.js";import"./assets.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./vec2.js";import"./dataViewUtils.js";import"./enums2.js";import"./Texture.js";import"./enums.js";import"./GLObjectType.js";import"./Program.js";import"./BufferObject.js";import"./_commonjsHelpers.js";import"./VertexElementDescriptor.js";import"./BoundingBox.js";import"./vec2f32.js";import"../layers/support/fieldUtils.js";import"../intl.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./datetime.js";import"./number.js";import"./substitute.js";import"./messages.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"./labelFormatUtils.js";import"./labelUtils.js";import"./TimeOnly.js";import"./UnknownTimeZone.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"../symbols/Font.js";import"./fontUtils.js";import"./GeometryUtils.js";import"./utils7.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./Rect.js";import"./defaults.js";import"../symbols/SimpleFillSymbol.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/Symbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/TextSymbol.js";import"./defaultsJSON.js";import"./centroid.js";import"./highlightReasons.js";import"./HighlightOptions.js";import"./timeSupport.js";import"../geometry/projection.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils8.js";import"./utils9.js";import"./PieChartMeshWriter.js";import"./libtess.js";import"./TurboLine.js";import"./earcut.js";import"./constants.js";import"./vec2f64.js";import"./grouping.js";import"./Queue.js";import"./ReactiveMap.js";import"../core/signal.js";import"./OptimizedFeatureSet.js";import"./json.js";import"./MemCache.js";import"./LRUCache.js";import"../core/sql/WhereClause.js";import"./fieldType.js";import"./QueryEngineCapabilities.js";import"./utils12.js";import"./timeUtils.js";import"./heatmapUtils.js";import"./vec4.js";import"./vec4f64.js";import"./utils2.js";import"./basemapUtils.js";import"../Basemap.js";import"./collectionUtils.js";import"../core/Loadable.js";import"../core/Promise.js";import"./loadAll.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./persistableUrlUtils.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./layerUtils2.js";import"./utils3.js";import"./mat4.js";import"./utils10.js";import"./generateRendererUtils.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"./debugFlags.js";import"./quickselect.js";import"./queryZScale.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./FullTextSearch.js";import"../core/Clonable.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"./geojson.js";import"./date2.js";import"./clientSideDefaults.js";import"./sourceUtils.js";import"./CircularArray.js";import"../layers/support/StreamConnection.js";import"./BindType.js";import"./Util.js";import"./UpdatingHandles.js";class De{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){p(this._eventLog.onEvent(e))}}function Le(e){switch(e){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case 128:return 1}}function ze(e){switch(e){case 1:case 2:case 4:return-1;case 8:case 16:return 0;case 32:case 64:case 128:return 1}}class We{constructor(e,t,s,r=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=r,this._meshes={self:new j(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0,this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&0===e.level}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach(((s,r)=>{const i=s.serialize(),n=1<<r,a=Le(n),o=ze(n),u=P(new g(this.tileKey),a,o,e);t.message.push({tileId:u.id,...i.message}),t.transferList.push(...i.transferList)})),t}_addOverlap(e,t,s,r){const i=Math.min(f/2,s),n=Math.min(f/2,r),a=255^((e<0+i?148:e>=f-i?41:189)|(t<0+n?224:t>=f-n?7:231));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const e=-Le(t)*f,s=-ze(t)*f;if(0!==s)continue;this._meshes.self.copyLast(e,s);continue}if(!this._meshes.neighbors[e]){const s=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new j(t,s)}const s=this._meshes.neighbors[e],r=-Le(t)*f,i=-ze(t)*f;s.copyLastFrom(this._meshes.self,r,i)}}}}class Ge{}class Ne{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new Ne;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const e=this.getBackgroundFill();if(e)return[...e,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}}class Be extends Ne{static async fromDictionaryRenderer(e,t){return new Be(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await this._context.createMeshWriters(i.meshes);this._hashToGroup.set(r,n)}}class Ve extends Ne{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new Ve(s,t.isMaxInclusive);await Promise.all(t.intervals.map((async t=>{const s=await e.createMeshWriters(t.meshes);r.add(t,s)})));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort(((e,t)=>e.interval.min-t.interval.min))}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let e=0;e<this._intervals.length;e++){const{interval:t,result:r}=this._intervals[e],i=s>=t.min,n=this._isMaxInclusive?s<=t.max:s<t.max;if(i&&n)return r}return null}}class Qe extends Ne{static async fromLabelSchema(e,t){const s=t.classes.map((async t=>{const s=await e.createMeshWriters(t.meshes);return{minScale:t.minScale,maxScale:t.maxScale,meshes:s,expression:null,where:await e.storage.createWhereClause(t.where)}})),r=await Promise.all(s);return new Qe(r)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const t of s)t.where&&!t.where(e)||r.push(...t.meshes);return r}_getLabels(e){return this._labels.filter((t=>this._validForTileScale(t,e)))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}}class Ye extends Ne{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter((e=>!!e)),i=new Ye(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),await Promise.all(t.map.map((async(t,s)=>{const r=await e.createMeshWriters(t.symbol);"<Null>"===t.value?i.setNullResult(r):i.add(t.value,r,s+1)}))),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(null==s||""===s||"<Null>"===s)return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(null!==this._nullResult&&(null==s||""===s||"<Null>"===s))return this._nullResult;if(null==s)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);null==i||""===i?s.push("<Null>"):s.push(i)}return s.join(this._separator)}}async function Xe(e,t){switch(t.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return Ne.from(e,t);case"interval":return Ve.fromIntervalSchema(e,t);case"dictionary":return Be.fromDictionaryRenderer(e,t);case"label":return Qe.fromLabelSchema(e,t);case"map":return Ye.fromMatcherSchema(e,t);case"subtype":return $e.fromSubtypes(e,t);case"cluster":return He.fromClusterSchema(e,t);default:throw new Error("Impl")}}class $e extends Ne{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const n=parseInt(i,10),a=Xe(e,t.renderers[i]).then((e=>s.set(n,e)));r.push(a)}return await Promise.all(r),new $e(s,t.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}}class He extends Ne{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([Xe(e,t.feature),Xe(e,t.cluster)]);return new He(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return 1===e.readAttribute("cluster_count")?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}}class Ze extends Ge{static async create(e,t){const s=await Xe(e,t.symbology),r=t.labels?await Xe(e,t.labels):null;return new Ze(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const r=this._labels.match(t,s);if(!r)return;for(const i of r)i.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}}class Je{constructor(e,t,s,r){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r}async createMeshWriters(e){const t=e.map((e=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,e)));return Promise.all(t)}}class Ke{constructor(e){this._outstandingMessages=[],this._queue=new D({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}}class et{static async create(e,t){if("count"===t.statisticType){const e=new A(1);return new et(t.name,t.alias,t.type,t.statisticType,e)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new et(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}}class tt{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}}class st{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,(e=>e),(e=>e))}getDisplayAndObjectIds(e){return this.displayMap(e,(e=>e),((e,t,s)=>[e,s]))}afterUpdateChunks(){}}class rt extends st{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this.events=new se,this.featureAdapter=ie}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new ne({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(e){}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=re();for(const r of e){const e=L(s,r.geometry,!1,!1);e&&t(e)}}}class it{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}}class nt{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}}class at extends k{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=z([],e,r,!1,!1,s);for(let t=0;t<i.length;t++)i[t].displayId=e[t].displayId;return at.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=W(e,t.objectIdField);return at.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=at.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new ae(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new at(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new at([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter((e=>!(null!=e.objectId&&t.has(e.objectId))))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new at(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return J(this._current)?G(this._current.geometry,2):0}_readX(){return J(this._current)?this._current.geometry.coords[0]:0}_readY(){return J(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return J(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const t=this._current.attributes[e];if(void 0!==t)return t;const s=e.toLowerCase();for(const e in this._current.attributes)if(e.toLowerCase()===s)return this._current.attributes[e];return}const s=this._fieldsIndex.get(e);if(!s)return;let r=this._current.attributes[s.name];return null==r?r:("esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r)),t&&this.fields.isDateField(e)?new Date(r):r)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}}class ot extends tt{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&B(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}}class ut extends rt{static async create(e,t,s,r,i){const n=new F({spatialReference:t}),a=await Promise.all(e.fields.map((async e=>et.create(n,e)))),o=e.featureFilter?await C.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return"geohash"===e.index.type&&await ee(t,x.WGS84),new ut(e,o,i,a,t,s,r)}constructor(e,t,s,r,i,n,a){super(n,a,i,r),this._schema=e,this._featureFilter=t,this._timeZone=s,this._metadata=new M({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fields:e.fields,globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new ot(e,this._attributeStore)}async*applyLocalEdit(e){for(const e of this._sendStates.values()){e.reset();const t=new it(e.subscription,at.empty(this._source.metadata),!0,!1,{});yield t}}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[];for(const e of this._sendStates.values())for(const t of e.featuresWorldSpace()){const{objectId:e,displayId:n}=t,a=r.get(e);if(null!=a){const t=s(n,a,e);i.push(t),r.delete(e)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._sendStates.values())for(const i of e.featuresWorldSpace())t.has(i.displayId)&&!s.has(i.objectId)&&(i.geometry&&r.push({...N(i,this._metadata.geometryType,!1,!1),displayId:i.displayId}),s.add(i.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace())e(s)}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,s=null!=t?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:s}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:n}=e,a=r.tile;if(e.done)return;for(const r of t.chunks()){if(s.has(r.chunkId))continue;s.add(r.chunkId);const t=r.queryInfo;if("tileId"in t){const e=new g(t.tileId);if(e.level!==a.level||e.world!==a.key.world)continue}r.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],u=r.tile.transform,c=r.tile.key.level;for(const e of i.values()){let t=n.get(e.id);if(t)t.attributes=e.getAttributes();else{const s=e.getGeometry(this.spatialReference,u);t=new K(s,e.getAttributes(),null),s||(t.centroid=e.getGeometricCentroid(this.spatialReference,u)),t.objectId=e.id,t.displayId=this._attributeStore.createDisplayIdForObjectId(`${t.objectId}.${c}`),n.set(e.id,t)}o.push(t)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const l=at.fromOptimizedFeatures(o,this._metadata,u),h=l.getCursor(),d=e.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;h.next();)this._attributeStore.setAttributeData(h.getDisplayId(),h,d);const p=new nt(e.subscription,l,[],e.done,{});yield p}}class ct{constructor(e){this._statistics=e}get statistics(){return this._statistics}}const lt=Math.PI/180;class ht{static create(e){return new ht(e.map((e=>function(e){switch(e.statisticType){case"min":return new pt(e);case"max":return new _t(e);case"avg":return new gt(e);case"avg_angle":return new ft(e);case"sum":case"count":return new mt(e);case"mode":return new yt(e)}}(e))))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new ht(this._statistics.map((e=>e.clone())))}}class dt{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);T(s)||this._insertValue(s)}}class pt extends dt{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new pt(this.field);return e.value=this.value,e}}class _t extends dt{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new _t(this.field);return e.value=this.value,e}}class mt extends dt{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new mt(this.field);return e.value=this.value,e}}class gt extends dt{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new gt(this.field);return e._total=this._total,e._count=this._count,e}}class ft extends dt{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*lt),this._y=this._y+Math.sin(e*lt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new ft(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}}class yt extends dt{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);null!=t?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const e=this._frequencies.get(t);null!=e?this._frequencies.set(t,e+s):this._frequencies.set(t,s)}}clone(){const e=new yt(this.field);return e._frequencies=new Map(this._frequencies),e}}class bt extends ct{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new bt(e,t,ht.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return bt.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new bt(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){0===this._count?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return null==e?this.centroidXWorld:V(e,this.centroidXWorld)}getCentroidY(e){return null==e?this.centroidYWorld:Q(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new oe([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(null!=t){const e=new oe;return Y(e,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new oe([],[this.centroidXWorld,this.centroidYWorld]);if(null!=e){const s=new oe;return Y(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new oe([],[s,r]);if(null!=t){const e=new oe;return Y(e,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return null!=this._firstFeatureAttributes?{...e,...this._firstFeatureAttributes}:e}}class It{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(null!==r&&!r.check(e))return;let i=0,n=0;if("esriGeometryPoint"===e.geometryType)i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const t=e.readCentroidForDisplay();if(null==t)return;const[s,r]=t.coords;if(s<0||s>f||r<0||r>f)return}const t=e.readCentroidWorldSpace();if(null==t)return;i=t.coords[0],n=t.coords[1]}this._insert(e,i,n,t)}}function St(e,t){return ue(e)*ce*96/t}class wt extends It{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=St(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,n,a,o]=r,u=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),c=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),h=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let t=c;t<=h;t++)for(let s=u;s<=l;s++){const r=`${s}.${t}`,i=this._cells.get(r);if(!i)continue;const n=e.get(i.id);n?i&&!e.has(i.id)&&n.merge(i):e.set(i.id,i.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,n=s*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,o).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=bt.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=bt.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}}class vt{constructor(e,t){this.inner=e,this.displayId=t}}class xt extends tt{constructor(e){super(e),this.didSend=!1,this.done=!1}}class jt{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new K(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId,yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const t of e){const e=t.queryInfo;"tileId"in e&&new g(e.tileId).level!==this._level||this._handledChunks.has(t.normalizedChunkId)||(this._handledChunks.add(t.normalizedChunkId),s=!0,t.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=St(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:e}of t){const t=e.tile.bounds,s=Math.floor(t[0]*i/n),a=Math.floor(t[1]*i/n),o=Math.ceil(t[2]*i/n),u=Math.ceil(t[3]*i/n);r.xMin=Math.min(r.xMin,s),r.yMin=Math.min(r.yMin,a),r.xMax=Math.max(r.xMax,o),r.yMax=Math.max(r.yMax,u)}return null!=this._lastCellBounds&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const e of this._clusters.values())e.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,e.inner)||t);if(t){const t=Array.from(this._statistics.entries()).map((([e,t])=>({fieldName:e,minValue:t.minValue,maxValue:t.maxValue})));await e.container.updateStatistics(this._level,t)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const e of this._clusters.values()){let t=e.inner.getCentroidX(i);const n=e.inner.getCentroidY(i),a=s.tile.lod,o=a.wrap?a.worldSize[0]:null,u=1===e.inner.count?e.inner.firstObjectId:e.inner.id,c=e.displayId;if(null!=o)if(1===o){const s=new oe([],[t,n]),i=new K(s,e.inner.getAttributes(),null);i.geometry.coords[0]-=f,i.objectId=u,i.displayId=c,r.push(i);const a=new oe([],[t,n]),o=new K(a,e.inner.getAttributes(),null);o.geometry.coords[0]+=f,o.objectId=u,o.displayId=c,r.push(o)}else t>f+f/2?t-=o*f:t<-f/2&&(t+=o*f);if(t<f+128&&t>=-128&&n<f+128&&n>=-128){const s=new oe([],[t,n]),i=new K(s,e.inner.getAttributes(),null);i.objectId=u,i.displayId=c,r.push(i)}}return at.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort(((e,t)=>t.count-e.count));const s=[];for(const e of this._clusters.values())s.push(e.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/St(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const s of t){if(n.has(s.id))continue;if(s.gridX<e.xMin||s.gridX>e.xMax||s.gridY<e.yMin||s.gridY>e.yMax)continue;const t=this._store.createDisplayIdForObjectId(s.id),a=new vt(s.clone(),t);n.add(s.id),this._clusters.set(s.id,a);const o=s.centroidXWorld,u=s.centroidYWorld;for(let e=s.gridY-i;e<=s.gridY+i;e++)for(let t=s.gridX-i;t<=s.gridX+i;t++){if(e===s.gridY&&t===s.gridX)continue;const i=this._cells.get(bt.createId(t,e));if(!i||n.has(i.id))continue;const c=Math.abs(i.centroidXWorld-o),l=Math.abs(i.centroidYWorld-u);c<r&&l<r&&(a.inner.merge(i),n.add(i.id))}}for(const e of s)this._store.releaseDisplayIdForObjectId(e)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if("esriFieldTypeString"===r.field.type)continue;const t=r.value,i=r.field,n=e.get(i.name);if(n){const{minValue:e,maxValue:r}=n,i=Math.min(n.minValue,t),a=Math.max(n.maxValue,t);e===i&&r===a||(n.minValue=i,n.maxValue=a,s=!0)}else e.set(i.name,{minValue:t,maxValue:t}),s=!0}return s}}class kt extends rt{static async create(e,t,s,r,i,n){const a=new F({spatialReference:s}),o={type:"grid",fields:await Promise.all(t.fields.map((async e=>et.create(a,e)))),spatialReference:s,featureFilter:t.featureFilter?await C.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:n};return new kt(e,t.clusterRadius,o,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=new M({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fields:[...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new xt(e)}async*applyLocalEdit(e){for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear();for(const e of this._sendStates.values())e.done=!1}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of n.clusters()){const t=r.get(e.inner.id);if(null==t){if(1===e.inner.count){const t=r.get(e.inner.firstObjectId);if(null!=t){const n=s(e.displayId,t,e.inner.firstObjectId);i.push(n),r.delete(e.inner.firstObjectId)}}}else{const n=s(e.displayId,t,e.inner.id);i.push(n),r.delete(e.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of n.aggregatesWorldSpace())if(t.has(e.displayId)&&!s.has(e.displayId)){const t=N(e,this._metadata.geometryType,!1,!1);if(s.add(e.displayId),1===t.attributes.cluster_count){r.push({...t,displayId:e.displayId});continue}i.push({...t,displayId:e.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter((e=>e.subscription.tile.level===this._requiredLevel));if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const e of s)e.subscription.tile.level===this._requiredLevel&&(e.didSend=!1,e.done=!1);const r=Array.from(this._sendStates.values()).filter((e=>e.done)).map((e=>e.subscription.tile.key)),i=new Set(r);for(const e of this._sendStates.values()){if(this._source.updateTracking.updating){if(r.some((t=>t.containsChild(e.subscription.tile.key))))continue;if(e.subscription.tile.key.getChildKeys().every((e=>i.has(e))))continue}e.didSend||e.subscription.tile.level!==this._requiredLevel||(e.didSend=!0,yield*this._update(e,t,this._source))}await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(null==this._requiredLevel||null==this._requiredScale)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(null==e||null==t)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new jt(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);const a=new it(e.subscription,r,!0,e.done,{});yield a}}class Ft{static fromReader(e){const t=[],s=e.copy(),r=re();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=he(9,(e=>(s.setIndex(e),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()})));return i.load(t),new Ft(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}}function Ct(e,t,s,r){if(r.isWebMercator){const r=de(e/le.radius),i=r-360*Math.floor((r+180)/360),n=[0,0];return Mt(n,0,de(Math.PI/2-2*Math.atan(Math.exp(-t/le.radius))),i,s),n}const i=te({x:e,y:t},r,x.WGS84);if(!i)return null;const n=[0,0];return Mt(n,0,i.y,i.x,s),n}function Mt(e,t,s,r,i){i%2&&(i+=1);let n=0,a=0,o=-90,u=90,c=-180,l=180;for(let e=0;e<i/2;e++){for(let t=0;t<5;t++){const s=(c+l)/2,i=r>s?1:0;n|=i<<29-(t+5*e),c=(1-i)*c+i*s,l=(1-i)*s+i*l}for(let t=0;t<5;t++){const r=(o+u)/2,i=s>r?1:0;a|=i<<29-(t+5*e),o=(1-i)*o+i*r,u=(1-i)*r+i*u}}e[2*t]=n,e[2*t+1]=a}class Tt extends ct{static create(e,t,s,r){const i=ht.create(e),n=new Array(32);for(let e=0;e<n.length;e++)n[e]=null;return new Tt(i,t,s,r,n)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new Tt(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=te({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},x.WGS84,e),u=X(new oe,o,!1,!1);return null!=t?Y(new oe,u,!1,!1,"esriGeometryPolygon",t,!1,!1):u}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=te({x:(r+n)/2,y:(i+a)/2},x.WGS84,e),u=$(new oe,o);return null!=t?Y(new oe,u,!1,!1,"esriGeometryPoint",t,!1,!1):u}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,n){if(r>=s)return this;const a=1-r%2,o=3*a+2*(1-a),u=2*a+3*(1-a),c=30-i-o,l=30-n-u,h=((e&7*a+3*(1-a)<<c)>>c)+((t&3*a+7*(1-a)<<l)>>l)*(8*a+4*(1-a)),d=this.children[h];return null==d?null:d.find(e,t,s,r+1,i+o,n+u)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s);return function(e,t){let s=-90,r=90,i=-180,n=180;for(let a=0;a<t;a++){const t=Math.ceil((a+1)/2),o=Math.floor((a+1)/2),u=1-a%2,c=30-(3*t+2*o),l=30-(2*t+3*o),h=2*u+3*(1-u),d=(7*u+3*(1-u)<<c&e.geohashX)>>c,p=(3*u+7*(1-u)<<l&e.geohashY)>>l;for(let e=3*u+2*(1-u)-1;e>=0;e--){const t=(i+n)/2,s=d&1<<e?1:0;i=(1-s)*i+s*t,n=(1-s)*t+s*n}for(let e=h-1;e>=0;e--){const t=(s+r)/2,i=p&1<<e?1:0;s=(1-i)*s+i*t,r=(1-i)*t+i*r}}return[i,s,n,r]}({geohashX:this.xNode<<r,geohashY:this.yNode<<i},this.depth)}}class qt{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=Tt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,n,a){let o=this._root,u=0,c=0,l=0;for(;null!==o;){if(o.insert(e,t,s,r,i,a),u>=n)return;const h=Math.ceil((u+1)/2),d=Math.floor((u+1)/2),p=1-u%2,_=30-(3*h+2*d),m=30-(2*h+3*d),g=(r&7*p+3*(1-p)<<_)>>_,f=(i&3*p+7*(1-p)<<m)>>m,y=g+f*(8*p+4*(1-p));c=c<<3*p+2*(1-p)|g,l=l<<2*p+3*(1-p)|f,null==o.children[y]&&(o.children[y]=Tt.create(this._fields,c,l,u+1),this._depth=Math.max(this._depth,u+1),this._size+=1),u+=1,o=o.children[y]}}putBins(e,t){for(const s of this.getNodes(t)){const t=e.get(s.id);t?t.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;null!==i;){const e=i.depth,n=i.xNode,a=i.yNode;if(e>=r){t.push(i),i=i.next;continue}const o=Math.ceil((e+1)/2),u=Math.floor((e+1)/2),c=1-e%2,l=30-(3*o+2*u),h=30-(2*o+3*u),d=~((1<<l)-1),p=~((1<<h)-1),_=(s.xLL&d)>>l,m=(s.yLL&p)>>h,g=(s.xTR&d)>>l,f=(s.yTR&p)>>h,y=n<<3*c+2*(1-c),b=a<<2*c+3*(1-c),I=y+8*c+4*(1-c),S=b+4*c+8*(1-c),w=Math.max(y,_),v=Math.max(b,m),x=Math.min(I,g),j=Math.min(S,f);let k=null,F=null;for(let e=v;e<=j;e++)for(let t=w;t<=x;t++){const s=t-y+(e-b)*(8*c+4*(1-c)),r=i.children[s];r&&(k||(k=r,k.next=i.next),F&&(F.next=r),F=r,r.next=i.next)}i=k||i.next}return t}}class Et extends It{constructor(e){super(e),this._tree=new qt(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,n=function(e,t,s,r){const i=[e.xmin,e.ymin,e.xmax,e.ymax],n=_e.fromExtent(pe.fromBounds(i,r)),a=te(n,r,x.WGS84,{densificationStep:64*t});if(!a)return null;const o=X(new oe,a,!1,!1),u=o.coords.filter(((e,t)=>!(t%2))),c=o.coords.filter(((e,t)=>t%2)),l=Math.min(...u),h=Math.min(...c),d=Math.max(...u),p=Math.max(...c),_=Ct(l,h,s,x.WGS84),m=Ct(d,p,s,x.WGS84);return _&&m?{bounds:i,geohashBounds:{xLL:_[0],yLL:_[1],xTR:m[0],yTR:m[1]},level:s}:null}(t,s,r,i);null!=n&&this._tree.putBins(e,n)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:n}=this._options,a=Ct(t,s,i,n);a&&this._tree.insert(e,t,s,a[0],a[1],i,r)}}class Rt extends k{static from(e,t){return new Rt(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint="esriGeometryPoint"===e.geometryType}setTransformForDisplay(e){const t=this._reader.getInTransform();if(null==t){const[t,s]=e.scale,[r,i]=e.translate;return this._displayTranslationX=-r/t,this._displayScaleX=1/t,this._displayTranslationY=i/s,this._displayScaleY=1/-s,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[u,c]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-u)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+c)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new Rt(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new oe;return Y(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return H(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}}class Ot{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return Rt.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new wt(e);break;case"geohash":this._aggregateIndex=new Et(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=Ft.fromReader(this.reader)),this._spatialIndex}}class Pt extends Ot{constructor(e,t){super(),this.metadata=e,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=t,this.normalizedChunkId=t}get reader(){return at.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overriddenIds.clear();n.next();){const e=n.readOptimizedFeatureWorldSpace(),t=e.objectId;r.push(e),i.add(t),this.overriddenIds.add(t),this.removed.delete(t)}for(const e of this._features){const t=e.objectId;a.has(t)||i.has(t)||(r.push(e),this.overriddenIds.add(t))}this._features=r;for(const e of i.values())this.removed.delete(e);for(const e of s)this.removed.add(e),this.overriddenIds.add(e)}removeOverrides(e){this.invalidate();const t=e.reader.getCursor(),s=new Set;for(;t.next();){const e=t.getObjectId();this.overriddenIds.has(e)&&(s.add(e),this.overriddenIds.delete(e))}this._features=this._features.filter((e=>!s.has(e.objectId)))}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class At extends tt{}class Ut extends st{constructor(e,t,s){super(e,t),this._timeZone=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._timeZone)}createState(e){return new At(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map((e=>[t(e),e]))),i=[];for(const e of this._source.chunks()){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId(),n=t.getDisplayId(),a=r.get(e);if(null!=a){const t=s(n,a,e);i.push(t),r.delete(e)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._source.chunks()){const i=e.reader.getCursor();for(;i.next();){const e=i.getObjectId(),n=i.getDisplayId();t.has(n)&&!s.has(e)&&(r.push({...i.readLegacyFeatureWorldSpace(),displayId:n}),s.add(e))}}return{features:r,aggregates:[]}}async*applyLocalEdit(e){const t=[],s=e.reader.getCursor();for(;s.next();){const e=s.getObjectId();t.push(e);const r=this._attributeStore.createDisplayIdForObjectId(e);s.setDisplayId(r),this._attributeStore.setAttributeData(r,s,this._evalOptions)}const r=this.getDisplayIds(t),i=this.getDisplayIds(e.removed),n=new Pt(this._source.metadata,"localEdit");n.applyOverrides(e),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const e of this._sendStates.values())e.handledChunks.add(n.chunkId),yield new nt(e.subscription,null,r,!1,n.queryInfo);for(const e of this._sendStates.values()){const t=n.getTileReader(e.subscription.tile);yield new nt(e.subscription,t,i,!1,n.queryInfo)}for(const t of e.removed)this._attributeStore.releaseDisplayIdForObjectId(t)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(e):this._attributeStore.releaseDisplayIdForObjectId(e)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const e=s.getCursor();for(;e.next();){const t=this._attributeStore.createDisplayIdForObjectId(e.getObjectId());e.setDisplayId(t)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getDisplayId();this._attributeStore.setAttributeData(e,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new it(e.subscription,n,!1,r.end,r.queryInfo))}}}class Dt{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new U,this._proxy=new q({fetch:(e,t)=>this._connection.layerView.fetch(e,t),fetchDictionary:(e,t)=>this._connection.layerView.fetchDictionary(e,t)}),this._attributeStore=new E({isLocal:!1,update:e=>p(this._connection.container.updateAttributeView(e))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,t,r,i,n){const a=e.processor,o=I(this._schema?.storage,a.storage),u=I(this._schema?.mesh.properties,a.mesh.properties),c=I(this._schema?.mesh.factory,a.mesh.factory),l=I(this._schema?.mesh.strategy,a.mesh.strategy),h=u||c||l;if(!o&&!h&&!i)return;s("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:S(this._schema,a),schema:a}),this._schema=a;const d=x.fromJSON(this._source.service.outSpatialReference),p=new F({fields:this._source.metadata.fieldsIndex,spatialReference:d});if(await this._attributeStore.update(a.storage,p,this._source.metadata,d,t),this._strategy?.invalidateAttributeData(),!i&&!h)return;(l||u)&&await this._updateStrategy(a.mesh.strategy,d,n,a.mesh.properties.timeZone),this._updateSortKey(p,"sortKey"in a.mesh.properties?a.mesh.properties.sortKey:null);const _=new Je(p,this._proxy,r,this._registry);return(c||"dictionary"===a.mesh.factory.symbology.type)&&(this._factory=await Ze.create(_,a.mesh.factory)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(e){if(!this._strategy)return;const t=this._strategy.applyLocalEdit(e);for await(const e of t)try{await this._process(e)}catch(e){}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map((({objectId:e,highlightFlags:t})=>({objectId:e,highlightFlags:t,displayId:-1}))),e);const t=this._strategy.displayMap(e,(({objectId:e})=>e),((e,{highlightFlags:t},s)=>({objectId:s,displayId:e,highlightFlags:t})));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],r=new Map;for await(const s of e){let e=r.get(s.id);null==e&&(e=new Ke({concurrency:16,process:e=>this._process(e)}),r.set(s.id,e));const i=e.push(s).catch((e=>n(e)));t.push(i)}try{await Promise.all(t)}catch(e){}s("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new Ut(this._source,this._attributeStore,r);break;case"binning":this._strategy=await ut.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await kt.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const e of s)this._strategy.onSubscribe(e)}async _updateSortKey(e,t){if(this._sortInfo=y(this._sortInfo?.computed),null!=t){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){const t=e.subscription;if(s("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),a(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(this._schema?.mesh.properties.timeZone)),i=t.tile.tileInfoView.tileInfo.isWrappable,{message:n,transferList:o}=r.serialize(i),u={objectIdMap:null,inner:e.createMessage(n,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){u.objectIdMap={};const t=e.reader?.getCursor();if(t)for(;t.next();)u.objectIdMap[t.getDisplayId()]=t.getObjectId()}if(a(t.signal),await this._connection.container.onMessage(u,{signal:t.signal,transferList:o}),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){const s=e.subscription.tile,r=e.reader?.getCursor(),i=r?.getSize()??0,n=s.tileInfoView.tileInfo.isWrappable,a=new We(s.key,this._strategy.enablePixelBuffering,n,i);if(!r)return a;const o=s.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;r.next();){const e=this._getSortKeyValue(r,t);a.entityStart(r.getDisplayId(),e),this._factory.write(a,this._proxy,r,o,s.level),a.entityEnd()}return a}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s?.read(e,t);return null==n||isNaN(n)?0:n*("asc"===r?-1:1)}}class Lt{static from(e){let t=0,s=0,r=0;return e.forEach((e=>{const i=e._readGeometry();i&&(s+=i.isPoint?1:i.lengths.reduce(((e,t)=>e+t),0),r+=i.isPoint?1:i.lengths.length,t+=1)})),new Lt(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}}class zt{static fromSchema(e,t,s){const r="feature"===t.type?t.mutable.dataFilter.queryScaleRanges:[];return new zt(function(e,t,s){const r=e.orderByFields??s.objectIdField+" ASC",i=e.source,n={returnCentroid:!(null!==i&&"object"==typeof i&&"path"in i&&Se(i.path))&&"esriGeometryPolygon"===s.geometryType,returnGeometry:!0,timeReferenceUnknownClient:s.timeReferenceUnknownClient??void 0,outSpatialReference:x.fromJSON(e.outSpatialReference),orderByFields:[r],where:t.mutable.dataFilter.definitionExpression??"1=1",outFields:t.mutable.availableFields};if("feature"===t.type){const{gdbVersion:e,historicMoment:s,timeExtent:r}=t.mutable.dataFilter;return{...n,gdbVersion:e,historicMoment:s?new Date(s):null,timeExtent:r?be.fromJSON(r):null,outFields:t.mutable.availableFields}}return n}(e,t,s),r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,n){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=s,this._customParameters=r,this._geometryType=i,this._queryMetadata=n}get pageSize(){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?4:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const s=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(s.outFields??[])[0])return null;s.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),r=[];for(const s of e)t.hasField(s)||r.push(s);if(0===r.length)return null;s.outFields=r}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new we({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support tile queries");const r=this.createQuery(t),i=r.inner;if(this._queryScaleRanges.length){const t=this._queryScaleRanges.filter((t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale))).map((e=>e.subtypeCode));if(t.length){const e=`${this._subtypeField} IN (${t})`;i.where=Ie(i.where,e)}}if(i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._queryMetadata.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset=e.resolution*s("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(i.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset*=s("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=4),s("esri-tiles-debug")){const t=e.id.replaceAll("/",".");r.customParameters=r.customParameters?{...r.customParameters,tileId:t}:{tileId:t}}return r}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:4})}}let Wt=class extends xe{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([h((()=>this._strategy?.connectionStatus??"disconnected"),(e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})}),{initial:!0}),h((()=>this._strategy?.errorString||null),(e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e})),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){null==this._strategy&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),null!=e&&(this.addHandles([e.events.on("data-received",(e=>this._onFeature(e))),e.events.on("message-received",(e=>this._onWebSocketMessage(e))),e.events.on("features-updated",(e=>this._onUpdate(e))),e.events.on("tick",(()=>this._onTick()))],t),this._queuedCommands.forEach((t=>t(e))),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){null!=e&&this._callOrEnqueue((t=>t.updateCustomParameters(e)))}sendMessageToSocket(e){this._callOrEnqueue((t=>t.sendMessageToSocket(e)))}sendMessageToClient(e){this._callOrEnqueue((t=>t.sendMessageToClient(e)))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>2500){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){null!=this._strategy?e(this._strategy):this._queuedCommands.push(e)}};ve([je()],Wt.prototype,"_strategy",void 0),Wt=ve([Fe("esri.views.2d.layers.features.sources.StreamMessenger")],Wt);class Gt{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}}const Nt=268435455;class Bt{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}}const Vt=268435455,Qt=128e3,Yt={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},large:{delta:new Int32Array(Qt),decoded:new Int32Array(Qt)}};function Xt(e){return e<=Yt.small.delta.length?Yt.small:(e<=Yt.large.delta.length||(Yt.large.delta=new Int32Array(Math.round(1.25*e)),Yt.large.decoded=new Int32Array(Math.round(1.25*e))),Yt.large)}function $t(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function Ht(e,t,s,r,i,n){return.5*Math.abs(e*r+s*n+i*t-e*n-s*t-i*r)}function Zt(e,t,s,r){return 0==e*r-s*t&&e*s+t*r>0}class Jt extends k{static fromBuffer(t,s,r=!1){const i=s.geometryType,n=function(t){try{const e=2,s=new qe(new Uint8Array(t),new DataView(t));for(;s.next();){if(s.tag()===e)return $t(s.getMessage());s.skip()}}catch(t){const s=new e("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:t});ke.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(s)}return null}(t),a=function(t,s,r=!1){const i=t.asUnsafe(),n=i.pos(),a=new Bt;let o=0,u=0,c=null,l=null,h=null,d=!1;const p=[];for(;i.next();)switch(i.tag()){case 1:c=i.getString();break;case 3:l=i.getString();break;case 12:h=i.processMessage(Re);break;case 9:if(a.exceededTransferLimit=i.getBool(),a.exceededTransferLimit){a.offsets.geometry=r?new Float64Array(8e3):new Int32Array(8e3),a.centroid=r?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<a.centroid.length;e++)a.centroid[e]=Nt}break;case 13:{const e=i.processMessage(Ee);e.index=o++,p.push(e);break}case 15:{const e=i.getLength(),t=i.pos()+e;if(!a.exceededTransferLimit){const e=a.offsets.geometry,t=a.centroid;e.push(0),t.push(Nt),t.push(Nt)}!d&&a.exceededTransferLimit&&(d=!0,a.offsets.attributes=r?new Float64Array(8e3*o):new Uint32Array(8e3*o));let n=u*o;for(;i.pos()<t&&i.next();)switch(i.tag()){case 1:{d?a.offsets.attributes[n++]=i.pos():a.offsets.attributes.push(i.pos());const e=i.getLength();i.skipLen(e);break}case 2:if(s){const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();a.centroid[2*u]=e,a.centroid[2*u+1]=t;break}default:i.skip()}}else{a.offsets.geometry[u]=i.pos();const e=i.getLength();a.vertexCount+=e,i.skipLen(e)}break;case 4:{const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();a.centroid[2*u]=e,a.centroid[2*u+1]=t;break}default:i.skip()}break}default:i.skip()}u++,a.hasFeatures=!0;break}default:i.skip()}const _=c||l;if(!_)throw new e("FeatureSet has no objectId or globalId field name");return a.fields=new ae(p),a.featureCount=u,a.fieldCount=o,a.objectIdFieldIndex=a.fields.get(_)?.index,a.transform=h,a.displayIds=new Uint32Array(a.featureCount),a.groupIds=new Uint16Array(a.featureCount),i.move(n),a}(n,"esriGeometryPoint"===i,r);return new Jt(n,a,s)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Jt(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Vt?null:new oe([],[e,t])}_readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Vt)return null;const e=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];t=new oe([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(e){return null}}return 0===t?.coords.length&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(null==s)return;let r=this._readAttributeAtIndex(s.index);"esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r));const i=this._header.fields.isDateField(s.name);return t?null==r?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new R(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Xt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(n+t),s=2*(n+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}n+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)n.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<s;)i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new oe(n,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];let a=0,o=0,u=null,c=0;const l="esriGeometryPolygon"===this.geometryType;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),a+=e}u=Xt(2*a).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);b(u);for(const s of i)if(o+e*s>u.length)for(let e=0;e<s;e++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(l){const e=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let r=2,i=1;const a=!1;let l=t.getSInt32(),h=t.getSInt32();u[o++]=l,u[o++]=h,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let d=t.getSInt32(),p=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();r<s;){let s=t.getSInt32(),n=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const a=l+d,_=h+p;Ht(l,h,a,_,a+s,_+n)>=e?(c+=-.5*(a-l)*(_+h),i>1&&Zt(u[o-2],u[o-1],d,p)?(u[o-2]+=d,u[o-1]+=p):(u[o++]=d,u[o++]=p,i++),l=a,h=_):(s+=d,n+=p),d=s,p=n,r++}i<3||a?o-=2*i:(c+=-.5*(l+d-l)*(h+p+h),Zt(u[o-2],u[o-1],d,p)?(u[o-2]+=d,u[o-1]+=p,n.push(i)):(u[o++]=d,u[o++]=p,n.push(++i)))}else{let e=0,r=t.getSInt32(),i=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),u[o++]=r,u[o++]=i,e+=1;for(let n=1;n<s;n++){const s=t.getSInt32(),a=t.getSInt32(),l=r+s,h=i+a;c+=-.5*(l-r)*(h+i),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),n>2&&Zt(u[o-2],u[o-1],s,a)?(u[o-2]+=s,u[o-1]+=a):(u[o++]=s,u[o++]=a,e+=1),r=l,i=h}n.push(e)}break}default:t.skip()}return this._cache.area=c,n.length?new oe(n,u):null!=u?this._createQuantizedExtrudedGeometry(u[0],u[1]):null}}class Kt{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}class es extends Kt{constructor(e,t){super(e,t),this._portsOpen=async function(e){const t=new Ce;return await t.open(e,{}),t}(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return at.fromFeatureSet(s,this._metadata)}}class ts extends Kt{async executeQuery(e,t){const{data:s}=await ge(this.service.source,e,t),r=!e.quantizationParameters;return Jt.fromBuffer(s,this._metadata,r)}}class ss extends Kt{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(null!=e.quantizationParameters&&!r.supportsQuantization){const r=e.clone(),i=Me(r.quantizationParameters);r.quantizationParameters=null;const{data:n}=await fe(s,r,this._metadata.spatialReference,t),a=W(n,this._metadata.objectIdField);return Z(i,a),at.fromOptimizedFeatureSet(a,this._metadata)}const{data:i}=await fe(s,e,this._metadata.spatialReference,t);return"esriGeometryPoint"===this._metadata.geometryType&&(i.features=i.features?.filter((e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0}))),at.fromFeatureSet(i,this._metadata)}}class rs extends Kt{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=e.clone(),r=Me(s.quantizationParameters);s.quantizationParameters=null;const i=await Te(this.service.source,e,t);return Z(r,i),at.fromOptimizedFeatureSet(i,this._metadata)}const s=await Te(this.service.source,e,t);return at.fromOptimizedFeatureSet(s,this._metadata)}}class is extends Gt{constructor(e,t,r,i,n){super(r),this._serviceInfo=e,this._queryInfo=t,this._metadata=i,this._connection=n,this._queue=new D({concurrency:16,process:async e=>{const t={signal:e.options?.signal,query:e.query.customParameters};return this._adapter.executeQuery(e.query.inner,t)}}),this._adapter=function(e,t){switch(e.type){case"memory":return new es(e,t);case"ogc":return new rs(e,t);case"feature-service":return e.queryMetadata.supportsFormatPBF&&s("featurelayer-pbf")?new ts(e,t):new ss(e,t)}}(e,i)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(t){this._queryInfo.updateFields(t);const s=Array.from(this._store.chunks()).map((async e=>{const t=we.fromJSON(e.queryInfo.queryJSON);if(t)try{return await this._tryUpdateFields(e.reader,t),null}catch(e){return e}})),r=(await Promise.all(s)).filter((e=>e));if(r.length)throw new e("featurelayer-query","Encountered errors when downloading fields",{errors:r})}async queryByObjectId(e){if(0===e.length)return at.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t)}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally((()=>{this._connection.onEvent({type:"fetchEnd",done:0===this._queue.length})}))}}class ns extends is{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const r=e.size();(r||e.first||e.end)&&(s("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${r}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const r of t)s("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${r.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(r);this._chunksById.delete(e.key.id)}}class as extends Ot{constructor(e,t,s,r,i,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class os{constructor(e,s){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=t([o(e.signal,(()=>this._controller.abort())),o(s,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}}class us extends ns{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new os(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const s of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:e,reader:r,sourceTile:i,sourceTileDepth:n,tile:o}=s,u=new as(r,e,o,i,n,!1);a(t.options),this._addChunk(u)}}catch(e){s=e}const r=new as(at.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,r){let i=e.get(t.id);const n=!!i;if(i||(i=await this._fetchChunkInfo(e,t,r),e.set(t.id,i)),i.reader.exceededTransferLimit&&r<s("featurelayer-query-max-depth"))for(const s of t.createChildTiles())yield*this._fetchChunkInfos(e,s,r+1);else n||(yield i)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}}class cs extends Ot{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class ls{constructor(e,s){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=t([o(e.signal,(()=>this._controller.abort())),o(s,(()=>this._controller.abort()))])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class hs extends ns{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new ls(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{await this._fetchPages(t)}catch(e){s=e}const r=new cs(at.empty(this._metadata),null,e.tile,-1,!0);if(u(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let t=0,s=e.pageStart,r=1;for(;t<20&&!e.done;){const i=[];for(let t=0;t<r;t++)i.push(this._fetchChunk(e,s++));const n=await Promise.all(i);for(const t of n)(0!==t.size()||t.first)&&(e.add(t.page,!t.reader.exceededTransferLimit),a(e.options),this._addChunk(t));t++,r=Math.min(r+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new cs(i,r.inner.toJSON(),s,t,!1)}}class ds extends Ot{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class ps extends is{constructor(e,t,s,i,n,a){super(e,t,s,n,a),this._random=new r(1e3),this._featureCount=i}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return null==this._promise&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(t){const s=Math.ceil(t/this._queryInfo.pageSize),r=Array.from({length:s},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())),i=await Promise.all(r.map((e=>this._downloadPage(e)))),n=new ds(at.empty(this._metadata),null,-1,!0);this._store.insert(n);const a=i.filter((e=>e));if(a.length)throw new e("featurelayer-query","Encountered errors when downloading data",{errors:a})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new ds(s,t.inner.toJSON(),e,!1);return a(this._options),this._store.insert(r),null}catch(e){return e}}}let _s=class extends xe{constructor(e){super(e)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};ve([je()],_s.prototype,"connection",void 0),ve([je()],_s.prototype,"connectionStatus",null),ve([je()],_s.prototype,"errorString",null),_s=ve([Fe("esri.views.2d.layers.features.sources.StreamConnectionState")],_s);class ms{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return at.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}class gs extends Ot{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class fs extends Gt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new _s,this._forceRefresh=!1,this.events=new se;const{objectIdField:n,timeInfo:a}=this._metadata,{purgeOptions:o}=t;this._stagingStore=new ms(this._metadata,(e=>this.events.emit("features-updated",e))),this._manager=new Oe(this._stagingStore,n,a,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=null!=this._chunk;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new gs(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=y(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:e,spatialReference:s}=this._metadata,{maxReconnectionAttempts:r,maxReconnectionInterval:i,geometryDefinition:n,definitionExpression:a,customParameters:o}=this._dataFilter;this._connection=Pe(this._service.source,s,this._streamOptions.outSR,e,a,n,r,i,o),this._handlesGroup=t([this._connection.on("data-received",(e=>this._onFeature(e))),this._connection.on("message-received",(e=>this._onWebSocketMessage(e)))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(e){}}}class ys{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new se,this.featureAdapter=new O}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),null!=this._localEditChunk&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}insert(e){s("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._localOverridesChunk?.overriddenIds.size&&(e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()),this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){s("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyLocalOverrides(e,t){null==this._localOverridesChunk&&(this._localOverridesChunk=new Pt(t,"localOverride")),this._localOverridesChunk.applyOverrides(e);for(const e of this._chunks.values())e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()}applyLocalEdit(e,t){null==this._localEditChunk&&(this._localEditChunk=new Pt(t,"localEdit")),this._localEditChunk.applyOverrides(e);for(const e of this._chunks.values())e.reader.removeIds(this._localEditChunk.overriddenIds),e.invalidate()}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r.copy()),t.add(s))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r),t.add(s))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const e=i.getObjectId();s.has(e)||(t(i.copy()),s.add(e))}}}forEachBounds(e,t){const s=re();for(const r of e)r.getBounds(s)&&t(s)}}class bs{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._onChange=r,this._connection=i,this._updateTracking=new Ae({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new ys(this._onChange),this._metadata=new M(e.metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),"memory"===this.service.type&&this.service.source.map((e=>e.close()))}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Lt.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new ne({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then((()=>this._connection.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t}))),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(c(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getLocalEdit(e){return this._updateTracking.addPromise(this._getGetLocalEdit(e))}applyLocalEdit(e){this._didInvalidateData=!0,this._store.applyLocalEdit(e,this.metadata)}async update(e,t){const r=e.source,i=S(this._schema?.mutable,r.mutable);if(!i)return!1;if(s("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:i}),this._schema=r,this._queryEngine?.destroy(),this._queryEngine=null,"feature-service"===this.service.type&&null!=this.service.queryMetadata.lastEditDate&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger(),w(i,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if("feature"===r.type&&w(i,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(r.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(e){this._connection.onEvent({type:"updateFieldsError",error:e})}}return!1}return!(!v(i,"dataFilter")&&!v(i,"sourceRefreshVersion")||(await this._updateStrategy(t),0))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new Wt(this._connection))}async _getGetLocalEdit(e){if(e.historicMoment&&"feature"===this._schema.type&&(this._schema.mutable.dataFilter.historicMoment=e.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(e.historicMoment))),"edit-by-feature"===e.type){const t=[...e.added,...e.updated].map((e=>K.fromJSON(e,this.metadata.objectIdField)));return{reader:at.fromOptimizedFeatures(t,this.metadata),removed:this._resolveIdentifiers(e.removed)}}const t=this._resolveIdentifiers(e.removed);if(!e.updated.length&&!e.added.length)return{reader:at.empty(this.metadata),removed:t};const s=this._resolveIdentifiers([...e.added,...e.updated]);return{reader:await this._strategy.queryByObjectId(s),removed:t}}_resolveIdentifiers(e){const t=[],s=[];for(const r of e)null!=r.objectId&&-1!==r.objectId?s.push(r.objectId):t.push(r.globalId);if(t.length){const e=new Set(t),r=this.metadata.globalIdField;if(null==r)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe((t=>{const i=t.readAttribute(r);e.has(i)&&s.push(t.getObjectId())}))}return s}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await me(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if("stream"===this._schema.type){const e=new fs(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=e,e}const i=this.service,n=zt.fromSchema(i,this._schema,this._metadata),a=await this._supportSnapshotMode(i,n);return a?new ps(i,n,this._store,a.featureCount,this.metadata,this._connection):r?new hs(i,n,this._store,this.metadata,this._connection):new us(i,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const r=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,s("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const a=Promise.all(i.map((e=>this._strategy.load(e).then((()=>this._connection.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t}))))));this._updateTracking.addPromise(a);try{r&&await a}catch(e){n(e)}this._connection.onEvent({type:"updateStrategyEnd"}),s("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await ye(i,n.inner,{query:n.customParameters})).data.count,{min:o,max:u}=r.snapshotCountThresholds;return a<=o||r.supportsSnapshotMaxThreshold&&a<u?{featureCount:a}:null}}class Is{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class Ss{constructor(e){this.inner=e,this.resolver=l()}}class ws{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(e){s("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const r=this._connection,i=_.fromJSON(e.tileInfoJSON);this._tileInfoView=new m(i),this._source=new bs(e.service,this._aggregateAdapter,this._subscriptions,(()=>this._requestUpdate()),r),this._processor=new Dt(r,this._source),this._handles=t([h((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),c(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))}))])}onDetach(){s("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new De(e)}get features(){const t=this._source?.queryEngine;if(!t)throw new e("no-queryEngine","No query engine defined");return t}get aggregates(){const t=this._processor?.aggregateQueryEngine;if(!t)throw new e("no-queryEngine","No aggregate query engine defined");return t}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}async updateSchema(e,t){return s("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new Ss({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new Ss(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new Ss(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async onEdits(t){if(null!=this._updateLocalEditsRequest)throw new e("InternalError - Already processing an edit");this._updateLocalEditsRequest=new Ss(t);const s=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),s}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(d(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i="string"==typeof e.fieldOffset,n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),u=t**2,c=3/(Math.PI*u),l=2*t,h=Math.ceil(f/l);for(const t of a){const a=t.tile,d=new Float64Array(h*h);for(const t of o){const s=t.getTileReader(a);if(!s)continue;const r=s.getCursor();for(;r.next();){let t=1;if(null!=e.field){const s=r.readAttribute(e.field);t=i?-1*+s:+s+n}const s=r.readXForDisplay()/l,a=r.readYForDisplay()/l,o=Math.floor(s),p=Math.floor(a);if(o<0||p<0||o>=h||p>=h)continue;const _=((.5+o-s)*l)**2+((.5+p-a)*l)**2;if(_>u)continue;const m=t*(c*(1-_/u)**2);d[p+o*h]+=m}}for(let e=0;e<d.length;e++)s=Math.min(s,d[e]),r=Math.max(r,d[e])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce(((e,t)=>e+t.size()),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe((t=>e.push(t.readLegacyFeatureWorldSpace()))),e}return null}const s=new Set,i=[],n=t.map((e=>e.reader.getCursor())),a=new r,o=3*e.sampleSize;for(let r=0;r<o&&i.length<e.sampleSize;r++){const e=n[a.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const r=a.getIntRange(0,e.getSize()-1);e.setIndex(r);const o=e.getObjectId();s.has(o)||(s.add(o),i.push(e.readLegacyFeatureWorldSpace()))}return i.length>=e.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,i((()=>this._scheduleNextUpdate())))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=p(this._doUpdate()).finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;s("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const r=new Ue(this._tileInfoView,t),i=new Is(r,e.version);this._subscriptions.set(t,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(s("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t.inner),t.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,null!=e){const{schema:t,version:s}=e.inner;await this._doUpdateSchema(t,s)}const t=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,null!=t){s("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.inner);const e=await this._source.getLocalEdit(t.inner);await this._processor.applyLocalEdit(e),this._source.applyLocalEdit(e),s("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.inner)}if(this._updateHighlightRequests.length){const e=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const t of e)this._processor.updateHighlight(t.inner),t.resolver.resolve()}const r=this._source.cleanupRemovedChunks();this._processor.removeChunks(r);try{this._subscriptions.size&&(s("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),s("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(e){n(e)}null!=t&&t.resolver.resolve(),null!=e&&e.resolver.resolve(),this._updateRequested?(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(s("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){s("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const r={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(e,t),n=Array.from(this._subscriptions.values());await this._processor.update(e,t,r,i,n),s("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){s("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{ws as default};
