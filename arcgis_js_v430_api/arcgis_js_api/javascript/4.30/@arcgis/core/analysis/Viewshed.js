/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as r}from"../chunks/tslib.es6.js";import"../geometry.js";import t from"../core/Accessor.js";import{ClonableMixin as s}from"../core/Clonable.js";import{c as o}from"../chunks/Cyclical.js";import{e}from"../chunks/maybe.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{cast as p}from"../core/accessorSupport/decorators/cast.js";import"../core/lang.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{f as n}from"../chunks/ensureType.js";import l from"../geometry/Point.js";import"../geometry/Extent.js";import"../chunks/Logger.js";import"../config.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../core/Error.js";import"../chunks/reader.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/promiseUtils.js";import"../chunks/writer.js";import"../core/Handles.js";import"../chunks/metadata.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../core/scheduling.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";let a=class extends(s(t)){constructor(r){super(r),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45}isValid(){return null!=this.observer&&this.farDistance>0}equals(r){return e(this.observer,r.observer)&&this.farDistance===r.farDistance&&this.heading===r.heading&&this.tilt===r.tilt&&this.horizontalFieldOfView===r.horizontalFieldOfView&&this.verticalFieldOfView===r.verticalFieldOfView}};r([i({type:l})],a.prototype,"observer",void 0),r([i({type:Number,nonNullable:!0,range:{min:0}})],a.prototype,"farDistance",void 0),r([i({type:Number,nonNullable:!0}),p((r=>o.normalize(n(r))))],a.prototype,"heading",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:180}})],a.prototype,"tilt",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:360}})],a.prototype,"horizontalFieldOfView",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:180}})],a.prototype,"verticalFieldOfView",void 0),r([i()],a.prototype,"isValid",null),a=r([m("esri.analysis.Viewshed")],a);const c=a;export{c as default};
