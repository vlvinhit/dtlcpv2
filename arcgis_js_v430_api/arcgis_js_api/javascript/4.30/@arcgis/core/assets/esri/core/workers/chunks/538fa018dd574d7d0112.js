"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2161],{62161:(e,r,t)=>{t.r(r),t.d(r,{default:()=>B});var s,i=t(32816),a=t(64604),l=t(6407),n=t(65283),o=t(2810),p=t(80959),c=t(99063),u=t(29298),h=t(48844),d=(t(32773),t(49877)),y=t(69421),f=t(56273),_=t(7969),v=t(73597),g=t(67315),m=t(24033),S=t(78479),T=t(8368),b=t(31315),w=t(4335),M=t(88730),A=t(38424),O=t(46935),R=t(96807),P=t(44440),U=t(1985),W=t(98238),Z=t(18385),k=t(86477);t(90740),t(29512),t(20266),t(73067),t(41390),t(40499),t(93181),t(13671),t(58498),t(91047),t(45371),t(17745),t(81272),t(36544),t(44945),t(73509),t(28276),t(99924),t(69763),t(93804),t(18683),t(94345),t(44600),t(2160),t(64752),t(29208),t(36533),t(84200),t(97827),t(91695),t(18169),t(48402),t(16699),t(26809),t(2589),t(18527),t(67504),t(92517),t(77037),t(66136),t(4734),t(50214),t(59192),t(78016),t(54483),t(80473),t(92070),t(6851),t(8662),t(13562),t(35507),t(23787),t(22151),t(67321),t(38632),t(82454),t(78281),t(47387),t(46728),t(64102),t(1178),t(49755),t(30011),t(55270),t(95779),t(13262),t(346),t(54131),t(19869),t(64524),t(12119),t(13201),t(13226),t(12856),t(47812),t(67138),t(72604),t(82408),t(69277),t(70580),t(75191),t(24319),t(62092),t(43059),t(89935),t(49813),t(24877),t(35276),t(72393),t(52731),t(51961),t(62399),t(64995),t(33150),t(58173),t(66110),t(67520),t(27532),t(88663),t(48103),t(65085),t(33611),t(84857),t(60373),t(98187),t(35902),t(16794),t(52357),t(11090),t(49319),t(93546),t(29570),t(34592),t(79825),t(95101),t(67578),t(14896),t(95611),t(98089),t(91366),t(43435),t(73435),t(91381),t(4048),t(85232),t(93471),t(53252),t(34039),t(70061),t(3495),t(97906),t(65023),t(31424),t(74676),t(53610),t(29447),t(78273),t(49475),t(32368),t(7391),t(22529),t(43534),t(38094),t(67723),t(47239),t(59858),t(63728),t(7182),t(47788),t(19297),t(4157),t(62401),t(89322),t(20138),t(53370),t(46946),t(3816),t(71992),t(80167),t(4478),t(91808),t(7161),t(55586),t(35121),t(92229),t(18344),t(64884),t(23351),t(51222),t(42870),t(54512),t(53103),t(19648),t(42948),t(60027),t(57111),t(75651),t(88614),t(1030),t(15319),t(60785),t(56487),t(6399),t(9498),t(23105),t(24079),t(38149),t(19681),t(40328),t(84539),t(65299),t(6510),t(38641),t(27281),t(73502),t(3827),t(65174),t(78328),t(54616),t(25018),t(49011),t(79875),t(133),t(83002),t(24330),t(91276),t(62482),t(45476),t(69310),t(43682),t(85351),t(54481),t(1535),t(9943),t(89253),t(16677),t(17813),t(3112),t(46626),t(45560),t(56303),t(85890),t(55884),t(32397),t(73609),t(81284),t(44864),t(95637),t(59930),t(45862),t(72762),t(71613),t(17872),t(69033),t(71492),t(68140),t(3952),t(339),t(79281),t(13978),t(48689),t(53564),t(71868),t(73600),t(78860),t(26805),t(13983),t(58296),t(12109),t(8824),t(38343),t(83637),t(58196),t(86941),t(1739),t(81618),t(66322),t(78644),t(10224),t(36309),t(60408),t(71895),t(27084),t(61904),t(20978);const C=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let j=s=class extends((0,b.dM)((0,R.j)((0,P.I)((0,m.f)((0,S.V)((0,M.q)((0,A.A)((0,T.A)((0,o.M)((0,O.J)((0,g.p)((0,w.d)(v.A))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.QP).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&_.A.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),a=[],l={writeSublayerStructure:!1,...s};i.forEach((e=>{const r=e.write({},l);a.push(r)})),a.some((e=>Object.keys(e).length>1))&&(r.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,c.An)(e).path)):null}fetchTile(e,r,t,s={}){const{signal:i}=s,l=this.getTileUrl(e,r,t),n={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,a.A)(l,n).then((e=>e.data))}async fetchImageBitmapTile(e,r,t,i={}){const{signal:l}=i;if(this.fetchTile!==s.prototype.fetchTile){const s=await this.fetchTile(e,r,t,i);return(0,Z.c)(s,e,r,t,l)}const n=this.getTileUrl(e,r,t),o={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:p}=await(0,a.A)(n,o);return(0,Z.c)(p,e,r,t,l)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,i=(0,c.x0)({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),a=this.tileServers;return`${a&&a.length?a[r%a.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`}loadAll(){return(0,n.l)(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new l.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new l.A("tile-layer:undefined-url","layer's url is not defined");const s=(0,U.p)(this.parsedUrl.path);if(null!=s&&"ImageServer"===s.serverType)throw new l.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,a.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,U.i)(t))return this._fetchServerVersion(t,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!(0,U.a)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,a.A)(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new l.A("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let t=0,s=C.length;t<s;t++)if(r=C[t],r.toLowerCase().includes(e))return(0,c.s2)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[L]}};(0,i._)([(0,u.MZ)({readOnly:!0})],j.prototype,"attributionDataUrl",null),(0,i._)([(0,u.MZ)({type:["show","hide","hide-children"]})],j.prototype,"listMode",void 0),(0,i._)([(0,u.MZ)({json:{read:!0,write:!0}})],j.prototype,"blendMode",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],j.prototype,"isReference",void 0),(0,i._)([(0,u.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],j.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.MZ)({type:Boolean})],j.prototype,"resampling",void 0),(0,i._)([(0,u.MZ)()],j.prototype,"sourceJSON",void 0),(0,i._)([(0,u.MZ)({type:_.A})],j.prototype,"spatialReference",void 0),(0,i._)([(0,d.r)("spatialReference",["spatialReference","tileInfo"])],j.prototype,"readSpatialReference",null),(0,i._)([(0,u.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],j.prototype,"path",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],j.prototype,"sublayers",void 0),(0,i._)([(0,f.w)("sublayers",{layers:{type:[k.A]}})],j.prototype,"writeSublayers",null),(0,i._)([(0,u.MZ)({json:{read:!1,write:!1}})],j.prototype,"popupEnabled",void 0),(0,i._)([(0,u.MZ)()],j.prototype,"tileServers",null),(0,i._)([(0,h.w)("tileServers")],j.prototype,"castTileServers",null),(0,i._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],j.prototype,"type",void 0),(0,i._)([(0,u.MZ)(W.u)],j.prototype,"url",void 0),j=s=(0,i._)([(0,y.$)("esri.layers.TileLayer")],j);const L=Symbol("default-fetch-tile");j.prototype.fetchTile[L]=!0;const B=j}}]);