/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import"../../../core/lang.js";import{d as i}from"../../../chunks/maybe.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{L as r}from"../../../chunks/Logger.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{d as o}from"../../../chunks/defaultUnit.js";import{A as a}from"../../../chunks/AnalysisView3D.js";import{M as l}from"../../../chunks/interfaces4.js";import{watch as c,syncAndInitial as u,initial as h}from"../../../core/reactiveUtils.js";import{a as m,l as p}from"../../../chunks/projectionUtils2.js";import{f as d}from"../../../chunks/euclideanLengthMeasurementUtils.js";import{a as g,d as v,r as _}from"../../../chunks/viewUtils.js";import"../../../intl.js";import{j,u as y,h as f,d as b,B as w,m as k}from"../../../chunks/colorUtils2.js";import{p as L,d as P}from"../../../chunks/mathUtils.js";import{f as C,a as S,b as E,c as O,d as A}from"../../../chunks/quantityFormatUtils.js";import{t as V}from"../../../chunks/quantityUtils.js";import{g as z,f as M}from"../../../chunks/screenUtils.js";import{a6 as T,l as x}from"../../../chunks/unitUtils.js";import{d as D}from"../../../chunks/vec2.js";import{s as U,n as R,c as G,e as H,j as I,h as N,p as B,x as F,f as W,b as Q,i as q}from"../../../chunks/vec3.js";import{c as J}from"../../../chunks/vec3f64.js";import{V as Z,a as $}from"../../../chunks/interfaces5.js";import{L as K,G as X,E as Y,m as ee}from"../../../chunks/Segment.js";import{L as te}from"../../../chunks/LineVisualElement.js";import ie from"../../../core/Handles.js";import{c as se}from"../../../chunks/mat4f64.js";import{c as re}from"../../../chunks/vec4.js";import{f as ne,c as oe}from"../../../chunks/vec4f64.js";import{s as ae}from"../../../chunks/plane.js";import{O as le}from"../../../chunks/Object3DVisualElement.js";import{m as ce,n as ue}from"../../../chunks/cameraUtils.js";import{c as he}from"../../../chunks/GeometryUtil.js";import{M as me,a as pe,R as de}from"../../../chunks/Material.js";import{n as ge}from"../../../chunks/InterleavedLayout.js";import{c as ve,S as _e}from"../../../chunks/Matrix4PassUniform.js";import{S as je,d as ye,F as fe,h as be,D as we,R as ke,j as Le,P as Pe,x as Ce,o as Se,u as Ee,a as Oe}from"../../../chunks/StencilUtils.js";import{V as Ae}from"../../../chunks/VertexAttribute.js";import{p as Ve}from"../../../chunks/ShaderTechniqueConfiguration.js";import{g as ze}from"../../../chunks/interfaces3.js";import{j as Me,P as Te}from"../../../chunks/enums.js";import{m as xe,d as De,a as Ue}from"../../../chunks/renderState.js";import{R as Re}from"../../../chunks/RightAngleQuadVisualElement.js";import{c as Ge}from"../../../chunks/lineStippleUtils.js";import{o as He}from"../../../chunks/locale.js";import{f as Ie}from"../../../chunks/messages.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../core/Error.js";import"../../../config.js";import"../../../chunks/ensureType.js";import"../../../chunks/getDefaultUnitForView.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../core/JSONSupport.js";import"../../../request.js";import"../../../core/Loadable.js";import"../../../core/Promise.js";import"../../../chunks/reader.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/jsonMap.js";import"../../../chunks/assets.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../chunks/asyncUtils.js";import"../../../core/Collection.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../geometry/projection.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/Axis.js";import"../../../chunks/extentUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/common.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/ElevationProvider.js";import"../../../chunks/projectVectorToVector.js";import"../../../chunks/projectPointToVector.js";import"../../../chunks/dehydratedPoint.js";import"../../../chunks/spatialReferenceEllipsoidUtils.js";import"../../../geometry/geometryEngine.js";import"../../../chunks/geometryEngineBase.js";import"../../../chunks/_commonjsHelpers.js";import"../../../chunks/hydrated.js";import"../../../geometry/support/geodesicUtils.js";import"../../../geometry.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/date.js";import"../../../chunks/timeZoneUtils.js";import"../../../chunks/datetime.js";import"../../../chunks/number.js";import"../../../chunks/substitute.js";import"../../../Color.js";import"../../../chunks/colorUtils.js";import"../../../chunks/Cyclical.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/ByteSizeUnit.js";import"../../../chunks/VisualElement.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/mat4.js";import"../../../chunks/line.js";import"../../../chunks/vec2f64.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/Indices.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/Attribute.js";import"../../../chunks/RibbonLineMaterial.js";import"../../../chunks/sphere.js";import"../../../chunks/ray.js";import"../../../chunks/basicInterfaces.js";import"../../../chunks/Util.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/lineSegment.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Texture.js";import"../../../chunks/GLObjectType.js";import"../../../chunks/mat3f64.js";import"../../../chunks/quatf64.js";import"../../../Camera.js";import"../../../CameraLayout.js";import"../../../core/Clonable.js";import"../../../chunks/projectVectorToPoint.js";import"../../../chunks/Intersector2.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/mat3.js";import"../../../chunks/orientedBoundingBox.js";import"../../../chunks/quat.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/earthUtils.js";import"../../../chunks/spatialReferenceSupport.js";import"../../../chunks/vec3f32.js";import"../../../chunks/BufferView.js";import"../../../chunks/types.js";import"../../../chunks/BindType.js";import"../../../chunks/triangle.js";import"../../../chunks/doublePrecisionUtils.js";import"../../../chunks/debugFlags2.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/EngineVisualElement.js";import"../../../core/Identifiable.js";import"../../../chunks/RenderGeometry.js";import"../../../chunks/IntegerPassUniform.js";import"../../../chunks/compilerUtils.js";import"../../../chunks/NormalAttribute.glsl.js";import"../../../chunks/VertexPosition.glsl.js";import"../../../chunks/Matrix3DrawUniform.js";import"../webgl/RenderCamera.js";import"../../../chunks/axisAngleDegrees.js";import"../../../chunks/weather.js";import"../environment/CloudyWeather.js";import"../../../chunks/enumeration.js";import"../environment/FoggyWeather.js";import"../environment/RainyWeather.js";import"../environment/SnowyWeather.js";import"../environment/SunnyWeather.js";import"../../../chunks/Scheduler.js";import"../../../core/signal.js";import"../../../chunks/debugFlags.js";import"../../../chunks/ScreenSpacePass.glsl.js";import"../../../chunks/Float4DrawUniform.js";import"../../../chunks/NestedMap.js";import"../../../chunks/VertexArrayObject2.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/Intersector.js";import"../../../chunks/glUtil.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/MemCache.js";import"../../../chunks/BufferObject.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/RayIntersections.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/TriangleMaterial.js";import"../../../chunks/OutputHighlight.glsl.js";let Ne=class extends t{constructor(e){super(e)}initialize(){this.addHandles([c((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)}),u),c((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)}),u),c((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),u)])}_applyProjectionAndElevationAlignment(e){if(null==e)return e;const{spatialReference:t,elevationProvider:i}=this.view;return m(e,t,i)??(p(this.analysis,e.spatialReference,r.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:i}=this.viewData;if(null==e||null==t)return null;const s=d(e,t),r=g(e,t);if(null==s)return null;let n,o;switch(i){case l.Auto:o=null!=r?"geodesic":"euclidean",n=r??s.horizontal;break;case l.Geodesic:if(null==r)return null;o="geodesic",n=r;break;case l.Euclidean:o="euclidean",n=s.horizontal}return{mode:o,directDistance:s.direct,horizontalDistance:n,verticalDistance:s.vertical,distance:i===l.Euclidean||s.horizontal.value<=v?s.direct:r??s.horizontal}}};e([s()],Ne.prototype,"view",void 0),e([s()],Ne.prototype,"analysis",void 0),e([s()],Ne.prototype,"viewData",void 0),e([s()],Ne.prototype,"_computedResult",null),Ne=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],Ne);const Be=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new je,{vertex:i,fragment:s}=t;ye(i,e),i.uniforms.add(new ve("width",(e=>e.width))),t.attributes.add(Ae.POSITION,"vec3"),t.attributes.add(Ae.NORMAL,"vec3"),t.attributes.add(Ae.UV0,"vec2"),t.attributes.add(Ae.LENGTH,"float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),i.code.add(ze`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),s.uniforms.add(new ve("outlineSize",(e=>e.outlineSize)),new fe("outlineColor",(e=>e.outlineColor)),new ve("stripeLength",(e=>e.stripeLength)),new fe("stripeEvenColor",(e=>e.stripeEvenColor)),new fe("stripeOddColor",(e=>e.stripeOddColor)));const r=1/Math.sqrt(2);return s.code.add(ze`
    const float INV_SQRT2 = ${ze.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      fragColor = color;
    }
  `),t}},Symbol.toStringTag,{value:"Module"}));class Fe extends Le{constructor(e,t,i){super(e,t,i)}initializeProgram(e){return new Pe(e.rctx,Fe.shader.get().build(this.configuration),Qe)}_setPipelineState(e){const t=e===be.NONE,i=this.configuration;return xe({blending:i.transparent?t?Ce:Se(e):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:Me.LESS},depthWrite:De,colorWrite:Ue})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return Te.TRIANGLE_STRIP}}Fe.shader=new ke(Be,(()=>Promise.resolve().then((()=>Be))));class We extends we{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=be.NONE}}e([Ve()],We.prototype,"polygonOffsetEnabled",void 0),e([Ve()],We.prototype,"transparent",void 0),e([Ve({count:be.COUNT})],We.prototype,"transparencyPassType",void 0);const Qe=new Map([[Ae.POSITION,0],[Ae.NORMAL,1],[Ae.UV0,2],[Ae.LENGTH,3]]);class qe extends me{constructor(e){super(e,new Ze),this._vertexAttributeLocations=Qe,this.produces=new Map([[Ee.OPAQUE_MATERIAL,e=>!this._transparent&&e===_e.Color],[Ee.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>this._transparent&&e===_e.Color]]),this._configuration=new We}getConfiguration(e,t){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration}intersect(){}createGLMaterial(e){return new Je(e)}createBufferWriter(){return new it}get _transparent(){const{parameters:e}=this;return e.outlineColor[3]<1||e.stripeEvenColor[3]<1||e.stripeOddColor[3]<1}}class Je extends Oe{beginSlot(e){return this.ensureTechnique(Fe,e)}}class Ze extends pe{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=ne(1,.5,0,1),this.stripeEvenColor=ne(1,1,1,1),this.stripeOddColor=ne(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const $e=ge().vec3f(Ae.POSITION).vec3f(Ae.NORMAL).vec2f(Ae.UV0).f32(Ae.LENGTH),Ke=J(),Xe=J(),Ye=J(),et=J(),tt=J();class it{constructor(){this.vertexBufferLayout=$e}elementCount(e){return 2*(e.attributes.get(Ae.POSITION).indices.length/2+1)}write(e,t,i,s,r){const{data:n,indices:o}=i.attributes.get(Ae.POSITION),a=i.attributes.get(Ae.NORMAL).data,l=n.length/3;o&&o.length!==2*(l-1)&&console.warn("MeasurementArrowMaterial does not support indices");const c=Ke,u=Xe,h=Ye,m=et,p=tt,d=s.position,g=s.normal,v=s.uv0;let _=0;for(let i=0;i<l;++i){const s=3*i;if(U(c,n[s],n[s+1],n[s+2]),i<l-1){const e=3*(i+1);U(u,n[e],n[e+1],n[e+2]),U(p,a[e],a[e+1],a[e+2]),R(p,p),G(h,u,c),R(h,h),H(m,p,h),R(m,m)}const o=I(c,u);e&&t&&(N(c,c,e),N(u,u,e),N(m,m,t));const j=r+2*i,y=j+1;d.setVec(j,c),d.setVec(y,c),g.setVec(j,m),g.setVec(y,m),v.set(j,0,_),v.set(j,1,-1),v.set(y,0,_),v.set(y,1,1),i<l-1&&(_+=o)}const j=s.length;for(let e=0;e<2*l;++e)j.set(r+e,_)}}class st extends le{constructor(e){super(e),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=J(),this._originTransform=se(),this._arrowCenter=J(),this._renderOccluded=de.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=oe(),this._contrastColor=oe(),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:e})}}get color(){return this._color}set color(e){j(e,this._color)||(re(this._color,e),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(e){j(e,this._color)||(re(this._contrastColor,e),this._updateArrowColor())}createExternalResources(){const e=this._color,t=this._contrastColor,i=this._stripesEnabled?t:e;this._arrowMaterial=new qe({outlineColor:e,stripeEvenColor:i,stripeOddColor:e,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new ie,this._handles.add(c((()=>this.view.state.camera),(()=>{this._viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles=i(this._handles)}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(null==this._geometry?.startRenderSpace||null==this._geometry.endRenderSpace)return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.transformation=this._originTransform,e.addGeometry(t),this._viewChanged()}_createArrowGeometry(e,t,i,s){const r=this.view,n=r.renderCoordsHelper,o=[],a=[],l=(e,t)=>{const s=ae.get();G(s,e,i),o.push(s),a.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=ae.get();if(n.worldUpAtPosition(this._arrowCenter,i),function(e,t,i){const s=F(rt,t,e),r=H(rt,s,i);return 0===W(r)}(e,t,i)){const{heading:t,tilt:s}=r.camera,{direction:n}=ce(r,e,t,s,nt);B(i,n)}l(e,i),l(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),r=ae.get(),o=ae.get();s.eval(i,r),n.worldUpAtPosition(r,o),l(r,o)}}return he(this._arrowMaterial,o,a)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&null!=this._geometry){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*e})}}_updateArrowColor(){if(!this.attached)return;const e=this._color,t=this._contrastColor,i=this._stripesEnabled?t:e,s=e,r=e;this._arrowMaterial.setParameters({stripeEvenColor:i,outlineColor:s,stripeOddColor:r})}}const rt=J(),nt=ue();let ot=class extends t{get _parameters(){const e=this.view.effectiveTheme,{accentColor:t,textColor:i}=e,s=y(t),r=f(t,.75),n=y(b(t)),o=b(i,w.Low);return{accentColor:s,contrastColor:n,translucentAccentColor:r,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:k(o,.6),textCalloutColor:k(o,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(null==e||null==t||e.equals(t))return Z.None;const i=this.analysisView.result;if(null==i)return Z.Direct;if("geodesic"===this.actualVisualizedMeasurement)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?Z.ProjectedGeodesic:Z.Direct;const{verticalDistance:s,horizontalDistance:r}=i,n=s.value,o=r.value;return Math.min(n/o,o/n)<this.triangleCollapseRatioThreshold?Z.Direct:Z.Triangle}get actualVisualizedMeasurement(){const{measurementMode:e,result:t}=this.analysisView;switch(e){case l.Auto:return null!=t&&t.horizontalDistance.value>v?"geodesic":"euclidean";case l.Euclidean:return"euclidean";case l.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return null==this._triangleOrientationOverride}set allowVisualElementsOrientationChange(e){null==this._triangleOrientationOverride!==e&&(null==this._triangleOrientationOverride?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return"geodesic"===this.actualVisualizedMeasurement?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(e){super(e),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=J(),this._endPosition=J(),this._cornerPosition=J(),this._startPositionAtSeaLevel=J(),this._endPositionAtSeaLevel=J(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=$.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const e=this._parameters,t={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:s,triangleLineWidth:r,geodesicProjectionLineWidth:n,directLabelFontSize:o,verticalLabelFontSize:a,horizontalLabelFontSize:l}=e;this._segmentVisualElement=new st({...t,geometry:null,renderOccluded:de.OccludeAndTransparent}),this._triangleVisualElement=new te({...t,width:r,renderOccluded:de.OccludeAndTransparent}),this._rightAngleQuad=new Re({...t,renderOccluded:de.OccludeAndTransparent});const m={...t,polygonOffset:!0,renderOccluded:de.OccludeAndTransparent};this._projectedGeodesicLine=new te({...m,width:n,stipplePattern:Ge(s)}),this._geodesicStartHint=new te({...m,width:i,stipplePattern:Ge(s)}),this._geodesicEndHint=new te({...m,width:i,stipplePattern:Ge(s)}),this._segmentLabel=new K({...t,fontSize:o}),this._verticalLabel=new K({...t,fontSize:a}),this._horizontalLabel=new K({...t,fontSize:l}),this.addHandles([c((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),u),c((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),u),c((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),u),c((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateLabelVisibility(e)),u),c((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),u),He((async()=>this._updateMessageBundle())),c((()=>this._parameters),(({textBackgroundColor:e,textCalloutColor:t,textColor:i,translucentAccentColor:s,accentColor:r,contrastColor:n})=>{const{_segmentLabel:o,_verticalLabel:a,_horizontalLabel:l,_triangleVisualElement:c,_rightAngleQuad:u,_projectedGeodesicLine:h,_geodesicStartHint:m,_geodesicEndHint:p,_segmentVisualElement:d}=this;o.backgroundColor=e,o.calloutColor=t,o.textColor=i,a.backgroundColor=e,a.calloutColor=t,a.textColor=i,l.backgroundColor=e,l.calloutColor=t,l.textColor=i,c.color=s,u.color=s,h.color=s,m.color=s,p.color=s,d.color=r,d.contrastColor=n}),h)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=i(this._segmentVisualElement),this._triangleVisualElement=i(this._triangleVisualElement),this._rightAngleQuad=i(this._rightAngleQuad),this._projectedGeodesicLine=i(this._projectedGeodesicLine),this._geodesicStartHint=i(this._geodesicStartHint),this._geodesicEndHint=i(this._geodesicEndHint),this._segmentLabel=i(this._segmentLabel),this._verticalLabel=i(this._verticalLabel),this._horizontalLabel=i(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case Z.None:break;case Z.Direct:this._segmentVisualElement.visible=!0;break;case Z.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case Z.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:n,visualizedMeasurement:o,stripeLength:a}){const l=e.renderCoordsHelper;if(null==l||null==s||null==r||s.equals(r))return;let c=this._startPosition,u=this._endPosition;l.toRenderCoords(s,c),l.toRenderCoords(r,u);const h=n===$.AboveSegment?1:-1,m=h*(l.getAltitude(u)-l.getAltitude(c));m<0&&(c=this._endPosition,u=this._startPosition);const p="geodesic"===o?new X(this._startPosition,this._endPosition,l.spatialReference):new Y(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=p,this._updateSegmentStripeLength(a),i){case Z.Direct:this._updateSegment(p,n);break;case Z.Triangle:this._updateSegmentAndTriangle({view:e,camera:t,segment:p,orientation:n,startPosition:c,endPosition:u,deltaSign:h,altitudeDelta:m});break;case Z.ProjectedGeodesic:this._updateSegmentAndProjection({view:e,orientation:n,startPosition:c,endPosition:u})}}_updateSegment(e,t){this._segmentLabel.anchor=t===$.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:n,deltaSign:o,altitudeDelta:a}){const l=this._cornerPosition;e.worldUpAtPosition(r,l),Q(l,l,o*Math.abs(a)),q(l,l,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[l[0],l[1],l[2]],[n[0],n[1],n[2]]]],this._rightAngleQuad.geometry={previous:r,center:l,next:n};const c=new Y(r,l),u=new Y(l,n),h=function(e,t,i,s,r){const n=lt,o=ct;r.projectToRenderScreen(i,n),r.projectToRenderScreen(t,o);const a={segment:"bottom",horizontal:"top",vertical:n[0]<o[0]?"left":"right"};{const s=ut,n=ht;if(_(e,i,r,s),_(e,t,r,n),D(s,n)>=at){const e=Math.sign(s[1])===Math.sign(n[1]);a.segment=e?ee(a.vertical):a.vertical}else{const e=mt;_(i,t,r,e),D(e,n)>=at&&(a.segment=Math.sign(e[0])===Math.sign(n[0])?ee(a.horizontal):a.horizontal)}}if(s===$.BelowSegment){const e=e=>"top"===e?"bottom":"top";a.segment=e(a.segment),a.horizontal=e(a.horizontal),a.vertical=e(a.vertical)}return a}(r,n,l,s,t);this._segmentLabel.anchor=h.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=h.vertical,this._horizontalLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._horizontalLabel.anchor=h.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new X(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new Y(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new Y(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=t===$.AboveSegment?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){null!=e?(this._segmentLabel.text="euclidean"===t?e.directDistance:e.horizontalDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:e,viewMode:t}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,e)switch(t){case Z.Direct:i.visible=!0;break;case Z.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case Z.ProjectedGeodesic:i.visible=!0;case Z.None:}}get _labelsText(){if(this.destroyed)return null;const e=this.messages,t=this.analysisView.result;if(null==t||null==e)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r}=t,n=this.analysisView.unit,o=e=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(n){case"metric":return o({directDistance:i&&O(e,i),horizontalDistance:s&&O(e,s),verticalDistance:r&&A(e,r)});case"imperial":return o({directDistance:i&&S(e,i),horizontalDistance:s&&S(e,s),verticalDistance:r&&E(e,r)});default:return o({directDistance:i&&C(e,i,n),horizontalDistance:s&&C(e,s,n),verticalDistance:r&&C(e,r,n)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;null!=e?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===$.Auto?this.view.state.camera.aboveGround?$.AboveSegment:$.BelowSegment:e}_requiresGeodesicGuideAt(e){const t=this.view;if(!t?.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(null==e)return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&V(s,"meters");break;case"imperial":i=s&&V(s,T(s.value,s.unit));break;default:i=s&&V(s,t)}return null==i?null:L(i.value/30)*x(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,Ie("esri/core/t9n/Units").then((e=>{this.messages=e})).finally((()=>{this.loadingMessages=!1}))}get testData(){}};e([s()],ot.prototype,"_parameters",null),e([s()],ot.prototype,"_triangleOrientationOverride",void 0),e([s()],ot.prototype,"messages",void 0),e([s()],ot.prototype,"view",void 0),e([s()],ot.prototype,"analysis",void 0),e([s()],ot.prototype,"analysisView",void 0),e([s()],ot.prototype,"loadingMessages",void 0),e([s()],ot.prototype,"visible",null),e([s()],ot.prototype,"viewMode",null),e([s()],ot.prototype,"actualVisualizedMeasurement",null),e([s()],ot.prototype,"visualElementOrientation",void 0),e([s()],ot.prototype,"triangleCollapseRatioThreshold",void 0),e([s()],ot.prototype,"allowVisualElementsOrientationChange",null),e([s()],ot.prototype,"labels",null),e([s()],ot.prototype,"_labelsText",null),e([s()],ot.prototype,"_actualVisualElementsOrientation",null),e([s()],ot.prototype,"_measurementArrowStripeLength",null),ot=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],ot);const at=Math.cos(P(12)),lt=z(),ct=z(),ut=M(),ht=M(),mt=M();let pt=class extends(a(t)){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=l.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new ot({view:e,analysis:t,analysisView:this}),this._analysisController=new Ne({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=i(this._analysisController),this._analysisVisualization=i(this._analysisVisualization)}get updating(){return!!this._analysisVisualization?.loadingMessages}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisVisualization.labels.direct?.text??""}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal?.text??""}get verticalLabelText(){return this._analysisVisualization.labels.vertical?.text??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};e([s()],pt.prototype,"updating",null),e([s({readOnly:!0})],pt.prototype,"type",void 0),e([s({constructOnly:!0,nonNullable:!0})],pt.prototype,"analysis",void 0),e([s()],pt.prototype,"result",void 0),e([s()],pt.prototype,"measurementMode",void 0),e([s()],pt.prototype,"elevationAlignedStartPoint",void 0),e([s()],pt.prototype,"elevationAlignedEndPoint",void 0),e([s({readOnly:!0})],pt.prototype,"viewMode",null),e([s({readOnly:!0})],pt.prototype,"actualVisualizedMeasurement",null),e([s()],pt.prototype,"visualElementOrientation",null),e([s()],pt.prototype,"allowVisualElementsOrientationChange",null),e([s()],pt.prototype,"triangleCollapseRatioThreshold",null),e([s({readOnly:!0})],pt.prototype,"directLabelText",null),e([s({readOnly:!0})],pt.prototype,"horizontalLabelText",null),e([s({readOnly:!0})],pt.prototype,"verticalLabelText",null),e([s()],pt.prototype,"_analysisVisualization",void 0),e([s()],pt.prototype,"_analysisController",void 0),e([s()],pt.prototype,"unit",null),e([s(o)],pt.prototype,"_defaultUnit",void 0),pt=e([n("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],pt);const dt=pt;export{dt as default};
