/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../core/Error.js";import{NumericIdentifiableMixin as t}from"../../core/Identifiable.js";import r from"../../core/Loadable.js";import{L as s}from"../../chunks/Logger.js";import{M as n}from"../../chunks/MultiOriginJSONSupport.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{r as p}from"../../chunks/reader.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import{w as m}from"../../chunks/writer.js";import a from"./ControlPointsGeoreference.js";import u from"./CornersGeoreference.js";import l from"./ExtentAndRotationGeoreference.js";import{G as j}from"../../chunks/GeoreferenceBase.js";import"../../geometry.js";import{c as h}from"../../chunks/screenUtils.js";import{n as f,O as y}from"../../core/Accessor.js";import"../../chunks/unitUtils.js";import g from"../../geometry/Point.js";import"../../config.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ensureType.js";import"../../chunks/maybe.js";import"../../core/Promise.js";import"../../core/promiseUtils.js";import"../../core/Handles.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/JSONSupport.js";import"../../core/Clonable.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/mat3.js";import"../../chunks/mat3f64.js";import"../../chunks/vec2.js";import"../../chunks/common.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/vec2f64.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../geometry/Multipoint.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Polyline.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";function d(e,o){const t=f(o);return function(e){return"media"===e?.type}(e)&&!!e.portalItem&&null!=t&&t>y.PORTAL_ITEM}const k={key:"type",base:j,typeMap:{"control-points":a,corners:u,"extent-and-rotation":l}},w={key:"type",base:j,typeMap:{"control-points":a}};let b=class extends(t(n(r))){constructor(e){super(e),this.georeference=null,this.opacity=1}readGeoreference(e){return a.fromJSON(e)}writeGeoreference(e,t,r,n){const i=n?.resources?.pendingOperations,p=()=>{const i=function(e,o,t){if(!e||"control-points"===e.type)return e;const{coords:r}=e;if(5!==r?.rings[0]?.length)return null;const[s,n,i,p]=r.rings[0],{spatialReference:c}=r;return new a({controlPoints:[{mapPoint:new g({x:s[0],y:s[1],spatialReference:c}),sourcePoint:h(0,t)},{mapPoint:new g({x:n[0],y:n[1],spatialReference:c}),sourcePoint:h(0,0)},{mapPoint:new g({x:i[0],y:i[1],spatialReference:c}),sourcePoint:h(o,0)},{mapPoint:new g({x:p[0],y:p[1],spatialReference:c}),sourcePoint:h(o,t)}],width:o,height:t})}(this.georeference,this.contentWidth,this.contentHeight);if(i){if("control-points"!==e.type&&s.getLogger(this).warn(`only georeference of type 'control-points' may be persisted. The georeference of type '${e.type}' has been automatically converted.`),4!==i.controlPoints?.length&&n?.messages)return void n.messages.push(new o("property:unsupported","only 'control-points' georeference with 4 control points may be persisted."));t[r]=i.write({},n)}};if("control-points"!==e.type&&!this.loaded&&i)return t[r]={},void i.push(this.load().then(p));p()}get contentWidth(){return 0}get contentHeight(){return 0}toSource(e){const{georeference:o,contentWidth:t,contentHeight:r}=this;if(null==e||null==o||0===t||0===r)return null;const s=o.toSourceNormalized(e);return null==s?null:(s.x*=t,s.y*=r,s)}};e([i({types:k,json:{write:!0,types:w}})],b.prototype,"georeference",void 0),e([p("georeference")],b.prototype,"readGeoreference",null),e([m("georeference")],b.prototype,"writeGeoreference",null),e([i({json:{read:!1,write:!1}})],b.prototype,"opacity",void 0),b=e([c("esri.layers.support.MediaElementBase")],b);const P=b;export{P as default,d as i};
