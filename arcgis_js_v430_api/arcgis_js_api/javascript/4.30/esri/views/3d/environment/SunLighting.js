// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/Evented ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../webscene/SunLighting".split(" "),function(e,c,h,n,p,q,l,m){var d;c=d=class extends c.EventedMixin(m){constructor(a){super(a);this.cameraTrackingEnabled=!0;this.positionTimezoneInfo={hours:0,minutes:0,seconds:0,autoUpdated:!0};a=(new Date).getFullYear();a=new Date("March 15, "+
a+" 12:00:00 UTC");this._set("defaultDate",a);this._set("date",a)}get defaultDate(){return new Date(this._get("defaultDate").getTime())}static fromWebsceneLighting(a){return new d(a.cloneConstructProperties())}set defaultDate(a){const b=this._get("date")===this._get("defaultDate");a=new Date(a.getTime());this._set("defaultDate",a);b&&this._set("date",a)}set date(a){null!=a&&(this.positionTimezoneInfo.autoUpdated=!1,this._set("date",new Date(a.getTime())))}autoUpdate(a,b){const k=d.calculateTimezoneOffset(this.positionTimezoneInfo);
this.positionTimezoneInfo.hours=b.hours;this.positionTimezoneInfo.minutes=b.minutes;this.positionTimezoneInfo.seconds=b.seconds;b=null;null!=a&&(this.positionTimezoneInfo.autoUpdated=!0,isNaN(a.getTime())?(b=this.defaultDate.getTime(),this._set("date",this.defaultDate)):(b=this.date&&this.date.getTime(),this._set("date",new Date(a.getTime()))));const f=d.calculateTimezoneOffset(this.positionTimezoneInfo);k!==f&&(g.target=this,g.timezoneOffset=f,this.emit("timezone-will-change",g),g.target=null);if(null!=
a)return isNaN(a.getTime())||b!==a.getTime()}clone(){const a=this._get("date")===this._get("defaultDate"),b=new d({...this.cloneConstructProperties(),defaultDate:this.defaultDate,cameraTrackingEnabled:this.cameraTrackingEnabled});a&&b._set("date",b._get("defaultDate"));b.positionTimezoneInfo.autoUpdated=this.positionTimezoneInfo.autoUpdated;b.positionTimezoneInfo.hours=this.positionTimezoneInfo.hours;b.positionTimezoneInfo.minutes=this.positionTimezoneInfo.minutes;b.positionTimezoneInfo.seconds=this.positionTimezoneInfo.seconds;
return b}cloneWithWebsceneLighting(a){const b=this.clone();null!=a.date&&(b.date=a.date);b.directShadowsEnabled=a.directShadowsEnabled;b.displayUTCOffset=a.displayUTCOffset;return b}cloneNonPersistentConstructProperties(){return{cameraTrackingEnabled:this.cameraTrackingEnabled}}};e.__decorate([h.property({type:Boolean})],c.prototype,"cameraTrackingEnabled",void 0);e.__decorate([h.property({type:Date})],c.prototype,"defaultDate",null);e.__decorate([h.property({type:Date})],c.prototype,"date",null);
c=d=e.__decorate([l.subclass("esri.views.3d.environment.SunLighting")],c);(function(a){a.calculateTimezoneOffset=function({hours:b,minutes:k,seconds:f}){return Math.round(b+k/60+f/3600)}})(c||={});const g={target:null,timezoneOffset:0};return c});