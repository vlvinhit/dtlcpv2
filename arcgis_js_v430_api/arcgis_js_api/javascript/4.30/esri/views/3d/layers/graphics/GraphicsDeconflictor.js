// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/MapUtils ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/Logger ../../../../core/has ../../../../core/RandomLCG ../../../../core/Error ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/boundedPlane ./Deconflictor ./enums ./LabelDeconflictor ../../../support/Scheduler".split(" "),function(e,n,p,l,f,w,x,y,z,q,r,m,d,t,u){function g(a){a=a.layer;return!(!a?.featureReduction||"selection"!==a.featureReduction.type)}
function v(a){(a=a.graphics3DGraphics)&&a.forEach(b=>b.setVisibilityFlag(d.VisibilityGroup.GRAPHIC,d.VisibilityFlag.DECONFLICTION,!0))}e.GraphicsDeconflictor=class extends m.Deconflictor{constructor(){super(...arguments);this._contexts=new Map;this.visibilityGroup=d.VisibilityGroup.GRAPHIC;this._marginFactor=-.1;this.test={overrideMarginFactor:a=>{this._marginFactor=a;this.setDirty()}}}get labels(){return this._labels}get viewState(){return this._viewState}initialize(){this.addHandles([f.watch(()=>
this.view?.state?.camera,()=>{this._updateViewState();this.setDirty()}),f.watch(()=>this.view?.map?.ground?.opacity,(a,b)=>{1!==a&&1!==b||this.setDirty()}),f.watch(()=>this.view?.slicePlane,()=>{this._updateSlicePlane();this._slicePlaneChanged()},f.initial)]);this._frameTask=this.view.resourceController.scheduler.registerTask(u.TaskPriority.GRAPHICS_DECONFLICTOR,this);this._labels=new t.LabelDeconflictor({view:this.view,parent:this})}destroy(){this._labels=l.destroyMaybe(this._labels);this._frameTask=
l.removeMaybe(this._frameTask)}get marginFactor(){return this._marginFactor}setDirty(){0<this._contexts.size&&(super.setDirty(),this._labels.setDirty())}runTask(a){super.runTask(a);this.running||this._labels.setDirty()}_updateViewState(){this.view?.state&&(this._viewState.camera.copyFrom(this.view.state.camera),this._updateSlicePlane())}_updateSlicePlane(){const a=this.view?this.view.slicePlane:null;null!=a&&r.transform(a,this._viewState.camera.viewMatrix,this._viewState.slicePlane);this._viewState.slicePlaneEnabled=
null!=a}_slicePlaneChanged(){p.someMap(this._contexts,(a,b)=>b.symbolCreationContext.slicePlaneEnabled)&&this.setDirty()}addGraphicsOwner(a){const b=this._getGraphicsContext(a);return{addGraphic:c=>this._addGraphic(a,b,c),removeGraphic:c=>this._removeGraphic(b,c),labelingInfoChange:()=>this._labels.enabledChanged(a,b),featureReductionChange:()=>this.enabledChanged(a,b),slicePlaneEnabledChange:()=>this._slicePlaneEnabledChanged(a,b),clear:()=>b.forEach(c=>this._removeGraphic(b,c.graphics3DGraphic)),
remove:()=>this._removeGraphicsOwner(a),setDirty:()=>this.setDirty()}}_removeGraphicsOwner(a){const b=this._contexts.get(a);b&&(b.forEach(c=>this._removeGraphic(b,c.graphics3DGraphic)),this._contexts.delete(a),this.setDirty())}_addGraphic(a,b,c){const h=c.graphic.uid,k=new m.DeconflictorGraphic(c,a.symbolCreationContext.slicePlaneEnabled);b.set(h,k);g(a)&&this.addToActiveGraphics(k);a.labelsEnabled&&this._labels.addToActiveGraphics(k);a=!this._graphicSupportsDeconfliction(c)||!g(a);c.setVisibilityFlag(d.VisibilityGroup.GRAPHIC,
d.VisibilityFlag.DECONFLICTION,a)}_removeGraphic(a,b){b=b.graphic.uid;const c=a.get(b);c&&(this.removeFromActiveGraphics(c),this._labels.removeFromActiveGraphics(c),a.delete(b),this.setDirty())}enabledChanged(a,b){const c=g(a);c||v(a);this.modifyGraphics(b,c)}_slicePlaneEnabledChanged(a,b){const c=a.symbolCreationContext.slicePlaneEnabled;b.forEach(h=>h.slicePlaneEnabled=c);this.setDirty()}getGraphicsLayers(a){return a.layers}_graphicSupportsDeconfliction(a){if(a.isDraped)return!1;a=a.layers;if(!a?.length)return!1;
for(const b of a)if(this.layerSupportsDeconfliction(b))return!0;return!1}_getGraphicsContext(a){var b=this._contexts.get(a);if(b)return b;b=new Map;this._contexts.set(a,b);this.setDirty();return b}};e.GraphicsDeconflictor=n.__decorate([q.subclass("esri.views.3d.layers.graphics.GraphicsDeconflictor")],e.GraphicsDeconflictor);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});