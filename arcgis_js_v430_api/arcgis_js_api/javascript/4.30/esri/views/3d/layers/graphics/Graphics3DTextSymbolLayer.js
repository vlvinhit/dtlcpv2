// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../symbols/callouts/calloutUtils ./ElevationAligners ./elevationAlignmentUtils ./ElevationContext ./Graphics3DObject3DGraphicLayer ./Graphics3DObjectMetadata ./Graphics3DSymbolLayer ./graphicUtils ./LabelParameters ./placementUtils ./pointUtils ../../webgl-engine/lib/FontMetrics ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/TextRenderParameters ../../webgl-engine/lib/TextTextureFactory ../../webgl-engine/materials/HUDMaterial".split(" "),
function(A,F,G,H,I,J,u,K,B,L,z,M,N,O,P,Q,C,r,m,R,S,T,U,D){function E(a,b,d){a&&a.forEach(c=>{const e=b(c);null!=e&&d(e,c.graphic)})}function V(a,b){if("baseline"===b.verticalPlacement)return u.fromValues(r.horizontalPlacementToAnchorX[b.horizontalPlacement],null!=a?a.baselineAnchorY:0);a=r.anchorFromPlacements(b.horizontalPlacement,b.verticalPlacement);return r.namedAnchorToHUDMaterialAnchorPos[a]}const W=K.fromValues(0,0,1);class X extends P.Graphics3DSymbolLayer{constructor(a,b,d,c){super(a,b,d,
c);this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1};this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const a=Q.validateSymbolLayerSize(this.symbolLayer.size);if(a)throw new F("graphics3dtextsymbollayer:invalid-size",a);}await this._createTextRenderParameters()}async _createTextRenderParameters(){this._textRenderParameters=await T.TextRenderParameters.fromSymbol(this.symbolLayer,this._context.graphicsCoreOwner.view.state.rasterPixelRatio)}destroy(){super.destroy()}createGraphics3DGraphic(a){a=
a.graphic;const b=m.placePointOnGeometry(a.geometry);if(null==b)return this.logger.warn(`unsupported geometry type for text symbol: ${a.geometry.type}`),null;const d=this.symbolLayer.text;if(null==d||""===d)return null;var c=B.hasCalloutSupport(this.symbol)&&this.symbol.hasVisibleVerticalOffset()?this.symbol.verticalOffset:null;if(null!=c&&!B.textSymbolLayerSupportsVerticalOffset(this.symbolLayer))return this.logger.errorOncePerTick("Callouts and vertical offset on text symbols are currently only supported with 'center' "+
`horizontal alignment (not with '${this.symbolLayer.horizontalAlignment}' alignment)`),null;var {verticalAlignment:e}=this.symbolLayer;c=new C.LabelPlacement(c);r.verticalScreenOffsetFromAlignment(e,c.screenOffset);e=new C.LabelParameters(c,this.symbolLayer.horizontalAlignment,r.verticalPlacementFromAlignment(e));return this._createAs3DShape(a,b,d,e)}createLabel(a,b,d,c,e){a=a.graphic;const g=m.placePointOnGeometry(a.geometry);if(null==g)return this.logger.warn(`unsupported geometry type for label: ${a.geometry.type}`),
null;const v=b.text;return!v||/^\s+$/.test(v)?null:this._createAs3DShape(a,g,v,b,d,c,e)}setGraphicElevationContext(a,b,d=0){super.setGraphicElevationContext(a,b);b.addOffsetRenderUnits(d);return b}layerOpacityChanged(){this.logger.warn("layer opacity change not yet implemented in Graphics3DTextSymbolLayer");return!1}layerElevationInfoChanged(a,b){E(a,b,(d,c)=>{this.updateGraphicElevationContext(c,d)});return z.SymbolUpdateType.UPDATE}slicePlaneEnabledChanged(a,b){E(a,b,d=>{for(const c of d.stageObject.geometries)c.material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})});
return!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return!1}updateGraphicElevationContext(a,b){const d=b.elevationContext;this.setGraphicElevationContext(a,d,null!=b.metadata?b.metadata.elevationOffset:0);b.needsElevationUpdates=z.needsElevationUpdates2D(d.mode)||"absolute-height"===d.mode}updateGeometry(a,b){if(this.draped||!this._validateGeometry(b))return!1;const {elevationContext:d,stageObject:c}=a;if(d.mode!==this.getGeometryElevationMode(b))return!1;b=m.placePointOnGeometry(b);
if(!b)return!1;const e=m.updateStageObjectGeometry(c,this._context,b,d);if(null==e)return!1;const g=m.getLocalOriginForPoint(this._context,b);if(c.geometries[0].localOrigin!==g)return!1;a.alignedSampledElevation=e;m.extendPointGraphicElevationContext(a,b,this._context.elevationProvider);return!0}_defaultElevationInfoNoZ(){return Y}_createAs3DShape(a,b,d,c,e=null,g=null,v=()=>c.placement.elevationOffset){const x=this.setGraphicElevationContext(a,new M.ElevationContext,c.placement.elevationOffset);
var n="polyline"===a.geometry?.type,w=a.uid;let k=null,p=null;if(null==g){var f=r.textRenderAlignmentFromHorizontalPlacement(c.horizontalPlacement);k=new U(d,f,this._textRenderParameters);let h=null;if(null!=this._context.sharedResources.textures){p=this._context.sharedResources.textures.fromData(k.key,()=>k.create());p.texture.events.on("unloaded",()=>h=H.releaseMaybe(h));f=this._context.stage.renderView.textures.acquire(p.texture.id);if(null==f||I.isPromiseLike(f))return p.release(),null;h=f}}var y=
V(k,c);f={occlusionTest:!G("enable-feature:non-occluded-hud"),screenOffset:c.placement.screenOffset,anchorPosition:y,polygonOffset:!0,color:[1,1,1,1],centerOffsetUnits:c.placement.centerOffsetUnits,drawInSecondSlot:!0};n&&(f.shaderPolygonOffset=1E-4);g?f.textureId=g.id:p&&(f.textureId=p.texture.id);if(null!=c.placement.verticalOffset){const {screenLength:h,minWorldLength:l,maxWorldLength:q}=c.placement.verticalOffset;f.verticalOffset={screenLength:J.pt2px(h),minWorldLength:l||0,maxWorldLength:null!=
q?q:Infinity}}g={screenOffset:f.screenOffset,anchorPosition:y,centerOffsetUnits:f.centerOffsetUnits,verticalOffset:f.verticalOffset,shaderPolygonOffset:f.shaderPolygonOffset};if(this._context.screenSizePerspectiveEnabled){const {screenSizePerspectiveSettings:h,screenSizePerspectiveSettingsLabels:l}=this._context.sharedResources;n=R.getFontMetrics(this._textRenderParameters);f.screenSizePerspective=l.overrideFontHeight(n.maxHeight);f.screenSizePerspectiveAlignment=h;g.fontHeight=n.maxHeight}f.hasSlicePlane=
this._context.slicePlaneEnabled;n=(h,l,q)=>{let t=h.get(q);null==t&&(t=new D.HUDMaterial(l),h.add(q,t));return t};f=e?n(e,f,JSON.stringify(g)):new D.HUDMaterial(f);g=c.placement.translation;n=k?u.fromValues(k.displayWidth,k.displayHeight):u.ZEROS;y=c.placement.centerOffset;const Z=u.create();g=S.createPointGeometry(f,W,g,null,n,y,Z,null);w=m.createStageObject(this._context,b,g,x,w);if(null==w)return null;e=new N.Graphics3DObject3DGraphicLayer(this,w.object,[g],null==e?[f]:null,p,(h,l,q,t,aa,ba)=>
{const ca=v()||c.placement.elevationOffset;l=this.setGraphicElevationContext(a,l,ca);return L.perObjectElevationAligner(h,l,q,t,aa,ba)},x);e.alignedSampledElevation=w.sampledElevation;e.needsElevationUpdates=z.needsElevationUpdates2D(x.mode)||"absolute-height"===x.mode;e.getScreenSize=(h=u.create())=>{h[0]=k?k.displayWidth:c.displaySize[0];h[1]=k?k.displayHeight:c.displaySize[1];return h};d=new O.Graphics3DObjectMetadata(c.placement.elevationOffset,d);e.metadata=d;m.extendPointGraphicElevationContext(e,
b,this._context.elevationProvider);return e}}const Y={mode:"relative-to-ground",offset:0};A.Graphics3DTextSymbolLayer=X;Object.defineProperty(A,Symbol.toStringTag,{value:"Module"})});