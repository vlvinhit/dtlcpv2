// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Collection ../../../../core/mathUtils ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/mat4 ../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../core/shaderLibrary/ShaderOutput ../effects/RenderPlugin ./RenderSlot ./ViewshedShadowMap ../../../../chunks/Viewshed.glsl ../shaders/ViewshedTechnique ../shaders/ViewshedTechniqueConfiguration".split(" "),
function(e,h,r,l,A,v,m,J,K,L,B,k,w,C,x,D,t,E,F,G,H,I){e.Viewshed=class extends t.SyncRenderPlugin{get viewshedShadowMap(){return this._viewshedShadowMap}get enabled(){return 0<this._viewsheds.length}constructor(a,b){super(a);this._pluginContext=null;this.renderHighQuality=!1;this._parameters=new G.ViewshedPassParameters;this._configuration=new I.ViewshedTechniqueConfiguration;this._viewsheds=new r;this.produces=new Map([[E.RenderSlot.VIEWSHED,()=>!0]]);this._renderShadowMap=b}initialize(){this.addHandles(v.watch(()=>
this.view.qualitySettings.maximumPixelRatio,a=>this._maximumPixelRatio=a,v.syncAndInitial))}destroy(){this.uninitializeRenderContext()}consumes(){return this.enabled?t.ConsumesDepth:t.ConsumesNone}initializeRenderContext(a){this._pluginContext=a;this._viewshedShadowMap=new F.ViewshedShadowMap(this.fboCache);this._viewshedShadowMap.enabled=!0}renderNode(a,b,c){const {bindParameters:d,rctx:f}=a;if(this.enabled&&d.depth&&null!=c){b=this._setupNormals(c);if(null==this._technique||this._configuration.useNormalMap!==
b)this._configuration.useNormalMap=b,this._technique=this._pluginContext?.techniques.acquire(H.ViewshedTechnique,this._configuration);if(this._technique?.compiled)for(const n of this._viewsheds){b=a.rctx.getBoundFramebufferObject();c=this._renderViewshedShadowCubeMap(d,n);const p=this._viewshedShadowMap;c&&null!=p.depthTexture&&!p.isTextureZero&&(this._setPassParameters(n),a.rctx.bindFramebuffer(b),f.bindTechnique(this._technique,d,this._parameters),f.screen.draw())}else this._pluginContext?.requestRender()}}uninitializeRenderContext(){this._pluginContext=
null;this._viewshedShadowMap.dispose();this._technique=A.destroyMaybe(this._technique)}updateViewsheds(a){const b=a.removes;null!=b&&(r.isCollection(b)?this._viewsheds.removeMany(b):this._viewsheds.remove(b));a=a.adds;null!=a&&(r.isCollection(a)?(a=a.filter(c=>!this._viewsheds.includes(c)),this._viewsheds.addMany(a)):this._viewsheds.includes(a)||this._viewsheds.add(a))}_renderViewshedShadowCubeMap(a,b){const c=this._viewshedShadowMap;if(!c.enabled)return!1;if(b=c.start(a.camera,b,this.renderHighQuality,
this._maximumPixelRatio))for(const d of c.faces)this._renderShadowMap(a,d,D.ShaderOutput.ViewshedShadow);c.finish();return b}_setPassParameters(a){const b=this._parameters,c=this._viewshedShadowMap,d=a.observerRenderSpace;b.localOrigin=d;b.fovs=[l.deg2rad(a.horizontalFieldOfView),l.deg2rad(a.verticalFieldOfView)];b.headingAndTilt=[l.deg2rad(a.heading),l.deg2rad(a.tiltParallelToSurface)];b.upVector=a.tiltedUpVector;a=a.targetRenderSpace;var f=x.create();a=C.sub(f,a,d);b.targetVector=a;b.shadowMap=
c;a=[];f=[];for(let q=0;q<c.numActiveFaces;q++){k.translate(u,c.viewshedViewMatrices[q],d);a.push(...u.flat());var n=c.viewshedProjectionMatrices[q],p=u,g=y;const z=x.fromValues(.5,.5,.5);k.fromTranslation(g,z);k.scale(g,g,z);k.mul(g,g,n);k.mul(g,g,p);f.push(...y.flat())}b.viewMatrices=a;b.projectionMatrices=f}_setupNormals(a){a=a.get("normals")?.getTexture();this._parameters.normalTexture=a;return null!=a}get test(){return{viewsheds:this._viewsheds}}};h.__decorate([m.property()],e.Viewshed.prototype,
"_pluginContext",void 0);h.__decorate([m.property()],e.Viewshed.prototype,"fboCache",void 0);h.__decorate([m.property()],e.Viewshed.prototype,"view",void 0);h.__decorate([m.property()],e.Viewshed.prototype,"viewshedShadowMap",null);e.Viewshed=h.__decorate([B.subclass("esri.views.3d.webgl-engine.lib.Viewshed")],e.Viewshed);const u=w.create(),y=w.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});