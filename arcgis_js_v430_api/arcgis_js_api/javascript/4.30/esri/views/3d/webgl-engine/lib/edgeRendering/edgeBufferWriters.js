// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/RandomLCG ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../support/buffer/glUtil ../Normals ./bufferLayouts".split(" "),function(q,y,v,z,w,r,g){function A(a){e[0]=a.position0[0];e[1]=a.position0[1];e[2]=a.position0[2];e[3]=a.position1[0];e[4]=a.position1[1];e[5]=a.position1[2];h[0]=31*(31*(31*(31*(31*(166811+f[0])+f[1])+f[2])+f[3])+f[4])+f[5];return h[0]}function B(a){const b=e;b[0]=k(a.position0[0]);b[1]=k(a.position0[1]);
b[2]=k(a.position0[2]);b[3]=k(a.position1[0]);b[4]=k(a.position1[1]);b[5]=k(a.position1[2]);h[0]=5381;for(a=0;a<f.length;a++)h[0]=31*h[0]+f[a];return h[0]}function k(a){return Math.round(1E4*a)/1E4}class x{updateSettings(a){this.settings=a;this._edgeHashFunction=a.reducedPrecision?B:A}write(a,b,c){p.seed=this._edgeHashFunction(c);const m=p.getIntRange(0,255),n=p.getIntRange(0,this.settings.variants-1);var d=p.getFloat();d=-(1-Math.min(d/.7,1))+Math.max(0,d-.7)/(1-.7);d=255*(Math.abs(d)**1.2*Math.sign(d)*
.5+.5);a.position0.setVec(b,c.position0);a.position1.setVec(b,c.position1);a.componentIndex.set(b,c.componentIndex);a.variantOffset.set(b,m);a.variantStroke.set(b,n);a.variantExtension.set(b,d)}}const e=new Float32Array(6),f=new Uint32Array(e.buffer),h=new Uint32Array(1);class t{constructor(){this._commonWriter=new x}updateSettings(a){this._commonWriter.updateSettings(a)}allocate(a){return g.RegularEdgeInstancesLayout.createBuffer(a)}write(a,b,c){this._commonWriter.write(a,b,c);v.add(l,c.faceNormal0,
c.faceNormal1);v.normalize(l,l);const {typedBuffer:m,typedBufferStride:n}=a.normalCompressed;r.compressNormal(m,b,l[0],l[1],l[2],n)}}t.Layout=g.RegularEdgeInstancesLayout;t.glLayout=w.glLayout(g.RegularEdgeInstancesLayout,1);class u{constructor(){this._commonWriter=new x}updateSettings(a){this._commonWriter.updateSettings(a)}allocate(a){return g.SilhouetteEdgeInstancesLayout.createBuffer(a)}write(a,b,c){this._commonWriter.write(a,b,c);const {typedBuffer:m,typedBufferStride:n}=a.normalCompressed;r.compressNormal(m,
b,c.faceNormal0[0],c.faceNormal0[1],c.faceNormal0[2],n);const {typedBuffer:d,typedBufferStride:C}=a.normal2Compressed;r.compressNormal(d,b,c.faceNormal1[0],c.faceNormal1[1],c.faceNormal1[2],C)}}u.Layout=g.SilhouetteEdgeInstancesLayout;u.glLayout=w.glLayout(g.SilhouetteEdgeInstancesLayout,1);const l=z.create(),p=new y;q.RegularEdgeBufferWriter=t;q.SilhouetteEdgeBufferWriter=u;Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});