// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/VertexAttribute ../shaders/MeasurementArrowTechnique".split(" "),function(x,b,m,y,J,B,K,C,D,f,z){class L extends C.Material{constructor(a){super(a,new E);this._vertexAttributeLocations=z.MeasurementArrowAttributeLocations;this.produces=
new Map([[D.RenderSlot.OPAQUE_MATERIAL,c=>!this._transparent&&c===B.ShaderOutput.Color],[D.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,c=>this._transparent&&c===B.ShaderOutput.Color]]);this._configuration=new z.MeasurementArrowTechniqueConfiguration}getConfiguration(a,c){this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset;this._configuration.transparent=this._transparent;this._configuration.transparencyPassType=c.transparencyPassType;return this._configuration}intersect(){}createGLMaterial(a){return new M(a)}createBufferWriter(){return new N}get _transparent(){const {parameters:a}=
this;return 1>a.outlineColor[3]||1>a.stripeEvenColor[3]||1>a.stripeOddColor[3]}}class M extends K{beginSlot(a){return this.ensureTechnique(z.MeasurementArrowTechnique,a)}}class E extends C.MaterialParameters{constructor(){super(...arguments);this.width=32;this.outlineSize=.2;this.outlineColor=y.fromValues(1,.5,0,1);this.stripeEvenColor=y.fromValues(1,1,1,1);this.stripeOddColor=y.fromValues(1,.5,0,1);this.stripeLength=1;this.polygonOffset=!1}}const O=J.newLayout().vec3f(f.VertexAttribute.POSITION).vec3f(f.VertexAttribute.NORMAL).vec2f(f.VertexAttribute.UV0).f32(f.VertexAttribute.LENGTH),
g=m.create(),n=m.create(),q=m.create(),h=m.create(),r=m.create();class N{constructor(){this.vertexBufferLayout=O}elementCount(a){return 2*(a.attributes.get(f.VertexAttribute.POSITION).indices.length/2+1)}write(a,c,e,t,F){const {data:k,indices:G}=e.attributes.get(f.VertexAttribute.POSITION),A=e.attributes.get(f.VertexAttribute.NORMAL).data;e=k.length/3;G&&G.length!==2*(e-1)&&console.warn("MeasurementArrowMaterial does not support indices");const H=t.position,I=t.normal,u=t.uv0;let v=0;for(let l=0;l<
e;++l){var d=3*l;b.set(g,k[d],k[d+1],k[d+2]);l<e-1&&(d=3*(l+1),b.set(n,k[d],k[d+1],k[d+2]),b.set(r,A[d],A[d+1],A[d+2]),b.normalize(r,r),b.subtract(q,n,g),b.normalize(q,q),b.cross(h,r,q),b.normalize(h,h));d=b.distance(g,n);a&&c&&(b.transformMat4(g,g,a),b.transformMat4(n,n,a),b.transformMat4(h,h,c));const p=F+2*l,w=p+1;H.setVec(p,g);H.setVec(w,g);I.setVec(p,h);I.setVec(w,h);u.set(p,0,v);u.set(p,1,-1);u.set(w,0,v);u.set(w,1,1);l<e-1&&(v+=d)}a=t.length;for(c=0;c<2*e;++c)a.set(F+c,v)}}x.MeasurementArrowMaterial=
L;x.Parameters=E;Object.defineProperty(x,Symbol.toStringTag,{value:"Module"})});