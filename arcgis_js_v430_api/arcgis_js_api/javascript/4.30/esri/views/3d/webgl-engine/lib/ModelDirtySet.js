// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/has ../../../../core/uid ../../../../core/accessorSupport/decorators/property ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ./ModelDirtyTypes ./Util".split(" "),function(t,n,z,v,u,A,B,w,d,r){class x{constructor(a,b,c,g){this.operation=a;this.geometry=b;this.states=c;this.sync=g}}n=class extends n{constructor(a){super(a);this._residentGeomRecords=new Map;this._dirtyGeomRecords=
new Map;this.dirty=!1}commitLayer(a,b){const c=this._dirtyGeomRecords.get(a);c&&(c.forEach((g,e)=>{const k=this._ensureGeomRecord(a,e);g.forEach(({geometry:f,operation:h,states:l},m)=>{let p=!1;if(h===d.DirtyOperation.UPDATE){const q=k.get(m);if(q){if(l&d.DirtyState.TRANSFORMATION){const y=this.model.getObject(e);this.model.updateRenderGeometryTransformation(y,f,q)&&(p=!0)}p||b.updates.push({renderGeometry:q,updateType:l})}else r.assert(!1,"ModelDirtySet.commitLayer: invalid update")}if(h===d.DirtyOperation.REMOVE||
p)(l=k.get(m))?(b.removes.push(l),k.delete(m)):h===d.DirtyOperation.REMOVE&&r.assert(!1,"ModelDirtySet.commitLayer: invalid remove");if(h===d.DirtyOperation.ADD||p)h=this.model.getObject(e),null!=h&&(f=this.model.getRenderGeometry(h,f),b.adds.push(f),k.set(m,f))});0===k.size&&this._residentGeomRecords.get(a).delete(e)}),0===this._residentGeomRecords.get(a).size&&this._residentGeomRecords.delete(a),this._dirtyGeomRecords.delete(a),this.dirty=this._hasDirtyGeometryRecords)}commitSyncUpdates(a,b){const c=
this._dirtyGeomRecords.get(a);c&&c.forEach((g,e)=>{const k=this._ensureGeomRecord(a,e);g.forEach(({geometry:f,operation:h,states:l,sync:m},p)=>{let q=!1;h===d.DirtyOperation.UPDATE&&m&&((h=k.get(p))?(l&d.DirtyState.TRANSFORMATION&&(m=this.model.getObject(e),this.model.updateRenderGeometryTransformation(m,f,h)&&(q=!0)),q||b.updates.push({renderGeometry:h,updateType:l})):r.assert(!1,"ModelDirtySet.commitSyncUpdates: invalid update"))})})}getResidentRenderGeometries(a,b){(a=this._residentGeomRecords.get(a))&&
a.forEach(c=>c.forEach(g=>b.push(g)))}_objectStateChanged(a,b){for(const c of b.geometries)this._updateOrCreateDirtyRecord(b,c,null,d.DirtyOperation.UPDATE,a)}visibilityChanged(a){this._objectStateChanged(d.DirtyState.VISIBILITY,a)}highlightChanged(a){this._objectStateChanged(d.DirtyState.HIGHLIGHT,a)}occlusionChanged(a){this._objectStateChanged(d.DirtyState.OCCLUDEE,a)}attributesChanged({object:a,geometry:b,sync:c}){this._updateOrCreateDirtyRecord(a,b,null,d.DirtyOperation.UPDATE,d.DirtyState.GEOMETRY,
c)}layerAdded(a){a.objects.forAll(b=>this._layerObjectAdded(a,b))}layerRemoved(a){a.objects.forAll(b=>this._layerObjectRemoved(a,b))}layerObjectAdded(a){this._layerObjectAdded(a.layer,a.object)}_layerObjectAdded(a,b){a=a.id;for(const c of b.geometries)this._geometryAdded(b,c,a)}layerObjectRemoved(a){this._layerObjectRemoved(a.layer,a.object)}layerObjectsAdded(a){for(const b of a.objects)this._layerObjectAdded(a.layer,b)}layerObjectsRemoved(a){for(const b of a.objects)this._layerObjectRemoved(a.layer,
b)}_layerObjectRemoved(a,b){a=a.id;for(const c of b.geometries)this._geometryRemoved(b,c,a)}transformationChanged(a){const b=this._getParentLayerId(a);this._ensureGeomRecord(b,a.id).forEach(c=>{this._updateOrCreateDirtyRecord(a,c.geometry,b,d.DirtyOperation.UPDATE,d.DirtyState.TRANSFORMATION)})}shaderTransformationChanged(a){const b=this._getParentLayerId(a);this._ensureGeomRecord(b,a.id).forEach(c=>{c.objectShaderTransformationChanged(a.shaderTransformation)})}geometryAdded(a){this._geometryAdded(a.object,
a.geometry)}_geometryAdded(a,b,c=null){this._updateOrCreateDirtyRecord(a,b,c,d.DirtyOperation.ADD)}geometryRemoved(a){this._geometryRemoved(a.object,a.geometry)}_geometryRemoved(a,b,c=null){this._updateOrCreateDirtyRecord(a,b,c,d.DirtyOperation.REMOVE)}_updateOrCreateDirtyRecord(a,b,c,g,e=d.DirtyState.NONE,k=!1){c=c??this._getParentLayerId(a);const f=b.id;a=this._ensureDirtyRecord(c,a.id);c=a.get(f);let h=!1;c?(b=c.operation,b===d.DirtyOperation.REMOVE&&g===d.DirtyOperation.ADD&&c.states!==d.DirtyState.NONE?
c.operation=d.DirtyOperation.UPDATE:b===d.DirtyOperation.REMOVE&&g===d.DirtyOperation.ADD||b===d.DirtyOperation.ADD&&g===d.DirtyOperation.REMOVE?(a.delete(f),h=!0):(b!==d.DirtyOperation.UPDATE||g!==d.DirtyOperation.REMOVE&&g!==d.DirtyOperation.UPDATE?r.assert((b===d.DirtyOperation.REMOVE||b===d.DirtyOperation.ADD)&&g===d.DirtyOperation.UPDATE,"ModelDirtySet.objectGeometryAdded: inconsistent state"):c.operation=g,c.states|=e),c.sync=c.sync||k):a.set(f,new x(g,b,e,k));this.dirty=h?this._hasDirtyGeometryRecords:
!0}_ensureGeomRecord(a,b){let c=this._residentGeomRecords.get(a);c||(c=new Map,this._residentGeomRecords.set(a,c));a=c.get(b);a||(a=new Map,c.set(b,a));return a}get _hasDirtyGeometryRecords(){for(const a of this._dirtyGeomRecords.values())for(const b of a.values())if(0<b.size)return!0;return!1}_ensureDirtyRecord(a,b){let c=this._dirtyGeomRecords.get(a);c||(c=new Map,this._dirtyGeomRecords.set(a,c));a=c.get(b);a||(a=new Map,c.set(b,a));return a}_getParentLayerId(a){return a.parentLayer?a.parentLayer.id:
v.nullUid}formatDebugInfo(){const a=["ADD","UPD",void 0,"REM"];let b="";this._dirtyGeomRecords.forEach((c,g)=>{c.forEach((e,k)=>{0<b.length&&(b+="\n");b+=g+"."+k;const f=[];e.forEach(h=>{const l=h.operation;f[l]||(f[l]=[]);f[l].push(h.geometry.id)});for(e=0;e<f.length;e++)if(f[e])for(b+=" "+a[e-1]+": ",k=0;k<f[e].length;k++)b+=f[e][k]+", "})});return b}get test(){}};t.__decorate([u.property({constructOnly:!0})],n.prototype,"model",void 0);t.__decorate([u.property()],n.prototype,"dirty",void 0);return n=
t.__decorate([w.subclass("esri.views.3d.webgl-engine.lib.ModelDirtySet")],n)});