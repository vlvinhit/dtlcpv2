// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../geometry ../../../../core/Accessor ../../../../core/mathUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/mat4 ../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/Point".split(" "),
function(f,g,W,H,n,k,X,Y,Z,I,J,A,d,l,B){function p(a,b,c,h){J.fromRotation(C,b,c);return d.transformMat4(h,a,C)}function D(a,b,c,h){a=d.cross(h,a,b);d.normalize(a,a);d.scale(a,a,c);return a}function v(a,b,c,h,m,e){b=d.normalize(q,b);d.scale(b,b,h);d.add(e,a,b);0!==m&&360!==m&&d.add(e,e,c);return e}function w(a,b,c){b=d.sub(q,a,b);d.normalize(b,b);d.scale(b,b,c);d.add(a,a,b)}var z;f.ViewshedComputedData=z=class extends H{constructor(a){super(a)}get observer(){return this.viewshed.observer??new B}get farDistance(){return this.viewshed.farDistance}get farDistanceRenderSpace(){return this.farDistance/
this.metersPerUnit}get heading(){return this.viewshed.heading}get tilt(){return this.viewshed.tilt}get tiltParallelToSurface(){return this.tilt-90}get horizontalFieldOfView(){return this.viewshed.horizontalFieldOfView}get verticalFieldOfView(){return this.viewshed.verticalFieldOfView}get observerRenderSpace(){return this._pointToRenderSpace(this.observer,l.create())}get target(){return this.renderSpaceToPoint(this.targetRenderSpace,this.observer.spatialReference)}get targetRenderSpace(){const {leftVector:a,
northVector:b,upVector:c}=this,h=this.observerRenderSpace,m=this.farDistanceRenderSpace,e=l.create();d.scale(e,b,m);p(e,-n.deg2rad(this.heading),c,e);p(e,-n.deg2rad(this.tiltParallelToSurface),a,e);d.add(e,h,e);return e}get targetDirection(){const a=d.sub(l.create(),this.targetRenderSpace,this.observerRenderSpace);return d.normalize(a,a)}get tiltedUpVector(){const a=p(this.upVector,-n.deg2rad(this.tiltParallelToSurface),this.leftVector,l.create());return d.normalize(a,a)}get _basis(){return this.renderCoordsHelper.basisMatrixAtPosition(this.observerRenderSpace,
A.create())}get upVector(){const a=this._basis;return l.fromValues(a[8],a[9],a[10])}get northVector(){const a=this._basis;return l.fromValues(a[4],a[5],a[6])}get leftVector(){const a=this.upVector,b=p(this.northVector,-n.deg2rad(this.heading),a,l.create());return d.cross(b,a,b)}get rightVector(){return d.negate(l.create(),this.leftVector)}clone(){return new z({renderCoordsHelper:this.renderCoordsHelper,viewshed:this.viewshed.clone()})}isValid(){return this.viewshed.isValid()}get metersPerUnit(){return this.renderCoordsHelper.spatialReference.metersPerUnit}pointOnSphere(a,
b,c){const {observerRenderSpace:h,targetRenderSpace:m}=this,e=d.sub(q,m,h);p(e,-n.deg2rad(b),this.leftVector,e);p(e,-n.deg2rad(a),this.tiltedUpVector,e);return d.add(c,e,h)}cornerPoints(a,b){const c=this.observerRenderSpace;var h=this.horizontalFieldOfView/2,m=this.verticalFieldOfView/2,e=this.pointOnSphere(-h,m,K);const E=this.pointOnSphere(h,m,L);var x=this.pointOnSphere(-h,-m,M);h=this.pointOnSphere(h,-m,N);var r=d.sub(O,e,c),t=d.sub(P,E,c),u=d.sub(Q,x,c);m=d.sub(R,h,c);const {horizontalFieldOfView:y}=
this,F=S;var T=b.topLeft,U=b.bottomLeft;t=D(r,t,a,G);d.add(F,c,t);v(e,r,t,a,y,T);v(x,r,t,a,y,U);e=V;x=b.topRight;r=b.bottomRight;u=D(m,u,a,G);d.add(e,c,u);v(E,m,u,a,y,x);v(h,m,u,a,y,r);d.scale(b.center,d.add(b.center,e,F),.5)}arcCentersPoints(a,b){var c=this.horizontalFieldOfView/2,h=this.verticalFieldOfView/2;const m=this.pointOnSphere(0,h,b.top);h=this.pointOnSphere(0,-h,b.bottom);const e=this.pointOnSphere(-c,0,b.left);b=this.pointOnSphere(c,0,b.right);({observerRenderSpace:c}=this);w(m,c,a);w(h,
c,a);w(e,c,a);w(b,c,a)}parallelCenterPoints(a){const b=this.observerRenderSpace;var c=this.farDistanceRenderSpace*Math.sin(n.deg2rad(this.verticalFieldOfView/2));c=d.scale(q,this.tiltedUpVector,c);d.add(a.top,b,c);d.sub(a.bottom,b,c)}renderSpaceToPoint(a,b){const c=q;this.renderCoordsHelper.fromRenderCoords(a,c,b);return new B(c[0],c[1],c[2],b)}_pointToRenderSpace(a,b){const c=l.fromArray(a.toArray());this.renderCoordsHelper.toRenderCoords(c,a.spatialReference,b);return b}};g.__decorate([k.property()],
f.ViewshedComputedData.prototype,"renderCoordsHelper",void 0);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"viewshed",void 0);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"observer",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"farDistance",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"farDistanceRenderSpace",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"heading",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,
"tilt",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"tiltParallelToSurface",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"horizontalFieldOfView",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"verticalFieldOfView",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"observerRenderSpace",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"target",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,
"targetRenderSpace",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"targetDirection",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"tiltedUpVector",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"_basis",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"upVector",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"northVector",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"leftVector",
null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"rightVector",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"isValid",null);g.__decorate([k.property()],f.ViewshedComputedData.prototype,"metersPerUnit",null);f.ViewshedComputedData=z=g.__decorate([I.subclass("esri.views.3d.analysis.Viewshed.ViewshedComputedData")],f.ViewshedComputedData);const q=l.create(),G=l.create(),S=l.create(),V=l.create(),O=l.create(),P=l.create(),Q=l.create(),R=l.create(),K=l.create(),
L=l.create(),M=l.create(),N=l.create(),C=A.create();Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});