// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../intl ../../../../core/Accessor ../../../../core/colorUtils ../../../../core/has ../../../../core/mathUtils ../../../../core/maybe ../../../../core/quantityFormatUtils ../../../../core/quantityUtils ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../core/unitUtils ../../../../core/accessorSupport/decorators/property ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../interfaces ./interfaces ../../interactive/visualElements/LabelVisualElement ../../interactive/visualElements/LineVisualElement ../../interactive/visualElements/MeasurementArrowVisualElement ../../interactive/visualElements/RightAngleQuadVisualElement ../../interactive/visualElements/support/Segment ../../webgl-engine/lib/Material ../../webgl-engine/materials/lineStippleUtils ../../../interactive/support/viewUtils ../../../support/geodesicMeasurementUtils ../../../../intl/locale ../../../../intl/messages".split(" "),
function(l,n,ma,S,y,na,M,v,w,F,t,A,N,p,oa,pa,T,O,P,B,G,k,C,D,U,V,z,E,H,I,W,X,Y){l.DirectLineMeasurementVisualization=class extends S{get _parameters(){const {accentColor:a,textColor:b}=this.view.effectiveTheme,c=y.unitRGBAFromColor(a),f=y.multiplyOpacityToUnitRGBA(a,.75),d=y.unitRGBAFromColor(y.getContrast(a));var g=y.getContrast(b,y.BrightnessThreshold.Low);const q=y.multiplyOpacity(g,.6);g=y.multiplyOpacity(g,.5);return{accentColor:c,contrastColor:d,translucentAccentColor:f,triangleLineWidth:3,
geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:b,textBackgroundColor:q,textCalloutColor:g}}get visible(){return this.analysisView.visible}get viewMode(){const {elevationAlignedStartPoint:a,elevationAlignedEndPoint:b}=this.analysisView;if(null==a||null==b||a.equals(b))return k.ViewMode.None;var c=this.analysisView.result;if(null==c)return k.ViewMode.Direct;if("geodesic"===this.actualVisualizedMeasurement)return this._requiresGeodesicGuideAt(this._startPosition)||
this._requiresGeodesicGuideAt(this._endPosition)?k.ViewMode.ProjectedGeodesic:k.ViewMode.Direct;const {verticalDistance:f,horizontalDistance:d}=c;c=f.value;const g=d.value;return Math.min(c/g,g/c)<this.triangleCollapseRatioThreshold?k.ViewMode.Direct:k.ViewMode.Triangle}get actualVisualizedMeasurement(){const {measurementMode:a,result:b}=this.analysisView;switch(a){case G.MeasurementMode.Auto:return null!=b&&b.horizontalDistance.value>W.geodesicDistanceThreshold?"geodesic":"euclidean";case G.MeasurementMode.Euclidean:return"euclidean";
case G.MeasurementMode.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return null==this._triangleOrientationOverride}set allowVisualElementsOrientationChange(a){null==this._triangleOrientationOverride!==a&&(this._triangleOrientationOverride=null==this._triangleOrientationOverride?this._actualVisualElementsOrientation:null)}get labels(){return"geodesic"===this.actualVisualizedMeasurement?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,
horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(a){super(a);this._horizontalLabel=this._verticalLabel=this._segmentLabel=this._geodesicEndHint=this._geodesicStartHint=this._projectedGeodesicLine=this._rightAngleQuad=this._triangleVisualElement=this._segmentVisualElement=null;this._startPosition=B.create();this._endPosition=B.create();this._cornerPosition=B.create();this._startPositionAtSeaLevel=B.create();this._endPositionAtSeaLevel=B.create();this.messages=this._triangleOrientationOverride=
null;this.loadingMessages=!0;this.visualElementOrientation=k.VisualElementOrientation.Auto;this.triangleCollapseRatioThreshold=.03}initialize(){const a={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:b,guideStippleLengthPixels:c,triangleLineWidth:f,geodesicProjectionLineWidth:d,directLabelFontSize:g,verticalLabelFontSize:q,horizontalLabelFontSize:u}=this._parameters;this._segmentVisualElement=new U.MeasurementArrowVisualElement({...a,geometry:null,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});
this._triangleVisualElement=new D.LineVisualElement({...a,width:f,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});this._rightAngleQuad=new V.RightAngleQuadVisualElement({...a,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});const h={...a,polygonOffset:!0,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent};this._projectedGeodesicLine=new D.LineVisualElement({...h,width:d,stipplePattern:H.createStipplePatternSimple(c)});this._geodesicStartHint=new D.LineVisualElement({...h,
width:b,stipplePattern:H.createStipplePatternSimple(c)});this._geodesicEndHint=new D.LineVisualElement({...h,width:b,stipplePattern:H.createStipplePatternSimple(c)});this._segmentLabel=new C.LabelVisualElement({...a,fontSize:g});this._verticalLabel=new C.LabelVisualElement({...a,fontSize:q});this._horizontalLabel=new C.LabelVisualElement({...a,fontSize:u});this.addHandles([t.watch(()=>{const {elevationAlignedStartPoint:e,elevationAlignedEndPoint:m}=this.analysisView,r=this.view;return{view:r,camera:r.state.camera,
viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:m,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},e=>this._updateGeometryAndViewMode(e),t.syncAndInitial),t.watch(()=>({visible:this.visible,viewMode:this.viewMode}),e=>this._updateVisualElementVisibility(e),t.syncAndInitial),t.watch(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),
e=>this._updateLabelText(e),t.syncAndInitial),t.watch(()=>({visible:this.visible,viewMode:this.viewMode}),e=>this._updateLabelVisibility(e),t.syncAndInitial),t.watch(()=>this._measurementArrowStripeLength,e=>this._updateSegmentStripeLength(e),t.syncAndInitial),X.onLocaleChange(async()=>this._updateMessageBundle()),t.watch(()=>this._parameters,({textBackgroundColor:e,textCalloutColor:m,textColor:r,translucentAccentColor:x,accentColor:Z,contrastColor:aa})=>{const {_segmentLabel:J,_verticalLabel:K,_horizontalLabel:L,
_triangleVisualElement:ba,_rightAngleQuad:ca,_projectedGeodesicLine:da,_geodesicStartHint:ea,_geodesicEndHint:fa,_segmentVisualElement:Q}=this;J.backgroundColor=e;J.calloutColor=m;J.textColor=r;K.backgroundColor=e;K.calloutColor=m;K.textColor=r;L.backgroundColor=e;L.calloutColor=m;L.textColor=r;ba.color=x;ca.color=x;da.color=x;ea.color=x;fa.color=x;Q.color=Z;Q.contrastColor=aa},t.initial)]);this._updateMessageBundle()}destroy(){this._segmentVisualElement=v.destroyMaybe(this._segmentVisualElement);
this._triangleVisualElement=v.destroyMaybe(this._triangleVisualElement);this._rightAngleQuad=v.destroyMaybe(this._rightAngleQuad);this._projectedGeodesicLine=v.destroyMaybe(this._projectedGeodesicLine);this._geodesicStartHint=v.destroyMaybe(this._geodesicStartHint);this._geodesicEndHint=v.destroyMaybe(this._geodesicEndHint);this._segmentLabel=v.destroyMaybe(this._segmentLabel);this._verticalLabel=v.destroyMaybe(this._verticalLabel);this._horizontalLabel=v.destroyMaybe(this._horizontalLabel);this.set("view",
null)}_updateVisualElementVisibility({visible:a,viewMode:b}){this._segmentVisualElement.visible=!1;this._triangleVisualElement.visible=!1;this._rightAngleQuad.visible=!1;this._projectedGeodesicLine.visible=!1;this._geodesicStartHint.visible=!1;this._geodesicEndHint.visible=!1;if(a)switch(b){case k.ViewMode.Direct:this._segmentVisualElement.visible=!0;break;case k.ViewMode.Triangle:this._segmentVisualElement.visible=!0;this._triangleVisualElement.visible=!0;this._rightAngleQuad.visible=!0;break;case k.ViewMode.ProjectedGeodesic:this._segmentVisualElement.visible=
!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:a,camera:b,viewMode:c,elevationAlignedStartPoint:f,elevationAlignedEndPoint:d,orientation:g,visualizedMeasurement:q,stripeLength:u}){const h=a.renderCoordsHelper;if(null!=h&&null!=f&&null!=d&&!f.equals(d)){var e=this._startPosition,m=this._endPosition;h.toRenderCoords(f,e);h.toRenderCoords(d,m);f=g===k.VisualElementOrientation.AboveSegment?1:-1;d=h.getAltitude(m);
var r=h.getAltitude(e);d=f*(d-r);0>d&&(e=this._endPosition,m=this._startPosition);q="geodesic"===q?new z.GeodesicSegment(this._startPosition,this._endPosition,h.spatialReference):new z.EuclideanSegment(this._startPosition,this._endPosition);this._segmentVisualElement.geometry=q;this._updateSegmentStripeLength(u);switch(c){case k.ViewMode.Direct:this._updateSegment(q,g);break;case k.ViewMode.Triangle:this._updateSegmentAndTriangle({view:a,camera:b,segment:q,orientation:g,startPosition:e,endPosition:m,
deltaSign:f,altitudeDelta:d});break;case k.ViewMode.ProjectedGeodesic:this._updateSegmentAndProjection({view:a,orientation:g,startPosition:e,endPosition:m})}}}_updateSegment(a,b){this._segmentLabel.anchor=b===k.VisualElementOrientation.AboveSegment?"top":"bottom";this._segmentLabel.geometry={type:"segment",segment:a,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:a},camera:b,segment:c,orientation:f,startPosition:d,endPosition:g,deltaSign:q,altitudeDelta:u}){const h=this._cornerPosition;
a.worldUpAtPosition(d,h);P.scale(h,h,q*Math.abs(u));P.add(h,h,d);this._triangleVisualElement.geometry=[[[d[0],d[1],d[2]],[h[0],h[1],h[2]],[g[0],g[1],g[2]]]];this._rightAngleQuad.geometry={previous:d,center:h,next:g};a=new z.EuclideanSegment(d,h);q=new z.EuclideanSegment(h,g);var e=ha,m=ia;b.projectToRenderScreen(h,e);b.projectToRenderScreen(g,m);u="bottom";var r="top";e=e[0]<m[0]?"left":"right";const x=ja;m=ka;I.renderScreenSpaceTangent(d,h,b,x);I.renderScreenSpaceTangent(d,g,b,m);O.dot(x,m)>=R?u=
Math.sign(x[1])===Math.sign(m[1])?C.mirrorPosition(e):e:(d=la,I.renderScreenSpaceTangent(h,g,b,d),O.dot(d,m)>=R&&(u=Math.sign(d[0])===Math.sign(m[0])?C.mirrorPosition(r):r));f===k.VisualElementOrientation.BelowSegment&&(u="top"===u?"bottom":"top",r="top"===r?"bottom":"top",e="top"===e?"bottom":"top");this._segmentLabel.anchor=u;this._segmentLabel.geometry={type:"segment",segment:c,sampleLocation:"center"};this._verticalLabel.geometry={type:"segment",segment:a,sampleLocation:"center"};this._verticalLabel.anchor=
e;this._horizontalLabel.geometry={type:"segment",segment:q,sampleLocation:"center"};this._horizontalLabel.anchor=r}_updateSegmentAndProjection({view:{renderCoordsHelper:a},orientation:b,startPosition:c,endPosition:f}){a.setAltitude(this._startPositionAtSeaLevel,0,c);a.setAltitude(this._endPositionAtSeaLevel,0,f);a=new z.GeodesicSegment(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,a.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(a);this._geodesicStartHint.setGeometryFromSegment(new z.EuclideanSegment(this._startPositionAtSeaLevel,
c));this._geodesicEndHint.setGeometryFromSegment(new z.EuclideanSegment(this._endPositionAtSeaLevel,f));this._segmentLabel.geometry={type:"segment",segment:a,sampleLocation:"center"};this._segmentLabel.anchor=b===k.VisualElementOrientation.AboveSegment?"top":"bottom"}_updateLabelText({text:a,visualizedMeasurement:b}){null!=a?(this._segmentLabel.text="euclidean"===b?a.directDistance:a.horizontalDistance,this._horizontalLabel.text=a.horizontalDistance,this._verticalLabel.text=a.verticalDistance):(this._segmentLabel.text=
null,this._horizontalLabel.text=null,this._verticalLabel.text=null);this.notifyChange("labels")}_updateLabelVisibility({visible:a,viewMode:b}){const c=this._segmentLabel,f=this._horizontalLabel,d=this._verticalLabel;c.visible=!1;f.visible=!1;d.visible=!1;if(a)switch(b){case k.ViewMode.Direct:c.visible=!0;break;case k.ViewMode.Triangle:c.visible=!0;f.visible=!0;d.visible=!0;break;case k.ViewMode.ProjectedGeodesic:c.visible=!0}}get _labelsText(){if(this.destroyed)return null;const a=this.messages;var b=
this.analysisView.result;if(null==b||null==a)return null;const {directDistance:c,horizontalDistance:f,verticalDistance:d}=b;b=this.analysisView.unit;const g=q=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...q});switch(b){case "metric":return g({directDistance:c&&w.formatMetricLength(a,c),horizontalDistance:f&&w.formatMetricLength(a,f),verticalDistance:d&&w.formatMetricVerticalLength(a,d)});case "imperial":return g({directDistance:c&&w.formatImperialLength(a,c),horizontalDistance:f&&
w.formatImperialLength(a,f),verticalDistance:d&&w.formatImperialVerticalLength(a,d)});default:return g({directDistance:c&&w.formatDecimal(a,c,b),horizontalDistance:f&&w.formatDecimal(a,f,b),verticalDistance:d&&w.formatDecimal(a,d,b)})}}_updateSegmentStripeLength(a){const b=this._segmentVisualElement;null!=a?(b.stripeLength=a,b.stripesEnabled=!0):b.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;const a=this.visualElementOrientation;
return a===k.VisualElementOrientation.Auto?this.view.state.camera.aboveGround?k.VisualElementOrientation.AboveSegment:k.VisualElementOrientation.BelowSegment:a}_requiresGeodesicGuideAt(a){var b=this.view;if(!b?.state)return!1;const c=b.renderCoordsHelper;if(!c)return!1;b=b.state.camera.computeScreenPixelSizeAt(a);return 10<=c.getAltitude(a)/b}get _measurementArrowStripeLength(){const {result:a,unit:b}=this.analysisView;if(null==a)return null;var c=null;c=a.directDistance;switch(b){case "metric":c=
c&&F.toUnit(c,"meters");break;case "imperial":c=c&&F.toUnit(c,N.adaptiveImperialLengthUnit(c.value,c.unit));break;default:c=c&&F.toUnit(c,b)}return null==c?null:M.nextHighestPowerOfTen(c.value/30)*N.convertUnit(1,c.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0;Y.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a}).finally(()=>{this.loadingMessages=!1})}get testData(){}};n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_parameters",null);n.__decorate([p.property()],
l.DirectLineMeasurementVisualization.prototype,"_triangleOrientationOverride",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"messages",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"view",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"analysis",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"analysisView",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,
"loadingMessages",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"visible",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"viewMode",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"actualVisualizedMeasurement",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"visualElementOrientation",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,
"triangleCollapseRatioThreshold",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"allowVisualElementsOrientationChange",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"labels",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_labelsText",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_actualVisualElementsOrientation",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,
"_measurementArrowStripeLength",null);l.DirectLineMeasurementVisualization=n.__decorate([T.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],l.DirectLineMeasurementVisualization);const R=Math.cos(M.deg2rad(12)),ha=A.createRenderScreenPointArray3(),ia=A.createRenderScreenPointArray3(),ja=A.createRenderScreenPointArray(),ka=A.createRenderScreenPointArray(),la=A.createRenderScreenPointArray();Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});