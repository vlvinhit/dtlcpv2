// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../core/mathUtils ../../../../../../core/libs/gl-matrix-2/math/mat4 ../../../../../../chunks/vec32 ../../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../../chunks/boundedPlane ../../../../../../geometry/support/plane ../../../../../../geometry/support/vectorStacks ../../../../analysis/images/Factory ../../../../analysis/Slice/RotateManipulator ../../../../analysis/Slice/sliceToolUtils ../../../manipulatorUtils ../../dragEventPipeline3D ../../ManipulatorType ../../../../support/geometryUtils/ray ../../../../../interactive/dragEventPipeline ../../../../../interactive/editGeometry/interfaces ../../../../../interactive/editGeometry/operations/UpdateVertices ../../../../../interactive/tooltip/infos/ExtentRotateTooltipInfo".split(" "),
function(l,r,t,m,u,v,g,h,w,x,n,y,z,A,B,C,p,D,E){class F{get _object(){return this._tool.object}get _operations(){return this._object.operations}constructor(a,b,c){this._tool=a;this._bounds=b;this._snapRotation=c;this._rotateTooltipInfo=null;this._endAngle=this._startAngle=0;a=this._tool;const d=a.view,k=!d._stage?.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result;this.rotateManipulator=new x.RotateManipulator(d,(e,f)=>w.getRotateHeadingTexture(d.textures,{accentColor:e,contrastColor:f,
preMultiplyAlpha:k}));a.addHandles([this.rotateManipulator.events.on("grab-changed",e=>this._onRotateGrab(e)),this._createRotateDragPipeline(this.rotateManipulator)]);a.manipulators.add(this.rotateManipulator);a.addHandles([a.events.on("rotate-start",e=>this._startAngle=e.angle),a.events.on("rotate",e=>this._endAngle=e.angle),a.events.on("rotate-stop",()=>{this._endAngle=this._startAngle=0})])}destroy(){this._tool.manipulators.remove(this.rotateManipulator);this.rotateManipulator.destroy()}forEachManipulator(a){a(this.rotateManipulator,
A.ManipulatorType.ROTATE)}updateManipulators(a,b){const c=0>this._bounds.mapBounds.plane[2]?Math.PI:0;a=t.rotateX(h.sm4d.get(),a,c);a[12]=0;a[13]=0;a[14]=0;this.rotateManipulator.modelTransform=a;this.rotateManipulator.renderLocation=m.add(h.sv3d.get(),b.origin,b.basis1)}getUpdatedTooltipInfo(){return this.rotateManipulator.focused?this._computeRotateTooltipInfo():null}_computeRotateTooltipInfo(){const a=this._rotateTooltipInfo??(this._rotateTooltipInfo=new E.ExtentRotateTooltipInfo({sketchOptions:this._tool.sketchOptions}));
a.angle=this._startAngle-this._endAngle;return a}_onRotateGrab({action:a,screenPoint:b}){const c=this._tool,d=this._bounds;"start"===a&&b&&(a=n.createRotatePlane(d.displayBounds,c.view.renderCoordsHelper,n.RotationAxis.HEADING,g.create()),b=B.fromScreenNormalized(c.view.state.camera,b),g.intersectRay(a,b,h.sv3d.get())&&(d.backupMapBounds(),c.inputState={type:"rotate",rotatePlane:a}))}_createRotateDragPipeline(a){const {_tool:b,_object:c}=this;return C.createManipulatorDragEventPipeline(a,(d,k,e)=>
{d=b.inputState;null!=d&&(k.next(f=>{"start"===f.action&&b.events.emit("rotate-start",{object:c,angle:0});return f}).next(z.screenToRenderPlane(b.view,d.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(d)).next(...this._snapRotation()).next(this._rotateDragUpdateGeometry()).next(f=>{const q={object:c,angle:r.rad2deg(f.rotateAngle)};switch(f.action){case "start":case "update":b.events.emit("rotate",q);break;case "end":b.inputState=null,b.events.emit("rotate-stop",q)}return f}),e.next(()=>{null!=
b.inputState&&b.events.emit("rotate-stop",{object:c,angle:0});b.cancel()}))})}_rotateDragRenderPlaneToRotate(a){return b=>{const c=g.getNormal(a.rotatePlane),d=y.calculateInputRotationTransform(b.renderStart,b.renderEnd,this._bounds.displayBounds.origin,c);return{...b,rotateAxis:c,rotateAngle:d}}}_rotateDragUpdateGeometry(){const a=this._bounds;return b=>{var c=m.copy(u.create(),a.mapBoundsStart.origin);const d="start"===b.action?p.AccumulationBehavior.NEW_STEP:p.AccumulationBehavior.ACCUMULATE_STEPS;
this._operations&&(c=this._operations.rotate(c,b.rotateAngle,d,D.AccumulationType.REPLACE),v.copy(a.mapBoundsStart,a.mapBounds),a.updateMapBoundsFromOperation(c));return b}}}l.ExtentRotate=F;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});