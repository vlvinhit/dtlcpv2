// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../geometry ../../../../../core/Accessor ../../../../../core/arrayUtils ../../../../../core/colorUtils ../../../../../core/has ../../../../../core/Evented ../../../../../core/Handles ../../../../../core/handleUtils ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/Logger ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../core/support/UpdatingHandles ../../../../../geometry/Polyline ../../../../../layers/graphics/dehydratedPoint ../../../../../symbols/support/utils ../../Manipulator3D ../../manipulatorUtils ../../RenderObject ../../SegmentLabels3D ../../SnappingVisualizer3D ../dragEventPipeline3D ../geometryUtils ../ManipulatorType ../manipulatorUtils ../settings ../visualElementUtils ../manipulations/config ../manipulations/MoveManipulation ../manipulations/MoveXYObjectManipulation ./edgeOffsetUtils ./reshapeTooltipUtils ../../visualElements/OutlineVisualElement ../../../webgl-engine/lib/GeometryUtil ../../../../input/IViewEvents ../../../../interactive/dragEventPipeline ../../../../interactive/interfaces ../../../../interactive/editGeometry/interfaces ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/tooltip/Tooltip ../../../../../geometry/SpatialReference".split(" "),
function(l,n,xa,fa,ha,C,ya,ia,ja,H,x,u,r,za,ka,la,I,T,ma,na,U,V,Q,D,v,oa,W,N,pa,X,R,qa,ra,sa,G,ta,J,O,Y,K,Z,y,m,S,aa,ba,ua,va){function wa(){return a=>{const {operation:b,mapEnd:d}=a;if(null==b||null==d)return a;"start"===a.action&&b.selectArrowFromStartPoint(d);return{...a,signedDistance:b.signedDistanceToPoint(d)}}}function ca(a){const b=a.size/2,d=b+a.collisionPadding;return{size:b/d,outlineSize:(b+a.outlineSize)/d}}const da=Symbol();l.ReshapeOperation=class extends fa{get grabbingOrDragging(){return 0<
this._numGrabbing+this._numDragging}get _operations(){return this.object.operations}constructor(a){super(a);this._selectedIndex=0;this._manipulatorHandles=new ja;this._manipulatorInfos=[];this._numDragging=this._numGrabbing=0;this._reshapeEventState=p.NONE;this._updatingHandles=new ma.UpdatingHandles;this._recreatingManipulators=!1;this._settings=new qa.Settings({getTheme:()=>this.view.effectiveTheme});this.events=new ia;this._vertexLaserLineVisualElement=this.activeTooltipInfo=null}initialize(){const {view:a}=
this;var b=this._settings.manipulators,d=b.vertex;this.tooltipInfos=O.createTooltipInfos(this._sketchOptions,a);this._vertexManipulatorMaterial=D.createManipulatorMaterial(C.unitRGBAFromColor(d.color),d.renderOccluded);this._vertexManipulatorOutlineMaterial=D.createManipulatorOutlineMaterial(C.unitRGBAFromColor(d.outlineColor),d.renderOccluded);this._vertexManipulatorHoverOutlineMaterial=D.createManipulatorOutlineMaterial(C.unitRGBAFromColor(d.hoverOutlineColor),d.renderOccluded);d=b.edge;this._edgeManipulatorMaterial=
D.createManipulatorMaterial(C.unitRGBAFromColor(d.color),d.renderOccluded);this._edgeManipulatorOutlineMaterial=D.createManipulatorOutlineMaterial(C.unitRGBAFromColor(d.outlineColor),d.renderOccluded);d=b.edgeOffset;this._edgeOffsetManipulatorMaterial=D.createManipulatorMaterial(C.unitRGBAFromColor(d.color),d.renderOccluded,!1);this._edgeOffsetManipulatorHoverMaterial=D.createManipulatorMaterial(C.unitRGBAFromColor(d.hoverColor),d.renderOccluded,!1);b=b.selected;this._selectedManipulatorMaterial=
D.createManipulatorMaterial(C.unitRGBAFromColor(b.color),b.renderOccluded);this._selectedManipulatorOutlineMaterial=D.createManipulatorOutlineMaterial(C.unitRGBAFromColor(b.outlineColor),b.renderOccluded);this._selectedManipulatorHoverOutlineMaterial=D.createManipulatorOutlineMaterial(C.unitRGBAFromColor(b.hoverOutlineColor),b.renderOccluded);this.tooltip=new ua.Tooltip({view:a});this.addHandles([u.watch(()=>{const c=this._settings.manipulators;return{vertexSettings:c.vertex,edgeSettings:c.edge,edgeOffsetSettings:c.edgeOffset,
selectedSettings:c.selected}},({vertexSettings:c,edgeSettings:e,edgeOffsetSettings:f,selectedSettings:g})=>{c.applyColor(this._vertexManipulatorMaterial);c.applyOutline(this._vertexManipulatorOutlineMaterial);c.applyHoverOutline(this._vertexManipulatorHoverOutlineMaterial);e.applyColor(this._edgeManipulatorMaterial);e.applyOutline(this._edgeManipulatorOutlineMaterial);f.applyColor(this._edgeOffsetManipulatorMaterial);f.applyHover(this._edgeOffsetManipulatorHoverMaterial);g.applyColor(this._selectedManipulatorMaterial);
g.applyOutline(this._selectedManipulatorOutlineMaterial);g.applyHoverOutline(this._selectedManipulatorHoverOutlineMaterial)}),u.watch(()=>this.object.visible,c=>{for(const e of this._manipulatorInfos)e.manipulator.available=c,"edge"===e.type&&"edgeManipulator"in e&&(e.edgeManipulator.available=c)}),u.watch(()=>0===this._numGrabbing+this._numDragging,c=>this._toggleAutoHideManipulators(c)),u.watch(()=>({labels:this._segmentLabels,enabled:this._sketchOptions.labels.enabled,edgeOffsetEnabled:this.enableEdgeOffset}),
({labels:c,enabled:e,edgeOffsetEnabled:f})=>{null!=c&&(c.visible=e,c.edgeDistance=f?"far":"default")},u.initial),O.connectTooltipToManipulatedObject(this.tooltip,this.object,()=>this._tooltipsContext),u.on(()=>this._operations,"vertex-update",c=>{this._updateManipulatorPositions(c.vertices)},{onListenerAdd:()=>this._recreateManipulators()}),u.on(()=>this._operations?.data,"change",c=>{"undo"!==c.operation&&"redo"!==c.operation||this._recreateManipulators()})])}destroy(){this._segmentLabels=x.destroyMaybe(this._segmentLabels);
this.tooltip=x.destroyMaybe(this.tooltip);this._removeManipulators();this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating}get manipulators(){return this.tool.manipulators}get view(){return this.tool.view}get object(){return this.tool.object}get enableZShape(){return this.tool.enableZShape}get enableDeleteVertices(){return this.tool.enableDeleteVertices}get enableZVertex(){return this.tool.enableZVertex}get autoHideManipulators(){return this.tool.autoHideManipulators}get enableMoveObject(){return this.tool.enableMoveObject}get enableMidpoints(){return this.tool.enableMidpoints}get enableEdgeOffset(){return this.tool.enableEdgeOffset}get _sketchOptions(){return this.tool.sketchOptions}get _accentColor(){return this.view.effectiveTheme.accentColor}removeSelectedVertices(){const a=
this._manipulatorInfos.filter(b=>b.manipulator.selected&&"vertex"===b.type);this._removeVertices(a);return a.length}onManipulatorSelectionChanged(){this.events.emit("manipulators-changed")}_removeManipulators(){this._manipulatorHandles.removeAll();this._moveManipulation=x.destroyMaybe(this._moveManipulation);this._objectMoveManipulation=x.destroyMaybe(this._objectMoveManipulation);this.manipulators.removeAll();this._manipulatorInfos=[];this._numDragging=this._numGrabbing=0}_createManipulators(a){if(null!=
this._operations){var b=this.object.elevationInfo;for(const d of this._operations.data.components){const c=a?.byComponentIndex.get(d.index);for(const e of d.vertices){const f=c?.has(e.index);this._createVertexOrEdgeManipulator(e,b,f)}for(const e of d.edges)this._createVertexOrEdgeManipulator(e,b)}this._createObjectMoveManipulation();this._createMoveManipulation(b);this._createVisualElements()}}get canRedo(){return null!=this._operations&&this._operations.canRedo}get canUndo(){return null!=this._operations&&
this._operations.canUndo}redo(){return this._operations?.redo()}undo(){this.events.emit("undo");return this._operations?.undo()}_recreateManipulators(){if(!this._recreatingManipulators){this._recreatingManipulators=!0;this._removeManipulators();this._resetTooltip();this._operations&&this._segmentLabels?.context?.editGeometryOperations===this._operations||(this._segmentLabels=x.destroyMaybe(this._segmentLabels));this._createManipulators();if(!this._segmentLabels&&this._operations){const a=this._sketchOptions.labels;
this._segmentLabels=new oa.SegmentLabels3D({context:{view:this.view,editGeometryOperations:this._operations,elevationInfo:this.object.elevationInfo,labelOptions:a},visible:a.enabled})}this._recreatingManipulators=!1}}_perObjectManipulatorDragAction(a,b){if("end"===b.action)return b;let d=0;const c=[],e=this._manipulatorInfos.some(f=>"vertex"===f.type&&f.manipulator.selected);a=a===L.SELECTED_OR_ALL&&e;for(const f of this._manipulatorInfos)"vertex"===f.type&&(f.manipulator.grabbing||a&&!f.manipulator.selected||
c.push(f),d++);this._moveVertices(c,b);if(c.length===d){this._updateEventState(p.MOVING);if(this.destroyed)return b;this.events.emit("move",{type:"move",dx:b.screenDeltaX,dy:b.screenDeltaY,object:this.object})}else{this._updateEventState(p.RESHAPING);if(this.destroyed)return b;this.events.emit("reshape",{type:"reshape",object:this.object})}return b}_toggleAutoHideManipulators(a){this.autoHideManipulators&&(a?this.removeHandles(da):this.tool.manipulators.forEach(({manipulator:b})=>{(b=b.disableDisplay?.())&&
this.addHandles(b,da)}))}_isMultiVertexSelection(){return 1<this._manipulatorInfos.reduce((a,b)=>"vertex"===b.type&&b.manipulator.selected?a+1:a,0)}_perVertexManipulatorDragAction(a){this._updateEventState(p.RESHAPING);if(!this.destroyed){var {mapDeltaX:b,mapDeltaY:d,mapDeltaZ:c}=a;if(b||d||c){var e=[];for(const f of this._manipulatorInfos)"vertex"===f.type&&(f.manipulator.selected&&!f.manipulator.grabbing||f===a.info)&&e.push(f);this._moveVertices(e,a,S.AccumulationBehavior.ACCUMULATE_STEPS);this.events.emit("reshape",
{type:"reshape",object:this.object})}}}_updateEventState(a){if(a===this._reshapeEventState)return!1;switch(a){case p.NONE:if(0!==this._numGrabbing||0!==this._numDragging)return!1;switch(this._reshapeEventState){case p.MOVING:this.events.emit("move",{type:"move-stop",dx:0,dy:0,object:this.object});break;case p.RESHAPING:this.events.emit("reshape",{type:"reshape-stop",object:this.object})}break;case p.MOVING:switch(this._reshapeEventState){case p.NONE:this.events.emit("move",{type:"move-start",dx:0,
dy:0,object:this.object});break;case p.RESHAPING:this.events.emit("reshape",{type:"reshape-stop",object:this.object}),this.destroyed||this.events.emit("move",{type:"move-start",dx:0,dy:0,object:this.object})}break;case p.RESHAPING:switch(this._reshapeEventState){case p.NONE:this.events.emit("reshape",{type:"reshape-start",object:this.object});break;case p.MOVING:this.events.emit("move",{type:"move-stop",dx:0,dy:0,object:this.object}),this.destroyed||this.events.emit("reshape",{type:"reshape-start",
object:this.object})}}if(this.destroyed)return!1;const b=this._reshapeEventState!==a;this._reshapeEventState=a;return b}_createObjectMoveManipulation(){const {tool:a,view:b,object:d,_operations:c}=this;if(c){this._objectMoveManipulation=new ta.MoveXYObjectManipulation({tool:a,view:b,object:d});if(this.enableMoveObject){let e=null;this._manipulatorHandles.add(this._objectMoveManipulation.createDragPipeline((f,g,k)=>{g.next(h=>this._trackNumDragging(h)).next(h=>{"start"===h.action&&(e=c.createUndoGroup());
return h}).next(h=>this._perObjectManipulatorDragAction(L.ALL,h)).next(h=>{this._updateTranslateObjectTooltip(G.ManipulationType.XY,h);return h}).next(h=>{"end"===h.action&&(this._resetTooltip(),e=x.removeMaybe(e))});k.next(()=>this._onDragCancel(!0,()=>e=x.removeMaybe(e)))}));this._objectMoveManipulation.forEachManipulator(f=>this._manipulatorHandles.add(this._watchAndUpdateGrabState(f,!1)))}else this._objectMoveManipulation.forEachManipulator(e=>{e.grabbable=!1;e.cursor=null});this._objectMoveManipulation.forEachManipulator(e=>
this._manipulatorHandles.add(e.events.on("immediate-click",f=>{this._manipulatorInfos.some(g=>g.manipulator.selected)?this._clearSelection():this.events.emit("immediate-click",{...f,object:this.object});f.stopPropagation()})))}}_createMoveManipulation(a){const {object:b,tool:d,view:c,_operations:e}=this;if(e){this._moveManipulation=new G.MoveManipulation({tool:d,view:c,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:this.enableZShape&&R.canMoveZOperations(b.operations,b.elevationInfo),snapToScene:!1,
radius:G.MoveManipulation.radiusForSymbol(b.graphic?.symbol)});this._moveManipulation.forEachManipulator(g=>this.addHandles([g.events.on("immediate-click",k=>{this._moveManipulation.zManipulation.hasManipulator(g)||this._manipulatorInfos.some(h=>h.manipulator.selected)||this.events.emit("immediate-click",{...k,object:this.object});k.stopPropagation()}),this._watchAndUpdateGrabState(g,!1)]));var f=g=>k=>{this.addHandles(k.events.on("focus-changed",({action:h})=>{"focus"===h?this._updateTranslateTooltip(g):
this._resetTooltip()}))};this._moveManipulation.xyManipulation.forEachManipulator(f(G.ManipulationType.XY));this._moveManipulation.xyAxisManipulation.forEachManipulator(f(G.ManipulationType.XY_AXIS));this._moveManipulation.zManipulation.forEachManipulator(f(G.ManipulationType.Z));this._moveManipulation.elevationInfo={mode:"absolute-height",offset:0};this.addHandles([this._moveManipulation.createDragPipeline((g,k,h,q,z)=>{const {snappingStep:B,cancelSnapping:E}=ba.createSnapDragEventPipelineStep({predicate:t=>
!!t.info,snappingManager:d.snappingManager,snappingContext:new aa.SnappingContext({editGeometryOperations:e,elevationInfo:a,pointer:z,excludeFeature:b.graphic,visualizer:new W.SnappingVisualizer3D}),updatingHandles:this._updatingHandles,useZ:!1});q=q.next(t=>{this._onDragCancel();return t}).next(E);h=h.next(t=>this._trackNumDragging(t)).next(t=>{const w=this._manipulatorInfos.filter(A=>"vertex"===A.type&&A.manipulator.selected);return t.manipulatorType===X.ManipulatorType.TRANSLATE_XY&&1===w.length?
{...t,info:w[0],snapOrigin:w[0].handle.pos}:t}).next(y.sceneSnappingAtLocation(this.view,a,b.graphic??void 0)).next(...B).next(y.addMapDelta()).next(t=>this._perObjectManipulatorDragAction(L.SELECTED_OR_ALL,t)).next(t=>{this._updateTranslateTooltip(g,t);return t});return{steps:h,cancel:q}},a,e.data.spatialReference,b.graphic),u.watch(()=>b.visible,()=>this._updateMoveManipulationPosition(),u.initial),b.on("committed",()=>{this._recreatingManipulators||this._updateMoveManipulationPosition()}),u.watch(()=>
b.isDraped,g=>{this._updateMoveManipulationPosition();g?this.addHandles(this.view.elevationProvider.on("elevation-change",()=>this._updateMoveManipulationPosition()),"align-move-manipulation"):this.removeHandles("align-move-manipulation")},u.initial)])}}_createVisualElements(){const {object:a,view:b}=this,d=ra.createVisualElements({view:b,object:a,forEachManipulator:e=>{if(!this.destroyed&&!this._recreatingManipulators){this._objectMoveManipulation.forEachManipulator(e);this._moveManipulation.forEachManipulator(e);
for(const f of this._manipulatorInfos)e(f.manipulator,X.ManipulatorType.TRANSLATE_XY)}},onManipulatorsChanged:e=>this.events.on("manipulators-changed",e)});null!=d&&(this._outlineVisualElement=d.visualElement instanceof Y.OutlineVisualElement?d.visualElement:null);const c=this._outlineVisualElement;if(null!=c){const e=()=>{a.isDraped||this._updateMoveManipulationPosition()};this._manipulatorHandles.add(u.on(()=>c.events,"attachment-origin-changed",e,{onListenerAdd:e}))}this._manipulatorHandles.add(d)}_createEdgeOffsetManipulator(a,
b=this.object.elevationInfo){const d=this._operations;if(2>=a.component.vertices.length||!d)return null;var c=this._settings.manipulators.edgeOffset,e=c.size/2,f=e+c.collisionPadding;e/=f;const g=e*Math.sqrt(3)/2;null==this._edgeOffsetManipulatorGeometryInside&&(this._edgeOffsetManipulatorGeometryInside=K.createExtrudedTriangle(this._edgeOffsetManipulatorMaterial,g,e/2,e/2,c.height,c.offset));null==this._edgeOffsetManipulatorGeometryOutside&&(this._edgeOffsetManipulatorGeometryOutside=K.createExtrudedTriangle(this._edgeOffsetManipulatorMaterial,
-g,e/2,e/2,c.height,-c.offset));e=[new v.RenderObject(this._edgeOffsetManipulatorGeometryInside.instantiate(),m.ManipulatorStateFlags.Unfocused),new v.RenderObject(this._edgeOffsetManipulatorGeometryInside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),m.ManipulatorStateFlags.Focused),new v.RenderObject(this._edgeOffsetManipulatorGeometryOutside.instantiate(),m.ManipulatorStateFlags.Unfocused),new v.RenderObject(this._edgeOffsetManipulatorGeometryOutside.instantiate({material:this._edgeOffsetManipulatorHoverMaterial}),
m.ManipulatorStateFlags.Focused)];f=new Q.Manipulator3D({view:this.view,renderObjects:e,elevationInfo:"on-the-ground"!==b.mode||V.isVolumetricSymbol(this.object.graphic?.symbol)?{mode:"absolute-height",offset:0}:b,worldOriented:!1,focusMultiplier:1,radius:f,available:this.object.visible,collisionType:{type:"disc",direction:T.fromValues(0,0,1)},collisionPriority:1,metadata:{deleting:!1}});e=new Q.Manipulator3D({view:this.view,worldSized:!0,worldOriented:!1,available:this.object.visible,collisionPriority:-10,
cursor:this.enableMoveObject?"move":"default",metadata:{deleting:!1}});const k={manipulator:f,handle:a,locationUpdateHandle:null,type:"edge",selectedIndex:0,edgeManipulator:e,elevationInfo:b,visibilityHandle:null};this._autoHideEdgeOffsetManipulator(k,c.minSquaredEdgeLength);this._updateEdgeOffsetManipulator(k);c=[];for(var h of[a.leftVertex,a.rightVertex])a=this._getManipulatorInfoFromHandle(h),null!=a&&c.push(a.manipulator.events.on("location-update",()=>this._updateEdgeOffsetManipulator(k)));k.locationUpdateHandle=
H.handlesGroup(c);this._manipulatorHandles.add(k.locationUpdateHandle,f);this._manipulatorHandles.add([this._watchAndUpdateGrabState(f,!0),this._watchAndUpdateGrabState(e,!0)],f);this._manipulatorHandles.add(y.createManipulatorDragEventPipeline(f,this._createEdgeOffsetPipeline(k,b)),f);this._manipulatorHandles.add(y.createManipulatorDragEventPipeline(e,(q,z,B,E)=>{if("touch"===E)this._createEdgeOffsetPipeline(k,b)(q,z,B);else if(this.enableMoveObject){E=this.object.graphic;const t=d.data.spatialReference;
z.next(w=>this._trackNumDragging(w)).next(y.dragAtLocation(this.view,q.elevationAlignedLocation)).next(N.screenToMapXYAtLocation(this.view,q.elevationAlignedLocation,b,t,E)).next(y.addScreenDelta()).next(y.addMapDelta()).next(w=>this._perObjectManipulatorDragAction(L.ALL,w)).next(w=>{this._updateTranslateObjectTooltip(G.ManipulationType.XY,w);return w}).next(w=>{"end"===w.action&&this._resetTooltip()});B.next(()=>this._onDragCancel(!q.metadata.deleting))}}),f);h=q=>{this._manipulatorInfos.some(z=>
z.manipulator.selected)?this._clearSelection():this.events.emit("immediate-click",{...q,object:this.object});q.stopPropagation()};this._manipulatorHandles.add([f.events.on("immediate-click",h),e.events.on("immediate-click",h),f.events.on("focus-changed",({action:q})=>{"focus"===q?this._updateEdgeOffsetTooltip(null):this._resetTooltip()})],f);this._manipulatorInfos.push(k);this.manipulators.add(f);this.manipulators.add(e);this.events.emit("manipulators-changed");return k}_autoHideEdgeOffsetManipulator(a,
b){const d=a.manipulator,c=a.edgeManipulator,e=()=>{a.visibilityHandle=x.removeMaybe(a.visibilityHandle);var f=this._getManipulatorInfoFromHandle(a.handle.leftVertex);const g=this._getManipulatorInfoFromHandle(a.handle.rightVertex);f=null!=f&&null!=g&&J.screenEdgeLengthSquared(f.manipulator.renderLocation,g.manipulator.renderLocation,this.view.state.camera)<b;if(!d.focused&&!c.focused||f)d.grabbable=!f,c.grabbable=!f,a.visibilityHandle=H.handlesGroup([d.disableDisplay(),H.makeHandle(()=>{d.grabbable=
!0;c.grabbable=this.enableMoveObject})])};this._manipulatorHandles.add([d.events.on("focus-changed",e),c.events.on("focus-changed",e),H.makeHandle(()=>{x.removeMaybe(a.visibilityHandle);c.metadata.deleting=!0;this.manipulators.remove(c)})],d);e()}_updateEdgeOffsetManipulator(a){if(this._operations){this._updateManipulatorPosition(a);var {coordinateHelper:b}=this._operations.data;b=J.createEdgeOffsetIntersectionPlane(this.view,a.manipulator.elevationAlignedLocation,J.createEdgeOffsetOperation(b,a.handle,
a.manipulator.elevationInfo));var d=this._getManipulatorInfoFromHandle(a.handle.leftVertex),c=this._getManipulatorInfoFromHandle(a.handle.rightVertex);null!=d&&null!=c&&(d=d.manipulator.renderLocation,c=c.manipulator.renderLocation,b=null!=b?J.edgeOffsetRotationMatrix(b,d,c):la.IDENTITY,a.manipulator.modelTransform=b,a.edgeManipulator.elevationAlignedLocation=a.manipulator.elevationAlignedLocation,a.edgeManipulator.modelTransform=b,b=I.length(I.subtract(P,d,c))/2,a.edgeManipulator.collisionType={type:"line",
paths:[[[-b,0,0],[b,0,0]]]})}}_createEdgeOffsetPipeline(a,b){return(d,c,e)=>{const f=this._operations;if(f){this._clearSelection();var {step:g,cleanup:k}=this._initializeEdgeOffset(a,b,f);c.next(h=>this._trackNumDragging(h)).next(y.dragAtLocation(this.view,d.elevationAlignedLocation)).next(g).next(N.screenToRenderPlaneFromEvent(this.view)).next(N.convertToMapCoordinates(this.view,f.data.spatialReference)).next(y.addMapDelta()).next(wa()).next(this._applyEdgeOffsetStep(a)).next(this._showEdgeOffsetTooltip()).next(h=>
{"end"===h.action&&k()});e.next(()=>{d.metadata.deleting||(k(),this._onDragCancel())})}}}_initializeEdgeOffset(a,b,d){var {view:c}=this;const e=J.createEdgeOffsetOperation(d.data.coordinateHelper,a.handle,b);b=d.createUndoGroup();const f=J.createEdgeOffsetIntersectionPlane(c,a.manipulator.elevationAlignedLocation,e);if(e.requiresSplitEdgeLeft){var g=this._getManipulatorInfoFromHandle(a.handle.leftVertex.leftEdge);null!=g&&this._splitEdgeManipulator(g,1)}e.requiresSplitEdgeRight&&(g=this._getManipulatorInfoFromHandle(a.handle.rightVertex.rightEdge),
null!=g&&this._splitEdgeManipulator(g,0));const k=()=>new na({paths:[[a.handle.leftVertex.pos,a.handle.rightVertex.pos]],spatialReference:d.data.spatialReference});g=this._settings;const h=new Y.OutlineVisualElement({view:c,isDraped:this.object.isDraped,geometry:k(),elevationInfo:a.elevationInfo,width:g.visualElements.lineObjects.outline.width,attached:!1,isDecoration:!0});let q;const z=()=>{this._cleanEdgeOffsetCollapsedEdges(a);q=x.removeMaybe(q)};c=this.events.on("undo",z);q=H.handlesGroup([u.watch(()=>
C.unitRGBAFromColor(this._accentColor),B=>h.color=B,u.initial),H.destroyHandle(h),u.watch(()=>this.object.isDraped,B=>h.isDraped=B),this.object.on("committed",()=>h.geometry=k()),b,c]);h.attached=!0;return{step:B=>null==e||null==f?(z(),null):{...B,operation:e,plane:f},cleanup:z}}_applyEdgeOffsetStep(a){return b=>{if(this.destroyed||null==b.operation)return b;this._updateEventState(p.RESHAPING);const {mapDeltaX:d,mapDeltaY:c,mapDeltaZ:e}=b;if(d||c||e)this._offsetEdge(a,b),this.events.emit("reshape",
{type:"reshape",object:this.object});return b}}_showEdgeOffsetTooltip(){return a=>{null!=a.signedDistance&&this.object.operations?this._updateEdgeOffsetTooltip(a):this._resetTooltip();return a}}_cleanEdgeOffsetCollapsedEdges(a){if(this._operations){var b=a.handle.leftVertex.leftEdge?.leftVertex,d=a.handle.leftVertex,c=a.handle.rightVertex.rightEdge?.rightVertex,e=a.handle.rightVertex,f=this._operations.data.coordinateHelper;a=[];b&&1E-6>f.distance(b.pos,d.pos)&&(b=this._getManipulatorInfoFromHandle(d),
null!=b&&a.push(b));if(1E-6>f.distance(d.pos,e.pos)||c&&1E-6>f.distance(c.pos,e.pos))d=this._getManipulatorInfoFromHandle(e),null!=d&&a.push(d);a.length&&this._removeVertices(a)}}_createVertexOrEdgeManipulator(a,b=this.object.elevationInfo,d=!1){const {view:c,_operations:e}=this;if(!e)return null;var f=this._settings;if("edge"===a.type){if(this.enableEdgeOffset)return this._createEdgeOffsetManipulator(a,b);if(!this.enableMidpoints)return null}if(null==this._vertexManipulatorGeometry||null==this._vertexManipulatorOutlineGeometry){const {size:h,
outlineSize:q}=ca(f.manipulators.vertex);this._vertexManipulatorGeometry=K.createSphereGeometry(this._vertexManipulatorMaterial,h,16,16);this._vertexManipulatorOutlineGeometry=K.createSphereGeometry(this._vertexManipulatorOutlineMaterial,q,16,16)}if(null==this._edgeManipulatorGeometry||null==this._edgeManipulatorOutlineGeometry){const {size:h,outlineSize:q}=ca(f.manipulators.edge);this._edgeManipulatorGeometry=K.createSphereGeometry(this._edgeManipulatorMaterial,h,16,16);this._edgeManipulatorOutlineGeometry=
K.createSphereGeometry(this._edgeManipulatorOutlineMaterial,q,16,16)}f=this._operations?.data.type;f="point"===f||"mesh"===f?[]:[new v.RenderObject(this._vertexManipulatorGeometry.instantiate(),F.Vertex|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._vertexManipulatorOutlineGeometry.instantiate(),F.Vertex|m.ManipulatorStateFlags.Unfocused|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._vertexManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),
F.Vertex|m.ManipulatorStateFlags.Focused|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._vertexManipulatorGeometry.instantiate({material:this._selectedManipulatorMaterial}),m.ManipulatorStateFlags.Selected),new v.RenderObject(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorOutlineMaterial}),m.ManipulatorStateFlags.Selected|m.ManipulatorStateFlags.Unfocused),new v.RenderObject(this._vertexManipulatorOutlineGeometry.instantiate({material:this._selectedManipulatorHoverOutlineMaterial}),
m.ManipulatorStateFlags.Selected|m.ManipulatorStateFlags.Focused)];this.enableMidpoints&&f.push(new v.RenderObject(this._edgeManipulatorGeometry.instantiate({material:this._vertexManipulatorMaterial}),F.Edge|m.ManipulatorStateFlags.Focused|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._edgeManipulatorOutlineGeometry.instantiate({material:this._vertexManipulatorHoverOutlineMaterial}),F.Edge|m.ManipulatorStateFlags.Focused|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._edgeManipulatorGeometry.instantiate(),
F.Edge|m.ManipulatorStateFlags.Unfocused|m.ManipulatorStateFlags.Unselected),new v.RenderObject(this._edgeManipulatorOutlineGeometry.instantiate(),F.Edge|m.ManipulatorStateFlags.Unfocused|m.ManipulatorStateFlags.Unselected));f=new Q.Manipulator3D({view:c,renderObjects:f,elevationInfo:b,focusMultiplier:1,touchMultiplier:1,available:this.object.visible,metadata:{deleting:!1}});f.selected=d;this._setTypeSpecificManipulatorSettings(f,a,b);const g="edge"===a.type?{manipulator:f,handle:a,locationUpdateHandle:null,
type:"edge",selectedIndex:0}:{manipulator:f,handle:a,type:"vertex",selectedIndex:0};this._manipulatorInfos.push(g);this.manipulators.add(f);this._updateManipulatorPosition(g);if("edge"===g.type){a=[];for(var k of[g.handle.leftVertex,g.handle.rightVertex])d=this._getManipulatorInfoFromHandle(k),null!=d&&a.push(d.manipulator.events.on("location-update",()=>this._updateManipulatorPosition(g)));g.locationUpdateHandle=H.handlesGroup(a);this._manipulatorHandles.add(g.locationUpdateHandle,f)}this._manipulatorHandles.add(this._watchAndUpdateGrabState(f,
!0),f);k=y.createManipulatorDragEventPipeline(f,(h,q,z,B)=>{let E=null;const {snappingStep:t,cancelSnapping:w}=ba.createSnapDragEventPipelineStep({predicate:()=>!this._isMultiVertexSelection(),snappingManager:this.tool.snappingManager,snappingContext:new aa.SnappingContext({editGeometryOperations:e,elevationInfo:b,pointer:B,excludeFeature:this.object.graphic,visualizer:new W.SnappingVisualizer3D}),updatingHandles:this._updatingHandles,useZ:!1});z=z.next(A=>{this._onDragCancel(!h.metadata.deleting,
()=>E=x.removeMaybe(E));return A}).next(w);q.next(A=>this._trackNumDragging(A)).next(A=>{"start"===A.action&&this._operations&&(E=this._operations.createUndoGroup());if("edge"===g.type){const ea=this._splitEdgeManipulator(g);return{...A,info:ea,snapOrigin:ea.handle.pos}}return{...A,info:g,snapOrigin:g.handle.pos}}).next(y.dragAtLocation(this.view,h.elevationAlignedLocation)).next(N.screenToMapXYAtLocation(this.view,h.elevationAlignedLocation,this.object.elevationInfo,h.location.spatialReference,this.object.graphic)).next(y.sceneSnappingAtLocation(this.view,
b,this.object.graphic??void 0)).next(...t).next(y.addMapDelta()).next(A=>{this._perVertexManipulatorDragAction(A);"end"===A.action&&(E=x.removeMaybe(E));this._resetTooltip()})});this._manipulatorHandles.add([k,f.events.on("immediate-click",h=>this._manipulatorClickCallback(h,g)),f.events.on("select-changed",()=>{g.selectedIndex=++this._selectedIndex;this._updateMoveManipulationPosition();this._resetTooltip()}),f.events.on("focus-changed",()=>{this._resetTooltip()})],f);this.events.emit("manipulators-changed");
return g}_trackNumDragging(a){switch(a.action){case "start":this._numDragging++;break;case "end":this._numDragging--}return a}_onDragCancel(a=!0,b){this._numDragging--;a&&this.undo();null!=this.tool.snappingManager&&this.tool.snappingManager.doneSnapping();this._resetTooltip();switch(this._reshapeEventState){case p.MOVING:this.events.emit("move",{type:"move",dx:0,dy:0,object:this.object});break;case p.RESHAPING:this.events.emit("reshape",{type:"reshape",object:this.object})}b&&b();this.destroyed||
this._updateEventState(p.NONE)}_setTypeSpecificManipulatorSettings(a,b,d){const c=this._settings;switch(b.type){case "vertex":a.state=F.Vertex;a.selectable=!0;a.cursor="move";a.collisionPriority=2;const {size:e,collisionPadding:f}=c.manipulators.vertex;a.radius=e/2+f;a.elevationInfo=d;b=this._operations?.data.type;a.interactive=null!=b&&"point"!==b&&"mesh"!==b;break;case "edge":a.state=F.Edge;a.selectable=!1;a.cursor="copy";a.collisionPriority=-1;const {size:g,collisionPadding:k}=c.manipulators.edge;
a.radius=g/2+k;a.elevationInfo="on-the-ground"!==d.mode||V.isVolumetricSymbol(this.object.graphic?.symbol)?{mode:"absolute-height",offset:0}:d}}_watchAndUpdateGrabState(a,b){return a.events.on("grab-changed",d=>this._onGrabStateChanged(a,b,d.action,d.pointerType))}_onGrabStateChanged(a,b,d,c="mouse"){if(!this._recreatingManipulators){if("start"===d)b&&this._updateSelection(a),this._numGrabbing++;else if(this._numGrabbing--,this._updateEventState(p.NONE),this.destroyed)return;this._moveManipulation.interactive=
!this._numGrabbing;if("touch"!==c||this.enableEdgeOffset)this._manipulatorInfos.forEach(e=>{const {manipulator:f}=e,g=this._operations?.data.type;f.interactive=f.grabbing||!this._numGrabbing&&null!=g&&"point"!==g&&"mesh"!==g;"edgeManipulator"in e&&(e.edgeManipulator.interactive=e.edgeManipulator.grabbing||!this._numGrabbing)}),this._objectMoveManipulation.forEachManipulator(e=>{e.interactive=e.grabbing||!this._numGrabbing})}}_clearSelection(){for(const a of this._manipulatorInfos)a.manipulator.grabbing||
(a.manipulator.selected=!1)}_updateSelection(a){a.grabbing&&!a.selected&&a.selectable&&(this._clearSelection(),a.selected=!0,this.events.emit("manipulators-changed"))}_removeManipulator(a){null!=a&&(a.manipulator.metadata.deleting=!0,this.manipulators.remove(a.manipulator),this._manipulatorHandles.remove(a.manipulator),ha.removeUnordered(this._manipulatorInfos,a),this.events.emit("manipulators-changed"),this._resetTooltip())}_getManipulatorInfoFromHandle(a){if(a)for(const b of this._manipulatorInfos)if(a===
b.handle)return b;return null}_updateManipulatorPositions(a){for(const b of a)this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(b))}_updateManipulatorPosition(a){const b=this._operations;if(null!=a&&b)if("vertex"===a.type)a.manipulator.location=b.data.coordinateHelper.vectorToDehydratedPoint(a.handle.pos,M),a.manipulator.grabbing&&null!=this._vertexLaserLineVisualElement&&(this._vertexLaserLineVisualElement.visualElement.intersectsWorldUpAtLocation=a.manipulator.renderLocation);else if("edge"===
a.type){var d=this._getManipulatorInfoFromHandle(a.handle.leftVertex),c=this._getManipulatorInfoFromHandle(a.handle.rightVertex);null!=d&&null!=c&&(d=d.manipulator,c=c.manipulator,null!=a.manipulator.elevationInfo&&"on-the-ground"===a.manipulator.elevationInfo.mode?(d=d.location,c=c.location,a.manipulator.location=U.makeDehydratedPoint(d.x+.5*(c.x-d.x),d.y+.5*(c.y-d.y),d.hasZ&&c.hasZ?0:void 0,b.data.spatialReference)):(I.lerp(P,d.renderLocation,c.renderLocation,.5),a.manipulator.renderLocation=P))}}_splitEdgeManipulator(a,
b=.5){var d=this._operations;b=d.splitEdge(a.handle,b).createdVertex;a.locationUpdateHandle=x.removeMaybe(a.locationUpdateHandle);var c=this.object.elevationInfo;let e;this.enableEdgeOffset?(this._removeManipulator(a),e=this._createVertexOrEdgeManipulator(b)):(e=a,e.handle=b,e.type="vertex",this._setTypeSpecificManipulatorSettings(a.manipulator,a.handle,c));b.leftEdge&&this._createVertexOrEdgeManipulator(b.leftEdge);b.rightEdge&&this._createVertexOrEdgeManipulator(b.rightEdge);this._updateManipulatorPosition(e);
this.enableEdgeOffset||this._resetTooltip();this._updateSelection(a.manipulator);a=this._updateEventState(p.RESHAPING);c=d.data.coordinateHelper.vectorToArray(e.handle.pos);d=d.data.components.indexOf(b.component);this.events.emit("vertex-add",{type:"vertex-add",object:this.object,vertices:[{coordinates:c,componentIndex:d,vertexIndex:b.index}],added:c});a&&this._updateEventState(p.NONE);return e}_updateMoveManipulationPosition(){const a=I.set(P,0,0,0);let b=0,d=!1;var c=null;let e=null;for(var f of this._manipulatorInfos)if("vertex"===
f.type)if(f.manipulator.selected)if(b++,I.add(a,a,f.manipulator.renderLocation),null==c||f.selectedIndex>c.selectedIndex)e=c,c=f;else{if(null==e||f.selectedIndex>e.selectedIndex)e=f}else d=!0;f=this.object;var g=this._operations?.data.geometry;if(0===b)c=f.visible&&this.enableMoveObject,this._moveManipulation.xyManipulation.available=c,this._moveManipulation.xyAxisManipulation.available=c,this._moveManipulation.xyAxisManipulation.orthogonalAvailable=c,this._moveManipulation.zManipulation.available=
c&&this.enableZShape&&R.canMoveZOperations(this._operations,f.elevationInfo),this._moveManipulation.angle=pa.orientation(g),this._moveManipulation.radius=G.MoveManipulation.radiusForSymbol(f.graphic?.symbol);else{f=f.visible;this._moveManipulation.xyManipulation.available=f;this._moveManipulation.xyAxisManipulation.available=f;this._moveManipulation.zManipulation.available=f&&this.enableZVertex&&R.canMoveZOperations(this._operations,this.object.elevationInfo);this._moveManipulation.xyAxisManipulation.orthogonalAvailable=
f&&1!==b;f=0;if(null!=c){g=c.handle.pos;const k=null!=e?e.handle.pos:c.handle.leftEdge?.leftVertex?c.handle.leftEdge.leftVertex.pos:null;c=null==e&&c.handle.rightEdge?.rightVertex?c.handle.rightEdge.rightVertex.pos:null;k&&c?this._moveManipulation.xyAxisManipulation.available=!1:k?f=Math.atan2(g[1]-k[1],g[0]-k[0])+Math.PI/2:c&&(f=Math.atan2(c[1]-g[1],c[0]-g[0])+Math.PI/2)}this._moveManipulation.angle=f;this._moveManipulation.radius=sa.discRadiusSmall}0!==b&&d?(I.scale(a,a,1/b),M.spatialReference=
this._operations.data.spatialReference,M.hasZ=!0,this.view.renderCoordsHelper.fromRenderCoords(a,M),this._moveManipulation.elevationAlignedLocation=M):null==this._outlineVisualElement||this.object.isDraped||null==this._outlineVisualElement.attachmentOrigin?D.placeAtObject(this._moveManipulation,this.object):this._moveManipulation.elevationAlignedLocation=this._outlineVisualElement.attachmentOrigin}_removeVertices(a){var b=[];const d=this._operations;if(d){for(var c of a)if(a=c.handle.component,"vertex"===
c.type&&d.canRemoveVertex(a)){b.push(c.handle);this._removeManipulator(c);this._removeManipulator(this._getManipulatorInfoFromHandle(c.handle.leftEdge));this._removeManipulator(this._getManipulatorInfoFromHandle(c.handle.rightEdge));const e=d.removeVertices([c.handle]).removedVertices?.[0].createdEdge;e?this._createVertexOrEdgeManipulator(e):this.enableEdgeOffset&&2>=a.vertices.length&&this._removeManipulator(this._getManipulatorInfoFromHandle(a.edges[0]))}if(0<b.length&&(b=b.map(e=>{const f=d.data.components.indexOf(e.component);
return{coordinates:d.data.coordinateHelper.vectorToArray(e.pos),componentIndex:f,vertexIndex:e.index}}),c=this._updateEventState(p.RESHAPING),!this.destroyed&&(this.events.emit("vertex-remove",{type:"vertex-remove",object:this.object,removed:b.map(e=>e.coordinates),vertices:b}),!this.destroyed))){if(c&&(this._updateEventState(p.NONE),this.destroyed))return;this._updateMoveManipulationPosition()}}}_moveVertices(a,b,d="start"===b.action?S.AccumulationBehavior.NEW_STEP:S.AccumulationBehavior.ACCUMULATE_STEPS){const c=
this._operations;if(c){0<a.length&&c.moveVertices(a.map(e=>e.handle),b.mapDeltaX,b.mapDeltaY,b.mapDeltaZ,d);for(const e of a)this._updateManipulatorPosition(e)}}_offsetEdge(a,b){if(null!=b.operation&&null!=b.signedDistance){var d=this._operations;if(d){var c=b.operation.clone();c.distance=b.signedDistance;d.updateVertices([a.handle.leftVertex,a.handle.rightVertex],c);this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(a.handle.leftVertex));this._updateManipulatorPosition(this._getManipulatorInfoFromHandle(a.handle.rightVertex))}}}_manipulatorClickCallback(a,
b){a.shiftKey||this._clearSelection();"vertex"===b.type&&(b.manipulator.selected=!b.manipulator.selected,this.enableDeleteVertices&&a.button===Z.MouseButton.Right&&this._removeVertices([b]));"edge"===b.type&&a.button===Z.MouseButton.Left&&this._splitEdgeManipulator(b);a.stopPropagation()}_updateTranslateTooltip(a,b){null!=this._defaultTooltipInfo?this._resetTooltip():this._updateTranslateObjectTooltip(a,b)}_updateTranslateObjectTooltip(a,b){this.activeTooltipInfo=O.getUpdatedTranslateObjectTooltipInfo(a,
b,this._tooltipsContext)}_updateEdgeOffsetTooltip(a){this.activeTooltipInfo=O.getUpdatedEdgeOffsetTooltipInfo(this.object,a,this._tooltipsContext)}_resetTooltip(){this.activeTooltipInfo=this._defaultTooltipInfo}get _defaultTooltipInfo(){switch(this._operations?.data.type){case "polyline":case "polygon":return this._selectedVertexManipulatorInfo?this.tooltipInfos.selectedVertex:null;case "point":case "mesh":return this.tooltipInfos.movePoint;default:return null}}get _selectedVertexManipulatorInfo(){const a=
this._manipulatorInfos.filter(b=>"vertex"===b.type&&b.manipulator.selected);return 1===a.length?a[0]:null}get _tooltipsContext(){const {events:a}=this;return{sketchOptions:this._sketchOptions,tooltipInfos:this.tooltipInfos,activeTooltipInfo:this.activeTooltipInfo,selectedVertexManipulatorInfo:this._selectedVertexManipulatorInfo,callbacks:{onReshapeStart:()=>a.emit("reshape",{type:"reshape-start",object:this.object}),onReshape:()=>a.emit("reshape",{type:"reshape",object:this.object}),onReshapeStop:()=>
a.emit("reshape",{type:"reshape-stop",object:this.object}),onMoveStart:()=>a.emit("move",{type:"move-start",object:this.object,dx:0,dy:0}),onMove:()=>a.emit("move",{type:"move",object:this.object,dx:0,dy:0}),onMoveStop:()=>a.emit("move",{type:"move-stop",object:this.object,dx:0,dy:0})}}}get test(){}};n.__decorate([r.property()],l.ReshapeOperation.prototype,"_numGrabbing",void 0);n.__decorate([r.property()],l.ReshapeOperation.prototype,"_numDragging",void 0);n.__decorate([r.property()],l.ReshapeOperation.prototype,
"grabbingOrDragging",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"_operations",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"_segmentLabels",void 0);n.__decorate([r.property({constructOnly:!0})],l.ReshapeOperation.prototype,"tool",void 0);n.__decorate([r.property()],l.ReshapeOperation.prototype,"tooltip",void 0);n.__decorate([r.property()],l.ReshapeOperation.prototype,"activeTooltipInfo",void 0);n.__decorate([r.property({readOnly:!0})],l.ReshapeOperation.prototype,
"updating",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"manipulators",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"view",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"object",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableZShape",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableDeleteVertices",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableZVertex",null);n.__decorate([r.property()],
l.ReshapeOperation.prototype,"autoHideManipulators",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableMoveObject",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableMidpoints",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"enableEdgeOffset",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"_sketchOptions",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,"_accentColor",null);n.__decorate([r.property()],l.ReshapeOperation.prototype,
"_tooltipsContext",null);l.ReshapeOperation=n.__decorate([ka.subclass("esri.views.3d.interactive.editingTools.reshape.ReshapeOperation")],l.ReshapeOperation);const M=U.makeDehydratedPoint(0,0,void 0,va.WGS84),P=T.create();var F;(function(a){a.Vertex=m.ManipulatorStateCustomFlags.Custom1;a.Edge=m.ManipulatorStateCustomFlags.Custom2})(F||={});var p;(function(a){a[a.NONE=0]="NONE";a[a.MOVING=1]="MOVING";a[a.RESHAPING=2]="RESHAPING"})(p||={});var L;(function(a){a[a.ALL=0]="ALL";a[a.SELECTED_OR_ALL=1]=
"SELECTED_OR_ALL"})(L||={});Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});