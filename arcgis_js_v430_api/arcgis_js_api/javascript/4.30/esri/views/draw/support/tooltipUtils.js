// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../core/quantityUtils ../../../core/unitUtils ../../../support/elevationInfoUtils ./helpMessageUtils ./helpMessageUtils3d ../../interactive/sketch/constraintUtils ../../interactive/tooltip/tooltipCommonUtils ../../interactive/tooltip/infos/DrawCircleTooltipInfo ../../interactive/tooltip/infos/DrawMeshTooltipInfo ../../interactive/tooltip/infos/DrawPointTooltipInfo ../../interactive/tooltip/infos/DrawPolygonTooltipInfo ../../interactive/tooltip/infos/DrawPolylineTooltipInfo ../../interactive/tooltip/infos/DrawRectangleTooltipInfo ../../support/angularMeasurementUtils ../../support/automaticAreaMeasurementUtils ../../support/automaticLengthMeasurementUtils ../../support/euclideanLengthMeasurementUtils".split(" "),
function(m,l,v,n,r,G,H,I,J,K,L,M,N,O,P,w,p,x){function t({geometryType:a,graphic:b,tooltipInfos:c}){return"multipoint"===a||b?.geometry?.type!==Q[a]?null:c[a]}function y(a,b,c){const {drawOperation:g,view:h,sketchOptions:d}=c,{cursorVertex:e}=g;a.sketchOptions=d;a.viewType=h.type;a.setLocationFromPoint(b,c.drawOperation.coordinateHelper.spatialReference);z(a.elevation,c);g.constraints=e?{context:A(e,c),x:a.x.committed,y:a.y.committed,longitude:a.longitude.committed,latitude:a.latitude.committed,elevation:a.elevation.committed,
distance:null,direction:null}:void 0}function B(a,b){const {drawOperation:c,sketchOptions:g,view:h}=b,{cursorVertex:d,lastVertex:e,secondToLastVertex:k}=c;var f=g.values.effectiveDirectionMode;a.sketchOptions=g;a.viewType=h.type;const q=e&&d?p.autoDistanceBetweenPoints2D(e,d)??l.zeroMeters:null;a.distance.actual=q;a.distance.readOnly=null==e;a.direction.actual=null;a.direction.readOnly=!0;e&&d&&("absolute"===f||k)&&(f=P.directionForVertices(k,e,d,f),a.direction.actual=f??l.zeroDegreesGeographic,a.direction.readOnly=
!1);a.setLocationFromPoint(d,b.drawOperation.coordinateHelper.spatialReference);z(a.elevation,b);f=R(e,b);a.xyMode=f;a.direction.visible="direction-distance"===f;a.distance.visible="direction-distance"===f;a.effectiveX.visible="coordinates"===f;a.effectiveY.visible="coordinates"===f;f=d??e;c.constraints=f?{context:A(f,b),x:a.x.committed,y:a.y.committed,longitude:a.longitude.committed,latitude:a.latitude.committed,elevation:a.elevation.committed,distance:a.distance.committed,direction:a.direction.committed}:
void 0}function R(a,{sketchOptions:b}){b=b.tooltips.xyMode;return"auto"===b?a?"direction-distance":"coordinates":b}function z(a,b){const {drawOperation:c}=b;a.actual=x.elevationFromPoint(c?.cursorVertex??c?.lastVertex)??u(b);a.visible=c.hasZ;a.readOnly=!1;a.showAsZ=!0}function C(a){a=a.createOperationGeometry?.full;return"polygon"!==a?.type?l.zeroSquareMeters:w.autoArea2D(a)??l.zeroSquareMeters}function D(a){a=a.createOperationGeometry?.rectangle?.midpoints;return(null!=a?p.autoDistanceBetweenPoints2D(a.left,
a.right):null)??l.zeroMeters}function E(a){a=a.createOperationGeometry?.rectangle?.midpoints;return(null!=a?p.autoDistanceBetweenPoints2D(a.top,a.bottom):null)??l.zeroMeters}function S({createOperationGeometry:a}){return(null!=a?.circle?.center&&null!=a.circle.edge?p.autoDistanceBetweenPoints2D(a.circle.center,a.circle.edge):null)??l.zeroMeters}function u(a){const b=v.getMetersPerVerticalUnitForSR(a.drawOperation.coordinateHelper.spatialReference);return l.createLength(a.defaultZ*b,"meters")}function A(a,
b){return H.getConstraintContext(a,b.view,b.drawOperation.coordinateHelper.spatialReference,b.drawOperation.elevationInfo??n.absoluteHeightElevationInfo,b.drawOperation.coordinateHelper.hasZ(),b.sketchOptions.values.effectiveDirectionMode)}const Q={point:"point",mesh:"mesh",polyline:"polyline",polygon:"polygon",circle:"polygon",rectangle:"polygon"};m.createTooltipInfos=function(a,b){return{point:new L.DrawPointTooltipInfo({sketchOptions:b,viewType:a}),polyline:new N.DrawPolylineTooltipInfo({sketchOptions:b,
viewType:a}),polygon:new M.DrawPolygonTooltipInfo({sketchOptions:b,viewType:a}),mesh:new K.DrawMeshTooltipInfo({sketchOptions:b,viewType:a}),rectangle:new O.DrawRectangleTooltipInfo({sketchOptions:b}),circle:new J.DrawCircleTooltipInfo({sketchOptions:b})}};m.getActiveTooltipInfo=t;m.getConstraintZ=function(a){const {geometryType:b,tooltipInfos:c}=a;switch(b){case "point":case "mesh":case "polyline":case "polygon":const g=c[b].elevation.committed;return g?l.valueInUnit(g,"meters")/v.getMetersPerVerticalUnitForSR(a.drawOperation.coordinateHelper.spatialReference):
void 0}};m.initializeConstraints=function(a){const {directionOptions:b,geometryType:c,sketchOptions:g,tooltipInfos:h}=a,d=k=>{const f=(a.drawOperation.elevationInfo??n.absoluteHeightElevationInfo).mode;k=h[k].elevation;"relative-to-ground"===f||"relative-to-scene"===f||"on-the-ground"===f?k.lock(u(a)):k.unlock()},e=k=>{b&&(k=h[k].direction,k.committed=b.angle,k.unlockOnVertexPlacement=!1,g.values.directionMode=b.mode)};switch(c){case "polygon":case "polyline":d(c);e(c);break;case "point":case "mesh":d(c)}};
m.lockElevationOnVertexAdd=function(a,b){const {drawOperation:c,view:g}=b,h=t(b);var d=b.drawOperation.elevationInfo??n.absoluteHeightElevationInfo;if("2d"!==g.type&&a&&"absolute-height"===d.mode&&1===c?.numCommittedVertices&&h&&("draw-polyline"===h.type||"draw-polygon"===h.type)&&!h.elevation.locked){var [e,k,f]=a;{var q=f;const {view:F,drawOperation:T}=b;"3d"===F.type&&T?(q??=0,a=b.drawOperation.coordinateHelper.spatialReference,d=n.getConvertedElevationFromXYZ(F,e,k,q,a,b.drawOperation.elevationInfo??
n.absoluteHeightElevationInfo,d),b=x.elevationFromZ(d,a)??u(b)):b=void 0}null!=b&&h.elevation.lock(b)}};m.unlockConstraintsOnVertexAddOrRemove=function(a){t(a)?.allFields.forEach(b=>{b.unlockOnVertexPlacement&&b.unlock()})};m.updateTooltipInfo=function(a,b){switch(a?.type){case "draw-point":var c=b.graphic?.geometry;"point"===c?.type&&(y(a,c,b),a.helpMessage=r.getDrawHelpMessage("point",c));break;case "draw-polyline":{const {createOperationGeometry:d,drawOperation:e}=b;c=null!=d?d.full:null;"polyline"===
c?.type&&(B(a,b),a.totalLength.actual=e.lastVertex?p.autoLength2D(c)??l.zeroMeters:null,a.helpMessage=r.getDrawHelpMessage("polyline",c))}break;case "draw-polygon":{const {createOperationGeometry:d,drawOperation:e}=b;c=null!=d?d.full:null;"polygon"===c?.type&&(B(a,b),a.area.actual=e.lastVertex?w.autoArea2D(c)??l.zeroSquareMeters:null,a.helpMessage=r.getDrawHelpMessage("polygon",c))}break;case "draw-rectangle":a.sketchOptions=b.sketchOptions;a.xSize=D(b);a.ySize=E(b);a.area=C(b);break;case "draw-circle":const {forceUniformSize:g,
sketchOptions:h}=b;a.sketchOptions=h;a.radius=g?S(b):null;a.xSize=g?null:D(b);a.ySize=g?null:E(b);a.area=C(b);break;case "draw-mesh":{const {graphic:d,view:e}=b;c=d?.geometry;"3d"===e.type&&"mesh"===c?.type&&(y(a,c.origin,b),I.updateTooltipInfoFromMeshTransform(a,c),a.helpMessage=G.getDrawMeshHelpMessage(d,e))}}};Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});