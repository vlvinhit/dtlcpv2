// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/string","../../Utils","../../shaderGraph/techniques/mesh/AResourceProxy"],function(d,e,f,g){class h extends g.AResourceProxy{constructor(a){super();this._fetcher=a;this._controller=new AbortController;this._pendingIds=new Set;this._pendingRequests=[];this._resourceIdToResource=new Map}destroy(){this._controller.abort()}get _abortOptions(){return{signal:this._controller.signal}}enqueueRequest(a){var b=f.discardUrlIfHasUrlHash(a.resource);b=e.numericHash(JSON.stringify(b));
if(this._pendingIds.has(b))return b;this._pendingIds.add(b);this._pendingRequests.push({...a,resourceId:b});return b}async fetchEnqueuedResources(){const a=this._pendingRequests;this._pendingIds.clear();this._pendingRequests=[];const b=await this._fetcher.fetch(a,this._abortOptions);for(let c=0;c<b.length;c++)this._resourceIdToResource.set(a[c].resourceId,b[c])}async fetchResourceImmediate(a){a=await this._fetcher.fetch([a],this._abortOptions);if(1!==a.length)throw Error("FeaturePipelineResourceProxy: failed to fetch resources");
return a[0]}async fetchDictionaryResourceImmediate(a){a=await this._fetcher.fetchDictionary([a],this._abortOptions);if(1!==a.length)throw Error("FeaturePipelineResourceProxy: failed to fetch dictionary resources");return a[0]}getResource(a){return this._resourceIdToResource.get(a)}}d.ResourceProxy=h;Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});