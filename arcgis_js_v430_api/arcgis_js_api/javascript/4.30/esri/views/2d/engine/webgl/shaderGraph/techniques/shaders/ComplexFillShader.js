// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../chunks/tslib.es6 ../../GraphShaderModule ../../graph/glsl ./AFeatureShader ./constants ./FillShader ./LocalTileOffset ./MosaicInfo ./utils".split(" "),function(m,d,f,a,v,t,w,A,B,n){function x(c,b){var g=c.view.requiredZoomFactor,h=new a.Vec2(b.width,b.height),e=h.multiply(b.scale).multiply(g),k=b.angle.multiply(t.c256ToRad);const p=a.sin(k);k=a.cos(k);var r=b.id;var u=a.equal(n.getBit(b.bitset,t.bitsetFillRandomPatternOffset),a.float(1));r=n.rgba2float(new a.Vec4(r,
0));u=a.ifElse(u,a.mat3(k.divide(e.x),p.divide(e.y),0,a.negate(p.divide(e.x)),k.divide(e.y),0,n.rand(a.vec2(r,0)),n.rand(a.vec2(0,r)),1),a.mat3(k.divide(e.x),p.divide(e.y),0,a.negate(p.divide(e.x)),k.divide(e.y),0,0,0,1));h=c.localTileOffset.getPatternOffsetAtTileOrigin(h,p,k);g=g.multiply(b.scale).multiply(b.offset.subtract(h)).divide(e);e=new a.Vec3(b.pos,1);g=u.multiply(e).xy.subtract(g);e=b.tlbr.divide(c.mosaicInfo.size.xyxy);h=n.getBit(b.bitset,t.bitsetGenericConsiderAlphaOnly);null!=c.visualVariableColor&&
(h=a.ifElse(n.isNan(c.storage.getColorValue(b.id)),new a.Float(0),h));return{tileTextureCoord:g,tlbr:e,sampleAlphaOnly:h}}function y(c,b){var g=a.mod(b.tileTextureCoord,new a.Float(1));g=a.mix(b.tlbr.xy,b.tlbr.zw,g);c=a.texture2D(c.mosaicInfo.texture,g);c=a.ifElse(a.greaterThan(b.sampleAlphaOnly,new a.Float(.5)),c.aaaa,c);return b.color.multiply(c)}class l extends w.FillVertexInput{}d.__decorate([f.location(5,a.Vec4)],l.prototype,"tlbr",void 0);d.__decorate([f.location(6,a.Float)],l.prototype,"width",
void 0);d.__decorate([f.location(7,a.Float)],l.prototype,"height",void 0);d.__decorate([f.location(8,a.Vec2)],l.prototype,"offset",void 0);d.__decorate([f.location(9,a.Vec2)],l.prototype,"scale",void 0);d.__decorate([f.location(10,a.Float)],l.prototype,"angle",void 0);class z extends v.FeatureFragmentInput{}class q extends w.FillShader{vertex(c,b){return{...super.vertex(c,b),...x(this,c)}}fragment(c){const b=y(this,c);return this.getFragmentOutput(b,c,new a.Float(0))}}d.__decorate([f.uniform(B.MosaicInfo)],
q.prototype,"mosaicInfo",void 0);d.__decorate([f.uniform(A.LocalTileOffset)],q.prototype,"localTileOffset",void 0);d.__decorate([d.__param(0,f.input(l)),d.__param(1,f.input(v.BaseHittestVertexInput))],q.prototype,"vertex",null);d.__decorate([d.__param(0,f.input(z))],q.prototype,"fragment",null);m.ComplexFillFragmentInput=z;m.ComplexFillShader=q;m.ComplexFillVertexInput=l;m.getComplexFillFragmentColor=y;m.getComplexFillVertexData=x;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});