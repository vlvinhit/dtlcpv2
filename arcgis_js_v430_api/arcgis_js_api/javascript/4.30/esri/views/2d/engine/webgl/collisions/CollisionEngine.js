// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/has","../definitions","./CollisionGrid"],function(w,z,x,u){function t(c,d){c=c.children.slice();c.sort((f,h)=>f.tileAge-h.tileAge);c.forEach(f=>{null!=f.labelMetrics&&f.isReady&&d(f,f.labelMetrics)})}function y(c,d){return(!c.minScale||c.minScale>=d)&&(!c.maxScale||c.maxScale<=d)}class A{run(c,d,f,h){const a=[];for(let b=c.length-1;0<=b;b--){const l=c[b];l.labelingCollisionInfos?.length&&a.push(...l.labelingCollisionInfos)}z("esri-2d-update-debug")&&a.length&&
console.debug("CollisionEngine.run");this._transformMetrics(a);this._runCollision(a,d,f,h);for(const b of a)b.container.requestRender()}_runCollision(c,d,f,h){const [a,b]=d.state.size,l=new u.CollisionBitsetGrid(a,b,d.pixelRatio);for(const {container:m,deconflictionEnabled:g,visible:k}of c){const e=m.attributeView;g?k?(this._prepare(m),this._collideVisible(l,m,f,h),this._collideInvisible(l,m)):t(m,(p,q)=>{for(const n of q)e.setLabelMinZoom(n.entityTexel,255)}):t(m,(p,q)=>{for(const n of q)y(n,f)?
(e.setLabelMinZoom(n.entityTexel,0),k&&l.insertMetrics(n)):e.setLabelMinZoom(n.entityTexel,254)})}}_isFiltered(c,d,f){c=d.getFilterFlags(c);d=null==f.featureEffect||f.featureEffect.excludedLabelsVisible||!!(c&x.effectFlag0);return!((!f.hasFilter||c&x.filterFlag0)&&d)}_prepare(c){const d=c.attributeView,f=new Set;t(c,(h,a)=>{for(const b of a)h=b.entityTexel,f.has(h)||(f.add(h),this._isFiltered(h,d,c.layerView)?d.setLabelMinZoom(h,254):0!==d.getLabelMinZoom(h)?d.setLabelMinZoom(h,255):d.setLabelMinZoom(h,
0))})}_collideVisible(c,d,f,h){const a=d.attributeView,b=new Set;t(d,(l,m)=>{for(var g=0;g<m.length;g++){const e=m[g].entityTexel;if(b.has(e))continue;if(l.key.level!==h){a.setLabelMinZoom(e,254);b.add(e);continue}if(!y(m[g],f)){a.setLabelMinZoom(e,254);b.add(e);continue}if(0!==a.getLabelMinZoom(e)){b.add(e);continue}let p=!1,q=!0;for(var k=g;g<m.length;g++){const n=m[g];if(n.entityTexel!==e)break;if(!p)switch(c.hasCollision(n)){case u.hasCollision:p=!0;q=!1;break;case u.none:q=!1}}if(!p)for(;k<g;k++)c.insertMetrics(m[k]);
--g;q||(b.add(e),a.setLabelMinZoom(e,p?254:0))}})}_collideInvisible(c,d){const f=d.attributeView,h=new Set;t(d,(a,b)=>{for(var l=0;l<b.length;l++){a=b[l].entityTexel;if(h.has(a))continue;if(255!==f.getLabelMinZoom(a)){h.add(a);continue}let g=!1,k=!0;for(var m=l;l<b.length;l++){const e=b[l];if(e.entityTexel!==a)break;if(!g)switch(c.hasCollision(e)){case u.hasCollision:g=!0;k=!1;break;case u.none:k=!1}}if(!g)for(;m<l;m++)c.insertMetrics(b[m]);--l;k||(h.add(a),f.setLabelMinZoom(a,g?255:0))}})}_transformMetrics(c){for(const {container:d,
geometryType:f,vvEvaluators:h}of c)t(d,(a,b)=>{const l=d.attributeView;a=a.transforms.labelMat2d;a[4]=Math.round(a[4]);a[5]=Math.round(a[5]);const m="polyline"===f;for(const p of b){const {entityTexel:q,anchorX:n,anchorY:v}=p;var g=p.referenceBounds?.size??0;b=h[0];if(null!=b){var k=l.getVVSize(q);b=b(k);g=isNaN(b)||null==b||Infinity===b?g:b}b=g/2*p.directionX;g=g/2*p.directionY;for(const r of p.bounds){k=n;var e=v;m?(k=k+r.x+b,e=e+r.y+g,k=a[0]*k+a[2]*e+a[4],e=a[1]*k+a[3]*e+a[5],r.computedX=Math.floor(k),
r.computedY=Math.floor(e)):(k=a[0]*n+a[2]*v+a[4],e=a[1]*n+a[3]*v+a[5],e=e+r.y+g,r.computedX=k+r.x+b,r.computedY=e)}}})}}w.CollisionEngine=A;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});