// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../definitions ../FeatureTechnique ../featureTechniqueUtils ../TechniqueType ./DotDensityPointShader ./DotDensityPolygonShader ./DotDensityResources ../shaders/FillShader ../../../../../../webgl/enums".split(" "),function(n,e,p,d,q,r,t,u,v,w){class x extends p.FeatureTechnique{constructor(){super(...arguments);this.type=q.TechniqueType.DotDensity;this.shaders={polygon:new t.DotDensityPolygonShader,point:new r.DotDensityPointShader,fill:new v.FillShader};this._resources=new Map}render(a,
c){d.isHighlight(a)||d.isHittest(a)?this._renderPolygons(a,c):this._renderDotDensity(a,c)}_renderPolygons(a,c){const {painter:b}=a;b.setShader({shader:this.shaders.fill,uniforms:{...d.getFeatureUniforms(a,c.target),visualVariableColor:null,visualVariableOpacity:null},defines:{...d.getSelectionDefines(a)},optionalAttributes:{zoomRange:!1},useComputeBuffer:d.isHittest(a)});b.setPipelineState(d.getFeaturePipelineState(a));b.submitDraw(a,c)}_renderDotDensity(a,c){const {context:b,painter:g,requiredLevel:y}=
a,h=c.instance.getInput().uniforms,m=this._getOrCreateResourcesRecord(b);var f=m.getDotDensityTextures(b,e.tileSize,h.seed),l=1/2**(y-c.target.key.level),k=e.tileSize;k=k*window.devicePixelRatio*k*window.devicePixelRatio;const z=1/l*(h.dotScale?a.state.scale/h.dotScale:1)*h.dotValue*(1/l);g.setShader({shader:this.shaders.polygon,uniforms:{...d.getFeatureUniforms(a,c.target),instance:{isActive:h.isActive,colors:h.colors,dotValue:Math.max(1,z)},draw:{dotTexture0:{unit:e.textureBindingRenderer0,texture:f[0]},
dotTexture1:{unit:e.textureBindingRenderer1,texture:f[1]},tileZoomFactor:l,pixelRatio:window.devicePixelRatio,tileDotsOverArea:k/(e.tileSize*window.devicePixelRatio*e.tileSize*window.devicePixelRatio)}},defines:{...d.getSelectionDefines(a),blending:h.blending},optionalAttributes:{},useComputeBuffer:!1});g.setPipelineState(d.getFeaturePipelineState(a));f=b.getViewport();b.setViewport(0,0,e.tileSize,e.tileSize);l=b.getBoundFramebufferObject();k=m.getFBO(b);b.bindFramebuffer(k);b.setClearColor(0,0,0,
0);g.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1});g.updatePipelineState(b);b.clear(w.ClearBufferBit.COLOR_BUFFER_BIT);g.submitDraw(a,c);b.bindFramebuffer(l);b.setViewport(f.x,f.y,f.width,f.height);f=m.getFBO(b).colorTexture;g.setShader({shader:this.shaders.point,uniforms:{view:d.getViewUniforms(a,c.target),instance:{dotSize:h.dotSize},draw:{locations:{unit:e.textureBindingRenderer0,texture:f},tileZoomFactor:1,pixelRatio:window.devicePixelRatio}},defines:{...d.getSelectionDefines(a)},
optionalAttributes:{},useComputeBuffer:!1});g.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1});g.submitDrawMesh(b,m.getDotDensityMesh(b))}shutdown(a){super.shutdown(a);this._resources.get(a)?.destroy();this._resources.delete(a)}_getOrCreateResourcesRecord(a){let c=this._resources.get(a);null==c&&(c=new u.DotDensityResources,this._resources.set(a,c));return c}}n.DotDensityTechnique=x;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});