// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/has ../../../../core/Logger ./definitions ./DisplayId ./Utils ../../../webgl/enums ../../../webgl/FramebufferObject ../../../webgl/Texture ../../../webgl/TextureDescriptor".split(" "),function(v,A,n,B,f,w,p,r,C,x,y){class z{constructor(a,b,c){this._lastTexture=this._texture=null;this._fbos={};this.texelSize=4;const {buffer:d,pixelType:g,textureOnly:h}=a;a=p.getPixelArrayCtor(g);this.blockIndex=c;this.pixelType=g;this.size=b;this.textureOnly=
h;h||(this.data=new a(d));this._resetRange()}destroy(){this._texture?.dispose();for(const a in this._fbos){const b=this._fbos[a];b&&("0"===a&&b.detachColorTexture(),b.dispose());this._fbos[a]=null}this._texture=null}get _textureDesc(){const a=new y.TextureDescriptor;a.wrapMode=r.TextureWrapMode.CLAMP_TO_EDGE;a.samplingMode=r.TextureSamplingMode.NEAREST;a.dataType=this.pixelType;a.width=this.size;a.height=this.size;return a}setData(a,b,c){a=w.getDisplayIdTexel(a);const d=this.data;b=a*this.texelSize+
b;!d||b>=d.length||(d[b]=c,this.dirtyStart=Math.min(this.dirtyStart,a),this.dirtyEnd=Math.max(this.dirtyEnd,a))}getData(a,b){if(null==this.data)return null;a=w.getDisplayIdTexel(a)*this.texelSize+b;return!this.data||a>=this.data.length?null:this.data[a]}getTexture(a){return this._texture??this._initTexture(a)}getFBO(a,b=0){if(!this._fbos[b]){const c=0===b?this.getTexture(a):this._textureDesc;this._fbos[b]=new C.FramebufferObject(a,c)}return this._fbos[b]}get hasDirty(){return this.dirtyEnd>=this.dirtyStart}updateTexture(a,
b){try{const m=this.dirtyStart,q=this.dirtyEnd;if(this.hasDirty){n("esri-2d-update-debug")&&console.debug(`Version[${b}] AttributeStoreView.updateTexture`,{start:m,end:q,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this});this._resetRange();var c=this.data.buffer,d=this.getTexture(a),g=(m-m%this.size)/this.size,h=(q-q%this.size)/this.size,e=g*this.size*4,l=4*(this.size+h*this.size)-e,k=p.getPixelArrayCtor(this.pixelType),t=new k(c,e*k.BYTES_PER_ELEMENT,l),u=this.size;a=h-g+1;a>this.size?
B.getLogger("esri.views.2d.engine.webgl.AttributeStoreView").error(new A("mapview-webgl","Out-of-bounds index when updating AttributeData")):d.updateData(0,0,g,u,a,t)}}catch(m){}}update(a){const {data:b,start:c,end:d}=a;if(null!=b&&null!=this.data){const g=this.data,h=c*this.texelSize;for(let e=0;e<b.length;e++)a.layout&1<<e%this.texelSize&&(g[h+e]=b[e])}this.dirtyStart=Math.min(this.dirtyStart,c);this.dirtyEnd=Math.max(this.dirtyEnd,d)}resize(a,b){const c=this.size;this.size=b;this.textureOnly?c!==
this.size&&(this._lastTexture=this._texture,this._texture=null):(b=p.getPixelArrayCtor(this.pixelType),this.destroy(),this.data=new b(a.buffer))}_resetRange(){this.dirtyStart=2147483647;this.dirtyEnd=0}_initTexture(a){const b=new x.Texture(a,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const g=this._lastTexture.descriptor.width,h=this._lastTexture.descriptor.height,e=this._lastTexture.descriptor.dataType,l=this._lastTexture.descriptor.pixelFormat,k=this.getFBO(a);
var c=p.getPixelBytes(e),d=p.getPixelArrayCtor(e);c=new ArrayBuffer(g*h*c*this.texelSize);d=new d(c);c=a.getBoundFramebufferObject();const {x:t,y:u,width:m,height:q}=a.getViewport();a.bindFramebuffer(k);k.readPixels(0,0,g,h,l,e,d);b.updateData(0,0,0,2*g,h/2,d);a.setViewport(t,u,m,q);a.bindFramebuffer(c)}this.destroy();return this._texture=b}}class D{constructor(){this.size=0;this._pendingAttributeUpdates=[];this._epoch=this._version=0;this._locked=!1}_initialize(a){if(!a)throw Error("InternalError: initArgs must be defined");
const b=a.blockDescriptors;this.size=a.blockSize;n("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:a});if(null==this._data)this._data=b.map((c,d)=>null!=c?new z(c,this.size,d):null);else for(a=0;a<this._data.length;a++){const c=this._data[a],d=b[a];null!=d&&(null==c?this._data[a]=new z(d,this.size,a):c.resize(d,this.size))}}destroy(){for(const a of this._data??[])a?.destroy();this._defaultTexture?.dispose();this._defaultTexture=null;this._pendingAttributeUpdates=[]}isEmpty(){return null==
this._data}getBlock(a){return null==this._data?null:this._data[a]}setLabelMinZoom(a,b){this.setData(a,0,1,b)}getLabelMinZoom(a){return this.getData(a,0,1,255)}getFilterFlags(a){return this.getData(a,0,0,0)}getVVSize(a){return this.getData(a,f.AttributeDataType.VV,0,0)}getData(a,b,c,d){if(!this._data)return 0;b=this._data[b];if(null==b)return 0;a=b.getData(a,c);return null!=a?a:d}setData(a,b,c,d){this._data[b].setData(a,c,d)}lockTextureUploads(){this._locked=!0}unlockTextureUploads(){this._locked=
!1;this.update()}requestUpdate(a){this._version=a.version;this._pendingAttributeUpdates.push(a);n("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:a})}get currentEpoch(){return this._epoch}update(){if(!this._locked){var a=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const b of a){const {blockData:c,initArgs:d,sendUpdateEpoch:g,version:h}=b;n("esri-2d-update-debug")&&console.debug(`Version[${this._version}] Epoch[${g}] AttributeStoreView.applyUpdate`);
this._version=h;this._epoch=g;null!=d&&this._initialize(d);a=this._data;for(let e=0;e<c.length;e++){const l=c[e],k=a[e];null!=k&&null!=l&&(n("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`,{block:l}),k.update(l))}}}}getUniforms(a){return{filterFlags:{texture:this._getTexture(a,f.AttributeDataType.FilterFlags),unit:f.filterFlagsUnit},animation:{texture:this._getTexture(a,f.AttributeDataType.Animation),unit:f.animationUnit},gpgpu:{texture:this._getTexture(a,
f.AttributeDataType.GPGPU),unit:f.gpgpuUnit},visualVariableData:{texture:this._getTexture(a,f.AttributeDataType.VV),unit:f.visualVariableUnit},dataDriven0:{texture:this._getTexture(a,f.AttributeDataType.DD0),unit:f.dataDrivenUnit0},dataDriven1:{texture:this._getTexture(a,f.AttributeDataType.DD1),unit:f.dataDrivenUnit1},dataDriven2:{texture:this._getTexture(a,f.AttributeDataType.DD2),unit:f.dataDrivenUnit2},size:this.size}}_getTexture(a,b){b=this._data?.[b];if(!b)return this._getDefaultTexture(a);
b.updateTexture(a,this._version);return b.getTexture(a)}_getDefaultTexture(a){if(null==this._defaultTexture){const b=new y.TextureDescriptor;b.wrapMode=r.TextureWrapMode.CLAMP_TO_EDGE;b.samplingMode=r.TextureSamplingMode.NEAREST;b.width=1;b.height=1;this._defaultTexture=new x.Texture(a,b,new Uint8Array(4))}return this._defaultTexture}}v.AttributeStoreView=D;Object.defineProperty(v,Symbol.toStringTag,{value:"Module"})});