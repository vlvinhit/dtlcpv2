// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../DisplayEntity","../DisplayRecord","./VertexDataWriter","../util/Writer"],function(n,q,p,r,t){class u{constructor(a,b=0){this._id=a;this._sizeHint=b;this._entitySortKeyIndex=this._entityIdIndex=this._entityCountOffset=this._entityRecordCountOffset=0;this._didEntityStart=!1;this._instanceIdToVertexData=new Map;this._recordVertexCount=this._recordVertexStart=this._recordIndexCount=this._recordIndexStart=0;this._current={metric:null,writer:null,start:0,sortKey:0,instanceId:0,layoutHash:0,
indexStart:0,vertexStart:0,textureKey:0,metricBoxLenPointer:0};this._entities=new t(Uint32Array,this._sizeHint*q.byteSizeHint);this._entityCountOffset=this._entities.push(0)}get id(){return this._id}serialize(){const a=[],b=[],c=this._entities.buffer();for(const d of this._instanceIdToVertexData.values())b.push(d.serialize(a));return{message:{data:b,entities:c},transferList:a}}vertexCount(){return this._current.writer?.vertexCount??0}indexCount(){return this._current.writer?.indexCount??0}vertexEnsureSize(a){this._current.writer.vertexEnsureSize(a)}indexEnsureSize(a){this._current.writer.indexEnsureSize(a)}vertexWrite(a){this._current.writer.writeVertex(a)}vertexWriteRegion(a){this._current.writer.writeVertexRegion(a)}vertexWriteF32(a){this._current.writer.writeVertexF32(a)}recordBounds(a,
b,c,d){}indexWrite(a){this._current.writer.writeIndex(a)}metricStart(a){this._current.metric=a}metricEnd(){this._current.metric.bounds.length&&this._current.writer.writeMetric(this._current.metric)}metricBoxWrite(a){this._current.metric.bounds.push(a)}entityStart(a,b=a){this._entityIdIndex=this._entities.push(a);this._entitySortKeyIndex=this._entities.writeF32(b);this._entityRecordCountOffset=this._entities.push(0);this._didEntityStart=!0}entityRecordCount(){return this._entities.getValue(this._entityRecordCountOffset)}entityEnd(){this._didEntityStart&&
(0===this.entityRecordCount()?this._entities.seek(this._entityIdIndex):this._entities.incr(this._entityCountOffset),this._didEntityStart=!1)}recordCount(){return this._entities.getValue(this._entityRecordCountOffset)}recordStart(a,b,c=0){this._current.writer=this._getVertexWriter(a,b);this._current.indexStart=this._current.writer.indexCount;this._current.vertexStart=this._current.writer.vertexCount;this._current.instanceId=a;this._current.layoutHash=b.hash;this._current.textureKey=c}recordEnd(a=0){const b=
this._current.vertexStart,c=this._current.writer.vertexCount-b;if(!c)return!1;const d=this._current.indexStart,e=this._current.writer.indexCount-d;this._recordIndexStart=d;this._recordIndexCount=e;this._recordVertexStart=b;this._recordVertexCount=c;this._entities.incr(this._entityRecordCountOffset);p.write(this._entities,this._current.instanceId,this._current.textureKey,d,e,b,c,a);return!0}copyLast(a,b){var c=this._recordVertexStart+this._recordVertexCount;this._entities.incr(this._entityRecordCountOffset);
p.write(this._entities,this._current.instanceId,this._current.textureKey,this._recordIndexStart+this._recordIndexCount,this._recordIndexCount,c,this._recordVertexCount,0);var d=this._current.writer.indexWriter;const e=this._current.writer.vertexWriter;var f=this._recordIndexStart+this._recordIndexCount,g=this._recordVertexCount;for(var h=this._recordIndexStart;h!==f;h++){const l=d.getValue(h);d.push(l+g)}d=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT;g=this._recordVertexStart*
d;for(f=(this._recordVertexStart+this._recordVertexCount)*d;g!==f;g++)h=e.getValue(g),e.push(h);f=this._current.writer.layout.position;g=f.packPrecisionFactor??1;f=f.offset/Uint32Array.BYTES_PER_ELEMENT;a*=g;b*=g;for(c*=d;c<=e.length;c+=d)e.i1616Add(c+f,a,b)}copyLastFrom(a,b,c){var d=a._entities.getValue(a._entityIdIndex),e=this._entities.getValue(this._entityIdIndex);d!==e&&(e=a._entities.getValueF32(a._entitySortKeyIndex),this.entityStart(d,e));this.recordStart(a._current.instanceId,a._current.writer.layout,
a._current.textureKey);d=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT;var f=this._current.vertexStart,g=a._current.vertexStart-f;const h=this._current.writer.indexWriter;e=this._current.writer.vertexWriter;const l=a._current.writer.indexWriter;var k=a._current.writer.vertexWriter;for(let m=a._current.indexStart;m!==l.length;m++){const v=l.getValue(m);h.push(v-g)}for(a=a._current.vertexStart*d;a!==k.length;a++)g=k.getValue(a),e.push(g);a=this._current.writer.layout.position;k=a.packPrecisionFactor??
1;a=a.offset/Uint32Array.BYTES_PER_ELEMENT;b*=k;c*=k;for(f*=d;f<=e.length;f+=d)e.i1616Add(f+a,b,c);this.recordEnd()}_getVertexWriter(a,b){const c=this._instanceIdToVertexData;c.has(a)||c.set(a,new r.VertexDataWriter(a,b,this._sizeHint));return c.get(a)}}n.MeshData=u;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});