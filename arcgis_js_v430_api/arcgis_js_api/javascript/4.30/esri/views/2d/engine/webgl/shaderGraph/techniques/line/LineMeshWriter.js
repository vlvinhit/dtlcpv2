// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../core/screenUtils ../../../../../../../geometry/GeometryCursor ../../../definitions ../../../TurboLine ../../../mesh/templates/templateUtils ../fill/meshWriterUtils ../mesh/MeshWriter ../mesh/utils ../../../../../../webgl/enums".split(" "),function(k,n,z,w,A,B,f,C,D,e){class x{constructor(){this.distance=this.directionY=this.directionX=this.normalY=this.normalX=this.extrusionOffsetY=this.extrusionOffsetX=0}}const y={createComputedParams:a=>a,optionalAttributes:{zoomRange:{type:e.DataType.SHORT,
count:2,packPrecisionFactor:w.minMaxZoomPrecisionFactor,pack:({scaleInfo:a},{tileInfo:b})=>f.getMinMaxZoom(a,b)}},attributes:{id:{type:e.DataType.UNSIGNED_BYTE,count:3,pack:"id"},pos:{type:e.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},bitset:{type:e.DataType.UNSIGNED_BYTE,count:1},color:{type:e.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:a})=>f.processColorInput(a)},offset:{type:e.DataType.BYTE,count:2,packPrecisionFactor:16,packTessellation:({extrusionOffsetX:a,extrusionOffsetY:b})=>
[f.packRounded(a,16),f.packRounded(b,16)]},normal:{type:e.DataType.BYTE,count:2,packPrecisionFactor:16,packTessellation:({normalX:a,normalY:b})=>[f.packRounded(a,16),f.packRounded(b,16)]},halfWidth:{type:e.DataType.HALF_FLOAT,count:1,pack:({width:a})=>n.pt2px(.5*a)},referenceHalfWidth:{type:e.DataType.HALF_FLOAT,count:1,pack:({referenceWidth:a})=>n.pt2px(.5*a)}}};class E{constructor(){this.vertexBounds=this.vertexFrom=this.vertexCount=this.indexCount=this.bitset=this.id=0}}class F extends C.MeshWriter{constructor(a,
b,d,c){super(a,b,d,c);this.vertexSpec=y;this._currentWrite=new E;this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:65535,textured:!1};this._tessParams=new x;this._initializeTessellator()}writeLineVertices(a,b,d){b=this._getLines(b);null!=b&&this._writeVertices(a,d,b)}_initializeTessellator(){this._lineTessellator=new A.LineTessellation(this._writeTesselatedVertex.bind(this),this._writeTriangle.bind(this),!0)}_write(a,b,d){(d=d??z.GeometryCursor.fromFeatureSetReaderCIM(b))&&
this._writeGeometry(a,b,d)}_writeGeometry(a,b,d,c){a.recordStart(this.instanceId,this.attributeLayout,c);this.writeLineVertices(a,d,b);a.recordEnd()}_getLines(a){return B.clipLinesMarshall(a,D.getLineClippingMargin(this.evaluatedMeshParams))}_writeVertices(a,b,d){const {_currentWrite:c,_tessellationOptions:g,evaluatedMeshParams:p}=this,{width:q,capType:r,joinType:t,miterLimit:u,hasSizeVV:v}=p,h=n.pt2px(.5*q);g.halfWidth=h;g.capType=f.processLineCapInput(r);g.joinType=f.processLineJoinInput(t);g.miterLimit=
u;const l=!v;c.out=a;c.id=b.getDisplayId();c.vertexCount=0;c.indexCount=0;c.vertexFrom=a.vertexCount();c.vertexBounds=l&&h<w.thinLineHalfWidthThreshold?0:1;for(const {line:m,start:G}of d)g.initialDistance=G%65535,this._lineTessellator.tessellate(m,g,l)}_writeTesselatedVertex(a,b,d,c,g,p,q,r,t,u,v){const {out:h,id:l,vertexBounds:m}=this._currentWrite;this.hasEffects&&h.recordBounds(a,b,m,m);this._tessParams.extrusionOffsetX=q;this._tessParams.extrusionOffsetY=r;this._tessParams.normalX=t;this._tessParams.normalY=
u;this._tessParams.directionX=g;this._tessParams.directionY=p;this._tessParams.distance=v;this._writeVertex(h,l,a,b,this._tessParams);return this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(a,b,d){const {out:c}=this._currentWrite;c.indexEnsureSize(3);c.indexWrite(a);c.indexWrite(b);c.indexWrite(d);this._currentWrite.indexCount+=3}}k.LineMeshWriter=F;k.LineTessellationParams=x;k.LineVertexSpec=y;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});