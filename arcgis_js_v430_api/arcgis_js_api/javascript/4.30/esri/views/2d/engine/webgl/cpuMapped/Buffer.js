// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/has ../../../../../core/maybe ../PooledUint32Array ./FreeList ../../../../webgl/BufferObject ../../../../webgl/enums".split(" "),function(l,u,m,n,q,k,p){class r{constructor(b,a,c,e){this._pool=e;e=n.PooledUint32Array.create(a*c*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=a;this.strideInt=c;this.bufferType=b;this.dirty={start:Infinity,end:0};this.memoryStats={bytesUsed:0,bytesReserved:a*c*Uint32Array.BYTES_PER_ELEMENT};this._gpu=null;this._cpu=e;this.clear()}get elementSize(){return this._cpu.length/
this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return 0<this.bufferSize&&!this._gpu}get invalidatedComputeBuffer(){return 0<this.bufferSize&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer();this._gpu?.dispose();this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose();this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose();this._gpuComputeTriangles?.dispose();
this._cpu?.destroy()}clear(){this.dirty.start=Infinity;this.dirty.end=0;this.freeList=new q.FreeList({start:0,end:this._cpu.length/this.strideInt});this.fillPointer=0}ensure(b){if(!(this.maxAvailableSpace()>=b)&&b*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const a=this._cpu.length/this.strideInt;b=Math.round(1.25*(a+b));this._cpu.expand(b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT);this.freeList.free(a,b-a);this.memoryStats.bytesReserved+=(b-a)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(b,
a){this._cpu.array[b]!==a&&(this._cpu.array[b]=a,this.dirty.start=Math.min(b,this.dirty.start),this.dirty.end=Math.max(b+1,this.dirty.end))}getGPUBuffer(b,a=!1){if(!this.bufferSize)return null;if(a){if("index"!==this.bufferType)throw Error("Tired to get triangle buffer, but target is not an index buffer");null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(b));return this._gpuComputeTriangles}null==this._gpu&&(this._gpu=this._createBuffer(b));return this._gpu}getView(b,
a){return this._cpu.getUint32View(b,a/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(b,a,c,e){const f=c*this.strideInt;if(!f)return 0;b=new Uint32Array(b,a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,f);a=this.freeList.firstFit(c);m.assertIsSome(a,"First fit region must be defined");const d=a*this.strideInt;this._cpu.array.set(b,d);if(0!==e)for(let g=0;g<b.length;g++)this._cpu.array[g+d]+=
e;this.dirty.start=Math.min(this.dirty.start,d);this.dirty.end=Math.max(this.dirty.end,d+f);this.fillPointer=Math.max(this.fillPointer,d+f);this.memoryStats.bytesUsed+=c*this.strideInt*Uint32Array.BYTES_PER_ELEMENT;return a}copyFrom(b,a,c,e,f){const d=c*this.strideInt;if(!d)return 0;var g=b._cpu.getUint32View(a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d);b=this.freeList.firstFit(c);m.assertIsSome(b,"First fit region must be defined");a=b*this.strideInt;this._cpu.array.set(g,a);if(0!==e)for(g=
0;g<d;g++)this._cpu.array[a+g*this.strideInt+f]+=e;this.dirty.start=Math.min(this.dirty.start,a);this.dirty.end=Math.max(this.dirty.end,a+d);this.fillPointer=Math.max(this.fillPointer,a+d);this.memoryStats.bytesUsed+=c*this.strideInt*Uint32Array.BYTES_PER_ELEMENT;return b}free(b,a,c){const e=b*this.strideInt,f=(b+a)*this.strideInt;if(!0===c)for(c=b;c!==b+a;c++)this._cpu.array[c*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,e);this.dirty.end=Math.max(this.dirty.end,f);this.freeList.free(b,
a);this.memoryStats.bytesUsed-=a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){this.dirty.end&&(this._invalidateTriangleBuffer(),null!=this._gpu&&this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=Infinity,this.dirty.end=0)}reshuffle(b,a){if(0!==a.length){b=b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT;var c=this.byteSize>b,e=this._cpu,f=n.PooledUint32Array.create(b,this._pool);c||f.array.set(this._cpu.getUint32View(0,this.intSize));for(const d of a)if(c||
d.srcFrom!==d.dstFrom||0!==d.mutate)for(this.dirty.start=Math.min(this.dirty.start,d.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(d.dstFrom+d.count)*this.strideInt),a=0;a<d.count;a++){const g=(d.dstFrom+a)*this.strideInt,t=(d.srcFrom+a)*this.strideInt;for(let h=0;h<this.strideInt;h++)f.array[g+h]=e.array[t+h]+d.mutate}this._cpu.destroy();this._cpu=f;c&&this.invalidate();this.freeList.clear();this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=b}}_createBuffer(b){const a=p.Usage.DYNAMIC_DRAW;
return"index"===this.bufferType?k.BufferObject.createIndex(b,a,this._cpu.array):k.BufferObject.createVertex(b,a,this._cpu.array)}_createComputeBuffer(b){const a=p.Usage.DYNAMIC_DRAW,c=new Uint32Array(this.fillPointer/3);for(let e=0;e<this.fillPointer;e+=3)c[e/3]=this._cpu.array[e];return k.BufferObject.createIndex(b,a,c)}}l.MappedBuffer=r;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});