// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/CircularArray ../../../../core/Error ../../../../core/has ../../../../core/Logger ../../../../geometry/support/aaBoundingRect ../../tiling/TileInfoView ../../tiling/TileKey ../../tiling/TileQueue ../../tiling/TileStrategy ../../engine/webgl/FeatureTile ./support/tileUtils".split(" "),function(g,k,l,f,m,n,w,p,x,y,q,r){class t{constructor(a,b,c){this.getStage=a;this.version=b;this._tileInfoView=c;this._pendingUpdates=new k(1E3);this._locked=!1;this._tiles=new Map}destroy(){for(const a of this.tiles())a.destroy();
this._pendingUpdates.clear();this._tiles.clear()}tiles(){return this._tiles.values()}size(){return this._tiles.size}setTiles(a){this._tiles.clear();for(const b of a)this._tiles.set(b.key.id,b)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1;this.flush()}enqueueUpdate(a){this._pendingUpdates.enqueue(a)}update(a){if(!this._locked)for(;this._pendingUpdates.size;){const b=this._pendingUpdates.peek();if(null==b||b.attributeEpoch>a)break;this._updateTile(b);this._pendingUpdates.dequeue()}}removeTile(a){const b=
this._tiles.get(a);f("esri-2d-update-debug")&&console.debug(`Tile[${a}] RenderState.removeTile`);b?.destroy();this._tiles.delete(a)}isTileDone(a){return(a=this._tiles.get(a.id))?a.isReady:!1}flush(){for(;this._pendingUpdates.size;){const a=this._pendingUpdates.dequeue();null!=a&&this._updateTile(a)}for(const a of this._tiles.values())a.upload()}_updateTile(a){f("esri-2d-update-debug")&&console.debug(`Version[${a.version}] Tile[${a.id}] Chunk[${a.debugInfo?.chunkId??"\x3cEnsureEnd\x3e"}] RenderState.updateTile [${a.type}]`,
a);const b=this._ensureTile(a.id);if("update"===a.type){const [u,...v]=a.modify;b.onMessage({type:"update",modify:u,remove:a.remove,end:a.end,attributeEpoch:a.attributeEpoch});for(const h of v){var c=this._tiles.get(h.tileId);if(c)c.onMessage({type:"update",modify:h,remove:a.remove,end:!1,isPixelBuffer:!0,attributeEpoch:null})}}else if(null==a.append)b.onMessage({type:"append",clear:a.clear,debugInfo:a.debugInfo,end:a.end,attributeEpoch:a.attributeEpoch});else{var [d,...e]=a.append;b.onMessage({type:"append",
clear:a.clear,append:d,debugInfo:a.debugInfo,end:a.end,attributeEpoch:a.attributeEpoch});for(c of e)if(a=this._tiles.get(c.tileId))a.onMessage({type:"update",modify:c,remove:[],sort:!1,end:!1,isPixelBuffer:!0,attributeEpoch:null})}}_ensureTile(a){if(!this._tiles.has(a)){const b=this._createTile(a);this._copyPixelBufferedEntitiesInto(b);this._tiles.set(a,b)}return this._tiles.get(a)}_createTile(a){f("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${a}] RenderState.createTile`);
a=new p(a);var b=this._tileInfoView.getTileBounds(n.create(),a);const c=this._tileInfoView.getTileResolution(a.level);a=new q.FeatureTile(a,c,b[0],b[3],!0);a.stage=this.getStage();a.stage||(b=new l("featurelayerview:webgl","Cannot create tile with empty stage"),m.getLogger("esri.views.2d.layers.features.RenderState").error(b));return a}_copyPixelBufferedEntitiesInto(a){let b=7;for(let d=-1;1>=d;d++)for(let e=-1;1>=e;e++)if(0!==d||0!==e){var c=r.getPow2NeighborKey(a.key,e,d,this._tileInfoView.tileInfo.isWrappable).id;
c=this._tiles.get(c);null!=c&&a.copyPixelBufferedEntitesFrom(c,1<<b,e,d);b--}}}g.RenderState=t;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});