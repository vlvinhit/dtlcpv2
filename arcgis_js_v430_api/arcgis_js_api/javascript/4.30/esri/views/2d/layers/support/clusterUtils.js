// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../renderers/ClassBreaksRenderer ../../../../renderers/DictionaryRenderer ../../../../renderers/DotDensityRenderer ../../../../renderers/HeatmapRenderer ../../../../renderers/PieChartRenderer ../../../../renderers/Renderer ../../../../renderers/SimpleRenderer ../../../../renderers/UniqueValueRenderer ../../../../renderers/support/jsonUtils ../../../../core/Logger ../../../../symbols ../../../../core/Error ../../../../core/has ../../../../core/MD5 ../../../../layers/support/AggregateField ../../../../layers/support/ExpressionInfo ../../../../renderers/support/AuthoringInfo ../../../../symbols/SimpleMarkerSymbol".split(" "),
function(h,B,C,D,E,F,G,t,H,I,u,J,v,n,p,m,q,w,x){function y(b,d,a){switch(b){case "sum":return`cluster_sum_${d}`;case "avg":case "avg_angle":return`cluster_avg_${d}`;case "mode":return`cluster_type_${d}`;case "avg_norm":return b=d.toLowerCase()+",norm:field,"+a.toLowerCase(),"cluster_avg_"+p.createMD5Hash(b)}}function k(b,d,a,c){const g=p.createMD5Hash(d),e="mode"===a?`cluster_type_${g}`:"sum"===a?`cluster_sum_${g}`:`cluster_avg_${g}`;b.some(l=>l.name===e)||b.push(new m({name:e,isAutoGenerated:!0,
onStatisticExpression:new q({expression:d,returnType:c}),statisticType:a}));return e}function f(b,d,a,c,g){if("cluster_count"===d||b.some(l=>l.name===d))return d;const e=y(a,d,g);b.some(l=>l.name===e)||("avg_norm"===a?b.push(new m({name:e,isAutoGenerated:!0,onStatisticExpression:new q({expression:`$feature.${d} / $feature.${g}`,returnType:c}),statisticType:"avg"})):b.push(new m({name:e,isAutoGenerated:!0,onStatisticField:d,statisticType:a})));return e}n.add("esri-cluster-arcade-enabled",!0);const z=
n("esri-cluster-arcade-enabled"),A=new Set(["simple-line","simple-fill","picture-fill"]),r=b=>{const d=a=>u.getLogger("esri.views.2d.layers.support.clusterUtils").error(new v("Unsupported-renderer",a,{renderer:b}));if(!b)return!1;switch(b.type){case "unique-value":if(b.field2||b.field3)return d("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case "class-breaks":if(b.normalizationField){const a=b.normalizationType;if("field"!==a)return d(`FeatureReductionCluster does not support a normalizationType of ${a}`),
!1}break;case "simple":case "pie-chart":break;default:return d(`FeatureReductionCluster does not support renderers of type ${b.type}`),!1}if(!z){if("valueExpression"in b&&b.valueExpression)return d("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in b&&b.visualVariables||[]).some(a=>!!("valueExpression"in a&&a.valueExpression)))return d("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),
!1}return!0};h.createInferredClusterRenderer=function(b,d){let a=d.clone();if(!r(a))return a;d.getSymbols().some(c=>A.has(c.type))&&(a=new t({symbol:new x}));a.authoringInfo||(a.authoringInfo=new w);a.authoringInfo.isAutoGenerated=!0;"visualVariables"in a&&(d=(a.visualVariables||[]).filter(c=>"$view.scale"!==c.valueExpression),d.forEach(c=>{"rotation"===c.type?c.field?c.field=f(b,c.field,"avg_angle","number"):c.valueExpression&&(c.field=k(b,c.valueExpression,"avg_angle","number"),c.valueExpression=
null):c.normalizationField?(c.field=f(b,c.field,"avg_norm","number",c.normalizationField),c.normalizationField=null):c.field?c.field=f(b,c.field,"avg","number"):c.valueExpression&&(c.field=k(b,c.valueExpression,"avg","number"),c.valueExpression=null)}),a.visualVariables=d);switch(a.type){case "pie-chart":for(const c of a.attributes)c.field?c.field=f(b,c.field,"sum","number"):c.valueExpression&&(c.field=k(b,c.valueExpression,"sum","number"),c.valueExpression=null);break;case "unique-value":a.field?
a.field=f(b,a.field,"mode","string"):a.valueExpression&&(a.field=k(b,a.valueExpression,"mode","string"),a.valueExpression=null);break;case "class-breaks":a.normalizationField?(a.field=f(b,a.field,"avg_norm","number",a.normalizationField),a.normalizationField=null):a.field?a.field=f(b,a.field,"avg","number"):a.valueExpression&&(a.field=k(b,a.valueExpression,"avg","number"),a.valueExpression=null)}return a};h.findSizeVV=b=>{for(const d of b)if("size"===d.type)return d;return null};h.hasClusterCountVV=
b=>{for(const d of b)if("cluster_count"===d.field)return!0;return!1};h.isClusterCompatibleRenderer=r;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});