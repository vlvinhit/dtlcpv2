// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../core/Evented ../../../../../../../core/has ../../../../../../../geometry/support/aaBoundingBox ../../../FeatureStoreQueryAdapter ./OverrideChunk".split(" "),function(f,l,g,m,n,h){class p{constructor(a){this._onChange=a;this._chunks=new Map;this._chunksToRemove=[];this.events=new l;this.featureAdapter=new n.FeatureStoreQueryAdapter}destroy(){this.clear()}clear(){for(const a of this._chunks.values())this._chunksToRemove.push(a);this._chunks.clear();null!=this._localEditChunk&&
this._chunksToRemove.push(this._localEditChunk);this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk);this._localOverridesChunk&&(yield this._localOverridesChunk);yield*this._chunks.values()}insert(a){g("esri-2d-update-debug")&&console.debug(`Chunk[${a.chunkId}] SourceChunkStore.insert`);this._localOverridesChunk?.overriddenIds.size&&(a.reader.removeIds(this._localOverridesChunk.overriddenIds),a.invalidate());this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(a);
this._chunks.set(a.chunkId,a);this.events.emit("changed");this._onChange()}remove(a){g("esri-2d-update-debug")&&console.debug(`Chunk[${a.chunkId}] SourceChunkStore.remove`);this._chunks.delete(a.chunkId);this._chunksToRemove.push(a)}cleanupRemovedChunks(){const a=this._chunksToRemove;this._chunksToRemove=[];return a}applyLocalOverrides(a,c){null==this._localOverridesChunk&&(this._localOverridesChunk=new h.OverrideChunk(c,"localOverride"));this._localOverridesChunk.applyOverrides(a);for(const b of this._chunks.values())b.reader.removeIds(this._localOverridesChunk.overriddenIds),
b.invalidate()}applyLocalEdit(a,c){null==this._localEditChunk&&(this._localEditChunk=new h.OverrideChunk(c,"localEdit"));this._localEditChunk.applyOverrides(a);for(const b of this._chunks.values())b.reader.removeIds(this._localEditChunk.overriddenIds),b.invalidate()}forEach(a){const c=new Set;for(const b of this.chunks()){const d=b.reader.getCursor();for(;d.next();){const e=d.getObjectId();c.has(e)||(a(d.copy()),c.add(e))}}}forEachUnsafe(a){const c=new Set;for(const b of this.chunks()){const d=b.reader.getCursor();
for(;d.next();){const e=d.getObjectId();c.has(e)||(a(d),c.add(e))}}}forEachInBounds(a,c){const b=new Set;for(const d of this.chunks()){const e=d.queryFeaturesInBounds(a);for(;e.next();){const k=e.getObjectId();b.has(k)||(c(e.copy()),b.add(k))}}}forEachBounds(a,c){const b=m.create();for(const d of a)d.getBounds(b)&&c(b)}}f.FeatureSourceChunkStore=p;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});