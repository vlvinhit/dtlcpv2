// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../request ../../../../../core/has ../../../../../core/promiseUtils ../../../../../core/accessorSupport/diffUtils ../../../../../layers/graphics/OptimizedFeature ../../../../../layers/graphics/data/QueryEngine ../../../../../rest/query/operations/query ../FeatureStoreStatistics ./FeatureSourceQueryInfo ./StreamMessenger ./strategies/DrillDownTileLoadStrategy ./strategies/PagedTileLoadStrategy ./strategies/SnapshotLoadStrategy ./strategies/StreamLoadStrategy ./strategies/chunks/SourceChunkStore ../support/FeatureMetadata ../support/FeatureSetReaderJSON ../../support/UpdateTracking2D".split(" "),
function(k,n,h,l,f,p,q,r,t,u,v,w,x,y,z,A,B,m,C){class D{constructor(a,b,c,d,e){this.service=a;this._aggregateAdapter=b;this._subscriptions=c;this._onChange=d;this._connection=e;this._updateTracking=new C.UpdateTracking2D({debugName:"FeatureSource"});this._didInvalidateData=!1;this._store=new A.FeatureSourceChunkStore(this._onChange);this._metadata=new B.FeatureMetadata(a.metadata)}destroy(){this._strategy?.destroy();this._store.destroy();this._streamMessenger?.destroy();"memory"===this.service.type&&
this.service.source.map(a=>a.close())}get metadata(){if(!this._metadata)throw Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){null==this._streamMessenger&&this._initStreamMessenger();return this._streamMessenger}get statistics(){return t.FeatureStoreStatistics.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const {dataFilter:a}=
this._schema.mutable,b=this._metadata;this._queryEngine=new q.QueryEngine({featureStore:this._store,fieldsIndex:b.fieldsIndex,geometryType:b.geometryType,objectIdField:b.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:b.timeInfo,definitionExpression:a.definitionExpression,availableFields:this._schema.mutable.availableFields})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(a){this._connection.onEvent({type:"subscribe",
tile:a.tile.id});const b=this._strategy?.load(a);b&&(b.then(()=>this._connection.onEvent({type:"loaded",tile:a.tile.id})).catch(c=>this._connection.onEvent({type:"error",tile:a.tile.id,error:c})),this._updateTracking.addPromise(b))}onResume(a){this._updateTracking.addPromise(l.ignoreAbortErrors(this._strategy?.load(a)))}onUnsubscribe(a){this._connection.onEvent({type:"unsubscribe",tile:a.tile.id});this._strategy?.unload(a)}getLocalEdit(a){return this._updateTracking.addPromise(this._getGetLocalEdit(a))}applyLocalEdit(a){this._didInvalidateData=
!0;this._store.applyLocalEdit(a,this.metadata)}async update(a,b){a=a.source;const c=f.diff(this._schema?.mutable,a.mutable);if(!c)return!1;h("esri-2d-update-debug")&&console.debug(`Version[${b}] FeatureSource.update`,{changes:c});this._schema=a;this._queryEngine?.destroy();this._queryEngine=null;"feature-service"===this.service.type&&null!=this.service.queryMetadata.lastEditDate&&(this._lastEditDate=this.service.queryMetadata.lastEditDate);null==this._streamMessenger&&"stream"===this._schema.type&&
this._initStreamMessenger();if(f.hasRootDiffOnly(c,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if("feature"===a.type&&f.hasRootDiffOnly(c,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(b);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(a.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(d){this._connection.onEvent({type:"updateFieldsError",
error:d})}}return!1}return f.hasRootDiff(c,"dataFilter")||f.hasRootDiff(c,"sourceRefreshVersion")?(await this._updateStrategy(b),!0):!1}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new v.StreamMessenger(this._connection))}async _getGetLocalEdit(a){a.historicMoment&&"feature"===this._schema.type&&(this._schema.mutable.dataFilter.historicMoment=a.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(a.historicMoment)));if("edit-by-feature"===a.type){var b=
[...a.added,...a.updated].map(c=>p.OptimizedFeature.fromJSON(c,this.metadata.objectIdField));b=m.FeatureSetReaderJSON.fromOptimizedFeatures(b,this.metadata);a=this._resolveIdentifiers(a.removed);return{reader:b,removed:a}}b=this._resolveIdentifiers(a.removed);if(!a.updated.length&&!a.added.length)return{reader:m.FeatureSetReaderJSON.empty(this.metadata),removed:b};a=this._resolveIdentifiers([...a.added,...a.updated]);return{reader:await this._strategy.queryByObjectId(a),removed:b}}_resolveIdentifiers(a){const b=
[],c=[];for(const d of a)null==d.objectId||-1===d.objectId?b.push(d.globalId):c.push(d.objectId);if(b.length){const d=new Set(b),e=this.metadata.globalIdField;if(null==e)throw Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe(g=>{const E=g.readAttribute(e);d.has(E)&&c.push(g.getObjectId())})}return c}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;var a=this.service.source;a=(await n(a.path,{query:{...a.query,
f:"json"},responseType:"json"})).data.editingInfo.lastEditDate;if(a===this._lastEditDate)return!1;this._lastEditDate=a;return!0}async _createStrategy(){var a="isSourceHosted"in this.service&&this.service.isSourceHosted,b=Array.isArray(this.service.source),c=this.service.source&&"collection"in this.service.source;a=a||b||c;if("stream"===this._schema.type)return a=new z.StreamLoadStrategy(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata),
this._streamMessenger.strategy=a;b=this.service;c=u.FeatureSourceQueryInfo.fromSchema(b,this._schema,this._metadata);const d=await this._supportSnapshotMode(b,c);return d?new y.SnapshotLoadStrategy(b,c,this._store,d.featureCount,this.metadata,this._connection):a?new x.PagedTileLoadStrategy(b,c,this._store,this.metadata,this._connection):new w.DrillDownTileLoadStrategy(b,c,this._store,this.metadata,this._connection)}async _updateStrategy(a){const b=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",
about:b.about});const c=!!this._strategy;this._store.clear();this._strategy?.destroy();this._strategy=b;h("esri-2d-update-debug")&&console.debug(`Version[${a}] FeatureSource.updateStrategy`,{strategy:b});var d=Array.from(this._subscriptions.values());if(d.length){d=Promise.all(d.map(e=>this._strategy.load(e).then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(g=>this._connection.onEvent({type:"error",tile:e.tile.id,error:g}))));this._updateTracking.addPromise(d);try{c&&await d}catch(e){l.throwIfNotAbortError(e)}this._connection.onEvent({type:"updateStrategyEnd"});
h("esri-2d-update-debug")&&console.debug(`Version[${a}] FeatureSource.updateStrategyEnd`,{strategy:b})}else this._connection.onEvent({type:"updateStrategyEnd"})}async _supportSnapshotMode(a,b){var {queryMetadata:c}=a;c=c.snapshotInfo;if(!c||!c.supportsSnapshotMinThreshold||!c.snapshotCountThresholds)return null;a=a.source;b=b.createQuery();b.inner.orderByFields=[];b.inner.returnGeometry=!1;b=(await r.executeQueryForCount(a,b.inner,{query:b.customParameters})).data.count;const {min:d,max:e}=c.snapshotCountThresholds;
return b<=d||c.supportsSnapshotMaxThreshold&&b<e?{featureCount:b}:null}}k.FeatureSource=D;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});