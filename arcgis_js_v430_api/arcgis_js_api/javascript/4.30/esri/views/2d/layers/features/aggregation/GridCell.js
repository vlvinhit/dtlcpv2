// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../layers/graphics/featureConversionUtils","../../../../../layers/graphics/OptimizedGeometry","./AAggregateCell","./AccumulatedStatistics"],function(h,e,d,k,l){class g extends k.AAggregateCell{static createId(a,b){return`${a}.${b}`}static create(a,b,c,f){return new g(a,b,l.AccumulatedStatistics.create(c),f)}constructor(a,b,c,f){super(c);this.gridX=a;this.gridY=b;this._worldUnitsPerCell=f;this._yWorldTotal=this._xWorldTotal=this._count=0;this._objectIds=new Set}get id(){return g.createId(this.gridX,
this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const a=new g(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);a._count=this._count;a._xWorldTotal=this._xWorldTotal;a._yWorldTotal=this._yWorldTotal;a._firstFeatureAttributes=this._firstFeatureAttributes;
a._objectIds=new Set(this._objectIds);return a}insert(a,b,c,f){this._firstFeatureAttributes=0===this._count?a.readAttributes():null;this._count+=1;this._xWorldTotal+=c;this._yWorldTotal+=f;this._statistics.insert(a,b);this._objectIds.add(a.getObjectId())}merge(a){if(0!==a._count){this._count+=a._count;this._firstFeatureAttributes=a._firstFeatureAttributes;this._xWorldTotal+=a._xWorldTotal;this._yWorldTotal+=a._yWorldTotal;this._statistics.merge(a._statistics);for(const b of a._objectIds.values())this._objectIds.add(b)}}getCentroidX(a){return null==
a?this.centroidXWorld:e.quantizeX(a,this.centroidXWorld)}getCentroidY(a){return null==a?this.centroidYWorld:e.quantizeY(a,this.centroidYWorld)}getGeometry(a,b){a=this.gridX*this._worldUnitsPerCell;var c=this.gridY*this._worldUnitsPerCell;a=new d([4],[a,c,a+this._worldUnitsPerCell,c,a+this._worldUnitsPerCell,c+this._worldUnitsPerCell,a,c+this._worldUnitsPerCell]);return null!=b?(c=new d,e.quantizeOptimizedGeometry(c,a,!1,!1,"esriGeometryPolygon",b)):a}getCentroid(a){const b=new d([],[this.centroidXWorld,
this.centroidYWorld]);if(null!=a){const c=new d;return e.quantizeOptimizedGeometry(c,b,!1,!1,"esriGeometryPoint",a)}return b}getGeometricCentroid(a,b){a=new d([],[this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell]);if(null!=b){const c=new d;return e.quantizeOptimizedGeometry(c,a,!1,!1,"esriGeometryPoint",b)}return a}getAttributes(){const a={aggregateId:this.id};for(const b of this._statistics.values())a[b.field.name]=b.value;
return null!=this._firstFeatureAttributes?{...a,...this._firstFeatureAttributes}:a}}h.GridCell=g;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});