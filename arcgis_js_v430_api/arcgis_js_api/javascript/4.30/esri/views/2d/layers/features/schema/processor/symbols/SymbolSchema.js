// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../symbols ../../../../../../../core/Logger ../../../../../../../core/screenUtils ../../../../../../../renderers/support/heatmapUtils ../../../../../../../symbols/cim/CIMSymbolHelper ../../../../../../../symbols/cim/enums ../../../../../../../symbols/cim/SDFHelper ../../../../../engine/webgl/alignmentUtils ../../../../../engine/webgl/color ../../../../../engine/webgl/definitions ../../../../../engine/webgl/shaderGraph/techniques/TechniqueRegistry ../schemaUtils ../VisualVariablesSchema ./ComplexSymbolSchema ./utils ../../../../../../../symbols/SimpleFillSymbol ../../../../../../../symbols/SimpleMarkerSymbol ../../../../../../../symbols/SimpleLineSymbol".split(" "),
function(y,Z,A,E,P,u,p,Q,R,S,B,l,C,q,F,v,K,T,U){async function L(a,b){if(!a)return[];switch(a.type){case "simple-fill":return G(a,b);case "picture-fill":{var {outline:c}=a;const {uniforms:k,schemaOptions:H}=b;var {store:f}=H,e=[];const M=u.CIMSymbolHelper.createPictureFillRasterizationParam(a);if(M){var {width:d,height:g,xoffset:w,yoffset:n,xscale:r,yscale:m}=a;a={color:[255,255,255,255],sprite:M,height:g,aspectRatio:d/g,offsetX:w,offsetY:n,scaleX:r,scaleY:m,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,
scaleProportionally:!1,effects:null,scaleInfo:null};"solid"===c?.style?a=[f.ensureInstance(l.Techniques.complexOutlineFill,{uniforms:{visualVariableColor:k.visualVariableColor,visualVariableOpacity:k.visualVariableOpacity,visualVariableSizeScaleStops:k.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({...a,...I(c,!!k.visualVariableSizeOutlineScaleStops)})]:(f=f.ensureInstance(l.Techniques.complexFill,
{uniforms:{visualVariableColor:k.visualVariableColor,visualVariableOpacity:k.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}),e.push(f.createMeshInfo(a)),c&&e.push(...x(c,b,!0)),a=e)}else a=[]}return a;case "simple-marker":return N(a,b);case "picture-marker":{const {uniforms:k,schemaOptions:H}=b;({store:b}=H);b=b.ensureInstance(l.Techniques.marker,{uniforms:{visualVariableColor:k.visualVariableColor,visualVariableOpacity:k.visualVariableOpacity,visualVariableSizeMinMaxValue:k.visualVariableSizeMinMaxValue,
visualVariableSizeScaleStops:k.visualVariableSizeScaleStops,visualVariableSizeStops:k.visualVariableSizeStops,visualVariableSizeUnitValue:k.visualVariableSizeUnitValue,visualVariableRotation:k.visualVariableRotation},optionalAttributes:{zoomRange:!1}});a=(c=u.CIMSymbolHelper.createPictureMarkerRasterizationParam(a))?[b.createMeshInfo({type:"picture",color:[255,255,255,255],height:a.height,width:a.width,offsetX:a.xoffset,offsetY:a.yoffset,angle:a.angle,alignment:v.hasRotationVVUniform(k)?p.Alignment.MAP:
p.Alignment.SCREEN,outlineColor:null,outlineSize:0,referenceSize:a.height,sprite:c,overrideOutlineColor:!1,hasSizeVV:v.hasSizeVVUniform(k),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:q.getMaxSizeVVSize(k)})]:[]}return a;case "simple-line":return x(a,b,!1);case "text":const {uniforms:h,schemaOptions:J}=b;({store:b}=J);return[b.ensureInstance(l.Techniques.text,{uniforms:{visualVariableColor:h.visualVariableColor,visualVariableOpacity:h.visualVariableOpacity,visualVariableRotation:h.visualVariableRotation,
visualVariableSizeMinMaxValue:h.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:h.visualVariableSizeScaleStops,visualVariableSizeStops:h.visualVariableSizeStops,visualVariableSizeUnitValue:h.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1,clipAngle:!1,referenceSymbol:!1}}).createMeshInfo({boxBackgroundColor:a.backgroundColor?.toArray(),boxBorderLineColor:a.borderLineColor?.toArray(),boxBorderLineSize:a.borderLineSize??0,color:a.color?.toArray()??[0,0,0,0],offsetX:a.xoffset,
offsetY:a.yoffset,postAngle:a.angle,fontSize:a.font.size,decoration:a.font.decoration,haloColor:a.haloColor?.toArray()??[0,0,0,0],haloFontSize:a.haloSize??0,lineWidth:a.lineWidth,lineHeightRatio:a.lineHeight,horizontalAlignment:a.horizontalAlignment,verticalAlignment:a.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:a.font.toJSON(),textString:a.text,symbol:u.CIMSymbolHelper.createCIMTextSymbolfromTextSymbol(a)},overrides:[]},referenceSize:null,
effects:null,placement:null,scaleInfo:null,transforms:null,scaleFactor:1,minPixelBuffer:q.getMaxSizeVVSize(h),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null,isLineLabel:!1})];case "label":const {schemaOptions:z,uniforms:t}=b;({store:e}=z);b=a.symbol;const {allowOverrun:D,repeatLabel:V,repeatLabelDistance:W}=a;c={maxScale:a.maxScale??0,minScale:a.minScale??0};e=e.ensureInstance(l.Techniques.label,{uniforms:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:t.visualVariableRotation,
visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!0,clipAngle:!0,referenceSymbol:!0}});const [X,Y]=R.getAlignmentFromPlacement(a.labelPlacement);return[e.createMeshInfo({boxBackgroundColor:b.backgroundColor?.toArray(),boxBorderLineColor:b.borderLineColor?.toArray(),boxBorderLineSize:b.borderLineSize??
0,color:b.color?.toArray()??[0,0,0,0],offsetX:b.xoffset,offsetY:b.yoffset,postAngle:b.angle,fontSize:b.font.size,decoration:b.font.decoration,haloColor:b.haloColor?.toArray()??[0,0,0,0],haloFontSize:b.haloSize??0,lineWidth:b.lineWidth,lineHeightRatio:b.lineHeight,horizontalAlignment:X,verticalAlignment:Y,repeatLabel:V,repeatLabelDistance:E.pt2px(W),allowOverrun:D,labelPosition:a.labelPosition,scaleInfo:c,minPixelBuffer:q.getMaxSizeVVSize(t),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",
resource:{type:"text",font:b.font.toJSON(),textString:b.text,symbol:u.CIMSymbolHelper.createCIMTextSymbolfromTextSymbol(b),primitiveName:"label-override"},useLegacyLabelEvaluationRules:null==a.labelExpressionInfo?.expression,overrides:[{type:"CIMPrimitiveOverride",valueExpressionInfo:{type:"CIMExpressionInfo",expression:a.labelExpressionInfo?.expression??a.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,
placement:null,transforms:null,scaleFactor:1,isLineLabel:!1})];case "cim":return F.createComplexSymbolInstances(a.data,b);case "web-style":return a=await a.fetchCIMSymbol(),F.createComplexSymbolInstances(a.data,b);case "line-3d":return A.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${a.type}" unsupported in MapView. Defaulting to simple-line`),x(new U,b,!1);case "point-3d":return A.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",
`Symbol of type "${a.type}" unsupported in MapView. Defaulting to simple-marker`),N(new T,b);case "polygon-3d":return A.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${a.type}" unsupported in MapView. Defaulting to simple-fill`),G(new K,b);case "mesh-3d":case "label-3d":return A.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${a.type}" unsupported in MapView. Ignoring`),[];case "CIMSymbolReference":throw Error("InternalError: CIMSymbolReference should already be resolved");
}}function O(a){if("path"===a.style){if(null==a.path)throw Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:a.path,asFill:!0}}}const b=u.CIMSymbolHelper.fromSimpleMarker(a);if("outline"in a&&a.outline&&"none"!==a.outline.style&&"solid"!==a.outline.style){if(!b||!b.symbolLayers)throw Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:b.symbolLayers[0],overrides:[]}}return{type:"sprite-rasterization-param",
resource:Q.getSDFInfo(b),overrides:[]}}async function N(a,b){const {uniforms:c,schemaOptions:f}=b;var {store:e}=f;if("path"===a.style||a.outline&&"solid"!==a.outline.style&&"none"!==a.outline.style){e=u.CIMSymbolHelper.fromSimpleMarker(a);if(!e||!e.symbolLayers)throw Error("Error handling marker! ");c.visualVariableRotation&&(e.angleAlignment="Map");if("path"!==a.style){var d=e.symbolLayers[0];if(v.hasSizeVVUniform(b.uniforms)){var g=q.getMaxSizeVVSize(b.uniforms,0,1);g>d.size&&(a=g/d.size,d.size=
g,d=d.markerGraphics?.[0].symbol,(d.symbolLayers&&d.symbolLayers[0]).width*=a)}}return F.createComplexSymbolInstances({type:"CIMSymbolReference",symbol:e},b)}b=e.ensureInstance(l.Techniques.marker,{uniforms:{visualVariableColor:c.visualVariableColor,visualVariableOpacity:c.visualVariableOpacity,visualVariableSizeMinMaxValue:c.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:c.visualVariableSizeScaleStops,visualVariableSizeStops:c.visualVariableSizeStops,visualVariableSizeUnitValue:c.visualVariableSizeUnitValue,
visualVariableRotation:c.visualVariableRotation},optionalAttributes:{zoomRange:!1}});e=O(a);d=a.color?.toArray()??[0,0,0,0];"CIMVectorMarker"===e.resource.type&&(d=[255,255,255,255]);g=a.size;const w=null!=c.visualVariableColor&&("cross"===a.style||"x"===a.style);return[b.createMeshInfo({type:"simple",color:d,height:g,width:g*("triangle"===a.style?124/116:1),offsetX:a.xoffset,offsetY:a.yoffset,angle:a.angle,alignment:v.hasRotationVVUniform(c)?p.Alignment.MAP:p.Alignment.SCREEN,outlineColor:a.outline?.color?.toArray()??
[0,0,0,0],outlineSize:a.outline?.width??1,referenceSize:g,sprite:e,overrideOutlineColor:w,hasSizeVV:v.hasSizeVVUniform(c),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:q.getMaxSizeVVSize(c)})]}function I(a,b){const c=a.width;return{outlineColor:a.color?.toArray()||[0,0,0,1],width:c,referenceWidth:c,capType:a.cap??"round",joinType:a.join??"round",miterLimit:a.miterLimit,hasSizeVV:b}}function G(a,b){var {style:c}=a;if(c&&"none"!==c&&"solid"!==c){{const {uniforms:d,schemaOptions:g}=
b;var {store:f}=g;c=a.color?.toArray()??[0,0,0,0];var e={type:"sprite-rasterization-param",resource:{type:"fill-style",style:a.style},overrides:[]};"solid"===a.outline?.style?a=[f.ensureInstance(l.Techniques.patternOutlineFill,{uniforms:{visualVariableColor:d.visualVariableColor,visualVariableOpacity:d.visualVariableOpacity,visualVariableSizeScaleStops:d.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:c,
...I(a.outline,!!d.visualVariableSizeOutlineScaleStops),sprite:e,scaleInfo:null,effects:null})]:(c=[],f=f.ensureInstance(l.Techniques.patternFill,{uniforms:{visualVariableColor:d.visualVariableColor,visualVariableOpacity:d.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a.color?.toArray()??[0,0,0,0],sprite:e,scaleInfo:null,effects:null}),c.push(f),a.outline&&c.push(...x(a.outline,b,!0)),a=c)}return a}{const {uniforms:d,schemaOptions:g}=b;({store:f}=g);e=a.color?.toArray()??
[0,0,0,0];"none"!==a.style&&"solid"===a.outline?.style?a=[f.ensureInstance(l.Techniques.outlineFill,{uniforms:{visualVariableColor:d.visualVariableColor,visualVariableOpacity:d.visualVariableOpacity,visualVariableSizeScaleStops:d.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:e,...I(a.outline,!!d.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null})]:
(c=[],"none"!==a.style&&(f=f.ensureInstance(l.Techniques.fill,{uniforms:{visualVariableColor:d.visualVariableColor,visualVariableOpacity:d.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:e,scaleInfo:null,effects:null}),c.push(f)),a.outline&&c.push(...x(a.outline,b,!0)),a=c)}return a}function x(a,b,c){const {color:f,style:e,width:d,cap:g,join:w}=a;var {schemaOptions:n}=b,{store:r}=n;n=[];var m=c?{...q.noVisualVariables,visualVariableSizeScaleStops:b.uniforms.visualVariableSizeOutlineScaleStops}:
b.uniforms;c={uniforms:{visualVariableColor:m.visualVariableColor,visualVariableOpacity:m.visualVariableOpacity,visualVariableSizeMinMaxValue:m.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:m.visualVariableSizeScaleStops,visualVariableSizeStops:m.visualVariableSizeStops,visualVariableSizeUnitValue:m.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1}};m={color:f?.toArray()??[0,0,0,0],width:d,referenceWidth:d,capType:g,joinType:w,miterLimit:a.miterLimit,hasSizeVV:v.hasSizeVVUniform(m),
effects:null,scaleInfo:null};null==e||"solid"===e?(r=r.ensureInstance(l.Techniques.line,c).createMeshInfo(m),n.push(r)):"none"!==e&&(r=r.ensureInstance(l.Techniques.texturedLine,c).createMeshInfo({...m,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:u.slsDashToTemplateArray(e,g),capStyle:u.capTypeToEnum(g)},overrides:[]}}),n.push(r));if(null!=a.marker){r=n.push;c=a.marker;const {uniforms:h,schemaOptions:J}=b;({store:b}=
J);b=b.ensureInstance(l.Techniques.marker,{uniforms:{visualVariableColor:h.visualVariableColor,visualVariableOpacity:h.visualVariableOpacity,visualVariableSizeMinMaxValue:h.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:h.visualVariableSizeScaleStops,visualVariableSizeStops:h.visualVariableSizeStops,visualVariableSizeUnitValue:h.visualVariableSizeUnitValue,visualVariableRotation:h.visualVariableRotation},optionalAttributes:{zoomRange:!1}});m=O(c);const z=6*a.width,t=c.color?.toArray()??
a.color?.toArray()??[0,0,0,0],D="cross"===c.style||"x"===c.style;switch(c.placement){case "begin-end":c=p.ExtremityPlacement.Both;break;case "begin":c=p.ExtremityPlacement.JustBegin;break;case "end":c=p.ExtremityPlacement.JustEnd;break;default:c=p.ExtremityPlacement.None}c={type:"cim-marker-placement-param",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:c,offsetAlongLine:0},overrides:[]};a=[b.createMeshInfo({type:"simple",color:t,height:z,width:z,offsetX:0,
offsetY:0,angle:0,alignment:v.hasRotationVVUniform(h)?p.Alignment.MAP:p.Alignment.SCREEN,outlineColor:t,outlineSize:D?a.width:0,referenceSize:z/6,sprite:m,overrideOutlineColor:D&&null!=h.visualVariableColor,hasSizeVV:v.hasSizeVVUniform(h),placement:c,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:q.getMaxSizeVVSize(h)})];r.call(n,...a)}return n}y.createDotDensityMeshSchemas=async function(a,b){var {schemaOptions:c}=b;({store:c}=c);var f=Array(B.dotDensityMaxFields),e=Array(B.dotDensityMaxFields/
4);for(var d=0;d<B.dotDensityMaxFields;d++){const g=d<a.attributes.length?a.attributes[d].color:null;f[d]=[0,0,0,0];S.writeColor(f[d],g)}for(d=0;d<B.dotDensityMaxFields/4;d++)e[d]=[0,0,0,0],e[d][0]=4*d<a.attributes.length?1:0,e[d][1]=4*d+1<a.attributes.length?1:0,e[d][2]=4*d+2<a.attributes.length?1:0,e[d][3]=4*d+3<a.attributes.length?1:0;f=c.ensureInstance(l.Techniques.dotDensity,{uniforms:{isActive:e,colors:f,dotValue:a.dotValue,dotScale:a.referenceScale,blending:a.dotBlendingEnabled,dotSize:a.dotSize,
seed:a.seed},optionalAttributes:{}}).createMeshInfo({effects:null});c=[];a.backgroundColor&&(e=new K({color:a.backgroundColor,outline:null}),e=await L(e,b),c.push(...e));c.push(f);a.outline&&(a=x(a.outline,b,!0),c.push(...a));return c};y.createHeatmapMeshSchemas=async function(a,b){({store:b}=b);const {radius:c,minDensity:f,maxDensity:e,referenceScale:d,field:g,valueExpression:w,colorStops:n}=a;a=P.generateGradient(n);return[b.ensureInstance(l.Techniques.heatmap,{uniforms:{radius:E.pt2px(c),minDensity:f,
maxDensity:e,referenceScale:d,isFieldActive:!(!g&&!w),gradient:a,gradientHash:a.join(",")},optionalAttributes:{}}).createMeshInfo({effects:null})]};y.createLineInstance=x;y.createPieChartMeshSchemas=function(a,b){var {store:c}=b;const f=a.outline?.width||0,e=q.createVisualVariableUniforms(a);c=c.ensureInstance(l.Techniques.pieChart,{uniforms:{shader:{outlineWidth:Math.round(E.pt2px(f)),defaultColor:C.premultiplyColor(a.defaultColor),outlineColor:C.premultiplyColor(a.outline?.color),othersColor:C.premultiplyColor(a.othersCategory?.color),
donutRatio:a.holePercentage,sectorThreshold:a.othersCategory?.threshold||0,colors:a.attributes.map(d=>C.premultiplyColor(d.color)),visualVariableOpacity:e.visualVariableOpacity,visualVariableSizeMinMaxValue:e.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:e.visualVariableSizeScaleStops,visualVariableSizeStops:e.visualVariableSizeStops,visualVariableSizeUnitValue:e.visualVariableSizeUnitValue,hittestUniforms:null},numberOfFields:a.attributes.length},optionalAttributes:{}}).createMeshInfo({size:a.size,
outlineWidth:f,effects:null,scaleInfo:null,minPixelBuffer:q.getMaxSizeVVSize(e)});return[...(a.backgroundFillSymbol?G(a.backgroundFillSymbol,{schemaOptions:b,path:"",uniforms:q.noVisualVariables}):[]),c]};y.createSymbolMeshSchemas=L;Object.defineProperty(y,Symbol.toStringTag,{value:"Module"})});