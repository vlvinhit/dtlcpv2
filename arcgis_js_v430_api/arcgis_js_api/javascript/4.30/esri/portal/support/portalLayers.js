// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../core/Error ../../layers/support/associatedFeatureServiceUtils ../../layers/support/fetchService ../../layers/support/LayerLoadContext ../../layers/support/layerUtils ../../layers/support/lazyLayerLoader ../PortalItem ./loadUtils ./portalItemUtils".split(" "),function(k,t,u,v,w,l,x,p,e,m){async function y(a){await a.load();const b=new w.LayerLoadContext;a=await q(a,b);return z(a)}async function q(a,b){switch(a.type){case "3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};
case "CSV":return{className:"CSVLayer"};case "Feature Collection":return A(a);case "Feature Service":return B(a,b);case "Feed":return{className:"StreamLayer"};case "GeoJson":return{className:"GeoJSONLayer"};case "Group Layer":return{className:"GroupLayer"};case "Image Service":return C(a,b);case "KML":return{className:"KMLLayer"};case "Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case "Map Service":return D(a,b);case "Media Layer":return{className:"MediaLayer"};case "Scene Service":return E(a,
b);case "Stream Service":return{className:"StreamLayer"};case "Vector Tile Service":return{className:"VectorTileLayer"};case "WFS":return{className:"WFSLayer"};case "WMS":return{className:"WMSLayer"};case "WMTS":return{className:"WMTSLayer"};default:throw new t("portal:unknown-item-type","Unknown item type '${type}'",{type:a.type});}}async function z(a){return{constructor:await (0,x.layerLookupMap[a.className])(),properties:a.properties}}async function D(a,b){return await F(a,b)?{className:"TileLayer"}:
{className:"MapImageLayer"}}async function B(a,b){a=await r(a,b);if("object"===typeof a){const {sourceJSON:c,className:d}=a;b={sourceJSON:c};null!=a.id&&(b.layerId=a.id);return{className:d||"FeatureLayer",properties:b}}return{className:"GroupLayer"}}async function E(a,b){var c=await r(a,b,async()=>{try{if(!a.url)return[];const {serverUrl:d}=await u.findAssociatedFeatureService(a.url,{sceneLayerItem:a});return(await b.fetchServiceMetadata(d))?.tables??[]}catch{return[]}});if("object"===typeof c){const d=
{};let g=void 0;null!=c.id?(d.layerId=c.id,g=`${a.url}/layers/${c.id}`):g=a.url;if(a.typeKeywords?.length)for(const f of Object.keys(l.sceneServiceLayerTypeToClassName))if(a.typeKeywords.includes(f))return{className:l.sceneServiceLayerTypeToClassName[f]};c=await b.fetchServiceMetadata(g,{customParameters:await b.fetchCustomParameters(a,f=>e.getFirstLayerOrTable(f)?.customParameters)});return{className:l.sceneServiceLayerTypeToClassName[c?.layerType]||"SceneLayer",properties:d}}return!1===c&&"Voxel"===
(await b.fetchServiceMetadata(a.url))?.layerType?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function A(a){await a.load();const b=m.hasTypeKeyword(a,"Map Notes"),c=m.hasTypeKeyword(a,"Markup");if(b||c)return{className:"MapNotesLayer"};if(m.hasTypeKeyword(a,"Route Layer"))return{className:"RouteLayer"};a=await a.fetchData();return 1===e.getNumLayersAndTables(a)?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function C(a,b){await a.load();var c=a.typeKeywords?.map(d=>d.toLowerCase())??
[];if(c.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(c.includes("tiled imagery"))return{className:"ImageryTileLayer"};c=(await b.fetchItemData(a))?.layerType;if("ArcGISTiledImageServiceLayer"===c)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===c)return{className:"ImageryLayer"};b=await b.fetchServiceMetadata(a.url,{customParameters:await b.fetchCustomParameters(a)});a=b.cacheType?.toLowerCase();b=b.capabilities?.toLowerCase().includes("tilesonly");return"map"===
a||b?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}async function F(a,b){({tileInfo:a}=await b.fetchServiceMetadata(a.url,{customParameters:await b.fetchCustomParameters(a)}));return a}async function r(a,b,c){const {url:d,type:g}=a,f="Feature Service"===g;if(!d)return{};if(/\/\d+$/.test(d))return f?(c=await b.fetchServiceMetadata(d,{customParameters:await b.fetchCustomParameters(a,G=>e.getFirstLayerOrTable(G)?.customParameters)}),{id:c.id,className:v.getLayerModuleType(c.type),sourceJSON:c}):
{};await a.load();let h=await b.fetchItemData(a);if(f)return a=await e.preprocessFSItemData(h,d,b),c=n(a),"object"===typeof c&&(a=e.getLayerOrTable(a,c.id),c.className=e.layerTypeToLayerModuleType(a?.layerType)),c;"Scene Service"===g&&(h=await e.populateSceneServiceItemData(a,h,b));if(0<e.getNumLayersAndTables(h))return n(h);a=await b.fetchServiceMetadata(d);c&&(a.tables=await c());return n(a)}function n(a){return 1===e.getNumLayersAndTables(a)?{id:e.getFirstLayerOrTable(a)?.id}:!1}k.fromItem=async function(a){({portalItem:a}=
a);!a||a instanceof p||(a=new p(a));const b=await y(a);return new b.constructor({portalItem:a,...b.properties})};k.selectLayerClassPath=q;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});