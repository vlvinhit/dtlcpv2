// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/promiseUtils ./glb ./gltf ./types ./imageutils ./asset ./scene ./node".split(" "),function(a,p,q,r,b,k,t,u,v){async function l(c,d){c=(new r.GLTF(c,d)).gltf;let m=1,n=1,h=null;await Promise.allSettled(c.extras.promises);p.throwIfAborted(d.signal);const w=d.jsonSpacing??4,g=new Map;c=JSON.stringify(c,(e,f)=>{if("extras"!==e){if(f instanceof ArrayBuffer){if(k.isArrayBufferPNG(f))switch(d.output?.image){case b.ImageOutputType.DataURI:case b.ImageOutputType.GLB:break;
default:return e=`img${n}.png`,n++,g.set(e,f),e}switch(d.output?.buffer){case b.BufferOutputType.DataURI:return k.encodeBase64DataUri(f);case b.BufferOutputType.GLB:if(h)throw Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");h=f;return;default:return e=`data${m}.bin`,m++,g.set(e,f),e}}return f}},w);d.output?.buffer===b.BufferOutputType.GLB||d.output?.image===b.ImageOutputType.GLB?g.set("model.glb",(new q.GLB(c,h)).buffer):g.set("model.gltf",c);return g}Object.defineProperty(a,
"AlphaMode",{enumerable:!0,get:()=>b.AlphaMode});Object.defineProperty(a,"AttributeType",{enumerable:!0,get:()=>b.AttributeType});Object.defineProperty(a,"BufferOutputType",{enumerable:!0,get:()=>b.BufferOutputType});Object.defineProperty(a,"ColorMode",{enumerable:!0,get:()=>b.ColorMode});Object.defineProperty(a,"ImageOutputType",{enumerable:!0,get:()=>b.ImageOutputType});Object.defineProperty(a,"MeshMode",{enumerable:!0,get:()=>b.MeshMode});a.Asset=t.Asset;a.Scene=u.Scene;a.Node=v.Node;a.exportGLB=
async function(c,d){c=(await l(c,{output:{buffer:b.BufferOutputType.GLB,image:b.ImageOutputType.GLB},jsonSpacing:0,...d})).get("model.glb");if(!(c&&c instanceof ArrayBuffer))throw Error("failed to export to glb");return c};a.exportGLTF=l;a.modelNameGlb="model.glb";a.modelNameGltf="model.gltf";Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});