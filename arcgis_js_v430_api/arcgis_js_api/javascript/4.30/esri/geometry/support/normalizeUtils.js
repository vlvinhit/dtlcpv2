// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../config ../../core/Error ../../core/Logger ../Polygon ../Polyline ./normalizeUtilsCommon ./spatialReferenceUtils ./webMercatorUtils ../../rest/geometryService/cut ../../rest/geometryService/simplify".split(" "),function(x,J,K,L,A,B,q,y,z,M,N){function D(a){const b=[];let c=0,e=0;for(let f=0;f<a.length;f++){const g=a[f];let k=null;for(let h=0;h<g.length;h++)k=g[h],b.push(k),0===h?e=c=k[0]:(c=Math.min(c,k[0]),e=Math.max(e,k[0]));k&&b.push([(c+e)/2,0])}return b}function E(a,b){if(!(a instanceof
B||a instanceof A))throw F().error("straightLineDensify: the input geometry is neither polyline nor polygon"),new K("straightLineDensify: the input geometry is neither polyline nor polygon");var c=q.getGeometryParts(a);const e=[];for(const g of c){c=[];e.push(c);c.push([g[0][0],g[0][1]]);for(let k=0;k<g.length-1;k++){const h=g[k][0],l=g[k][1],d=g[k+1][0],m=g[k+1][1];var f=Math.sqrt((d-h)*(d-h)+(m-l)*(m-l));const n=(m-l)/f,p=(d-h)/f,t=f/b;if(1<t){for(let r=1;r<=t-1;r++){const u=r*b;c.push([p*u+h,n*
u+l])}f=(f+Math.floor(t-1)*b)/2;c.push([p*f+h,n*f+l])}c.push([d,m])}}return"polygon"===a.type?new A({rings:e,spatialReference:a.spatialReference}):new B({paths:e,spatialReference:a.spatialReference})}function G(a,b,c){b&&(a=E(a,1E6),a=z.webMercatorToGeographic(a,!0));c&&(a=q.updatePolyGeometry(a,c));return a}function H(a,b,c){if(Array.isArray(a)){var e=a[0];e>b?(c=q.offsetMagnitude(e,b),a[0]=e+-2*c*b):e<c&&(b=q.offsetMagnitude(e,c),a[0]=e+-2*b*c)}else e=a.x,e>b?(c=q.offsetMagnitude(e,b),a=a.clone().offset(-2*
c*b,0)):e<c&&(b=q.offsetMagnitude(e,c),a=a.clone().offset(-2*b*c,0));return a}function O(a,b){let c=-1;for(let e=0;e<b.cutIndexes.length;e++){const f=b.cutIndexes[e],g=b.geometries[e],k=q.getGeometryParts(g);for(let h=0;h<k.length;h++){const l=k[h];l.some(d=>{if(180>d[0])return!0;d=0;for(var m=0;m<l.length;m++){var n=l[m][0];d=n>d?n:d}d=Number(d.toFixed(9));d=-360*q.offsetMagnitude(d,180);for(m=0;m<l.length;m++)n=g.getPoint(h,m),g.setPoint(h,m,n.clone().offset(d,0));return!0})}if(f===c)if("polygon"===
a[0].type)for(const h of q.getGeometryParts(g))a[f]=a[f].addRing(h);else{if("polyline"===a[0].type)for(const h of q.getGeometryParts(g))a[f]=a[f].addPath(h)}else c=f,a[f]=g}return a}async function I(a,b,c){if(!Array.isArray(a))return I([a],b);b&&"string"!==typeof b&&F().warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");var e="string"===typeof b?b:b?.url??J.geometryServiceUrl;let f,g,k;let h=0;var l=[];b=[];for(var d of a)if(null==d)b.push(d);else{if(!m){var m=
d.spatialReference;var n=y.getInfo(m);var p=(f=m.isWebMercator)?102100:4326;g=q.cutParams[p].maxX;k=q.cutParams[p].minX;var t=q.cutParams[p].plus180Line;p=q.cutParams[p].minus180Line}if(n)if("mesh"===d.type)b.push(d);else if("point"===d.type)b.push(H(d.clone(),g,k));else if("multipoint"===d.type){var r=d.clone();r.points=r.points.map(u=>H(u,g,k));b.push(r)}else if("extent"===d.type)r=d.clone()._normalize(!1,!1,n),b.push(r.rings?new A(r):r);else if(d.extent){r=d.extent;const u=2*q.offsetMagnitude(r.xmin,
k)*g;let v=0===u?d.clone():q.updatePolyGeometry(d.clone(),u);r.offset(u,0);let {xmin:C,xmax:w}=r;C=Number(C.toFixed(9));w=Number(w.toFixed(9));r.intersects(t)&&w!==g?(h=w>h?w:h,v=G(v,f),l.push(v),b.push("cut")):r.intersects(p)&&C!==k?(h=2*w*g>h?2*w*g:h,v=G(v,f,360),l.push(v),b.push("cut")):b.push(v)}else b.push(d.clone());else b.push(d)}m=q.offsetMagnitude(h,g);n=-90;t=m;for(d=new B;0<m;)p=-180+360*m,d.addPath([[p,n],[p,-1*n]]),n*=-1,m--;if(0<l.length&&0<t){m=await M.cut(e,l,d,c);m=O(l,m);n=[];l=
[];for(t=0;t<b.length;t++)d=b[t],"cut"!==d?l.push(d):(d=m.shift(),p=a[t],null!=p&&"polygon"===p.type&&p.rings&&1<p.rings.length&&d.rings.length>=p.rings.length?(n.push(d),l.push("simplify")):l.push(f?z.geographicToWebMercator(d):d));if(!n.length)return l;b=await N.simplify(e,n,c);a=[];for(c=0;c<l.length;c++)e=l[c],"simplify"!==e?a.push(e):a.push(f?z.geographicToWebMercator(b.shift()):b.shift());return a}a=[];for(c=0;c<b.length;c++)e=b[c],"cut"!==e?a.push(e):(e=l.shift(),a.push(!0===f?z.geographicToWebMercator(e):
e));return a}const F=()=>L.getLogger("esri.geometry.support.normalizeUtils");x.getClosestDenormalizedXToReference=function(a,b,c){c=y.getInfo(c);if(null==c)return a;const [e,f]=c.valid;c=2*f;let g=0,k=0;b>f?g=Math.ceil(Math.abs(b-f)/c):b<e&&(g=-Math.ceil(Math.abs(b-e)/c));a>f?k=Math.ceil(Math.abs(a-f)/c):a<e&&(k=-Math.ceil(Math.abs(a-e)/c));a+=(g-k)*c;b=a-b;b>f?a-=c:b<e&&(a+=c);return a};x.getDenormalizedExtent=function(a){if(!a)return null;const b=a.extent;if(!b)return null;var c=a.spatialReference&&
y.getInfo(a.spatialReference);if(!c)return b;const [e,f]=c.valid;({width:c}=b);let {xmin:g,xmax:k}=b;[g,k]=[k,g];if("extent"===a.type||0===c||c<=f||c>2*f||g<e||k>f)return b;let h;switch(a.type){case "polygon":if(1<a.rings.length)h=D(a.rings);else return b;break;case "polyline":if(1<a.paths.length)h=D(a.paths);else return b;break;case "multipoint":h=a.points}a=b.clone();for(let l=0;l<h.length;l++){let d=h[l][0];0>d?(d+=f,k=Math.max(d,k)):(d-=f,g=Math.min(d,g))}a.xmin=g;a.xmax=k;return a.width<c?(a.xmin-=
f,a.xmax-=f,a):b};x.normalizeCentralMeridian=I;x.normalizeMapX=function(a,b){if(b=y.getInfo(b)){const [c,e]=b.valid;b=e-c;if(a<c)for(;a<c;)a+=b;if(a>e)for(;a>e;)a-=b}return a};x.straightLineDensify=E;Object.defineProperty(x,Symbol.toStringTag,{value:"Module"})});