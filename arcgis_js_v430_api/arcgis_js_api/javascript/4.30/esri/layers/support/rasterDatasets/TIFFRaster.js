// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/arrayUtils ../../../core/Error ../../../core/Logger ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ./BaseRaster ./DBFParser ./pamParser ../rasterFormats/TiffDecoder ../rasterFormats/TiffTags ../rasterFunctions/stretchUtils ../rasterTransforms/PolynomialTransform ../../../rest/support/FeatureSet ../../../geometry/SpatialReference ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(B,z,M,F,N,G,ba,O,P,Q,R,S,K,A,H,T,U,V,W,L,C){function X(a){const b=A.getImageInfo(a),{width:c,height:d,tileWidth:g,tileHeight:h,planes:f,pixelType:k,compression:e,firstPyramidLevel:m,maximumPyramidLevel:q,pyramidBlockWidth:w,pyramidBlockHeight:n,pyramidResolutions:r,tileBoundary:x,affine:l,metadata:t}=b;let u=K.parseSpatialReference(b.extent.spatialReference?.wkt||b.extent.spatialReference?.wkid);var p=!!b.isPseudoGeographic;null==u&&(p=!0,u=new W({wkid:3857}));const v=new L({...b.extent,
spatialReference:u});var D=v?new C({x:v.xmin,y:v.ymax,spatialReference:u}):new C({x:0,y:0});D=new Q({blockWidth:g,blockHeight:h,pyramidBlockWidth:w,pyramidBlockHeight:n,compression:e,origin:D,firstPyramidLevel:m,maximumPyramidLevel:q,pyramidResolutions:r,blockBoundary:x});const Y=new C({x:(v.xmax-v.xmin)/c,y:(v.ymax-v.ymin)/d,spatialReference:u}),Z=t?{BandProperties:t.bandProperties,DataType:t.dataType}:{};let J=null;var E=a[0].get("PHOTOMETRICINTERPRETATION")?.values?.[0];a=a[0].get("COLORMAP")?.values;
if(3>=E&&3<a?.length&&0===a.length%3){J=[];E=a.length/3;for(let y=0;y<E;y++)J.push([y,a[y]>>>8,a[y+E]>>>8,a[y+2*E]>>>8])}p=new P({width:c,height:d,bandCount:f,pixelType:k,pixelSize:Y,storageInfo:D,spatialReference:u,isPseudoSpatialReference:p,keyProperties:Z,extent:v,colormap:J,statistics:t?t.statistics:null});l?.length&&(p.nativeExtent=new L({xmin:-.5,ymin:.5-d,xmax:c-.5,ymax:.5,spatialReference:u}),p.transform=new U({polynomialOrder:1,forwardCoefficients:[l[2]+l[0]/2,l[5]-l[3]/2,l[0],l[3],-l[1],
-l[4]]}),p.extent=p.transform.forwardTransform(p.nativeExtent),p.pixelSize=new C({x:(v.xmax-v.xmin)/c,y:(v.ymax-v.ymin)/d,spatialReference:u}),D.origin.x=-.5,D.origin.y=.5);if(r){const {x:y,y:aa}=p.pixelSize;r.forEach(I=>{I.x*=y;I.y*=aa})}return{imageInfo:b,rasterInfo:p}}z=class extends R{constructor(){super(...arguments);this._headerInfo=this._files=null;this._bufferSize=1048576;this.datasetFormat="TIFF"}async open(a){await this.init();var b=a?a.signal:null,{data:c}=await this.request(this.url,{range:{from:0,
to:this._bufferSize},responseType:"array-buffer",signal:b});if(!c)throw new F("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const {littleEndian:d,firstIFDPos:g,isBigTiff:h}=A.parseSignature(c);var f=[];await this._readIFDs(f,c,d,g,0,h?8:4,b);const {imageInfo:k,rasterInfo:e}=X(f);b=A.getPyramidIFDs(f);c=A.getMaskIFDs(f);this._headerInfo={littleEndian:d,isBigTiff:h,ifds:f,pyramidIFDs:b,maskIFDs:c,...k};this._set("rasterInfo",
e);if(!k.isSupported)throw new F("tiffraster:open","this tiff is not supported: "+k.message);if(!k.tileWidth)throw new F("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");e.isPseudoSpatialReference&&N.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");b=f[0].get("PREDICTOR")?.values?.[0];if(3===f[0].get("SAMPLEFORMAT")?.values?.[0]&&2===b)throw new F("tiffraster:open",
"unsupported horizontal difference encoding. Predictor\x3d3 is supported for floating point data");const {skipMapInfo:m,skipExtensions:q=[]}=this.ioConfig;q.includes("aux.xml")||m||(f=await this._fetchAuxiliaryMetaData(a),null!=f&&(e.statistics=f.statistics??e.statistics,(e.histograms=f.histograms)&&null==e.statistics&&(e.statistics=T.estimateStatisticsFromHistograms(f.histograms)),f.transform&&null==e.transform&&(e.transform=f.transform,e.nativeExtent=e.extent,b=e.transform.forwardTransform(e.nativeExtent),
e.pixelSize=new C({x:(b.xmax-b.xmin)/e.width,y:(b.ymax-b.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=b),e.isPseudoSpatialReference&&f.spatialReference&&(e.spatialReference=f.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)));q.includes("vat.dbf")||1!==e.bandCount||"u8"!==e.pixelType||m||(e.attributeTable=await this._fetchAuxiliaryTable(a),null!=e.attributeTable&&(e.keyProperties.DataType="thematic"));
m&&this.updateImageSpaceRasterInfo(e);this.updateTileInfo()}async fetchRawTile(a,b,c,d={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(a,b,c))return null;const g=await this._fetchRawTiffTile(a,b,c,!1,d);null!=g&&this._headerInfo.hasMaskBand&&(a=await this._fetchRawTiffTile(a,b,c,!0,d),null!=a&&a.pixels[0]instanceof Uint8Array&&(g.mask=a.pixels[0]));return g}async _readIFDs(a,b,c,d,g,h=4,f){if(!d)return null;if(d>=b.byteLength||0>d)b=(await this.request(this.url,{range:{from:d+g,to:d+g+
this._bufferSize},responseType:"array-buffer",signal:f})).data,g=d+g,d=0;d=await this._readIFD(b,c,d,g,H.tiffTags,h,f);a.push(d.ifd);if(!d.nextIFD)return null;await this._readIFDs(a,b,c,d.nextIFD-g,g,h,f)}async _readIFD(a,b,c,d,g=H.tiffTags,h=4,f){if(!a)return null;c=A.parseIFD(a,b,c,d,g,h);if(c.success){const k=[];c.ifd?.forEach(e=>{e.values||k.push(e)});0<k.length&&(h=k.map(e=>e.offlineOffsetSize).filter(M.isSome),g=Math.min.apply(null,h.map(e=>e[0])),Math.min.apply(null,h.map(e=>e[0]+e[1]))-g<=
this._bufferSize&&({data:h}=await this.request(this.url,{range:{from:g,to:g+this._bufferSize},responseType:"array-buffer",signal:f}),a=h,d=g,k.forEach(e=>A.parseFieldValues(a,b,e,d))));c.ifd?.has("GEOKEYDIRECTORY")&&(g=c.ifd.get("GEOKEYDIRECTORY"),(h=g?.values)&&4<h.length&&(h=h[0]+"."+h[1]+"."+h[2],f=await this._readIFD(a,b,g.valueOffset+6-d,d,H.geoKeys,2,f),g.data=f.ifd,g.data&&g.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})));return c}if(c.requiredBufferSize&&
c.requiredBufferSize!==a.byteLength)return a=(await this.request(this.url,{range:{from:d,to:d+c.requiredBufferSize+4},responseType:"array-buffer",signal:f})).data,a.byteLength<c.requiredBufferSize?null:this._readIFD(a,b,0,d,H.tiffTags,4,f)}async _fetchRawTiffTile(a,b,c,d,g={}){b=this._getTileLocation(a,b,c,d);if(!b)return null;const {ranges:h,actualTileWidth:f,actualTileHeight:k,ifd:e}=b;b=h.map(n=>this.request(this.url,{range:n,responseType:"array-buffer",signal:g.signal}));b=await Promise.all(b);
c=b.map(n=>n.data.byteLength).reduce((n,r)=>n+r);c=1===b.length?b[0].data:new ArrayBuffer(c);d=[0];var m=[0];if(1<b.length){const n=new Uint8Array(c);for(let r=0,x=0;r<b.length;r++){const l=b[r].data;n.set(new Uint8Array(l),x);d[r]=x;x+=l.byteLength;m[r]=l.byteLength}}const {blockWidth:q,blockHeight:w}=this.getBlockWidthHeight(a);a=await this.decodePixelBlock(c,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:e,offsets:d,sizes:m},width:q,height:w,planes:null,pixelType:null});if(null==
a)return null;if(f!==q||k!==w)if(m=a.mask)for(b=0;b<w;b++)for(d=b*q,c=b<k?f:0;c<q;c++)m[d+c]=0;else for(m=new Uint8Array(q*w),a.mask=m,b=0;b<k;b++)for(d=b*q,c=0;c<f;c++)m[d+c]=1;return a}_getTileLocation(a,b,c,d=!1){const {firstPyramidLevel:g,blockBoundary:h}=this.rasterInfo.storageInfo;var f=0===a?0:a-(g-1);({_headerInfo:a}=this);if(!a)return null;d=d?a.maskIFDs[f]:0===f?a?.ifds[0]:a?.pyramidIFDs[f-1];if(!d)return null;var k=A.isBSQConfig(d,a);a=d.get("TILEOFFSETS")?.values;if(void 0===a)return null;
const e=d.get("TILEBYTECOUNTS")?.values,{minRow:m,minCol:q,maxRow:w,maxCol:n}=h[f];if(b>w||c>n||b<m||c<q)return null;f=d.get("IMAGEWIDTH")?.values?.[0];const r=d.get("IMAGELENGTH")?.values?.[0],x=d.get("TILEWIDTH")?.values?.[0],l=d.get("TILELENGTH")?.values?.[0],t=[];if(k){({bandCount:k}=this.rasterInfo);for(let u=0;u<k;u++){const p=u*(w+1)*(n+1)+b*(n+1)+c;t[u]={from:a[p],to:a[p]+e[p]-1}}}else k=b*(n+1)+c,t.push({from:a[k],to:a[k]+e[k]-1});for(a=0;a<t.length;a++)if(null==t[a].from||!t[a].to||0>t[a].to)return null;
return{ranges:t,ifd:d,actualTileWidth:c===n?f%x||x:x,actualTileHeight:b===w?r%l||l:l}}async _fetchAuxiliaryMetaData(a){try{const {data:b}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:a?.signal});return K.parsePAMInfo(b)}catch{return null}}async _fetchAuxiliaryTable(a){try{const {data:b}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:a?.signal}),c=S.parse(b);return c?.recordSet?V.fromJSON(c.recordSet):null}catch{return null}}};B.__decorate([G.property()],
z.prototype,"_files",void 0);B.__decorate([G.property()],z.prototype,"_headerInfo",void 0);B.__decorate([G.property()],z.prototype,"_bufferSize",void 0);B.__decorate([G.property({type:String,json:{write:!0}})],z.prototype,"datasetFormat",void 0);return z=B.__decorate([O.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],z)});