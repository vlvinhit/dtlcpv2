// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../../../../colorUtils","../../rasterFunctionConstants","./utils","../../../../renderers/support/colorRampUtils"],function(h,m,n,g,p){function q(a){const d=a.colormap.map(b=>{if("value"in b){const f="string"===typeof b.color?m.getNamedColor(b.color)??m.hex2rgba(b.color):b.color;b=[b.value,...f];b[4]&&1>=b[4]&&(b[4]=Math.round(255*b[4]))}return b}),{raster:c,outputPixelType:e}=a;return g.createRasterFunction("Colormap",{colormap:d,raster:c},e)}function r(a){const {colorRampName:d}=
a,c=Object.values(n.colormapName).find(l=>l.toLowerCase()===d?.toLowerCase()),e=p.colorRampDict.toJSON(d),{raster:b,outputPixelType:f="unknown"}=a;return g.createRasterFunction("Colormap",c?{colormapName:c,raster:b}:{colorRampName:e,raster:b},f)}h.clip=function(a){const {geometry:d,keepOutside:c,outputPixelType:e="unknown",raster:b}=a;a="declaredClass"in d?d.toJSON():d;return g.createRasterFunction("Clip",{clippingGeometry:a,clippingType:c?2:1,raster:b},e)};h.colormap=function(a){if("colormap"in a)a=
q(a);else if("colorRamp"in a){const {raster:d,colorRamp:c,outputPixelType:e}=a;a={colorRamp:"toJSON"in c?c.toJSON():c,raster:d};a=g.createRasterFunction("Colormap",a,e)}else a=r(a);return a};h.compositeBands=function(a){const {rasters:d,outputPixelType:c}=a;return g.createRasterFunction("CompositeBand",{rasters:d},c)};h.extractBand=function(a){const {raster:d,outputPixelType:c="unknown"}=a,e={raster:d,missingBandAction:"fail"===a.missingBandAction?1:0};"bandIds"in a?e.bandIds=a.bandIds:"bandNames"in
a?e.bandNames=a.bandNames:"bandWavelengths"in a&&(e.bandWavelengths=a.bandWavelengths);return g.createRasterFunction("ExtractBand",e,c)};h.grayscale=function(a){const {weights:d,outputPixelType:c="unknown",raster:e}=a;return g.createRasterFunction("Grayscale",{conversionParameters:d,raster:e},c)};h.mask=function(a){const {raster:d,outputPixelType:c="unknown"}=a,e=a.includedRanges?.flatMap(f=>f),b=a.noDataValues?.map(f=>f.join(" "));return g.createRasterFunction("Mask",{raster:d,includedRanges:e,noDataInterpretation:"match-all"===
a.noDataInterpretation?1:0,noDataValues:b},c)};h.remap=function(a){const {allowUnmatched:d,raster:c,rangeMaps:e,outputPixelType:b}=a;var f=e?.filter(({output:k})=>null!=k);a=f?.flatMap(({range:k})=>k);f=f?.map(({output:k})=>k);const l=e?.filter(k=>null==k.output)?.flatMap(({range:k})=>k);return g.createRasterFunction("Remap",{allowUnmatched:d,raster:c,inputRanges:a,outputValues:f,noDataRanges:l},b)};h.statisticsHistogram=function(a){const {raster:d,histograms:c,outputPixelType:e}=a;a=a.statistics?.map(b=>
({min:b.min,max:b.max,mean:b.avg,standardDeviation:b.stddev}));return g.createRasterFunction("StatisticsHistograms",{raster:d,statistics:a,histograms:c},e)};h.table=function(a){const {raster:d,attributeTable:c,outputPixelType:e="unknown"}=a;a="toJSON"in c?c.toJSON():c;return g.createRasterFunction("Table",{raster:d,attributeTableAsRecordSet:a},e)};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});