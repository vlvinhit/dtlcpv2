// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/has","../../../core/jsonMap","../PixelBlock","../rasterFormats/pixelRangeUtils"],function(r,y,t,u,v){function B(b){const {bands:[d,k],mask:g,isRelative:m,isRoundingNeeded:n,outBand:c}=b;b=d.length;for(let a=0;a<b;a++)if(!g||g[a]){let e=d[a]-k[a];if(m){const f=Math.max(Math.abs(d[a])-Math.abs(k[a]));e=0<f?e/f:0}c[a]=n?Math.round(e):e}}function C(b){const {bands:[d,k],categoryIndexLookups:[g,m],classNames:[n,c],mask:a,keepMethod:e,outBand:f}=b;b=d.length;const p=c.length,
l=n.length*p,h=l+1,D=l+2;for(let q=0;q<b;q++)if(!a||a[q]){const w=g[d[q]],x=m[k[q]],z=n[w],A=c[x];f[q]=null==w||null==x?l:"changed"===e&&z===A?h:"unchanged"===e&&z!==A?D:w*p+x}}function E(b){const {pixels:[d,k],mask:g,outBand:m}=b;b=d[0].length;const n=d.length;for(let c=0;c<b;c++)if(!g||g[c]){let a=0;for(let e=0;e<n;e++){const f=d[e][c]-k[e][c];a+=f*f}m[c]=Math.sqrt(a)}}function F(b){const {pixels:[d,k],mask:g,outBand:m}=b;b=d[0].length;const n=d.length;for(let a=0;a<b;a++)if(!g||g[a]){let e=0;var c=
0;let f=0;for(let p=0;p<n;p++){const l=d[p][a],h=k[p][a];e+=l*h;c+=l*l;f+=h*h}c=Math.sqrt(c*f);m[a]=c?Math.acos(e/c):1.5707963267948966}}function G(b){const {pixels:[d,k],mask:g,outBand:m}=b;b=d[0].length;const n=d.length;for(let c=0;c<b;c++)if(!g||g[c]){let a=0,e=0;for(let f=0;f<n;f++){const p=Math.abs(d[f][c]-k[f][c]);p>a&&(a=p,e=f)}m[c]=e}}y=new t.JSONMap({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0});
t=new t.JSONMap({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});r.changeMethodMap=y;r.computeChange=function(b,d,k,g){const [m,n]=b,c=v.isIntegerPixelType(k)&&!v.isIntegerPixelType(m.pixelType)&&!v.isIntegerPixelType(n.pixelType);var a=[m.mask,n.mask].filter(h=>h);a=u.combineBandMasks(a);const e=b.map(h=>h.pixels[0]),{width:f,height:p}=m,l=u.createEmptyBand(k,f*p);switch(d){case "difference":case "relative-difference":B({bands:e,mask:a,outBand:l,isRoundingNeeded:c,isRelative:"relative-difference"===
d});break;case "categorical":C({bands:e,mask:a,outBand:l,...g});break;case "euclidean-distance":E({pixels:b.map(h=>h.pixels),mask:a,outBand:l});break;case "angle-difference":F({pixels:b.map(h=>h.pixels),mask:a,outBand:l});break;case "band-with-most-change":G({pixels:b.map(h=>h.pixels),mask:a,outBand:l})}b=new u({width:f,height:p,pixels:[l],pixelType:k,mask:a});b.updateStatistics();return b};r.keepMethodMap=t;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});