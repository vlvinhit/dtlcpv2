// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../rasterFormats/pixelRangeUtils ./BaseRasterFunction ./pixelUtils ./StretchFunctionArguments ./stretchUtils".split(" "),function(k,n,d,x,y,t,r,u,v,w,l){d=class extends u{constructor(){super(...arguments);this.functionName="Stretch";this.functionArguments=null;this.rasterArgumentNames=["raster"];this.cutOffs=
this.lookup=null}_bindSourceRasters(){this.cutOffs=this.lookup=null;var a=this.sourceRasterInfos[0],{pixelType:b}=a,{functionArguments:c}=this;const {dynamicRangeAdjustment:e,gamma:m,useGamma:p}=c;if(!e&&["u8","u16","s8","s16"].includes(b)){c=l.getStretchCutoff(c.toJSON(),{rasterInfo:a});const q=r.isIntegerPixelType(this.outputPixelType)?"round":"float";this.lookup=l.createStretchLUT({pixelType:b,...c,gamma:p?m:null,rounding:q});this.cutOffs=c}else e||(this.cutOffs=l.getStretchCutoff(c.toJSON(),{rasterInfo:a}));
this.outputPixelType=this._getOutputPixelType(b);a=a.clone();a.pixelType=this.outputPixelType;this._removeStatsHistColormapVAT(a);"u8"===this.outputPixelType&&(a.keyProperties.DataType="processed");const {outputMin:f=0,outputMax:h=255}=this.functionArguments;a.statistics=[];for(b=0;b<a.bandCount;b++)a.statistics[b]={min:f,max:h};this.rasterInfo=a;return{success:!0,supportsGPU:!e}}_processPixels(a){a=a.pixelBlocks?.[0];if(null==a)return a;var {lookup:b}=this;if(b)return v.lookupPixels(a,{...b,outputPixelType:this.rasterInfo.pixelType});
({functionArguments:b}=this);const c=this.cutOffs||l.getStretchCutoff(b.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:a});return l.stretch(a,{...c,gamma:b.useGamma?b.gamma:null,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const {outputMin:a=0,outputMax:b=255,gamma:c,useGamma:e}=this.functionArguments,m=2<=this.rasterInfo.bandCount?3:1,p=e&&c?.length?l.computeGammaCorrection(m,c):[1,1,1],{minCutOff:f,maxCutOff:h}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};
1===f.length&&(f[1]=f[2]=f[0],h[1]=h[2]=h[0]);const q=new Float32Array(m);var g;for(g=0;g<m;g++)q[g]=(b-a)/(h[g]-f[g]);g=r.isIntegerPixelType(this.outputPixelType);return{bandCount:m,outMin:a,outMax:b,minCutOff:f,maxCutOff:h,factor:q,useGamma:e,gamma:e&&c?c:[1,1,1],gammaCorrection:e&&p?p:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:g,type:"stretch"}}};k.__decorate([n.property({json:{write:!0,name:"rasterFunction"}})],d.prototype,"functionName",void 0);k.__decorate([n.property({type:w,
json:{write:!0,name:"rasterFunctionArguments"}})],d.prototype,"functionArguments",void 0);k.__decorate([n.property()],d.prototype,"rasterArgumentNames",void 0);k.__decorate([n.property({json:{write:!0}})],d.prototype,"lookup",void 0);k.__decorate([n.property({json:{write:!0}})],d.prototype,"cutOffs",void 0);return d=k.__decorate([t.subclass("esri.layers.support.rasterFunctions.StretchFunction")],d)});