// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../core/Error ../../../core/Logger ../../../core/memoize ../../../core/promiseUtils ../../../geometry/projection ../../../geometry/support/aaBoundingRect ../../ElevationLayer ../../ImageryLayer ../../support/ElevationSampler ../../support/ElevationTile ../../support/ElevationTileData ../../support/RasterFunction ../../support/TileInfo ../../support/TileKey ../../../support/requestPresets ../../../widgets/OrientedImageryViewer/utils".split(" "),function(g,m,n,v,h,p,w,x,y,z,A,
B,C,D,E,F,G){async function q(a,b,c){await h.waitTick(c);const d=[];b=H(b,c);for(const e of a)a=await b(e),d.push(a);return d}async function I(a,b,c){a=new x(a);let d;try{await a.load(),d=await a.createElevationSampler(b,c)}catch(e){if(h.isAbortError(e))return;n.getLogger(a).error(e)}finally{a.destroy()}return d}async function J(a,b,c,d){c=c?new C({functionName:c}):void 0;var e=new y({url:a,rasterFunction:c,format:"lerc"});await e.load(d);c=a=512;var f=b.width/b.height;1<f?(c/=f,f=b.height/c):(a*=
f,f=b.width/a);e=await e.fetchImage(b,a,c,d);d=D.create({scales:[f],size:512,spatialReference:b.spatialReference});b=new E.TileKey(null,0,0,0,w.fromExtent(b));a=new B.ElevationTileData(e.pixelData.pixelBlock.pixels[0],a,c,0);b=new A.ElevationTile(b,a);return new z.TileElevationSampler(b,d,void 0)}async function r(a){const b=await F.fetchArcGISServiceJSON(a),{tileInfo:c,cacheType:d}=b;if(!b.hasOwnProperty("bandCount")||!b.hasOwnProperty("pixelSizeX"))throw new m("elevation-source:invalid-service-url",
`ElevationSource URL expects an elevation 3D image service but given ${a}`);return"LERC"!==c?.format?.toUpperCase()||d&&"elevation"!==d.toLowerCase()?k.DYNAMIC:k.ELEVATION}function H(a,b){return async c=>{let d=c.clone();var e=c.spatialReference.equals(a.spatialReference)?d:await p.projectWithZConversion(c,a.spatialReference,b);(e=a.queryElevation(e))&&(d=c.spatialReference.equals(a.spatialReference)?e.clone():await p.projectWithZConversion(e,c.spatialReference,b));d.z=d.z??1;return d}}async function t(a,
b,c=!0,d){await h.waitTick(d);if(c)return a.map(e=>{e.z=b;return e});for(const e of a)e.z=b;return a}var k;(function(a){a[a.DYNAMIC=0]="DYNAMIC";a[a.ELEVATION=1]="ELEVATION"})(k||={});const u=v.memoize(async(a,b)=>{let c;const {extent:d,rasterFunction:e,url:f}=a;try{c=await r(f)}catch(l){if(h.isAbortError(l))return;n.getLogger("esri.layers.orientedImagery.transformations").error("updateElevationUsingElevationSource",l)}switch(c){case k.DYNAMIC:return await J(f,d,e,b);case k.ELEVATION:return await I(f,
d,b)}});g.getElevationSampler=u;g.updateUsingCameraProperties=async function(a,b,c=!0,d){await h.waitTick(d);const {cameraHeight:e,cameraLocation:f,cameraOrientation:l}=a;return t(b,l&&"number"==typeof f.z?f.z-e:0,c,d)};g.updateUsingConstant=t;g.updateUsingElevationSampler=q;g.updateUsingElevationSource=async function(a,b,c){const d="url"in b?await u(b):b;if(!d)throw G.logAndThrow("esri.layers.orientedImagery.transformations",new m("update-elevation:elevation-source","could not create a sampler using provided elevation source",
b));return q(a,d,c)};g.validateElevationSourceURL=r;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});