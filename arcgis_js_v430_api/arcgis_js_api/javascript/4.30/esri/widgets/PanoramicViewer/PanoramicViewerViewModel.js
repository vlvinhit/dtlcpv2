// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../Camera ../../geometry ../../Ground ../../Map ../../request ../../core/Collection ../../core/Error ../../core/Evented ../../core/jsonMap ../../core/mathUtils ../../core/maybe ../../core/promiseUtils ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/enumeration ../../core/accessorSupport/decorators/subclass ../../layers/GraphicsLayer ../../layers/orientedImagery/transformations/utils ../../views/SceneView ../Zoom ../OrientedImageryViewer/utils ./constants ./PanoramicZoomConditions ./PanoramicZoomViewModel ./utils ../../geometry/SpatialReference".split(" "),
function(d,u,c,v,w,x,y,z,A,B,l,C,p,g,f,K,L,M,D,E,F,G,H,I,n,m,q,J,k,r){c=class extends A.EventedAccessor{constructor(b){super(b);this._targetPosition=this._startPosition=null;this._graphics=new F({elevationInfo:{mode:"relative-to-ground"}});this._loadController=this._imageGraphic=null;this._map=new w({ground:new v({opacity:0,navigationConstraint:null}),layers:new y([this._graphics])});this._zoomViewModel=null;this.autoLoad=!1;this.clickAction="none";this.imageSource=this.imageSize=null;this.pitch=
90;this.state="ready";this.yaw=0;this._addNavigationHandles=()=>{this.imageRenderer.basemapTerrain.suspended=!0;this.imageRenderer.constraints.tilt.max=180;this.removeHandles("navigation");this.addHandles([this.imageRenderer.on("mouse-wheel",this._handleWheel),this.imageRenderer.on("double-click",this._handleDoubleClick),this.imageRenderer.on("drag",this._handleDrag),this.imageRenderer.on("key-down",a=>{"+ - Shift _ \x3d ArrowUp ArrowDown ArrowRight ArrowLeft".split(" ").includes(a.key)&&a.stopPropagation()})],
"navigation")};this._addHFOVHandles=()=>{this.removeHandles("fov-constraint");this.addHandles(g.watch(()=>[this.maxHFOV,this.minHFOV],()=>{this._zoomViewModel&&(this._zoomViewModel.panoramicZoomConditions=new q({view:this.imageRenderer,maxFOV:this.maxHFOV,minFOV:this.minHFOV}))},g.syncAndInitial),"fov-constraint")};this._addZoomHandles=()=>{this._zoomViewModel=new J({view:this.imageRenderer,panoramicZoomConditions:new q({maxFOV:this.maxHFOV,minFOV:this.minHFOV})});const a=new I({viewModel:this._zoomViewModel});
this.imageRenderer.ui.add(a,"top-left");this._addHFOVHandles()};this._cancelLoadWithController=()=>{this._loadController?.abort();this._loadController=null};this._handleDoubleClick=a=>{a.stopPropagation();a.native.ctrlKey?this._zoomOut():this._zoomIn()};this._handleDrag=a=>{a.stopPropagation();const {action:e,x:h,y:t}=a;switch(e){case "start":this._startPosition=this._targetPosition={x:h,y:t};break;case "update":this._targetPosition={x:h,y:t},this._updateCameraHeadingAndTilt()}};this._handleImageClick=
a=>{if("image-loaded"===this.state&&this.imageRenderer.ready)switch(this.clickAction){case "emit":a.stopPropagation();this.emit("click",a);break;case "hittest":a.stopPropagation();a.async(async()=>{const h=await this.imageRenderer.hitTest(a.screenPoint,{include:this._graphics});this.emit("hittest-response",h)});break;case "pixel-location":if(a.stopPropagation(),this.imageSize&&a.mapPoint){var e=G.convertSphereVertexToPixelLocation(a.mapPoint,this.imageSize[0],this.imageSize[1]);this.emit("pixel-location",
{...e,spatialReference:r.WebMercator,meshVertex:a.mapPoint})}else this.emit("pixel-location",null)}};this._handleWheel=a=>{const e=a.deltaX??a.native.deltaX;a.stopPropagation();0<e||0<a.deltaY?this._zoomOut():this._zoomIn()};this._loadWithController=()=>{this._cancelLoadWithController();this._loadController=new AbortController;this.loadImage(this._loadController)};this._zoomIn=()=>this._zoomViewModel?.zoomIn();this._zoomOut=()=>this._zoomViewModel?.zoomOut();this.addGraphic=(a,e)=>{if("image-loaded"!==
this.state||this._graphics.graphics.includes(a))return!1;this._graphics.graphics.add(a,e);return!0};this.addManyGraphics=a=>{if("image-loaded"!==this.state)return!1;a=a.filter(e=>!this._graphics.graphics.includes(e));this._graphics.graphics.addMany(a);return!0};this.clearGraphics=()=>{this._graphics.graphics.removeAll()};this.clearImage=()=>{this.imageSize=null;this._removeImageSphere()};this.removeGraphic=a=>{if("image-loaded"!==this.state||!this._graphics.graphics.includes(a))return!1;this._graphics.remove(a);
return!0};this.removeManyGraphics=a=>{if("image-loaded"!==this.state)return!1;a=a.filter(e=>this._graphics.graphics.includes(e));this._graphics.removeMany(a);return!0};this._imageRenderer=new H({map:this._map,viewingMode:"local",camera:{position:m.defaultImageSphereCenter},environment:{atmosphereEnabled:!1,starsEnabled:!1,lighting:{type:"virtual"}},popupEnabled:!1,spatialReference:r.WebMercator,ui:{components:["attribution"]}})}initialize(){this.state="initialized";this.addHandles([g.watch(()=>this.imageSource,
()=>{this.imageSource&&this.autoLoad&&this._loadWithController()},g.syncAndInitial),g.watch(()=>this.fov,()=>{this._reloadCamera()},g.syncAndInitial),g.watch(()=>this.yaw,b=>{this.camera.heading=b;this._reloadCamera()},g.syncAndInitial),g.watch(()=>this.pitch,b=>{this.camera.tilt=b;this._reloadCamera()},g.syncAndInitial),g.when(()=>this.imageRenderer.ready,()=>{this._addNavigationHandles();this._addZoomHandles()},g.syncAndInitial),g.watch(()=>this.clickAction,b=>{this.removeHandles("image-click-action");
"none"!==b&&this.addHandles(this.imageRenderer.on("click",this._handleImageClick))},g.syncAndInitial)],"default")}get camera(){return this.imageRenderer.camera}set camera(b){b&&(this.imageRenderer.camera=b.clone())}get fov(){return this.camera.fov}set fov(b){Number.isFinite(b)&&this._zoomViewModel?.zoomTo(b)}get hfov(){const {fov:b}=this.camera,{size:[a,e]}=this.imageRenderer,h=Math.atan(a/e);return 2*l.rad2deg(Math.atan(Math.tan(l.deg2rad(b/2))*Math.sin(h)))}get imageRenderer(){return this._imageRenderer}get maxHFOV(){const {size:[b,
a]}=this.imageRenderer;return k.findDiagonalFOV(m.maxPanoramicViewerHFOV,b/a)}get minHFOV(){const {size:[b,a]}=this.imageRenderer;return k.findDiagonalFOV(m.minPanoramicViewerHFOV,b/a)}get vfov(){const {fov:b}=this.camera,{size:[a,e]}=this.imageRenderer,h=Math.atan(a/e);return 2*l.rad2deg(Math.atan(Math.tan(l.deg2rad(b/2))*Math.cos(h)))}async _loadImageInternal(b,a){this.state="image-loading";let e;try{e=(await x(b,{responseType:"image",...a})).data}catch(h){throw p.isAbortError(h)?this.state="image-load-aborted":
this.state="image-load-error",h;}return this._updateImageSphere(e,a)}_reloadCamera(){this.camera=this.camera.clone()}_removeImageSphere(){this._imageGraphic&&(this._graphics.remove(this._imageGraphic),this._imageGraphic=C.destroyMaybe(this._imageGraphic));this.state="ready";this.imageSize=null}_updateCameraHeadingAndTilt(){this._startPosition&&this._targetPosition&&(this.yaw=(this.camera.heading+(this._startPosition.x-this._targetPosition.x)/this.imageRenderer.width*this.camera.fov+360)%360,this.pitch=
Math.min(179.5,Math.max(.5,this.camera.tilt-(this._startPosition.y-this._targetPosition.y)/this.imageRenderer.height*this.imageRenderer.camera.tilt)),this._startPosition=this._targetPosition)}async _updateImageSphere(b,a){await p.waitTick(a);const {size:[e,h]}=this.imageRenderer;this._imageGraphic=k.meshToGraphic(k.createImageSphere(b));this._graphics.add(this._imageGraphic);this.fov=k.findDiagonalFOV(m.humanBinocularHFOV,e/h);this.state="image-loaded";this.imageSize=[b.width,b.height];return this._imageGraphic.geometry}async loadImage(b){this._removeImageSphere();
return this.imageSource?this._loadImageInternal(this.imageSource,b):n.logAndThrow(this.declaredClass,new z(n.getMissingPropertyErrorName("panoramic-viewer"),n.getMissingPropertyErrorMessage("PanoramicViewerViewModel","imageSource")))}};d.__decorate([f.property()],c.prototype,"_graphics",void 0);d.__decorate([f.property()],c.prototype,"_imageGraphic",void 0);d.__decorate([f.property()],c.prototype,"_imageRenderer",void 0);d.__decorate([f.property()],c.prototype,"_loadController",void 0);d.__decorate([f.property()],
c.prototype,"_map",void 0);d.__decorate([f.property()],c.prototype,"_zoomViewModel",void 0);d.__decorate([f.property({type:Boolean})],c.prototype,"autoLoad",void 0);d.__decorate([f.property({type:u})],c.prototype,"camera",null);d.__decorate([D.enumeration(new B.JSONMap({emit:"emit",hittest:"hittest",none:"none","pixel-location":"pixel-location"}))],c.prototype,"clickAction",void 0);d.__decorate([f.property({type:Number})],c.prototype,"fov",null);d.__decorate([f.property({readOnly:!0})],c.prototype,
"hfov",null);d.__decorate([f.property({readOnly:!0})],c.prototype,"imageRenderer",null);d.__decorate([f.property()],c.prototype,"imageSize",void 0);d.__decorate([f.property()],c.prototype,"imageSource",void 0);d.__decorate([f.property({readOnly:!0})],c.prototype,"maxHFOV",null);d.__decorate([f.property({readOnly:!0})],c.prototype,"minHFOV",null);d.__decorate([f.property({type:Number})],c.prototype,"pitch",void 0);d.__decorate([f.property()],c.prototype,"state",void 0);d.__decorate([f.property({readOnly:!0})],
c.prototype,"vfov",null);d.__decorate([f.property({type:Number})],c.prototype,"yaw",void 0);return c=d.__decorate([E.subclass("esri.widgets.PanoramicViewer.PanoramicViewerViewModel")],c)});