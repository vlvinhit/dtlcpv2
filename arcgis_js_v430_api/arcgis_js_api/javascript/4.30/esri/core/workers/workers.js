// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("require exports ../Error ../has ../promiseUtils ./Connection ./connectionRegistry ./RemoteClient ./WorkerOwner".split(" "),function(x,g,y,h,q,r,z,n,A){function B(b){if(b&&b.__esModule)return b;const a=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(b)for(const c in b)if("default"!==c){const d=Object.getOwnPropertyDescriptor(b,c);Object.defineProperty(a,c,d.get?d:{enumerable:!0,get:()=>b[c]})}a.default=b;return Object.freeze(a)}async function l(b,a){const c=new r,{registryTarget:d,
...e}=a;await c.open(b,e);d&&z.register(d,c);return c}async function t(){if(m)return m;u=new AbortController;const b=[];for(let a=0;a<k;a++){const c=A.create(a).then(d=>f[a]=d);b.push(c)}return m=Promise.all(b)}const v=h("host-browser")?Math.min(navigator.hardwareConcurrency-1,h("workers-pool-size")):0;let k=h("esri-mobile")?Math.min(v,3):v;k||=h("safari")&&h("mac")?7:2;let w=0;const f=[];let m=null,u;g.Connection=r;g.RemoteClient=n;g.initialize=function(){t()};g.open=async function(b,a={}){if("string"!==
typeof b)throw new y("workers:undefined-module","modulePath is missing");var c=a.strategy||"distributed";h("host-webworker")&&!h("esri-workers")&&(c="local");if("local"===c){var d=await n.loadWorker(b);d||=await new Promise((e,p)=>x([b],C=>e(B(C)),p));q.throwIfAborted(a.signal);c=a.client||d;d=n.connect(d,a.schedule);return l([d],{...a,client:c})}await t();q.throwIfAborted(a.signal);if("dedicated"===c)return c=w++%k,c=await f[c].open(b,a),l([c],a);if(a.maxNumWorkers&&0<a.maxNumWorkers&&(c=Math.min(a.maxNumWorkers,
k),c<k)){d=Array(c);for(let e=0;e<c;++e){const p=w++%k;d[e]=f[p].open(b,a)}return l(d,a)}c=f.map(e=>e.open(b,a));return l(c,a)};g.openWithPorts=function(b,a){return l(b,{client:a})};g.terminate=function(){m&&(u.abort(),m=null);for(let b=0;b<f.length;b++)f[b]&&f[b].terminate();f.length=0};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});