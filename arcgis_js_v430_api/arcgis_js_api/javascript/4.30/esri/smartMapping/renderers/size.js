// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Logger ../../core/Error ../../core/screenUtils ../../core/accessorSupport/ensureType ../../intl/messages ../../intl/substitute ../../renderers/support/AuthoringInfo ../../renderers/support/AuthoringInfoSizeStop ../../renderers/support/AuthoringInfoVisualVariable ../../renderers/support/utils ../../renderers/visualVariables/SizeVariable ../../renderers/visualVariables/support/castSizeVariable ../../renderers/visualVariables/support/SizeVariableLegendOptions ../../renderers/visualVariables/support/sizeVariableUtils ../heuristics/ageUnit ../heuristics/outline ../heuristics/referenceSize ../heuristics/sizeRange ./support/referenceSizeUtils ./support/utils ../statistics/support/ageUtils ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/size ../../symbols/support/utils".split(" "),
function(E,N,ta,ua,va,wa,xa,ya,za,Aa,Ba,g,O,ba,J,ca,K,P,Q,da,R,F,ea,fa,ha,S,T,ia,C,h,I,L,H,y,G,U){async function ja(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new g("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new g("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");if("reference-size"===
a.theme&&!a.view&&!a.field)throw new g("size-visual-variable:missing-parameters","'view' and 'field' are required when 'theme' is 'reference-size'");if("reference-size"===a.theme&&a.valueExpression)throw new g("size-visual-variable:missing-parameters","'valueExpression' is not supported when 'theme' is 'reference-size'");a.forBinning&&L.verifyBinningParams(a,"size-visual-variable");const b={...a};var c=a.forBinning?y.binningCapableLayerTypes:y.featureCapableLayerTypes,d=y.createLayerAdapter(b.layer,
c,a.forBinning);if(!d)throw new g("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+y.getLayerTypeLabels(c).join(", "));b.layer=d;"height"===b.axis&&(b.sizeOptimizationEnabled=!1);await d.load(null!=b.signal?{signal:b.signal}:null);c=d.geometryType;if("mesh"===c)throw new g("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(b.worldScale){if("polyline"===c||"polygon"===c)throw new g("size-visual-variable:not-supported",
"'worldScale' sizing is not supported for polyline and polygon layers");if(!b.view||"3d"!==b.view.type)throw new g("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");}if("reference-size"===b.theme&&!a.forBinning&&"polygon"!==c)throw new g("size-visual-variable:invalid-parameters","Reference size is only supported for polygon layers");a=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});
if(d=h.verifyBasicFieldValidity(d,a,"size-visual-variable:invalid-parameters"))throw d;await V(b);return b}async function ka(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new g("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new g("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&
L.verifyBinningParams(a,"size-continuous-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);var c=a.forBinning?y.binningCapableLayerTypes:y.featureCapableLayerTypes,d=y.createLayerAdapter(b.layer,c,a.forBinning);if(!d)throw new g("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+y.getLayerTypeLabels(c).join(", "));b.layer=d;await d.load(null!=b.signal?{signal:b.signal}:null);c=d.geometryType;const e=b.symbolType.includes("3d");
b.outlineOptimizationEnabled="reference-size"!==b.theme&&"polygon"===c&&b.outlineOptimizationEnabled;if("mesh"===c)throw new g("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(e&&("polyline"===c||"polygon"===c))throw new g("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==b.view.type))throw new g("size-continuous-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if("reference-size"===b.theme&&!a.forBinning&&"polygon"!==c)throw new g("size-continuous-renderer:invalid-parameters","Reference size is only supported for polygon layers");a=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(d=h.verifyBasicFieldValidity(d,a,"size-continuous-renderer:invalid-parameters"))throw d;
await V(b);return b}async function V(a){const b=a.layer;if(("polygon"===b.geometryType||a.forBinning)&&a.view&&a.field&&!a.valueExpression&&(!a.theme||"reference-size"===a.theme)){try{a.referenceSizeResult=a.referenceSizeResult??await T({layer:b,view:a.view,forBinning:a.forBinning,signal:a.signal})}catch{}!a.theme&&a.referenceSizeResult?.isGrid&&(a.theme="reference-size");a.referenceSizeOptions?.symbolStyle||(a.referenceSizeOptions?a.referenceSizeOptions.symbolStyle="circle":a.referenceSizeOptions=
{symbolStyle:"circle"})}}function la(a){if(!(a&&a.layer&&a.view&&a.sizeStops))throw new g("update-renderer-with-reference-size:missing-parameters","'layer', 'view and 'sizeStops' parameters are required");var b=a.layer;let c=a.renderer;if(!c)if(a.forBinning){if(!("featureReduction"in b&&b.featureReduction&&"renderer"in b.featureReduction&&b.featureReduction.renderer)||"class-breaks"!==b.featureReduction.renderer.type&&"unique-value"!==b.featureReduction.renderer.type)throw new g("update-renderer-with-reference-size:invalid-parameters",
"Feature reduction renderer is not supported");c=b.featureReduction.renderer}else{if(!("renderer"in b&&b.renderer)||"class-breaks"!==b.renderer.type&&"unique-value"!==b.renderer.type)throw new g("update-renderer-with-reference-size:invalid-parameters","Renderer is not supported");c=b.renderer}b=c.authoringInfo;if(!b||!b?.visualVariables?.some(d=>"reference-size"===d.theme))throw new g("update-renderer-with-reference-size:invalid-parameters","'renderer.authoringInfo.visualVariables' should have an authoringInfoVisualVariable with 'theme' set to 'reference-size'");
return{...a,renderer:c}}async function ma(a){if(!a||!a.layer||!a.field&&!a.valueExpression)throw new g("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new g("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&L.verifyBinningParams(a,"size-class-breaks-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??
(b.defaultSymbolEnabled=!0);b.classificationMethod??(b.classificationMethod="equal-interval");b.normalizationType=H.getNormalizationType(b);var c=a.forBinning?y.binningCapableLayerTypes:y.featureCapableLayerTypes;a=y.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new g("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+y.getLayerTypeLabels(c).join(", "));b.layer=a;if(!(null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue))throw new g("size-class-breaks-renderer:missing-parameters",
"Both 'minValue' and 'maxValue' are required when specifying custom data range");await a.load(null!=b.signal?{signal:b.signal}:null);c=a.geometryType;const d=b.symbolType.includes("3d");b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;if("mesh"===c)throw new g("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new g("size-class-breaks-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&(!b.view||"3d"!==b.view.type))throw new g("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");c=await H.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(a=h.verifyBasicFieldValidity(a,c,"size-class-breaks-renderer:invalid-parameters"))throw a;return b}
function W(a){a={...a};const b=!!a.symbolType?.includes("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===a.symbolType?"all":"height";delete a.symbolType;delete a.defaultSymbolEnabled;return a}async function na(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new g("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");a={...a};a.symbolType??(a.symbolType="2d");a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);var b=y.createLayerAdapter(a.layer,
y.featureCapableLayerTypes);if(!b)throw new g("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+y.getLayerTypeLabels(y.featureCapableLayerTypes).join(", "));a.layer=b;await b.load(null!=a.signal?{signal:a.signal}:null);const c=b.geometryType,d=a.symbolType.includes("3d");a.outlineOptimizationEnabled="polygon"===c?a.outlineOptimizationEnabled:!1;if("mesh"===c)throw new g("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");
if(d&&("polyline"===c||"polygon"===c))throw new g("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new g("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if(b=I.verifyDates(b,a.startTime,a.endTime,"size-age-renderer:invalid-parameters"))throw b;if(a.unit&&
!I.supportedAgeUnits.includes(a.unit))throw new g("size-age-renderer:invalid-unit",`Supported units are: ${I.supportedAgeUnits.join(", ")}`);return a}async function X(a){let b=a.sizeScheme,c=null;var d=null;d=await h.getBasemapInfo(a.basemap,a.view);c=null!=d.basemapId?d.basemapId:null;d=null!=d.basemapTheme?d.basemapTheme:null;if(b)return{scheme:G.cloneScheme(b),basemapId:c,basemapTheme:d};if(a=G.getSchemes({basemapTheme:d,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))b=a.primaryScheme,
c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}function Y(a,b){switch(b){case "point":case "multipoint":return[F.castSizeFromStringOrNumber(a.minSize),F.castSizeFromStringOrNumber(a.maxSize)];case "polyline":return[F.castSizeFromStringOrNumber(a.minWidth),F.castSizeFromStringOrNumber(a.maxWidth)];case "polygon":return[F.castSizeFromStringOrNumber(a.marker.minSize),F.castSizeFromStringOrNumber(a.marker.maxSize)]}}async function oa(a,b,c,d,e){return"reference-size"===c&&
b?[1,b.size]:a?[a.minSize,a.maxSize]:Y(d,e)}function pa(a,b){if("reference-size"===b.theme&&null!=a.min&&null!=a.max&&null!=a.avg&&null!=a.stddev){b=a.avg;const k=a.min;var c=a.max;a=a.stddev;const u=0!==b?a/b:0,m=0<k&&1>k&&2>c&&.5>u;c=0<k&&100>k&&200>c&&.5>u;return{minDataValue:m?0:c?0:k,maxDataValue:m?1:c?100:b+2*a,defaultValuesUsed:!1}}const {theme:d,field:e}=b;b=b.layer;b=e&&"function"!==typeof e?b.getField(e):null;b=H.isAnyDateField(b);return h.getDataRange(a,d,b,"above"===d||"below"===d)}async function qa(a,
b,c,d){const {theme:e,field:k,normalizationField:u,minValue:m,maxValue:q,axis:p}=a;var f=a.layer.geometryType;const l=await X({basemap:a.basemap,geometryType:f,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view}),x=l.scheme;if(!x)throw new g("size-visual-variable:insufficient-info","Unable to find size scheme");var n=await oa(c,d,e,x,f);const {minDataValue:v,maxDataValue:w,defaultValuesUsed:r}=pa(b,a);c=[];var t="height"===p;f=t?p:void 0;const z=n[0];n=n[1];t&&"number"===typeof z&&"number"===
typeof n&&(t=h.getSizeRangeForAxis({minSize:z,maxSize:n},f),c.push(new R({axis:"width-and-depth",minSize:t.minSize})),n=t.maxSize);f=new R({field:k??void 0,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,valueUnit:"unknown",normalizationField:u,axis:f,minSize:z,maxSize:n,minDataValue:v,maxDataValue:w,legendOptions:ba.ensureClass(ea,a.legendOptions)});f.transformationType===fa.TransformationType.ClampedLinear&&"below"===e&&f.flipSizes();c.unshift(f);a="reference-size"===
e?new Q({type:"size",field:a.field,normalizationField:a.normalizationField,sizeStops:C.getReferenceSizeStops(f).map(({label:A,size:B,value:D})=>new P({label:A,size:B,value:D})),theme:e,referenceSizeScale:d?.isGrid||a.sizeOptimizationEnabled?a?.view?.scale:void 0,referenceSizeSymbolStyle:a.referenceSizeOptions?.symbolStyle,minSliderValue:null!=m?m:b.min,maxSliderValue:null!=q?q:b.max}):new Q({type:"size",theme:e,minSliderValue:null!=m?m:b.min,maxSliderValue:null!=q?q:b.max});a=new K({visualVariables:[a]});
return{basemapId:l.basemapId,basemapTheme:l.basemapTheme,visualVariables:c,statistics:b,isGrid:d?.isGrid,defaultValuesUsed:r,sizeScheme:G.cloneScheme(x),authoringInfo:a}}async function Z(a,b,c,d,e){const k=await J.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),u=e.field,m=e.layer.geometryType,q=e.defaultSymbolEnabled;var p=G.cloneScheme(a.sizeScheme),f="polygon"===m;const l=f?p.marker:p;p=f?p.background:null;f=f?"point":m;const x=b?.opacity,n=a.isGrid,v="reference-size"===e.theme,w=v?[]:
a.visualVariables.map(r=>r.clone());b?.visualVariables?.length&&w.push(...b.visualVariables.map(r=>r.clone()));b=v?C.createPrimitiveOverrides({view:e.view,field:u,normalizationField:d,sizeStops:C.getReferenceSizeStops(a.visualVariables[0]),sizeByScaleEnabled:n||!!e.sizeOptimizationEnabled}):null;return{renderer:new N({backgroundFillSymbol:!n&&p?h.createSymbol(m,{type:e.symbolType,color:p.color,outline:h.getSymbolOutlineFromScheme(p,m,x)}):null,classBreakInfos:[{minValue:-aa,maxValue:aa,symbol:b?C.createReferenceSizeSymbol({type:e.referenceSizeOptions?.symbolStyle||
"circle",color:l.color,primitiveOverrides:b}):h.createSymbol(f,{type:e.symbolType,color:l.color,size:h.getSymbolSizeFromScheme(l,f),outline:h.getSymbolOutlineFromScheme(l,f,x)})}],defaultLabel:q?k.other:null,defaultSymbol:q&&!v?h.createSymbol(f,{type:e.symbolType,color:l.noDataColor,size:h.getSymbolSizeFromScheme(l,f,!0),outline:h.getSymbolOutlineFromScheme(l,f,x)}):null,field:u,normalizationField:d,normalizationType:c,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,
visualVariables:w,authoringInfo:a.authoringInfo?.clone()}),visualVariables:a.visualVariables.map(r=>r.clone()),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,isGrid:n,sizeScheme:G.cloneScheme(a.sizeScheme),basemapId:a.basemapId,basemapTheme:a.basemapTheme}}function ra(a,b){const c=O.toPt(a.minSize);a=(O.toPt(a.maxSize)-c)/(4<=b?b-1:b);const d=[];for(let e=0;e<b;e++)d.push(c+a*e);return d}async function sa(a,b){var c=await J.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");const d=
a.defaultSymbolEnabled,e=a.layer.geometryType;var k="polygon"===e;const u=a.symbolType?.includes("3d-volumetric"),m=await X({basemap:a.basemap,geometryType:e,sizeScheme:a.sizeScheme,worldScale:u,view:a.view}),q=m.scheme,{result:p,outlineResult:f}=b,l=p?.classBreakInfos??[],x=a.classificationMethod,n=a.normalizationType,v=k?q.marker:q,w=k?q.background:null,r=k?"point":e;k=Y(v,r);const t=u?h.getSizeRangeForAxis({minSize:k[0],maxSize:k[1]},"height"):null,z=ra({minSize:k[0],maxSize:t?t.maxSize:k[1]},
l.length),A=f?.opacity;c=new N({backgroundFillSymbol:w&&h.createSymbol(e,{type:a.symbolType,color:w.color,outline:h.getSymbolOutlineFromScheme(w,e,A)}),classBreakInfos:l.map((B,D)=>({minValue:B.minValue,maxValue:B.maxValue,symbol:h.createSymbol(r,{type:a.symbolType,color:v.color,size:z[D],widthAndDepth:t?.minSize,outline:h.getSymbolOutlineFromScheme(v,r,A)}),label:B.label})),defaultLabel:d?c.other:null,defaultSymbol:d?h.createSymbol(r,{type:a.symbolType,color:v.noDataColor,size:h.getSymbolSizeFromScheme(v,
r,!0),widthAndDepth:t?.minSize,outline:h.getSymbolOutlineFromScheme(v,r,A)}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:n,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===n?p?.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new K({type:"class-breaks-size",classificationMethod:x,standardDeviationInterval:a.standardDeviationInterval})});"standard-deviation"!==x&&da.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,
classificationMethod:x,normalizationType:n,round:!0});f?.visualVariables?.length&&(c.visualVariables=f.visualVariables.map(B=>B.clone()));return{renderer:c,sizeScheme:G.cloneScheme(q),classBreaksResult:p,defaultValuesUsed:!!b.defaultValuesUsed,basemapId:m.basemapId,basemapTheme:m.basemapTheme}}async function M(a){a=await ja(a);const {view:b,field:c,valueExpression:d,minValue:e,maxValue:k,layer:u,normalizationField:m,signal:q,statistics:p}=a,[f,l]=await Promise.all([p??h.getSummaryStatistics({layer:u,
field:c,valueExpression:d,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:m?"field":void 0,normalizationField:m,minValue:e,maxValue:k,view:b,signal:q}),a.sizeOptimizationEnabled?ia({view:b,layer:u,signal:q}).catch(h.errorCallback):null]);return qa(a,f,l,a.referenceSizeResult)}const aa=2**53-1;E.createAgeRenderer=async function(a){var b=await na(a);const {defaultSymbolEnabled:c,view:d,startTime:e,endTime:k,symbolType:u,minValue:m,maxValue:q,signal:p}=b;a=b.layer;var f={layer:b.layer,
view:b.view,signal:p};const [l,x]=await Promise.all([b.unit?{unit:b.unit,statistics:null,valueExpression:null}:await ha({view:d,layer:a,startTime:e,endTime:k,minValue:m,maxValue:q,signal:p}),b.outlineOptimizationEnabled?S(f).catch(h.errorCallback):null]),{unit:n,statistics:v}=l;f=I.getAgeExpressions({layer:a,startTime:e,endTime:k,unit:n}).valueExpression;var w=await J.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");w=ca.substitute(w[`ageInfo_${n}`],{unit:n,startTime:h.formatDate(e,n,a,d),
endTime:h.formatDate(k,n,a,d)});b=await M(W({layer:a,basemap:b.basemap,valueExpression:f,symbolType:u,statistics:v,legendOptions:{title:w},theme:b.theme,sizeScheme:b.sizeScheme,sizeOptimizationEnabled:b.sizeOptimizationEnabled,view:b.view,minValue:m,maxValue:q,signal:p}));a=await Z(b,x,null,null,{layer:a,valueExpression:f,defaultSymbolEnabled:c,symbolType:u});a.renderer.authoringInfo?.visualVariables?.forEach(r=>h.updateAgeRendererAuthoringInfoVV(r,e,k,n));return{...a,unit:n}};E.createClassBreaksRenderer=
async function(a){a=await ma(a);var b=h.getClassBreaks;const c={...a};delete c.basemap;delete c.sizeScheme;delete c.legendOptions;delete c.symbolType;delete c.defaultSymbolEnabled;c.analyzeData=!(null!=c.minValue&&null!=c.maxValue);b=await b.call(h,c,a.outlineOptimizationEnabled);return sa(a,b)};E.createContinuousRenderer=async function(a){a=await ka(a);var b={layer:a.layer,view:a.view,signal:a.signal};const [c,d]=await Promise.all([M(W(a)),a.outlineOptimizationEnabled?S(b).catch(h.errorCallback):
null]);b=a.normalizationField;return Z(c,d,b?"field":void 0,b,a)};E.createVisualVariables=M;E.updateRendererWithReferenceSize=async function(a){const {forBinning:b,layer:c,referenceSizeOptions:d,renderer:e,sizeScheme:k,sizeStops:u,typeScheme:m,view:q}=la(a),{isGrid:p}=await T({view:q,layer:c,forBinning:b}),f=e.clone();f.authoringInfo??(f.authoringInfo=new K);const l=f.authoringInfo.visualVariables.find(t=>"reference-size"===t.theme),x=a.field??l?.field,n=a.normalizationField??l?.normalizationField;
if(!x)throw new g("update-renderer-with-reference-size:invalid-parameters","'field' parameter or authoring info with 'field' is required.");const v=C.createPrimitiveOverrides({view:q,field:x,normalizationField:n,sizeStops:u,sizeByScaleEnabled:p||!!a.sizeOptimizationEnabled}),w=d?.symbolStyle||l?.referenceSizeSymbolStyle||"circle";if("class-breaks"===f.type){const t="polygon"===("geometryType"in c?c.geometryType:null)&&k&&"marker"in k?k.marker:null;f.classBreakInfos.forEach(z=>{const A=t?.color??U.getColorFromSymbol(z.symbol,
1);"cim"===z.symbol.type?C.updateReferenceSizeSymbol(z.symbol,{type:w,color:A,primitiveOverrides:v}):A&&(z.symbol=C.createReferenceSizeSymbol({type:w,color:A,primitiveOverrides:v}))})}else if("unique-value"===f.type){const t=f.uniqueValueGroups;var r="polygon"===("geometryType"in c?c.geometryType:null)&&m&&"colors"in m?m.colors:null;r=r?h.createColors(r,f.uniqueValueInfos?.length??0):null;let z=0;if(t){for(const A of t)for(const B of A.classes??[]){const D=r?r[z]:U.getColorFromSymbol(B.symbol,1);
"cim"===B.symbol?.type?C.updateReferenceSizeSymbol(B.symbol,{type:w,color:D,primitiveOverrides:v}):D&&(B.symbol=C.createReferenceSizeSymbol({type:w,color:D,primitiveOverrides:v}));z++}f.uniqueValueGroups=t}}l&&(l.field=x,l.normalizationField=n,l.sizeStops=u.map(({label:t,size:z,value:A})=>new P({label:t,size:z,value:A})),l.referenceSizeScale=p||a.sizeOptimizationEnabled?q.scale:void 0,l.referenceSizeSymbolStyle=w);return f};Object.defineProperty(E,Symbol.toStringTag,{value:"Module"})});