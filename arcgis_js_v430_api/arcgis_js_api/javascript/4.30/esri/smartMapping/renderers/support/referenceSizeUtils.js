// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("exports ../../../symbols ../../../core/Error ../../../core/lang ../../../renderers/visualVariables/support/SizeStop ../../../symbols/cim/enums ../../../symbols/CIMSymbol".split(" "),function(n,z,w,x,t,u,y){function q(a){switch(a){case "circle":return{rings:[[[8.5,.2],[7.06,.33],[5.66,.7],[4.35,1.31],[3.16,2.14],[2.14,3.16],[1.31,4.35],[.7,5.66],[.33,7.06],[.2,8.5],[.33,9.94],[.7,11.34],[1.31,12.65],[2.14,13.84],[3.16,14.86],[4.35,15.69],[5.66,16.3],[7.06,16.67],[8.5,16.8],[9.94,16.67],[11.34,
16.3],[12.65,15.69],[13.84,14.86],[14.86,13.84],[15.69,12.65],[16.3,11.34],[16.67,9.94],[16.8,8.5],[16.67,7.06],[16.3,5.66],[15.69,4.35],[14.86,3.16],[13.84,2.14],[12.65,1.31],[11.34,.7],[9.94,.33],[8.5,.2]]]};case "square":return{rings:[[[.5,.5],[.5,16.5],[16.5,16.5],[16.5,.5],[.5,.5]]]};case "diamond":return{rings:[[[8.5,.5],[.2,8.5],[8.5,16.5],[16.5,8.5],[8.5,.5]]]};case "hexagon-pointy":return{rings:[[[15.86,12.75],[15.86,4.25],[8.5,0],[1.14,4.25],[1.14,12.75],[8.5,17],[15.86,12.75]]]};case "hexagon-flat":return{rings:[[[12.75,
15.86],[17,8.5],[12.75,1.14],[4.25,1.14],[0,8.5],[4.25,15.86],[12.75,15.86]]]}}}function r(a){return"CIMVectorMarker"===a?.type?a.markerGraphics?.[0]:void 0}function v(a){return"CIMPolygonSymbol"===a?.symbol?.type?a.symbol.symbolLayers?.[0]:void 0}var h;(function(a){a.OuterRing="reference-size-outer-ring";a.InnerDot="reference-size-inner-dot"})(h||={});n.createPrimitiveOverrides=function(a){const {view:e,field:c,normalizationField:f,sizeStops:k,sizeByScaleEnabled:l}=a,{value:p,size:m}=k[0],{value:b,
size:g}=k[1];a=0;let d;c&&(a=`$feature["${c}"]`,d=`\n      if(!HasValue($feature, "${c}")){\n        return 0;\n      }\n      $feature["${c}"];\n    `);f&&(a=`$feature["${c}"] / $feature["${f}"]`,d=`if(!HasValue($feature, "${c}") || !HasValue($feature, "${f}") || $feature["${f}"] <= 0){\n        return 0;\n      }\n      $feature["${c}"];\n      $feature["${f}"];`);return[{type:"CIMPrimitiveOverride",primitiveName:h.OuterRing,propertyName:"Size",valueExpressionInfo:{type:"CIMExpressionInfo",title:"Size in pixels of outer ring",
expression:l?`\n      ${d}\n      var maxSize = ${g};\n      var referenceScale = ${e.scale};\n      return (maxSize * (referenceScale / $view.scale));\n    `:`${d}\n      return ${g}`,returnType:"Default"}},{type:"CIMPrimitiveOverride",primitiveName:h.InnerDot,propertyName:"Size",valueExpressionInfo:{type:"CIMExpressionInfo",title:"Size in pixels of inner ring",expression:`\n        ${d}\n        var value = ${a};\n\n        var referenceScale = ${e.scale};\n        var referenceScaleRatio = ${l?
"(referenceScale / $view.scale)":1};\n        var maxSize = ${g} * referenceScaleRatio;\n        var minSize = ${m} * referenceScaleRatio;\n\n        var minDataValue = ${p};\n        var maxDataValue = ${b};\n\n        var ratio = Constrain(( value - minDataValue ) / ( maxDataValue - minDataValue ), 0, 1);\n\n        var innerDotSize = Constrain(maxSize * ratio, minSize, maxSize);\n        return innerDotSize;\n      `,returnType:"Default"}}]};n.createReferenceSizeSymbol=function(a){const {primitiveOverrides:e}=
a;const {type:c,color:f,colorLocked:k}=a;var l={type:"CIMVectorMarker",enable:!0,colorLocked:!1,anchorPoint:{x:0,y:0},anchorPointUnits:"Relative",primitiveName:h.OuterRing,frame:{xmin:0,ymin:0,xmax:17,ymax:17},markerGraphics:[{type:"CIMMarkerGraphic",geometry:q(c),symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:f.toArray(),colorLocked:!!k,effects:[{type:"CIMGeometricEffectDonut",width:.75}]}]}}],scaleSymbolsProportionally:!1,respectFrame:!0,markerPlacement:{type:"CIMMarkerPlacementPolygonCenter",
placePerPart:!1,method:u.PlacementPolygonCenterMethod.OnPolygon,offsetX:0,offsetY:0,clipAtBoundary:!1},size:20};const {type:p,color:m}=a;a={type:"CIMVectorMarker",enable:!0,anchorPoint:{x:0,y:0},anchorPointUnits:"Relative",primitiveName:h.InnerDot,frame:{xmin:0,ymin:0,xmax:17,ymax:17},markerGraphics:[{type:"CIMMarkerGraphic",geometry:q(p),symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:m.toArray()}]}}],scaleSymbolsProportionally:!0,respectFrame:!0,markerPlacement:{type:"CIMMarkerPlacementPolygonCenter",
placePerPart:!1,method:u.PlacementPolygonCenterMethod.OnPolygon,offsetX:0,offsetY:0,clipAtBoundary:!1},size:10};return new y({data:{type:"CIMSymbolReference",symbol:{type:"CIMPolygonSymbol",symbolLayers:[l,a]},primitiveOverrides:e}})};n.getReferenceSizeStops=function(a){if(null!=a.minDataValue&&null!=a.maxDataValue&&null!=a.minSize&&null!=a.maxSize&&"number"===typeof a.minSize&&"number"===typeof a.maxSize)return[new t({value:a.minDataValue,size:a.minSize}),new t({value:a.maxDataValue,size:a.maxSize})];
throw new w("create-reference-size-symbol","Invalid size variable");};n.updateReferenceSizeSymbol=function(a,e){const {outerRingSize:c,innerDotSize:f,type:k,color:l,colorLocked:p,primitiveOverrides:m}=e;e="CIMPolygonSymbol"===a.data.symbol?.type?a.data.symbol.symbolLayers:null;if(2===e?.length)for(const d of e){var b=(e=d.primitiveName===h.OuterRing)?c:f;"CIMVectorMarker"===d?.type&&null!=b&&(d.size=b);b=k;var g=r(d);g&&null!=b&&(g.geometry=q(b));b=l;(g=v(r(d)))&&null!=b&&(g.color=b.toArray());b=
p;(g=v(r(d)))&&null!=b&&e&&(g.colorLocked=b)}null!=c&&null!=f&&(a.data.primitiveOverrides=null);void 0!==m&&(a.data.primitiveOverrides=x.clone(m));return a};Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});