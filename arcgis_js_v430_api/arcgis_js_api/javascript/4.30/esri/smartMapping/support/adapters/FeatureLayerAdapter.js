// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.30/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../Graphic ../../../core/arrayUtils ../../../core/Error ../../../core/maybe ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/accessorSupport/decorators/subclass ../../../layers/support/arcgisLayerUrl ../../../layers/support/fieldUtils ../../../rest/generateRenderer ../../../rest/support/GenerateRendererParameters ../../../rest/support/StatisticDefinition ../../../rest/support/UniqueValueDefinition ../../statistics/support/predominanceUtils ../../statistics/support/utils ../../statistics/support/WorkerClient ../utils ./InMemoryLayerAdapter ./support/utils ../../../statistics/utils".split(" "),
function(F,I,G,v,J,y,K,C,U,L,M,A,N,D,O,P,H,r,Q,z,R,l,w){function S(a,c,b){const e=[],h=c.length;c.forEach((k,f)=>{const [g,d]=k;k=null;k=0!==f||b?f!==h-1||b?r.mergeWhereClauses(`${a} >= ${g}`,`${a} ${f===h-1?" \x3c\x3d ":" \x3c "} ${d}`):`${a} >= ${g}`:`${a} < ${d}`;e.push("WHEN ("+k+") THEN "+(f+1))});return["CASE",e.join(" "),"ELSE 0 END"].join(" ")}C=class extends R{constructor(){super(...arguments);this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const a=this.layer;if(!a.capabilities?.query?.supportsStatistics||
"multipatch"===this.geometryType&&!M.isHostedAgolService(a.url)&&10.5>a.version)throw new v(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(a,c){return this.layer.queryFeatures(a,{signal:c}).then(b=>b.features)}_fetchFeaturesJSONFromService(a,c){return this._fetchFeaturesFromService(a,c).then(l.ensureFeaturesJSON)}_summaryStatsFromGenRend(a){const c=a.normalizationType,b=a.normalizationField;return this.classBreaks({field:a.field,
numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:c,normalizationField:"field"===c?b:void 0,minValue:a.minValue,maxValue:a.maxValue,filter:a.filter,signal:a.signal}).then(e=>{let h,k;e.classBreakInfos?.some(g=>{g.hasAvg&&(h=g);return!!h});if(h){var f=h.maxValue-h.minValue;k=h.minValue+f/2;f*=4}return w.processSummaryStatisticsResult({min:e.minValue,max:e.maxValue,avg:k,stddev:f})})}async _summaryStatsFromServiceQuery(a,c){await this._isStatsSupportedOnService();
"percent-of-total"===a.normalizationType&&(a.normalizationTotal=await this._getNormalizationTotal(a.field,a.normalizationType,a.filter));var b=z.isAnyDateField(c)||A.isTimeOnlyField(c);c=l.getSummaryStatsQuery(this,a,c);a=await this.layer.queryFeatures(c,{signal:a.signal});b=l.getSummaryStatisticsFromFeatureSet(a,b);return w.processSummaryStatisticsResult(b)}_uvFromGenRenderer(a,c){const b=a.field??void 0;var e=new P({attributeField:b});e=new D({classificationDefinition:e});return this.generateRenderer(e,
a.signal).then(h=>{const k={},f=this.getField(b);h.uniqueValues.forEach(g=>{let d=g.value;if(null==d||""===d||"string"===typeof d&&(""===d.trim()||"\x3cnull\x3e"===d.toLowerCase()))d=null;null==k[d]?k[d]={count:g.count,data:A.isNumericField(f)&&d?Number(d):d}:k[d].count+=g.count});return{count:k}}).then(h=>w.createUVResult(h,[c],a.returnAllCodedValues))}async _uvFromServiceQuery(a,c){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(l.getUVQuery(this,a),{signal:a.signal})).then(b=>
l.getUniqueValuesFromFeatureSet(b,{layer:this,field:a.field,field2:a.field2,field3:a.field3,fieldDelimiter:z.fieldDelimiter,view:a.view,signal:a.signal})).then(b=>w.createUVResult(b,c,a.returnAllCodedValues,z.fieldDelimiter))}_getNormalizationTotal(a,c,b,e){return a&&"percent-of-total"===c?this.summaryStatistics({field:a,filter:b,signal:e}).then(h=>h.sum):Promise.resolve(null)}_getQueryParamsForExpr(a,c){const b=a.signal;if(!a.valueExpression&&!a.sqlExpression){const {field:e,normalizationType:h,
normalizationField:k}=a,f=e?this.getField(e):null,g=z.isAnyDateField(f)||A.isTimeOnlyField(f);c={field:e,normalizationType:h,normalizationField:k,normalizationTotal:c,layer:this};return{sqlExpression:g?l.getSQLExpressionForDateOrTimeField(this,f):l.getFieldExpr(c),sqlWhere:g?null:a.sqlWhere||r.getSQLFilterForNormalization({field:e,normalizationType:h,normalizationField:k}),filter:a.filter,signal:b}}return{valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,filter:a.filter,
signal:b}}_getDataRange(a,c,b){return null!=c&&null!=b?Promise.resolve({min:c,max:b}):this.summaryStatistics(a).then(e=>({min:e.min,max:e.max}))}_histogramForExpr(a){return this._getNormalizationTotal(a.field,a.normalizationType,a.filter,a.signal).then(c=>{const b=this._getQueryParamsForExpr(a,c);return this._getDataRange(b,a.minValue,a.maxValue).then(e=>{const h=e.min,k=e.max;if(null==h||null==k)return{bins:[],minValue:h,maxValue:k,normalizationTotal:c};const f=a.numBins||l.defaultNumBins;e=w.getEqualIntervalBins(h,
k,f);e=S(b.sqlExpression,e,null!=a.minValue&&null!=a.maxValue);const g=new O({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),d=this.layer.createQuery();d.where=r.mergeWhereClauses(d.where,b.sqlWhere);d.sqlFormat="standard";d.outStatistics=[g];d.groupByFieldsForStatistics=[e];d.orderByFields=[e];l.updateQueryWithFeatureFilter(d,a.filter);return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(d,{signal:b.signal})).then(m=>l.getHistogramFromFeatureSet(m,
h,k,f,c))})})}_binParamsFromGenRend(a,c){const {field:b,normalizationType:e,normalizationField:h,signal:k}=a,f=r.getSQLFilterForNormalization({field:b,normalizationType:e,normalizationField:h});a=new D({classificationDefinition:w.createClassBreaksDefinition({field:b,normalizationType:e,normalizationField:h,classificationMethod:a.classificationMethod,standardDeviationInterval:a.standardDeviationInterval,breakCount:a.numBins||l.defaultNumBins}),where:r.mergeWhereClauses(f,c)});return this.generateRenderer(a,
k).then(g=>{const {normalizationTotal:d,classBreaks:m}=g;return l.generateBinParams({field:b,normalizationType:e,normalizationField:h,normalizationTotal:d,classBreaks:m,where:f,layer:this})})}_classBreaksFromGenRend(a){const {field:c,normalizationType:b,normalizationField:e,normalizationTotal:h,signal:k}=a,f=r.getSQLFilterForNormalization({field:c,normalizationType:b,normalizationField:e});var g=l.getFieldExpr({field:c,normalizationType:b,normalizationField:e,normalizationTotal:h,layer:this});g=r.getRangeExpr(g,
a.minValue,a.maxValue);var d=w.createClassBreaksDefinition({field:c,normalizationType:b,normalizationField:e,classificationMethod:a.classificationMethod,standardDeviationInterval:a.standardDeviationInterval,breakCount:a.numClasses||5});d=new D({classificationDefinition:d});d.where=r.mergeWhereClauses(f,g);return this.generateRenderer(d,k).then(m=>w.resolveCBResult(m,a.classificationMethod))}async summaryStatistics(a){const {field:c,normalizationType:b,sqlExpression:e,view:h,features:k,useFeaturesInView:f}=
a,g=c?this.getField(c):null,d=z.isAnyDateField(g)||A.isTimeOnlyField(g),m=a.valueExpression||e,n=m&&!e,u=h&&"3d"===h.type;if(this._hasLocalSource||k||f||n)return n||k||f||u?this._summaryStatsFromMemory(a,g):this._summaryStatsFromClientQuery(a,g);if(!this.supportsSQLExpression&&(d||m||"natural-log"===b||"square-root"===b))throw new v(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(b&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(a):
this._summaryStatsFromServiceQuery(a,g)).catch(()=>{y.throwIfAborted(a.signal);return this._summaryStatsFromMemory(a,g)})}async uniqueValues(a){const {valueExpression:c,sqlExpression:b,features:e,useFeaturesInView:h,signal:k}=a,f=c&&(!b||!this.supportsSQLExpression),g=this._hasLocalSource||e||h||f,d=a.view,m=d&&"3d"===d.type,n=await l.getDomainsForFields(a,this);return g?f||e||h||m?this._uvFromMemory(a,n):this._uvFromClientQuery(a,n):this._uvFromServiceQuery(a,n).catch(u=>{y.throwIfAborted(k);return!a.field||
a.field2||a.field3||a.filter?u:this._uvFromGenRenderer(a,n[0])}).catch(()=>{y.throwIfAborted(k);return m?this._uvFromMemory(a,n):this._uvFromClientQuery(a,n)})}async histogram(a){const {field:c,normalizationType:b,normalizationField:e,classificationMethod:h,view:k,filter:f,signal:g}=a;var d=c?this.getField(c):null;d=z.isAnyDateField(d)||A.isTimeOnlyField(d);const m=a.valueExpression||a.sqlExpression,n=m&&!a.sqlExpression,u=this.supportsSQLExpression,p=!h||"equal-interval"===h,q=a.minValue,x=a.maxValue,
E=null!=q&&null!=x,B=a.numBins||l.defaultNumBins;if(this._hasLocalSource||a.features||a.useFeaturesInView||n)return this._histogramFromMemory(a);if((m||u)&&p){if(!u&&(m||"natural-log"===b||"square-root"===b))throw new v(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(a)}if(d&&p)throw new v(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");
return b||!p?this._binParamsFromGenRend(a).then(t=>{if(!E)return l.getBins(this,t,c,B,k,f,g);if(q>t.max||x<t.min)throw new v(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(p)return l.getBins(this,{min:q,max:x,sqlExpr:t.sqlExpr,excludeZerosExpr:t.excludeZerosExpr},c,B,k,f,g);t=l.getFieldExpr({field:c,normalizationType:b,normalizationField:e,normalizationTotal:t.normTotal,layer:this});t=r.getRangeExpr(t,q,
x);return this._binParamsFromGenRend(a,t).then(T=>l.getBins(this,T,c,B,k,f,g))}):this._histogramForField(a)}async classBreaks(a){const c=!1!==a.analyzeData,b=this._hasLocalSource||a.features||a.useFeaturesInView||a.valueExpression||a.filter;return c&&b?this._classBreaksFromMemory(a):(c?this._classBreaksFromGenRend(a):this._classBreaksFromInterpolation(a)).catch(()=>{y.throwIfAborted(a.signal);return this._classBreaksFromMemory(a)})}async queryFeatureCount(a){if(this._hasLocalSource)throw new v(`${this.adapterName}:not-supported`,
"Layer does not support count query");const c=this.layer,b=c.createQuery();b.where=r.mergeWhereClauses(b.where,a.whereClause);l.updateQueryWithFeatureFilter(b,a.filter);return c.queryFeatureCount(b,{signal:a.signal})}async generateRenderer(a,c){const b=this.layer;if(this._hasLocalSource||10.1>b.version)throw new v(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const e=b.createQuery();a.where=r.mergeWhereClauses(a.where,
e.where);return N.generateRenderer(b.parsedUrl?.path??"",{source:b.dynamicDataSource??void 0,gdbVersion:b.gdbVersion??void 0},a,{signal:c})}async predominantCategories(a){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new v(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const {fields:c,view:b,signal:e}=a;a=H.getArcadeForPredominantCategory(c);const h=H.getSQLForPredominantCategoryName(c);a=b&&this._hasLocalSource?await this._uvFromMemory({valueExpression:a,
view:b,signal:e}):await this._uvFromServiceQuery({sqlExpression:h.expression,valueExpression:a,signal:e});return l.getPredominantCategoriesFromUVInfos(a.uniqueValueInfos,c)}async getSampleFeatures(a,c){const {view:b,requiredFields:e,returnGeometry:h,filter:k,signal:f}=a,g=a.sampleSize;if(null==g||0===g)return[];const d=this.layer.createQuery(),m="json"===c;d.outSpatialReference=b?.spatialReference;d.returnGeometry=!!h;d.outFields=e;l.updateQueryWithFeatureFilter(d,k);let n=[],u=!1;if(b)try{const p=
await b.whenLayerView(this.layer);if(u=!l.getMissingFields(this,e,p).length){if(1<=g&&!a.filter&&"getSampleFeatures"in p){await this._waitForLayerViewUpdate(p);const q=await p.getSampleFeatures({minFeatureCount:g,sampleSize:g});if(null!=q)return m?q:q.map(x=>I.fromJSON(x))}n=await this._fetchFeaturesFromMemory(p,d,f,c);if(n.length>=g&&0<g)return G.pickRandom(n,g,1)}}catch(p){y.throwIfAborted(f)}try{if(this._hasLocalSource)return u?n:m?this._fetchFeaturesJSONFromService(d,f):this._fetchFeaturesFromService(d,
f);const p=await this.queryFeatureCount({view:b,filter:k,signal:f}),q=this.layer.capabilities.query.maxRecordCount;c=-1===g?p:g;c=q&&c>q?q:c;if(p<=n.length||n.length>=q)return n;J.assertIsSome(b,"FeatureLayerAdapter: must have a view");const x=b.extent.width/b.width/b.scale*4E5;d.maxAllowableOffset=a.resolution||x;if(p<=c)return m?this._fetchFeaturesJSONFromService(d,f):this._fetchFeaturesFromService(d,f);if(2E4>=p){const E=this.layer.createQuery();l.updateQueryWithFeatureFilter(E,k);const B=await this.layer.queryObjectIds();
d.objectIds=G.pickRandom(B,c,1);return m?this._fetchFeaturesJSONFromService(d,f):this._fetchFeaturesFromService(d,f)}this.layer.capabilities?.query?.supportsPagination&&(d.num=Math.min(c,2E4));return m?this._fetchFeaturesJSONFromService(d,f):this._fetchFeaturesFromService(d,f)}catch(p){return y.throwIfAborted(f),n}}load(a){const c=this.layer.load(a).then(async b=>{this.geometryType=b.geometryType;this.objectIdField=b.objectIdField;this.supportsSQLExpression=b.capabilities?.query?.supportsSqlExpression;
this.hasQueryEngine=this._hasLocalSource=!b.url&&!!b.source;this.minScale=b.minScale;this.maxScale=b.maxScale;this.fullExtent=b.fullExtent;this.workerClient=Q.WorkerClient.getInstance();await this.workerClient.open(a.signal)});this.addResolvingPromise(c);return Promise.resolve(this)}};F.__decorate([K.property({constructOnly:!0})],C.prototype,"layer",void 0);return C=F.__decorate([L.subclass("esri.smartMapping.support.adapters.FeatureLayerAdapter")],C)});